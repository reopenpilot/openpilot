name: Sync Code Between Branches (Ignoring Latest Commit)

env:
  SOURCE_BRANCH: FrogPilot-Staging
  IGNORE_COMMITS: 1
  TZ: America/Phoenix

on:
  push:
    branches:
      - FrogPilot-Staging

  workflow_dispatch:
    inputs:
      DESTINATION_BRANCH:
        description: 'Destination branch to update'
        required: true
        default: MAKE-PRS-HERE
      IGNORE_COMMITS:
        description: 'Number of commits to ignore from the source branch'
        required: false
        default: 0

jobs:
  sync-code:
    runs-on: ubuntu-latest

    steps:
      - name: Set up environment
        run: |
          echo "DESTINATION_BRANCH=${{ github.event.inputs.DESTINATION_BRANCH }}" >> $GITHUB_ENV
          echo "IGNORE_COMMITS=${{ github.event.inputs.IGNORE_COMMITS }}" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Checkout the second-to-last commit from the source branch
        run: |
          git checkout ${{ env.SOURCE_BRANCH }}
          git reset --hard HEAD~${{ env.IGNORE_COMMITS }}  # Checkout to the state before the ignored commits

      - name: Checkout the destination branch
        run: git checkout ${{ env.DESTINATION_BRANCH }}

      - name: Copy code differences to the destination branch
        run: |
          git checkout ${{ env.SOURCE_BRANCH }} -- .  # This copies the code from the source branch (without the latest commits) to the destination branch
          git reset HEAD  # Unstages the changes to avoid committing unrelated changes

      - name: Commit and push changes if there are any
        run: |
          if ! git diff --quiet; then
            date=$(TZ=$TZ date +"%B %dth, %Y")
            git add .
            git commit -m "$date Update"
            git push origin ${{ env.DESTINATION_BRANCH }} --force
          else
            echo "No code changes to commit"
          fi
