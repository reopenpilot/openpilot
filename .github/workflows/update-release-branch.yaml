name: Update FrogPilot Branch

on:
  schedule:
    - cron: "0 19 * * *"

jobs:
  update-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check if update is due
        run: |
          if [ ! -f .github/update_date ]; then
            echo "No update_date file found. Skipping update."
            exit 0
          fi

          SCHEDULED_DATE=$(cat .github/update_date)
          CURRENT_DATE=$(TZ="America/Phoenix" date +%F)

          echo "Scheduled Date: $SCHEDULED_DATE"
          echo "Current Date: $CURRENT_DATE"

          if [ "$SCHEDULED_DATE" != "$CURRENT_DATE" ]; then
            echo "Not the scheduled date. Exiting."
            exit 0
          fi

      - name: Set Git Username and Email
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Reset "FrogPilot-Previous" branch to match "FrogPilot"
        run: |
          git fetch origin
          git checkout FrogPilot-Previous || git checkout -b FrogPilot-Previous
          git reset --hard origin/FrogPilot
          git push origin FrogPilot-Previous --force

      - name: Reset "FrogPilot" branch to match "FrogPilot-Staging"
        run: |
          git fetch origin
          git checkout FrogPilot || git checkout -b FrogPilot
          git reset --hard origin/FrogPilot-Staging
          git push origin FrogPilot --force

      - name: Rewrite Commit Dates to Noon Phoenix Time
        run: |
          COMMIT_DATETIME="${{ github.event.inputs.scheduled_date }} 12:00"
          COMMIT_PHX=$(TZ="America/Phoenix" date -d "$COMMIT_DATETIME" +"%Y-%m-%dT%H:%M:%S %z")

          git filter-branch --env-filter "
            export GIT_AUTHOR_DATE=\"$COMMIT_PHX\"
            export GIT_COMMITTER_DATE=\"$COMMIT_PHX\"
          " -- --all

          git push origin FrogPilot --force

      - name: Update README Last Updated Date
        run: |
          DAY=$(TZ="America/Phoenix" date +'%d' | sed 's/^0//')
          case "$DAY" in
            1|21|31) SUFFIX="st" ;;
            2|22) SUFFIX="nd" ;;
            3|23) SUFFIX="rd" ;;
            *) SUFFIX="th" ;;
          esac

          MONTH=$(TZ="America/Phoenix" date +'%B')
          YEAR=$(TZ="America/Phoenix" date +'%Y')
          NEW_DATE="**${MONTH} ${DAY}${SUFFIX}, ${YEAR}**"
          echo "Updating README date to ${NEW_DATE}"

          sed -i '/FrogPilot was last updated on:/ { N; N; s/\(\n\)\n.*$/\1\n'"${NEW_DATE}"'/; }' README.md

          git add README.md
          git commit -m "Update README last updated date to ${NEW_DATE}"
          git push origin HEAD

      - name: Remove update trigger file
        run: |
          git rm -f .github/update_date
          git commit -m "Remove update_date file after execution"
          git push origin HEAD

      - name: Squash Last 3 Commits
        run: |
          git reset --soft HEAD~2
          git commit --amend --no-edit --reset-author
          git push origin HEAD --force
