#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1883414544721554764) {
   out_1883414544721554764[0] = 0;
   out_1883414544721554764[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1883414544721554764[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1883414544721554764[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1883414544721554764[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1883414544721554764[5] = -sin(in_vec[1]);
   out_1883414544721554764[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1883414544721554764[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1883414544721554764[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1883414544721554764[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1883414544721554764[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1883414544721554764[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1883414544721554764[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1883414544721554764[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1883414544721554764[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1883414544721554764[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1883414544721554764[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1883414544721554764[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3618258483455642740) {
   out_3618258483455642740[0] = delta_x[0] + nom_x[0];
   out_3618258483455642740[1] = delta_x[1] + nom_x[1];
   out_3618258483455642740[2] = delta_x[2] + nom_x[2];
   out_3618258483455642740[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3618258483455642740[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3618258483455642740[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3618258483455642740[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3618258483455642740[7] = delta_x[6] + nom_x[7];
   out_3618258483455642740[8] = delta_x[7] + nom_x[8];
   out_3618258483455642740[9] = delta_x[8] + nom_x[9];
   out_3618258483455642740[10] = delta_x[9] + nom_x[10];
   out_3618258483455642740[11] = delta_x[10] + nom_x[11];
   out_3618258483455642740[12] = delta_x[11] + nom_x[12];
   out_3618258483455642740[13] = delta_x[12] + nom_x[13];
   out_3618258483455642740[14] = delta_x[13] + nom_x[14];
   out_3618258483455642740[15] = delta_x[14] + nom_x[15];
   out_3618258483455642740[16] = delta_x[15] + nom_x[16];
   out_3618258483455642740[17] = delta_x[16] + nom_x[17];
   out_3618258483455642740[18] = delta_x[17] + nom_x[18];
   out_3618258483455642740[19] = delta_x[18] + nom_x[19];
   out_3618258483455642740[20] = delta_x[19] + nom_x[20];
   out_3618258483455642740[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3609363492821829536) {
   out_3609363492821829536[0] = -nom_x[0] + true_x[0];
   out_3609363492821829536[1] = -nom_x[1] + true_x[1];
   out_3609363492821829536[2] = -nom_x[2] + true_x[2];
   out_3609363492821829536[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3609363492821829536[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3609363492821829536[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3609363492821829536[6] = -nom_x[7] + true_x[7];
   out_3609363492821829536[7] = -nom_x[8] + true_x[8];
   out_3609363492821829536[8] = -nom_x[9] + true_x[9];
   out_3609363492821829536[9] = -nom_x[10] + true_x[10];
   out_3609363492821829536[10] = -nom_x[11] + true_x[11];
   out_3609363492821829536[11] = -nom_x[12] + true_x[12];
   out_3609363492821829536[12] = -nom_x[13] + true_x[13];
   out_3609363492821829536[13] = -nom_x[14] + true_x[14];
   out_3609363492821829536[14] = -nom_x[15] + true_x[15];
   out_3609363492821829536[15] = -nom_x[16] + true_x[16];
   out_3609363492821829536[16] = -nom_x[17] + true_x[17];
   out_3609363492821829536[17] = -nom_x[18] + true_x[18];
   out_3609363492821829536[18] = -nom_x[19] + true_x[19];
   out_3609363492821829536[19] = -nom_x[20] + true_x[20];
   out_3609363492821829536[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3216624200312040771) {
   out_3216624200312040771[0] = 1.0;
   out_3216624200312040771[1] = 0;
   out_3216624200312040771[2] = 0;
   out_3216624200312040771[3] = 0;
   out_3216624200312040771[4] = 0;
   out_3216624200312040771[5] = 0;
   out_3216624200312040771[6] = 0;
   out_3216624200312040771[7] = 0;
   out_3216624200312040771[8] = 0;
   out_3216624200312040771[9] = 0;
   out_3216624200312040771[10] = 0;
   out_3216624200312040771[11] = 0;
   out_3216624200312040771[12] = 0;
   out_3216624200312040771[13] = 0;
   out_3216624200312040771[14] = 0;
   out_3216624200312040771[15] = 0;
   out_3216624200312040771[16] = 0;
   out_3216624200312040771[17] = 0;
   out_3216624200312040771[18] = 0;
   out_3216624200312040771[19] = 0;
   out_3216624200312040771[20] = 0;
   out_3216624200312040771[21] = 0;
   out_3216624200312040771[22] = 1.0;
   out_3216624200312040771[23] = 0;
   out_3216624200312040771[24] = 0;
   out_3216624200312040771[25] = 0;
   out_3216624200312040771[26] = 0;
   out_3216624200312040771[27] = 0;
   out_3216624200312040771[28] = 0;
   out_3216624200312040771[29] = 0;
   out_3216624200312040771[30] = 0;
   out_3216624200312040771[31] = 0;
   out_3216624200312040771[32] = 0;
   out_3216624200312040771[33] = 0;
   out_3216624200312040771[34] = 0;
   out_3216624200312040771[35] = 0;
   out_3216624200312040771[36] = 0;
   out_3216624200312040771[37] = 0;
   out_3216624200312040771[38] = 0;
   out_3216624200312040771[39] = 0;
   out_3216624200312040771[40] = 0;
   out_3216624200312040771[41] = 0;
   out_3216624200312040771[42] = 0;
   out_3216624200312040771[43] = 0;
   out_3216624200312040771[44] = 1.0;
   out_3216624200312040771[45] = 0;
   out_3216624200312040771[46] = 0;
   out_3216624200312040771[47] = 0;
   out_3216624200312040771[48] = 0;
   out_3216624200312040771[49] = 0;
   out_3216624200312040771[50] = 0;
   out_3216624200312040771[51] = 0;
   out_3216624200312040771[52] = 0;
   out_3216624200312040771[53] = 0;
   out_3216624200312040771[54] = 0;
   out_3216624200312040771[55] = 0;
   out_3216624200312040771[56] = 0;
   out_3216624200312040771[57] = 0;
   out_3216624200312040771[58] = 0;
   out_3216624200312040771[59] = 0;
   out_3216624200312040771[60] = 0;
   out_3216624200312040771[61] = 0;
   out_3216624200312040771[62] = 0;
   out_3216624200312040771[63] = 0;
   out_3216624200312040771[64] = 0;
   out_3216624200312040771[65] = 0;
   out_3216624200312040771[66] = -0.5*state[4];
   out_3216624200312040771[67] = -0.5*state[5];
   out_3216624200312040771[68] = -0.5*state[6];
   out_3216624200312040771[69] = 0;
   out_3216624200312040771[70] = 0;
   out_3216624200312040771[71] = 0;
   out_3216624200312040771[72] = 0;
   out_3216624200312040771[73] = 0;
   out_3216624200312040771[74] = 0;
   out_3216624200312040771[75] = 0;
   out_3216624200312040771[76] = 0;
   out_3216624200312040771[77] = 0;
   out_3216624200312040771[78] = 0;
   out_3216624200312040771[79] = 0;
   out_3216624200312040771[80] = 0;
   out_3216624200312040771[81] = 0;
   out_3216624200312040771[82] = 0;
   out_3216624200312040771[83] = 0;
   out_3216624200312040771[84] = 0;
   out_3216624200312040771[85] = 0;
   out_3216624200312040771[86] = 0;
   out_3216624200312040771[87] = 0.5*state[3];
   out_3216624200312040771[88] = 0.5*state[6];
   out_3216624200312040771[89] = -0.5*state[5];
   out_3216624200312040771[90] = 0;
   out_3216624200312040771[91] = 0;
   out_3216624200312040771[92] = 0;
   out_3216624200312040771[93] = 0;
   out_3216624200312040771[94] = 0;
   out_3216624200312040771[95] = 0;
   out_3216624200312040771[96] = 0;
   out_3216624200312040771[97] = 0;
   out_3216624200312040771[98] = 0;
   out_3216624200312040771[99] = 0;
   out_3216624200312040771[100] = 0;
   out_3216624200312040771[101] = 0;
   out_3216624200312040771[102] = 0;
   out_3216624200312040771[103] = 0;
   out_3216624200312040771[104] = 0;
   out_3216624200312040771[105] = 0;
   out_3216624200312040771[106] = 0;
   out_3216624200312040771[107] = 0;
   out_3216624200312040771[108] = -0.5*state[6];
   out_3216624200312040771[109] = 0.5*state[3];
   out_3216624200312040771[110] = 0.5*state[4];
   out_3216624200312040771[111] = 0;
   out_3216624200312040771[112] = 0;
   out_3216624200312040771[113] = 0;
   out_3216624200312040771[114] = 0;
   out_3216624200312040771[115] = 0;
   out_3216624200312040771[116] = 0;
   out_3216624200312040771[117] = 0;
   out_3216624200312040771[118] = 0;
   out_3216624200312040771[119] = 0;
   out_3216624200312040771[120] = 0;
   out_3216624200312040771[121] = 0;
   out_3216624200312040771[122] = 0;
   out_3216624200312040771[123] = 0;
   out_3216624200312040771[124] = 0;
   out_3216624200312040771[125] = 0;
   out_3216624200312040771[126] = 0;
   out_3216624200312040771[127] = 0;
   out_3216624200312040771[128] = 0;
   out_3216624200312040771[129] = 0.5*state[5];
   out_3216624200312040771[130] = -0.5*state[4];
   out_3216624200312040771[131] = 0.5*state[3];
   out_3216624200312040771[132] = 0;
   out_3216624200312040771[133] = 0;
   out_3216624200312040771[134] = 0;
   out_3216624200312040771[135] = 0;
   out_3216624200312040771[136] = 0;
   out_3216624200312040771[137] = 0;
   out_3216624200312040771[138] = 0;
   out_3216624200312040771[139] = 0;
   out_3216624200312040771[140] = 0;
   out_3216624200312040771[141] = 0;
   out_3216624200312040771[142] = 0;
   out_3216624200312040771[143] = 0;
   out_3216624200312040771[144] = 0;
   out_3216624200312040771[145] = 0;
   out_3216624200312040771[146] = 0;
   out_3216624200312040771[147] = 0;
   out_3216624200312040771[148] = 0;
   out_3216624200312040771[149] = 0;
   out_3216624200312040771[150] = 0;
   out_3216624200312040771[151] = 0;
   out_3216624200312040771[152] = 0;
   out_3216624200312040771[153] = 1.0;
   out_3216624200312040771[154] = 0;
   out_3216624200312040771[155] = 0;
   out_3216624200312040771[156] = 0;
   out_3216624200312040771[157] = 0;
   out_3216624200312040771[158] = 0;
   out_3216624200312040771[159] = 0;
   out_3216624200312040771[160] = 0;
   out_3216624200312040771[161] = 0;
   out_3216624200312040771[162] = 0;
   out_3216624200312040771[163] = 0;
   out_3216624200312040771[164] = 0;
   out_3216624200312040771[165] = 0;
   out_3216624200312040771[166] = 0;
   out_3216624200312040771[167] = 0;
   out_3216624200312040771[168] = 0;
   out_3216624200312040771[169] = 0;
   out_3216624200312040771[170] = 0;
   out_3216624200312040771[171] = 0;
   out_3216624200312040771[172] = 0;
   out_3216624200312040771[173] = 0;
   out_3216624200312040771[174] = 0;
   out_3216624200312040771[175] = 1.0;
   out_3216624200312040771[176] = 0;
   out_3216624200312040771[177] = 0;
   out_3216624200312040771[178] = 0;
   out_3216624200312040771[179] = 0;
   out_3216624200312040771[180] = 0;
   out_3216624200312040771[181] = 0;
   out_3216624200312040771[182] = 0;
   out_3216624200312040771[183] = 0;
   out_3216624200312040771[184] = 0;
   out_3216624200312040771[185] = 0;
   out_3216624200312040771[186] = 0;
   out_3216624200312040771[187] = 0;
   out_3216624200312040771[188] = 0;
   out_3216624200312040771[189] = 0;
   out_3216624200312040771[190] = 0;
   out_3216624200312040771[191] = 0;
   out_3216624200312040771[192] = 0;
   out_3216624200312040771[193] = 0;
   out_3216624200312040771[194] = 0;
   out_3216624200312040771[195] = 0;
   out_3216624200312040771[196] = 0;
   out_3216624200312040771[197] = 1.0;
   out_3216624200312040771[198] = 0;
   out_3216624200312040771[199] = 0;
   out_3216624200312040771[200] = 0;
   out_3216624200312040771[201] = 0;
   out_3216624200312040771[202] = 0;
   out_3216624200312040771[203] = 0;
   out_3216624200312040771[204] = 0;
   out_3216624200312040771[205] = 0;
   out_3216624200312040771[206] = 0;
   out_3216624200312040771[207] = 0;
   out_3216624200312040771[208] = 0;
   out_3216624200312040771[209] = 0;
   out_3216624200312040771[210] = 0;
   out_3216624200312040771[211] = 0;
   out_3216624200312040771[212] = 0;
   out_3216624200312040771[213] = 0;
   out_3216624200312040771[214] = 0;
   out_3216624200312040771[215] = 0;
   out_3216624200312040771[216] = 0;
   out_3216624200312040771[217] = 0;
   out_3216624200312040771[218] = 0;
   out_3216624200312040771[219] = 1.0;
   out_3216624200312040771[220] = 0;
   out_3216624200312040771[221] = 0;
   out_3216624200312040771[222] = 0;
   out_3216624200312040771[223] = 0;
   out_3216624200312040771[224] = 0;
   out_3216624200312040771[225] = 0;
   out_3216624200312040771[226] = 0;
   out_3216624200312040771[227] = 0;
   out_3216624200312040771[228] = 0;
   out_3216624200312040771[229] = 0;
   out_3216624200312040771[230] = 0;
   out_3216624200312040771[231] = 0;
   out_3216624200312040771[232] = 0;
   out_3216624200312040771[233] = 0;
   out_3216624200312040771[234] = 0;
   out_3216624200312040771[235] = 0;
   out_3216624200312040771[236] = 0;
   out_3216624200312040771[237] = 0;
   out_3216624200312040771[238] = 0;
   out_3216624200312040771[239] = 0;
   out_3216624200312040771[240] = 0;
   out_3216624200312040771[241] = 1.0;
   out_3216624200312040771[242] = 0;
   out_3216624200312040771[243] = 0;
   out_3216624200312040771[244] = 0;
   out_3216624200312040771[245] = 0;
   out_3216624200312040771[246] = 0;
   out_3216624200312040771[247] = 0;
   out_3216624200312040771[248] = 0;
   out_3216624200312040771[249] = 0;
   out_3216624200312040771[250] = 0;
   out_3216624200312040771[251] = 0;
   out_3216624200312040771[252] = 0;
   out_3216624200312040771[253] = 0;
   out_3216624200312040771[254] = 0;
   out_3216624200312040771[255] = 0;
   out_3216624200312040771[256] = 0;
   out_3216624200312040771[257] = 0;
   out_3216624200312040771[258] = 0;
   out_3216624200312040771[259] = 0;
   out_3216624200312040771[260] = 0;
   out_3216624200312040771[261] = 0;
   out_3216624200312040771[262] = 0;
   out_3216624200312040771[263] = 1.0;
   out_3216624200312040771[264] = 0;
   out_3216624200312040771[265] = 0;
   out_3216624200312040771[266] = 0;
   out_3216624200312040771[267] = 0;
   out_3216624200312040771[268] = 0;
   out_3216624200312040771[269] = 0;
   out_3216624200312040771[270] = 0;
   out_3216624200312040771[271] = 0;
   out_3216624200312040771[272] = 0;
   out_3216624200312040771[273] = 0;
   out_3216624200312040771[274] = 0;
   out_3216624200312040771[275] = 0;
   out_3216624200312040771[276] = 0;
   out_3216624200312040771[277] = 0;
   out_3216624200312040771[278] = 0;
   out_3216624200312040771[279] = 0;
   out_3216624200312040771[280] = 0;
   out_3216624200312040771[281] = 0;
   out_3216624200312040771[282] = 0;
   out_3216624200312040771[283] = 0;
   out_3216624200312040771[284] = 0;
   out_3216624200312040771[285] = 1.0;
   out_3216624200312040771[286] = 0;
   out_3216624200312040771[287] = 0;
   out_3216624200312040771[288] = 0;
   out_3216624200312040771[289] = 0;
   out_3216624200312040771[290] = 0;
   out_3216624200312040771[291] = 0;
   out_3216624200312040771[292] = 0;
   out_3216624200312040771[293] = 0;
   out_3216624200312040771[294] = 0;
   out_3216624200312040771[295] = 0;
   out_3216624200312040771[296] = 0;
   out_3216624200312040771[297] = 0;
   out_3216624200312040771[298] = 0;
   out_3216624200312040771[299] = 0;
   out_3216624200312040771[300] = 0;
   out_3216624200312040771[301] = 0;
   out_3216624200312040771[302] = 0;
   out_3216624200312040771[303] = 0;
   out_3216624200312040771[304] = 0;
   out_3216624200312040771[305] = 0;
   out_3216624200312040771[306] = 0;
   out_3216624200312040771[307] = 1.0;
   out_3216624200312040771[308] = 0;
   out_3216624200312040771[309] = 0;
   out_3216624200312040771[310] = 0;
   out_3216624200312040771[311] = 0;
   out_3216624200312040771[312] = 0;
   out_3216624200312040771[313] = 0;
   out_3216624200312040771[314] = 0;
   out_3216624200312040771[315] = 0;
   out_3216624200312040771[316] = 0;
   out_3216624200312040771[317] = 0;
   out_3216624200312040771[318] = 0;
   out_3216624200312040771[319] = 0;
   out_3216624200312040771[320] = 0;
   out_3216624200312040771[321] = 0;
   out_3216624200312040771[322] = 0;
   out_3216624200312040771[323] = 0;
   out_3216624200312040771[324] = 0;
   out_3216624200312040771[325] = 0;
   out_3216624200312040771[326] = 0;
   out_3216624200312040771[327] = 0;
   out_3216624200312040771[328] = 0;
   out_3216624200312040771[329] = 1.0;
   out_3216624200312040771[330] = 0;
   out_3216624200312040771[331] = 0;
   out_3216624200312040771[332] = 0;
   out_3216624200312040771[333] = 0;
   out_3216624200312040771[334] = 0;
   out_3216624200312040771[335] = 0;
   out_3216624200312040771[336] = 0;
   out_3216624200312040771[337] = 0;
   out_3216624200312040771[338] = 0;
   out_3216624200312040771[339] = 0;
   out_3216624200312040771[340] = 0;
   out_3216624200312040771[341] = 0;
   out_3216624200312040771[342] = 0;
   out_3216624200312040771[343] = 0;
   out_3216624200312040771[344] = 0;
   out_3216624200312040771[345] = 0;
   out_3216624200312040771[346] = 0;
   out_3216624200312040771[347] = 0;
   out_3216624200312040771[348] = 0;
   out_3216624200312040771[349] = 0;
   out_3216624200312040771[350] = 0;
   out_3216624200312040771[351] = 1.0;
   out_3216624200312040771[352] = 0;
   out_3216624200312040771[353] = 0;
   out_3216624200312040771[354] = 0;
   out_3216624200312040771[355] = 0;
   out_3216624200312040771[356] = 0;
   out_3216624200312040771[357] = 0;
   out_3216624200312040771[358] = 0;
   out_3216624200312040771[359] = 0;
   out_3216624200312040771[360] = 0;
   out_3216624200312040771[361] = 0;
   out_3216624200312040771[362] = 0;
   out_3216624200312040771[363] = 0;
   out_3216624200312040771[364] = 0;
   out_3216624200312040771[365] = 0;
   out_3216624200312040771[366] = 0;
   out_3216624200312040771[367] = 0;
   out_3216624200312040771[368] = 0;
   out_3216624200312040771[369] = 0;
   out_3216624200312040771[370] = 0;
   out_3216624200312040771[371] = 0;
   out_3216624200312040771[372] = 0;
   out_3216624200312040771[373] = 1.0;
   out_3216624200312040771[374] = 0;
   out_3216624200312040771[375] = 0;
   out_3216624200312040771[376] = 0;
   out_3216624200312040771[377] = 0;
   out_3216624200312040771[378] = 0;
   out_3216624200312040771[379] = 0;
   out_3216624200312040771[380] = 0;
   out_3216624200312040771[381] = 0;
   out_3216624200312040771[382] = 0;
   out_3216624200312040771[383] = 0;
   out_3216624200312040771[384] = 0;
   out_3216624200312040771[385] = 0;
   out_3216624200312040771[386] = 0;
   out_3216624200312040771[387] = 0;
   out_3216624200312040771[388] = 0;
   out_3216624200312040771[389] = 0;
   out_3216624200312040771[390] = 0;
   out_3216624200312040771[391] = 0;
   out_3216624200312040771[392] = 0;
   out_3216624200312040771[393] = 0;
   out_3216624200312040771[394] = 0;
   out_3216624200312040771[395] = 1.0;
   out_3216624200312040771[396] = 0;
   out_3216624200312040771[397] = 0;
   out_3216624200312040771[398] = 0;
   out_3216624200312040771[399] = 0;
   out_3216624200312040771[400] = 0;
   out_3216624200312040771[401] = 0;
   out_3216624200312040771[402] = 0;
   out_3216624200312040771[403] = 0;
   out_3216624200312040771[404] = 0;
   out_3216624200312040771[405] = 0;
   out_3216624200312040771[406] = 0;
   out_3216624200312040771[407] = 0;
   out_3216624200312040771[408] = 0;
   out_3216624200312040771[409] = 0;
   out_3216624200312040771[410] = 0;
   out_3216624200312040771[411] = 0;
   out_3216624200312040771[412] = 0;
   out_3216624200312040771[413] = 0;
   out_3216624200312040771[414] = 0;
   out_3216624200312040771[415] = 0;
   out_3216624200312040771[416] = 0;
   out_3216624200312040771[417] = 1.0;
   out_3216624200312040771[418] = 0;
   out_3216624200312040771[419] = 0;
   out_3216624200312040771[420] = 0;
   out_3216624200312040771[421] = 0;
   out_3216624200312040771[422] = 0;
   out_3216624200312040771[423] = 0;
   out_3216624200312040771[424] = 0;
   out_3216624200312040771[425] = 0;
   out_3216624200312040771[426] = 0;
   out_3216624200312040771[427] = 0;
   out_3216624200312040771[428] = 0;
   out_3216624200312040771[429] = 0;
   out_3216624200312040771[430] = 0;
   out_3216624200312040771[431] = 0;
   out_3216624200312040771[432] = 0;
   out_3216624200312040771[433] = 0;
   out_3216624200312040771[434] = 0;
   out_3216624200312040771[435] = 0;
   out_3216624200312040771[436] = 0;
   out_3216624200312040771[437] = 0;
   out_3216624200312040771[438] = 0;
   out_3216624200312040771[439] = 1.0;
   out_3216624200312040771[440] = 0;
   out_3216624200312040771[441] = 0;
   out_3216624200312040771[442] = 0;
   out_3216624200312040771[443] = 0;
   out_3216624200312040771[444] = 0;
   out_3216624200312040771[445] = 0;
   out_3216624200312040771[446] = 0;
   out_3216624200312040771[447] = 0;
   out_3216624200312040771[448] = 0;
   out_3216624200312040771[449] = 0;
   out_3216624200312040771[450] = 0;
   out_3216624200312040771[451] = 0;
   out_3216624200312040771[452] = 0;
   out_3216624200312040771[453] = 0;
   out_3216624200312040771[454] = 0;
   out_3216624200312040771[455] = 0;
   out_3216624200312040771[456] = 0;
   out_3216624200312040771[457] = 0;
   out_3216624200312040771[458] = 0;
   out_3216624200312040771[459] = 0;
   out_3216624200312040771[460] = 0;
   out_3216624200312040771[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5505147530000604488) {
   out_5505147530000604488[0] = dt*state[7] + state[0];
   out_5505147530000604488[1] = dt*state[8] + state[1];
   out_5505147530000604488[2] = dt*state[9] + state[2];
   out_5505147530000604488[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5505147530000604488[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5505147530000604488[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5505147530000604488[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5505147530000604488[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5505147530000604488[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5505147530000604488[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5505147530000604488[10] = state[10];
   out_5505147530000604488[11] = state[11];
   out_5505147530000604488[12] = state[12];
   out_5505147530000604488[13] = state[13];
   out_5505147530000604488[14] = state[14];
   out_5505147530000604488[15] = state[15];
   out_5505147530000604488[16] = state[16];
   out_5505147530000604488[17] = state[17];
   out_5505147530000604488[18] = state[18];
   out_5505147530000604488[19] = state[19];
   out_5505147530000604488[20] = state[20];
   out_5505147530000604488[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4066795769067461541) {
   out_4066795769067461541[0] = 1;
   out_4066795769067461541[1] = 0;
   out_4066795769067461541[2] = 0;
   out_4066795769067461541[3] = 0;
   out_4066795769067461541[4] = 0;
   out_4066795769067461541[5] = 0;
   out_4066795769067461541[6] = dt;
   out_4066795769067461541[7] = 0;
   out_4066795769067461541[8] = 0;
   out_4066795769067461541[9] = 0;
   out_4066795769067461541[10] = 0;
   out_4066795769067461541[11] = 0;
   out_4066795769067461541[12] = 0;
   out_4066795769067461541[13] = 0;
   out_4066795769067461541[14] = 0;
   out_4066795769067461541[15] = 0;
   out_4066795769067461541[16] = 0;
   out_4066795769067461541[17] = 0;
   out_4066795769067461541[18] = 0;
   out_4066795769067461541[19] = 0;
   out_4066795769067461541[20] = 0;
   out_4066795769067461541[21] = 0;
   out_4066795769067461541[22] = 1;
   out_4066795769067461541[23] = 0;
   out_4066795769067461541[24] = 0;
   out_4066795769067461541[25] = 0;
   out_4066795769067461541[26] = 0;
   out_4066795769067461541[27] = 0;
   out_4066795769067461541[28] = dt;
   out_4066795769067461541[29] = 0;
   out_4066795769067461541[30] = 0;
   out_4066795769067461541[31] = 0;
   out_4066795769067461541[32] = 0;
   out_4066795769067461541[33] = 0;
   out_4066795769067461541[34] = 0;
   out_4066795769067461541[35] = 0;
   out_4066795769067461541[36] = 0;
   out_4066795769067461541[37] = 0;
   out_4066795769067461541[38] = 0;
   out_4066795769067461541[39] = 0;
   out_4066795769067461541[40] = 0;
   out_4066795769067461541[41] = 0;
   out_4066795769067461541[42] = 0;
   out_4066795769067461541[43] = 0;
   out_4066795769067461541[44] = 1;
   out_4066795769067461541[45] = 0;
   out_4066795769067461541[46] = 0;
   out_4066795769067461541[47] = 0;
   out_4066795769067461541[48] = 0;
   out_4066795769067461541[49] = 0;
   out_4066795769067461541[50] = dt;
   out_4066795769067461541[51] = 0;
   out_4066795769067461541[52] = 0;
   out_4066795769067461541[53] = 0;
   out_4066795769067461541[54] = 0;
   out_4066795769067461541[55] = 0;
   out_4066795769067461541[56] = 0;
   out_4066795769067461541[57] = 0;
   out_4066795769067461541[58] = 0;
   out_4066795769067461541[59] = 0;
   out_4066795769067461541[60] = 0;
   out_4066795769067461541[61] = 0;
   out_4066795769067461541[62] = 0;
   out_4066795769067461541[63] = 0;
   out_4066795769067461541[64] = 0;
   out_4066795769067461541[65] = 0;
   out_4066795769067461541[66] = 1;
   out_4066795769067461541[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4066795769067461541[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4066795769067461541[69] = 0;
   out_4066795769067461541[70] = 0;
   out_4066795769067461541[71] = 0;
   out_4066795769067461541[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4066795769067461541[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4066795769067461541[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4066795769067461541[75] = 0;
   out_4066795769067461541[76] = 0;
   out_4066795769067461541[77] = 0;
   out_4066795769067461541[78] = 0;
   out_4066795769067461541[79] = 0;
   out_4066795769067461541[80] = 0;
   out_4066795769067461541[81] = 0;
   out_4066795769067461541[82] = 0;
   out_4066795769067461541[83] = 0;
   out_4066795769067461541[84] = 0;
   out_4066795769067461541[85] = 0;
   out_4066795769067461541[86] = 0;
   out_4066795769067461541[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4066795769067461541[88] = 1;
   out_4066795769067461541[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4066795769067461541[90] = 0;
   out_4066795769067461541[91] = 0;
   out_4066795769067461541[92] = 0;
   out_4066795769067461541[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4066795769067461541[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4066795769067461541[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4066795769067461541[96] = 0;
   out_4066795769067461541[97] = 0;
   out_4066795769067461541[98] = 0;
   out_4066795769067461541[99] = 0;
   out_4066795769067461541[100] = 0;
   out_4066795769067461541[101] = 0;
   out_4066795769067461541[102] = 0;
   out_4066795769067461541[103] = 0;
   out_4066795769067461541[104] = 0;
   out_4066795769067461541[105] = 0;
   out_4066795769067461541[106] = 0;
   out_4066795769067461541[107] = 0;
   out_4066795769067461541[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4066795769067461541[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4066795769067461541[110] = 1;
   out_4066795769067461541[111] = 0;
   out_4066795769067461541[112] = 0;
   out_4066795769067461541[113] = 0;
   out_4066795769067461541[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4066795769067461541[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4066795769067461541[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4066795769067461541[117] = 0;
   out_4066795769067461541[118] = 0;
   out_4066795769067461541[119] = 0;
   out_4066795769067461541[120] = 0;
   out_4066795769067461541[121] = 0;
   out_4066795769067461541[122] = 0;
   out_4066795769067461541[123] = 0;
   out_4066795769067461541[124] = 0;
   out_4066795769067461541[125] = 0;
   out_4066795769067461541[126] = 0;
   out_4066795769067461541[127] = 0;
   out_4066795769067461541[128] = 0;
   out_4066795769067461541[129] = 0;
   out_4066795769067461541[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4066795769067461541[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4066795769067461541[132] = 1;
   out_4066795769067461541[133] = 0;
   out_4066795769067461541[134] = 0;
   out_4066795769067461541[135] = 0;
   out_4066795769067461541[136] = 0;
   out_4066795769067461541[137] = 0;
   out_4066795769067461541[138] = 0;
   out_4066795769067461541[139] = 0;
   out_4066795769067461541[140] = 0;
   out_4066795769067461541[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4066795769067461541[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4066795769067461541[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4066795769067461541[144] = 0;
   out_4066795769067461541[145] = 0;
   out_4066795769067461541[146] = 0;
   out_4066795769067461541[147] = 0;
   out_4066795769067461541[148] = 0;
   out_4066795769067461541[149] = 0;
   out_4066795769067461541[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4066795769067461541[151] = 0;
   out_4066795769067461541[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4066795769067461541[153] = 0;
   out_4066795769067461541[154] = 1;
   out_4066795769067461541[155] = 0;
   out_4066795769067461541[156] = 0;
   out_4066795769067461541[157] = 0;
   out_4066795769067461541[158] = 0;
   out_4066795769067461541[159] = 0;
   out_4066795769067461541[160] = 0;
   out_4066795769067461541[161] = 0;
   out_4066795769067461541[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4066795769067461541[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4066795769067461541[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4066795769067461541[165] = 0;
   out_4066795769067461541[166] = 0;
   out_4066795769067461541[167] = 0;
   out_4066795769067461541[168] = 0;
   out_4066795769067461541[169] = 0;
   out_4066795769067461541[170] = 0;
   out_4066795769067461541[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4066795769067461541[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4066795769067461541[173] = 0;
   out_4066795769067461541[174] = 0;
   out_4066795769067461541[175] = 0;
   out_4066795769067461541[176] = 1;
   out_4066795769067461541[177] = 0;
   out_4066795769067461541[178] = 0;
   out_4066795769067461541[179] = 0;
   out_4066795769067461541[180] = 0;
   out_4066795769067461541[181] = 0;
   out_4066795769067461541[182] = 0;
   out_4066795769067461541[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4066795769067461541[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4066795769067461541[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4066795769067461541[186] = 0;
   out_4066795769067461541[187] = 0;
   out_4066795769067461541[188] = 0;
   out_4066795769067461541[189] = 0;
   out_4066795769067461541[190] = 0;
   out_4066795769067461541[191] = 0;
   out_4066795769067461541[192] = 0;
   out_4066795769067461541[193] = 0;
   out_4066795769067461541[194] = 0;
   out_4066795769067461541[195] = 0;
   out_4066795769067461541[196] = 0;
   out_4066795769067461541[197] = 0;
   out_4066795769067461541[198] = 1;
   out_4066795769067461541[199] = 0;
   out_4066795769067461541[200] = 0;
   out_4066795769067461541[201] = 0;
   out_4066795769067461541[202] = 0;
   out_4066795769067461541[203] = 0;
   out_4066795769067461541[204] = 0;
   out_4066795769067461541[205] = 0;
   out_4066795769067461541[206] = 0;
   out_4066795769067461541[207] = 0;
   out_4066795769067461541[208] = 0;
   out_4066795769067461541[209] = 0;
   out_4066795769067461541[210] = 0;
   out_4066795769067461541[211] = 0;
   out_4066795769067461541[212] = 0;
   out_4066795769067461541[213] = 0;
   out_4066795769067461541[214] = 0;
   out_4066795769067461541[215] = 0;
   out_4066795769067461541[216] = 0;
   out_4066795769067461541[217] = 0;
   out_4066795769067461541[218] = 0;
   out_4066795769067461541[219] = 0;
   out_4066795769067461541[220] = 1;
   out_4066795769067461541[221] = 0;
   out_4066795769067461541[222] = 0;
   out_4066795769067461541[223] = 0;
   out_4066795769067461541[224] = 0;
   out_4066795769067461541[225] = 0;
   out_4066795769067461541[226] = 0;
   out_4066795769067461541[227] = 0;
   out_4066795769067461541[228] = 0;
   out_4066795769067461541[229] = 0;
   out_4066795769067461541[230] = 0;
   out_4066795769067461541[231] = 0;
   out_4066795769067461541[232] = 0;
   out_4066795769067461541[233] = 0;
   out_4066795769067461541[234] = 0;
   out_4066795769067461541[235] = 0;
   out_4066795769067461541[236] = 0;
   out_4066795769067461541[237] = 0;
   out_4066795769067461541[238] = 0;
   out_4066795769067461541[239] = 0;
   out_4066795769067461541[240] = 0;
   out_4066795769067461541[241] = 0;
   out_4066795769067461541[242] = 1;
   out_4066795769067461541[243] = 0;
   out_4066795769067461541[244] = 0;
   out_4066795769067461541[245] = 0;
   out_4066795769067461541[246] = 0;
   out_4066795769067461541[247] = 0;
   out_4066795769067461541[248] = 0;
   out_4066795769067461541[249] = 0;
   out_4066795769067461541[250] = 0;
   out_4066795769067461541[251] = 0;
   out_4066795769067461541[252] = 0;
   out_4066795769067461541[253] = 0;
   out_4066795769067461541[254] = 0;
   out_4066795769067461541[255] = 0;
   out_4066795769067461541[256] = 0;
   out_4066795769067461541[257] = 0;
   out_4066795769067461541[258] = 0;
   out_4066795769067461541[259] = 0;
   out_4066795769067461541[260] = 0;
   out_4066795769067461541[261] = 0;
   out_4066795769067461541[262] = 0;
   out_4066795769067461541[263] = 0;
   out_4066795769067461541[264] = 1;
   out_4066795769067461541[265] = 0;
   out_4066795769067461541[266] = 0;
   out_4066795769067461541[267] = 0;
   out_4066795769067461541[268] = 0;
   out_4066795769067461541[269] = 0;
   out_4066795769067461541[270] = 0;
   out_4066795769067461541[271] = 0;
   out_4066795769067461541[272] = 0;
   out_4066795769067461541[273] = 0;
   out_4066795769067461541[274] = 0;
   out_4066795769067461541[275] = 0;
   out_4066795769067461541[276] = 0;
   out_4066795769067461541[277] = 0;
   out_4066795769067461541[278] = 0;
   out_4066795769067461541[279] = 0;
   out_4066795769067461541[280] = 0;
   out_4066795769067461541[281] = 0;
   out_4066795769067461541[282] = 0;
   out_4066795769067461541[283] = 0;
   out_4066795769067461541[284] = 0;
   out_4066795769067461541[285] = 0;
   out_4066795769067461541[286] = 1;
   out_4066795769067461541[287] = 0;
   out_4066795769067461541[288] = 0;
   out_4066795769067461541[289] = 0;
   out_4066795769067461541[290] = 0;
   out_4066795769067461541[291] = 0;
   out_4066795769067461541[292] = 0;
   out_4066795769067461541[293] = 0;
   out_4066795769067461541[294] = 0;
   out_4066795769067461541[295] = 0;
   out_4066795769067461541[296] = 0;
   out_4066795769067461541[297] = 0;
   out_4066795769067461541[298] = 0;
   out_4066795769067461541[299] = 0;
   out_4066795769067461541[300] = 0;
   out_4066795769067461541[301] = 0;
   out_4066795769067461541[302] = 0;
   out_4066795769067461541[303] = 0;
   out_4066795769067461541[304] = 0;
   out_4066795769067461541[305] = 0;
   out_4066795769067461541[306] = 0;
   out_4066795769067461541[307] = 0;
   out_4066795769067461541[308] = 1;
   out_4066795769067461541[309] = 0;
   out_4066795769067461541[310] = 0;
   out_4066795769067461541[311] = 0;
   out_4066795769067461541[312] = 0;
   out_4066795769067461541[313] = 0;
   out_4066795769067461541[314] = 0;
   out_4066795769067461541[315] = 0;
   out_4066795769067461541[316] = 0;
   out_4066795769067461541[317] = 0;
   out_4066795769067461541[318] = 0;
   out_4066795769067461541[319] = 0;
   out_4066795769067461541[320] = 0;
   out_4066795769067461541[321] = 0;
   out_4066795769067461541[322] = 0;
   out_4066795769067461541[323] = 0;
   out_4066795769067461541[324] = 0;
   out_4066795769067461541[325] = 0;
   out_4066795769067461541[326] = 0;
   out_4066795769067461541[327] = 0;
   out_4066795769067461541[328] = 0;
   out_4066795769067461541[329] = 0;
   out_4066795769067461541[330] = 1;
   out_4066795769067461541[331] = 0;
   out_4066795769067461541[332] = 0;
   out_4066795769067461541[333] = 0;
   out_4066795769067461541[334] = 0;
   out_4066795769067461541[335] = 0;
   out_4066795769067461541[336] = 0;
   out_4066795769067461541[337] = 0;
   out_4066795769067461541[338] = 0;
   out_4066795769067461541[339] = 0;
   out_4066795769067461541[340] = 0;
   out_4066795769067461541[341] = 0;
   out_4066795769067461541[342] = 0;
   out_4066795769067461541[343] = 0;
   out_4066795769067461541[344] = 0;
   out_4066795769067461541[345] = 0;
   out_4066795769067461541[346] = 0;
   out_4066795769067461541[347] = 0;
   out_4066795769067461541[348] = 0;
   out_4066795769067461541[349] = 0;
   out_4066795769067461541[350] = 0;
   out_4066795769067461541[351] = 0;
   out_4066795769067461541[352] = 1;
   out_4066795769067461541[353] = 0;
   out_4066795769067461541[354] = 0;
   out_4066795769067461541[355] = 0;
   out_4066795769067461541[356] = 0;
   out_4066795769067461541[357] = 0;
   out_4066795769067461541[358] = 0;
   out_4066795769067461541[359] = 0;
   out_4066795769067461541[360] = 0;
   out_4066795769067461541[361] = 0;
   out_4066795769067461541[362] = 0;
   out_4066795769067461541[363] = 0;
   out_4066795769067461541[364] = 0;
   out_4066795769067461541[365] = 0;
   out_4066795769067461541[366] = 0;
   out_4066795769067461541[367] = 0;
   out_4066795769067461541[368] = 0;
   out_4066795769067461541[369] = 0;
   out_4066795769067461541[370] = 0;
   out_4066795769067461541[371] = 0;
   out_4066795769067461541[372] = 0;
   out_4066795769067461541[373] = 0;
   out_4066795769067461541[374] = 1;
   out_4066795769067461541[375] = 0;
   out_4066795769067461541[376] = 0;
   out_4066795769067461541[377] = 0;
   out_4066795769067461541[378] = 0;
   out_4066795769067461541[379] = 0;
   out_4066795769067461541[380] = 0;
   out_4066795769067461541[381] = 0;
   out_4066795769067461541[382] = 0;
   out_4066795769067461541[383] = 0;
   out_4066795769067461541[384] = 0;
   out_4066795769067461541[385] = 0;
   out_4066795769067461541[386] = 0;
   out_4066795769067461541[387] = 0;
   out_4066795769067461541[388] = 0;
   out_4066795769067461541[389] = 0;
   out_4066795769067461541[390] = 0;
   out_4066795769067461541[391] = 0;
   out_4066795769067461541[392] = 0;
   out_4066795769067461541[393] = 0;
   out_4066795769067461541[394] = 0;
   out_4066795769067461541[395] = 0;
   out_4066795769067461541[396] = 1;
   out_4066795769067461541[397] = 0;
   out_4066795769067461541[398] = 0;
   out_4066795769067461541[399] = 0;
   out_4066795769067461541[400] = 0;
   out_4066795769067461541[401] = 0;
   out_4066795769067461541[402] = 0;
   out_4066795769067461541[403] = 0;
   out_4066795769067461541[404] = 0;
   out_4066795769067461541[405] = 0;
   out_4066795769067461541[406] = 0;
   out_4066795769067461541[407] = 0;
   out_4066795769067461541[408] = 0;
   out_4066795769067461541[409] = 0;
   out_4066795769067461541[410] = 0;
   out_4066795769067461541[411] = 0;
   out_4066795769067461541[412] = 0;
   out_4066795769067461541[413] = 0;
   out_4066795769067461541[414] = 0;
   out_4066795769067461541[415] = 0;
   out_4066795769067461541[416] = 0;
   out_4066795769067461541[417] = 0;
   out_4066795769067461541[418] = 1;
   out_4066795769067461541[419] = 0;
   out_4066795769067461541[420] = 0;
   out_4066795769067461541[421] = 0;
   out_4066795769067461541[422] = 0;
   out_4066795769067461541[423] = 0;
   out_4066795769067461541[424] = 0;
   out_4066795769067461541[425] = 0;
   out_4066795769067461541[426] = 0;
   out_4066795769067461541[427] = 0;
   out_4066795769067461541[428] = 0;
   out_4066795769067461541[429] = 0;
   out_4066795769067461541[430] = 0;
   out_4066795769067461541[431] = 0;
   out_4066795769067461541[432] = 0;
   out_4066795769067461541[433] = 0;
   out_4066795769067461541[434] = 0;
   out_4066795769067461541[435] = 0;
   out_4066795769067461541[436] = 0;
   out_4066795769067461541[437] = 0;
   out_4066795769067461541[438] = 0;
   out_4066795769067461541[439] = 0;
   out_4066795769067461541[440] = 1;
}
void h_4(double *state, double *unused, double *out_3800246854600917438) {
   out_3800246854600917438[0] = state[10] + state[13];
   out_3800246854600917438[1] = state[11] + state[14];
   out_3800246854600917438[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7613372038684445734) {
   out_7613372038684445734[0] = 0;
   out_7613372038684445734[1] = 0;
   out_7613372038684445734[2] = 0;
   out_7613372038684445734[3] = 0;
   out_7613372038684445734[4] = 0;
   out_7613372038684445734[5] = 0;
   out_7613372038684445734[6] = 0;
   out_7613372038684445734[7] = 0;
   out_7613372038684445734[8] = 0;
   out_7613372038684445734[9] = 0;
   out_7613372038684445734[10] = 1;
   out_7613372038684445734[11] = 0;
   out_7613372038684445734[12] = 0;
   out_7613372038684445734[13] = 1;
   out_7613372038684445734[14] = 0;
   out_7613372038684445734[15] = 0;
   out_7613372038684445734[16] = 0;
   out_7613372038684445734[17] = 0;
   out_7613372038684445734[18] = 0;
   out_7613372038684445734[19] = 0;
   out_7613372038684445734[20] = 0;
   out_7613372038684445734[21] = 0;
   out_7613372038684445734[22] = 0;
   out_7613372038684445734[23] = 0;
   out_7613372038684445734[24] = 0;
   out_7613372038684445734[25] = 0;
   out_7613372038684445734[26] = 0;
   out_7613372038684445734[27] = 0;
   out_7613372038684445734[28] = 0;
   out_7613372038684445734[29] = 0;
   out_7613372038684445734[30] = 0;
   out_7613372038684445734[31] = 0;
   out_7613372038684445734[32] = 0;
   out_7613372038684445734[33] = 1;
   out_7613372038684445734[34] = 0;
   out_7613372038684445734[35] = 0;
   out_7613372038684445734[36] = 1;
   out_7613372038684445734[37] = 0;
   out_7613372038684445734[38] = 0;
   out_7613372038684445734[39] = 0;
   out_7613372038684445734[40] = 0;
   out_7613372038684445734[41] = 0;
   out_7613372038684445734[42] = 0;
   out_7613372038684445734[43] = 0;
   out_7613372038684445734[44] = 0;
   out_7613372038684445734[45] = 0;
   out_7613372038684445734[46] = 0;
   out_7613372038684445734[47] = 0;
   out_7613372038684445734[48] = 0;
   out_7613372038684445734[49] = 0;
   out_7613372038684445734[50] = 0;
   out_7613372038684445734[51] = 0;
   out_7613372038684445734[52] = 0;
   out_7613372038684445734[53] = 0;
   out_7613372038684445734[54] = 0;
   out_7613372038684445734[55] = 0;
   out_7613372038684445734[56] = 1;
   out_7613372038684445734[57] = 0;
   out_7613372038684445734[58] = 0;
   out_7613372038684445734[59] = 1;
   out_7613372038684445734[60] = 0;
   out_7613372038684445734[61] = 0;
   out_7613372038684445734[62] = 0;
   out_7613372038684445734[63] = 0;
   out_7613372038684445734[64] = 0;
   out_7613372038684445734[65] = 0;
}
void h_9(double *state, double *unused, double *out_2206800556775941132) {
   out_2206800556775941132[0] = state[10];
   out_2206800556775941132[1] = state[11];
   out_2206800556775941132[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7854561685314036379) {
   out_7854561685314036379[0] = 0;
   out_7854561685314036379[1] = 0;
   out_7854561685314036379[2] = 0;
   out_7854561685314036379[3] = 0;
   out_7854561685314036379[4] = 0;
   out_7854561685314036379[5] = 0;
   out_7854561685314036379[6] = 0;
   out_7854561685314036379[7] = 0;
   out_7854561685314036379[8] = 0;
   out_7854561685314036379[9] = 0;
   out_7854561685314036379[10] = 1;
   out_7854561685314036379[11] = 0;
   out_7854561685314036379[12] = 0;
   out_7854561685314036379[13] = 0;
   out_7854561685314036379[14] = 0;
   out_7854561685314036379[15] = 0;
   out_7854561685314036379[16] = 0;
   out_7854561685314036379[17] = 0;
   out_7854561685314036379[18] = 0;
   out_7854561685314036379[19] = 0;
   out_7854561685314036379[20] = 0;
   out_7854561685314036379[21] = 0;
   out_7854561685314036379[22] = 0;
   out_7854561685314036379[23] = 0;
   out_7854561685314036379[24] = 0;
   out_7854561685314036379[25] = 0;
   out_7854561685314036379[26] = 0;
   out_7854561685314036379[27] = 0;
   out_7854561685314036379[28] = 0;
   out_7854561685314036379[29] = 0;
   out_7854561685314036379[30] = 0;
   out_7854561685314036379[31] = 0;
   out_7854561685314036379[32] = 0;
   out_7854561685314036379[33] = 1;
   out_7854561685314036379[34] = 0;
   out_7854561685314036379[35] = 0;
   out_7854561685314036379[36] = 0;
   out_7854561685314036379[37] = 0;
   out_7854561685314036379[38] = 0;
   out_7854561685314036379[39] = 0;
   out_7854561685314036379[40] = 0;
   out_7854561685314036379[41] = 0;
   out_7854561685314036379[42] = 0;
   out_7854561685314036379[43] = 0;
   out_7854561685314036379[44] = 0;
   out_7854561685314036379[45] = 0;
   out_7854561685314036379[46] = 0;
   out_7854561685314036379[47] = 0;
   out_7854561685314036379[48] = 0;
   out_7854561685314036379[49] = 0;
   out_7854561685314036379[50] = 0;
   out_7854561685314036379[51] = 0;
   out_7854561685314036379[52] = 0;
   out_7854561685314036379[53] = 0;
   out_7854561685314036379[54] = 0;
   out_7854561685314036379[55] = 0;
   out_7854561685314036379[56] = 1;
   out_7854561685314036379[57] = 0;
   out_7854561685314036379[58] = 0;
   out_7854561685314036379[59] = 0;
   out_7854561685314036379[60] = 0;
   out_7854561685314036379[61] = 0;
   out_7854561685314036379[62] = 0;
   out_7854561685314036379[63] = 0;
   out_7854561685314036379[64] = 0;
   out_7854561685314036379[65] = 0;
}
void h_10(double *state, double *unused, double *out_1355531802156988649) {
   out_1355531802156988649[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1355531802156988649[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1355531802156988649[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_620509573058324218) {
   out_620509573058324218[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_620509573058324218[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_620509573058324218[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_620509573058324218[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_620509573058324218[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_620509573058324218[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_620509573058324218[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_620509573058324218[7] = 0;
   out_620509573058324218[8] = 0;
   out_620509573058324218[9] = 0;
   out_620509573058324218[10] = 0;
   out_620509573058324218[11] = 0;
   out_620509573058324218[12] = 0;
   out_620509573058324218[13] = 0;
   out_620509573058324218[14] = 0;
   out_620509573058324218[15] = 0;
   out_620509573058324218[16] = 1;
   out_620509573058324218[17] = 0;
   out_620509573058324218[18] = 0;
   out_620509573058324218[19] = 1;
   out_620509573058324218[20] = 0;
   out_620509573058324218[21] = 0;
   out_620509573058324218[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_620509573058324218[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_620509573058324218[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_620509573058324218[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_620509573058324218[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_620509573058324218[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_620509573058324218[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_620509573058324218[29] = 0;
   out_620509573058324218[30] = 0;
   out_620509573058324218[31] = 0;
   out_620509573058324218[32] = 0;
   out_620509573058324218[33] = 0;
   out_620509573058324218[34] = 0;
   out_620509573058324218[35] = 0;
   out_620509573058324218[36] = 0;
   out_620509573058324218[37] = 0;
   out_620509573058324218[38] = 0;
   out_620509573058324218[39] = 1;
   out_620509573058324218[40] = 0;
   out_620509573058324218[41] = 0;
   out_620509573058324218[42] = 1;
   out_620509573058324218[43] = 0;
   out_620509573058324218[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_620509573058324218[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_620509573058324218[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_620509573058324218[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_620509573058324218[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_620509573058324218[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_620509573058324218[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_620509573058324218[51] = 0;
   out_620509573058324218[52] = 0;
   out_620509573058324218[53] = 0;
   out_620509573058324218[54] = 0;
   out_620509573058324218[55] = 0;
   out_620509573058324218[56] = 0;
   out_620509573058324218[57] = 0;
   out_620509573058324218[58] = 0;
   out_620509573058324218[59] = 0;
   out_620509573058324218[60] = 0;
   out_620509573058324218[61] = 0;
   out_620509573058324218[62] = 1;
   out_620509573058324218[63] = 0;
   out_620509573058324218[64] = 0;
   out_620509573058324218[65] = 1;
}
void h_12(double *state, double *unused, double *out_2491100639426053800) {
   out_2491100639426053800[0] = state[0];
   out_2491100639426053800[1] = state[1];
   out_2491100639426053800[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5813915626993144087) {
   out_5813915626993144087[0] = 1;
   out_5813915626993144087[1] = 0;
   out_5813915626993144087[2] = 0;
   out_5813915626993144087[3] = 0;
   out_5813915626993144087[4] = 0;
   out_5813915626993144087[5] = 0;
   out_5813915626993144087[6] = 0;
   out_5813915626993144087[7] = 0;
   out_5813915626993144087[8] = 0;
   out_5813915626993144087[9] = 0;
   out_5813915626993144087[10] = 0;
   out_5813915626993144087[11] = 0;
   out_5813915626993144087[12] = 0;
   out_5813915626993144087[13] = 0;
   out_5813915626993144087[14] = 0;
   out_5813915626993144087[15] = 0;
   out_5813915626993144087[16] = 0;
   out_5813915626993144087[17] = 0;
   out_5813915626993144087[18] = 0;
   out_5813915626993144087[19] = 0;
   out_5813915626993144087[20] = 0;
   out_5813915626993144087[21] = 0;
   out_5813915626993144087[22] = 0;
   out_5813915626993144087[23] = 1;
   out_5813915626993144087[24] = 0;
   out_5813915626993144087[25] = 0;
   out_5813915626993144087[26] = 0;
   out_5813915626993144087[27] = 0;
   out_5813915626993144087[28] = 0;
   out_5813915626993144087[29] = 0;
   out_5813915626993144087[30] = 0;
   out_5813915626993144087[31] = 0;
   out_5813915626993144087[32] = 0;
   out_5813915626993144087[33] = 0;
   out_5813915626993144087[34] = 0;
   out_5813915626993144087[35] = 0;
   out_5813915626993144087[36] = 0;
   out_5813915626993144087[37] = 0;
   out_5813915626993144087[38] = 0;
   out_5813915626993144087[39] = 0;
   out_5813915626993144087[40] = 0;
   out_5813915626993144087[41] = 0;
   out_5813915626993144087[42] = 0;
   out_5813915626993144087[43] = 0;
   out_5813915626993144087[44] = 0;
   out_5813915626993144087[45] = 0;
   out_5813915626993144087[46] = 1;
   out_5813915626993144087[47] = 0;
   out_5813915626993144087[48] = 0;
   out_5813915626993144087[49] = 0;
   out_5813915626993144087[50] = 0;
   out_5813915626993144087[51] = 0;
   out_5813915626993144087[52] = 0;
   out_5813915626993144087[53] = 0;
   out_5813915626993144087[54] = 0;
   out_5813915626993144087[55] = 0;
   out_5813915626993144087[56] = 0;
   out_5813915626993144087[57] = 0;
   out_5813915626993144087[58] = 0;
   out_5813915626993144087[59] = 0;
   out_5813915626993144087[60] = 0;
   out_5813915626993144087[61] = 0;
   out_5813915626993144087[62] = 0;
   out_5813915626993144087[63] = 0;
   out_5813915626993144087[64] = 0;
   out_5813915626993144087[65] = 0;
}
void h_35(double *state, double *unused, double *out_2573100325490249139) {
   out_2573100325490249139[0] = state[7];
   out_2573100325490249139[1] = state[8];
   out_2573100325490249139[2] = state[9];
}
void H_35(double *state, double *unused, double *out_3068352594668130378) {
   out_3068352594668130378[0] = 0;
   out_3068352594668130378[1] = 0;
   out_3068352594668130378[2] = 0;
   out_3068352594668130378[3] = 0;
   out_3068352594668130378[4] = 0;
   out_3068352594668130378[5] = 0;
   out_3068352594668130378[6] = 0;
   out_3068352594668130378[7] = 1;
   out_3068352594668130378[8] = 0;
   out_3068352594668130378[9] = 0;
   out_3068352594668130378[10] = 0;
   out_3068352594668130378[11] = 0;
   out_3068352594668130378[12] = 0;
   out_3068352594668130378[13] = 0;
   out_3068352594668130378[14] = 0;
   out_3068352594668130378[15] = 0;
   out_3068352594668130378[16] = 0;
   out_3068352594668130378[17] = 0;
   out_3068352594668130378[18] = 0;
   out_3068352594668130378[19] = 0;
   out_3068352594668130378[20] = 0;
   out_3068352594668130378[21] = 0;
   out_3068352594668130378[22] = 0;
   out_3068352594668130378[23] = 0;
   out_3068352594668130378[24] = 0;
   out_3068352594668130378[25] = 0;
   out_3068352594668130378[26] = 0;
   out_3068352594668130378[27] = 0;
   out_3068352594668130378[28] = 0;
   out_3068352594668130378[29] = 0;
   out_3068352594668130378[30] = 1;
   out_3068352594668130378[31] = 0;
   out_3068352594668130378[32] = 0;
   out_3068352594668130378[33] = 0;
   out_3068352594668130378[34] = 0;
   out_3068352594668130378[35] = 0;
   out_3068352594668130378[36] = 0;
   out_3068352594668130378[37] = 0;
   out_3068352594668130378[38] = 0;
   out_3068352594668130378[39] = 0;
   out_3068352594668130378[40] = 0;
   out_3068352594668130378[41] = 0;
   out_3068352594668130378[42] = 0;
   out_3068352594668130378[43] = 0;
   out_3068352594668130378[44] = 0;
   out_3068352594668130378[45] = 0;
   out_3068352594668130378[46] = 0;
   out_3068352594668130378[47] = 0;
   out_3068352594668130378[48] = 0;
   out_3068352594668130378[49] = 0;
   out_3068352594668130378[50] = 0;
   out_3068352594668130378[51] = 0;
   out_3068352594668130378[52] = 0;
   out_3068352594668130378[53] = 1;
   out_3068352594668130378[54] = 0;
   out_3068352594668130378[55] = 0;
   out_3068352594668130378[56] = 0;
   out_3068352594668130378[57] = 0;
   out_3068352594668130378[58] = 0;
   out_3068352594668130378[59] = 0;
   out_3068352594668130378[60] = 0;
   out_3068352594668130378[61] = 0;
   out_3068352594668130378[62] = 0;
   out_3068352594668130378[63] = 0;
   out_3068352594668130378[64] = 0;
   out_3068352594668130378[65] = 0;
}
void h_32(double *state, double *unused, double *out_4993410783947549182) {
   out_4993410783947549182[0] = state[3];
   out_4993410783947549182[1] = state[4];
   out_4993410783947549182[2] = state[5];
   out_4993410783947549182[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7409357370401237266) {
   out_7409357370401237266[0] = 0;
   out_7409357370401237266[1] = 0;
   out_7409357370401237266[2] = 0;
   out_7409357370401237266[3] = 1;
   out_7409357370401237266[4] = 0;
   out_7409357370401237266[5] = 0;
   out_7409357370401237266[6] = 0;
   out_7409357370401237266[7] = 0;
   out_7409357370401237266[8] = 0;
   out_7409357370401237266[9] = 0;
   out_7409357370401237266[10] = 0;
   out_7409357370401237266[11] = 0;
   out_7409357370401237266[12] = 0;
   out_7409357370401237266[13] = 0;
   out_7409357370401237266[14] = 0;
   out_7409357370401237266[15] = 0;
   out_7409357370401237266[16] = 0;
   out_7409357370401237266[17] = 0;
   out_7409357370401237266[18] = 0;
   out_7409357370401237266[19] = 0;
   out_7409357370401237266[20] = 0;
   out_7409357370401237266[21] = 0;
   out_7409357370401237266[22] = 0;
   out_7409357370401237266[23] = 0;
   out_7409357370401237266[24] = 0;
   out_7409357370401237266[25] = 0;
   out_7409357370401237266[26] = 1;
   out_7409357370401237266[27] = 0;
   out_7409357370401237266[28] = 0;
   out_7409357370401237266[29] = 0;
   out_7409357370401237266[30] = 0;
   out_7409357370401237266[31] = 0;
   out_7409357370401237266[32] = 0;
   out_7409357370401237266[33] = 0;
   out_7409357370401237266[34] = 0;
   out_7409357370401237266[35] = 0;
   out_7409357370401237266[36] = 0;
   out_7409357370401237266[37] = 0;
   out_7409357370401237266[38] = 0;
   out_7409357370401237266[39] = 0;
   out_7409357370401237266[40] = 0;
   out_7409357370401237266[41] = 0;
   out_7409357370401237266[42] = 0;
   out_7409357370401237266[43] = 0;
   out_7409357370401237266[44] = 0;
   out_7409357370401237266[45] = 0;
   out_7409357370401237266[46] = 0;
   out_7409357370401237266[47] = 0;
   out_7409357370401237266[48] = 0;
   out_7409357370401237266[49] = 1;
   out_7409357370401237266[50] = 0;
   out_7409357370401237266[51] = 0;
   out_7409357370401237266[52] = 0;
   out_7409357370401237266[53] = 0;
   out_7409357370401237266[54] = 0;
   out_7409357370401237266[55] = 0;
   out_7409357370401237266[56] = 0;
   out_7409357370401237266[57] = 0;
   out_7409357370401237266[58] = 0;
   out_7409357370401237266[59] = 0;
   out_7409357370401237266[60] = 0;
   out_7409357370401237266[61] = 0;
   out_7409357370401237266[62] = 0;
   out_7409357370401237266[63] = 0;
   out_7409357370401237266[64] = 0;
   out_7409357370401237266[65] = 0;
   out_7409357370401237266[66] = 0;
   out_7409357370401237266[67] = 0;
   out_7409357370401237266[68] = 0;
   out_7409357370401237266[69] = 0;
   out_7409357370401237266[70] = 0;
   out_7409357370401237266[71] = 0;
   out_7409357370401237266[72] = 1;
   out_7409357370401237266[73] = 0;
   out_7409357370401237266[74] = 0;
   out_7409357370401237266[75] = 0;
   out_7409357370401237266[76] = 0;
   out_7409357370401237266[77] = 0;
   out_7409357370401237266[78] = 0;
   out_7409357370401237266[79] = 0;
   out_7409357370401237266[80] = 0;
   out_7409357370401237266[81] = 0;
   out_7409357370401237266[82] = 0;
   out_7409357370401237266[83] = 0;
   out_7409357370401237266[84] = 0;
   out_7409357370401237266[85] = 0;
   out_7409357370401237266[86] = 0;
   out_7409357370401237266[87] = 0;
}
void h_13(double *state, double *unused, double *out_1278842074134747426) {
   out_1278842074134747426[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1278842074134747426[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1278842074134747426[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_3124643293376436718) {
   out_3124643293376436718[0] = 0;
   out_3124643293376436718[1] = 0;
   out_3124643293376436718[2] = 0;
   out_3124643293376436718[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3124643293376436718[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3124643293376436718[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_3124643293376436718[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3124643293376436718[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_3124643293376436718[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_3124643293376436718[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_3124643293376436718[10] = 0;
   out_3124643293376436718[11] = 0;
   out_3124643293376436718[12] = 0;
   out_3124643293376436718[13] = 0;
   out_3124643293376436718[14] = 0;
   out_3124643293376436718[15] = 0;
   out_3124643293376436718[16] = 0;
   out_3124643293376436718[17] = 0;
   out_3124643293376436718[18] = 0;
   out_3124643293376436718[19] = 0;
   out_3124643293376436718[20] = 0;
   out_3124643293376436718[21] = 0;
   out_3124643293376436718[22] = 0;
   out_3124643293376436718[23] = 0;
   out_3124643293376436718[24] = 0;
   out_3124643293376436718[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3124643293376436718[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3124643293376436718[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3124643293376436718[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_3124643293376436718[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_3124643293376436718[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_3124643293376436718[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_3124643293376436718[32] = 0;
   out_3124643293376436718[33] = 0;
   out_3124643293376436718[34] = 0;
   out_3124643293376436718[35] = 0;
   out_3124643293376436718[36] = 0;
   out_3124643293376436718[37] = 0;
   out_3124643293376436718[38] = 0;
   out_3124643293376436718[39] = 0;
   out_3124643293376436718[40] = 0;
   out_3124643293376436718[41] = 0;
   out_3124643293376436718[42] = 0;
   out_3124643293376436718[43] = 0;
   out_3124643293376436718[44] = 0;
   out_3124643293376436718[45] = 0;
   out_3124643293376436718[46] = 0;
   out_3124643293376436718[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3124643293376436718[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_3124643293376436718[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3124643293376436718[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3124643293376436718[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_3124643293376436718[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_3124643293376436718[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_3124643293376436718[54] = 0;
   out_3124643293376436718[55] = 0;
   out_3124643293376436718[56] = 0;
   out_3124643293376436718[57] = 0;
   out_3124643293376436718[58] = 0;
   out_3124643293376436718[59] = 0;
   out_3124643293376436718[60] = 0;
   out_3124643293376436718[61] = 0;
   out_3124643293376436718[62] = 0;
   out_3124643293376436718[63] = 0;
   out_3124643293376436718[64] = 0;
   out_3124643293376436718[65] = 0;
}
void h_14(double *state, double *unused, double *out_2206800556775941132) {
   out_2206800556775941132[0] = state[10];
   out_2206800556775941132[1] = state[11];
   out_2206800556775941132[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7854561685314036379) {
   out_7854561685314036379[0] = 0;
   out_7854561685314036379[1] = 0;
   out_7854561685314036379[2] = 0;
   out_7854561685314036379[3] = 0;
   out_7854561685314036379[4] = 0;
   out_7854561685314036379[5] = 0;
   out_7854561685314036379[6] = 0;
   out_7854561685314036379[7] = 0;
   out_7854561685314036379[8] = 0;
   out_7854561685314036379[9] = 0;
   out_7854561685314036379[10] = 1;
   out_7854561685314036379[11] = 0;
   out_7854561685314036379[12] = 0;
   out_7854561685314036379[13] = 0;
   out_7854561685314036379[14] = 0;
   out_7854561685314036379[15] = 0;
   out_7854561685314036379[16] = 0;
   out_7854561685314036379[17] = 0;
   out_7854561685314036379[18] = 0;
   out_7854561685314036379[19] = 0;
   out_7854561685314036379[20] = 0;
   out_7854561685314036379[21] = 0;
   out_7854561685314036379[22] = 0;
   out_7854561685314036379[23] = 0;
   out_7854561685314036379[24] = 0;
   out_7854561685314036379[25] = 0;
   out_7854561685314036379[26] = 0;
   out_7854561685314036379[27] = 0;
   out_7854561685314036379[28] = 0;
   out_7854561685314036379[29] = 0;
   out_7854561685314036379[30] = 0;
   out_7854561685314036379[31] = 0;
   out_7854561685314036379[32] = 0;
   out_7854561685314036379[33] = 1;
   out_7854561685314036379[34] = 0;
   out_7854561685314036379[35] = 0;
   out_7854561685314036379[36] = 0;
   out_7854561685314036379[37] = 0;
   out_7854561685314036379[38] = 0;
   out_7854561685314036379[39] = 0;
   out_7854561685314036379[40] = 0;
   out_7854561685314036379[41] = 0;
   out_7854561685314036379[42] = 0;
   out_7854561685314036379[43] = 0;
   out_7854561685314036379[44] = 0;
   out_7854561685314036379[45] = 0;
   out_7854561685314036379[46] = 0;
   out_7854561685314036379[47] = 0;
   out_7854561685314036379[48] = 0;
   out_7854561685314036379[49] = 0;
   out_7854561685314036379[50] = 0;
   out_7854561685314036379[51] = 0;
   out_7854561685314036379[52] = 0;
   out_7854561685314036379[53] = 0;
   out_7854561685314036379[54] = 0;
   out_7854561685314036379[55] = 0;
   out_7854561685314036379[56] = 1;
   out_7854561685314036379[57] = 0;
   out_7854561685314036379[58] = 0;
   out_7854561685314036379[59] = 0;
   out_7854561685314036379[60] = 0;
   out_7854561685314036379[61] = 0;
   out_7854561685314036379[62] = 0;
   out_7854561685314036379[63] = 0;
   out_7854561685314036379[64] = 0;
   out_7854561685314036379[65] = 0;
}
void h_33(double *state, double *unused, double *out_5432485072853075672) {
   out_5432485072853075672[0] = state[16];
   out_5432485072853075672[1] = state[17];
   out_5432485072853075672[2] = state[18];
}
void H_33(double *state, double *unused, double *out_82204409970727226) {
   out_82204409970727226[0] = 0;
   out_82204409970727226[1] = 0;
   out_82204409970727226[2] = 0;
   out_82204409970727226[3] = 0;
   out_82204409970727226[4] = 0;
   out_82204409970727226[5] = 0;
   out_82204409970727226[6] = 0;
   out_82204409970727226[7] = 0;
   out_82204409970727226[8] = 0;
   out_82204409970727226[9] = 0;
   out_82204409970727226[10] = 0;
   out_82204409970727226[11] = 0;
   out_82204409970727226[12] = 0;
   out_82204409970727226[13] = 0;
   out_82204409970727226[14] = 0;
   out_82204409970727226[15] = 0;
   out_82204409970727226[16] = 1;
   out_82204409970727226[17] = 0;
   out_82204409970727226[18] = 0;
   out_82204409970727226[19] = 0;
   out_82204409970727226[20] = 0;
   out_82204409970727226[21] = 0;
   out_82204409970727226[22] = 0;
   out_82204409970727226[23] = 0;
   out_82204409970727226[24] = 0;
   out_82204409970727226[25] = 0;
   out_82204409970727226[26] = 0;
   out_82204409970727226[27] = 0;
   out_82204409970727226[28] = 0;
   out_82204409970727226[29] = 0;
   out_82204409970727226[30] = 0;
   out_82204409970727226[31] = 0;
   out_82204409970727226[32] = 0;
   out_82204409970727226[33] = 0;
   out_82204409970727226[34] = 0;
   out_82204409970727226[35] = 0;
   out_82204409970727226[36] = 0;
   out_82204409970727226[37] = 0;
   out_82204409970727226[38] = 0;
   out_82204409970727226[39] = 1;
   out_82204409970727226[40] = 0;
   out_82204409970727226[41] = 0;
   out_82204409970727226[42] = 0;
   out_82204409970727226[43] = 0;
   out_82204409970727226[44] = 0;
   out_82204409970727226[45] = 0;
   out_82204409970727226[46] = 0;
   out_82204409970727226[47] = 0;
   out_82204409970727226[48] = 0;
   out_82204409970727226[49] = 0;
   out_82204409970727226[50] = 0;
   out_82204409970727226[51] = 0;
   out_82204409970727226[52] = 0;
   out_82204409970727226[53] = 0;
   out_82204409970727226[54] = 0;
   out_82204409970727226[55] = 0;
   out_82204409970727226[56] = 0;
   out_82204409970727226[57] = 0;
   out_82204409970727226[58] = 0;
   out_82204409970727226[59] = 0;
   out_82204409970727226[60] = 0;
   out_82204409970727226[61] = 0;
   out_82204409970727226[62] = 1;
   out_82204409970727226[63] = 0;
   out_82204409970727226[64] = 0;
   out_82204409970727226[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1883414544721554764) {
  H(in_vec, out_1883414544721554764);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3618258483455642740) {
  err_fun(nom_x, delta_x, out_3618258483455642740);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3609363492821829536) {
  inv_err_fun(nom_x, true_x, out_3609363492821829536);
}
void live_H_mod_fun(double *state, double *out_3216624200312040771) {
  H_mod_fun(state, out_3216624200312040771);
}
void live_f_fun(double *state, double dt, double *out_5505147530000604488) {
  f_fun(state,  dt, out_5505147530000604488);
}
void live_F_fun(double *state, double dt, double *out_4066795769067461541) {
  F_fun(state,  dt, out_4066795769067461541);
}
void live_h_4(double *state, double *unused, double *out_3800246854600917438) {
  h_4(state, unused, out_3800246854600917438);
}
void live_H_4(double *state, double *unused, double *out_7613372038684445734) {
  H_4(state, unused, out_7613372038684445734);
}
void live_h_9(double *state, double *unused, double *out_2206800556775941132) {
  h_9(state, unused, out_2206800556775941132);
}
void live_H_9(double *state, double *unused, double *out_7854561685314036379) {
  H_9(state, unused, out_7854561685314036379);
}
void live_h_10(double *state, double *unused, double *out_1355531802156988649) {
  h_10(state, unused, out_1355531802156988649);
}
void live_H_10(double *state, double *unused, double *out_620509573058324218) {
  H_10(state, unused, out_620509573058324218);
}
void live_h_12(double *state, double *unused, double *out_2491100639426053800) {
  h_12(state, unused, out_2491100639426053800);
}
void live_H_12(double *state, double *unused, double *out_5813915626993144087) {
  H_12(state, unused, out_5813915626993144087);
}
void live_h_35(double *state, double *unused, double *out_2573100325490249139) {
  h_35(state, unused, out_2573100325490249139);
}
void live_H_35(double *state, double *unused, double *out_3068352594668130378) {
  H_35(state, unused, out_3068352594668130378);
}
void live_h_32(double *state, double *unused, double *out_4993410783947549182) {
  h_32(state, unused, out_4993410783947549182);
}
void live_H_32(double *state, double *unused, double *out_7409357370401237266) {
  H_32(state, unused, out_7409357370401237266);
}
void live_h_13(double *state, double *unused, double *out_1278842074134747426) {
  h_13(state, unused, out_1278842074134747426);
}
void live_H_13(double *state, double *unused, double *out_3124643293376436718) {
  H_13(state, unused, out_3124643293376436718);
}
void live_h_14(double *state, double *unused, double *out_2206800556775941132) {
  h_14(state, unused, out_2206800556775941132);
}
void live_H_14(double *state, double *unused, double *out_7854561685314036379) {
  H_14(state, unused, out_7854561685314036379);
}
void live_h_33(double *state, double *unused, double *out_5432485072853075672) {
  h_33(state, unused, out_5432485072853075672);
}
void live_H_33(double *state, double *unused, double *out_82204409970727226) {
  H_33(state, unused, out_82204409970727226);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
