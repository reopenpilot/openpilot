#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5926411757070003754) {
   out_5926411757070003754[0] = 0;
   out_5926411757070003754[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5926411757070003754[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5926411757070003754[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5926411757070003754[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5926411757070003754[5] = -sin(in_vec[1]);
   out_5926411757070003754[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5926411757070003754[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5926411757070003754[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5926411757070003754[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5926411757070003754[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5926411757070003754[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5926411757070003754[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5926411757070003754[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5926411757070003754[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5926411757070003754[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5926411757070003754[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5926411757070003754[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8200478830293360681) {
   out_8200478830293360681[0] = delta_x[0] + nom_x[0];
   out_8200478830293360681[1] = delta_x[1] + nom_x[1];
   out_8200478830293360681[2] = delta_x[2] + nom_x[2];
   out_8200478830293360681[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8200478830293360681[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8200478830293360681[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8200478830293360681[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8200478830293360681[7] = delta_x[6] + nom_x[7];
   out_8200478830293360681[8] = delta_x[7] + nom_x[8];
   out_8200478830293360681[9] = delta_x[8] + nom_x[9];
   out_8200478830293360681[10] = delta_x[9] + nom_x[10];
   out_8200478830293360681[11] = delta_x[10] + nom_x[11];
   out_8200478830293360681[12] = delta_x[11] + nom_x[12];
   out_8200478830293360681[13] = delta_x[12] + nom_x[13];
   out_8200478830293360681[14] = delta_x[13] + nom_x[14];
   out_8200478830293360681[15] = delta_x[14] + nom_x[15];
   out_8200478830293360681[16] = delta_x[15] + nom_x[16];
   out_8200478830293360681[17] = delta_x[16] + nom_x[17];
   out_8200478830293360681[18] = delta_x[17] + nom_x[18];
   out_8200478830293360681[19] = delta_x[18] + nom_x[19];
   out_8200478830293360681[20] = delta_x[19] + nom_x[20];
   out_8200478830293360681[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_115030611883736755) {
   out_115030611883736755[0] = -nom_x[0] + true_x[0];
   out_115030611883736755[1] = -nom_x[1] + true_x[1];
   out_115030611883736755[2] = -nom_x[2] + true_x[2];
   out_115030611883736755[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_115030611883736755[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_115030611883736755[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_115030611883736755[6] = -nom_x[7] + true_x[7];
   out_115030611883736755[7] = -nom_x[8] + true_x[8];
   out_115030611883736755[8] = -nom_x[9] + true_x[9];
   out_115030611883736755[9] = -nom_x[10] + true_x[10];
   out_115030611883736755[10] = -nom_x[11] + true_x[11];
   out_115030611883736755[11] = -nom_x[12] + true_x[12];
   out_115030611883736755[12] = -nom_x[13] + true_x[13];
   out_115030611883736755[13] = -nom_x[14] + true_x[14];
   out_115030611883736755[14] = -nom_x[15] + true_x[15];
   out_115030611883736755[15] = -nom_x[16] + true_x[16];
   out_115030611883736755[16] = -nom_x[17] + true_x[17];
   out_115030611883736755[17] = -nom_x[18] + true_x[18];
   out_115030611883736755[18] = -nom_x[19] + true_x[19];
   out_115030611883736755[19] = -nom_x[20] + true_x[20];
   out_115030611883736755[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1574932204090373986) {
   out_1574932204090373986[0] = 1.0;
   out_1574932204090373986[1] = 0;
   out_1574932204090373986[2] = 0;
   out_1574932204090373986[3] = 0;
   out_1574932204090373986[4] = 0;
   out_1574932204090373986[5] = 0;
   out_1574932204090373986[6] = 0;
   out_1574932204090373986[7] = 0;
   out_1574932204090373986[8] = 0;
   out_1574932204090373986[9] = 0;
   out_1574932204090373986[10] = 0;
   out_1574932204090373986[11] = 0;
   out_1574932204090373986[12] = 0;
   out_1574932204090373986[13] = 0;
   out_1574932204090373986[14] = 0;
   out_1574932204090373986[15] = 0;
   out_1574932204090373986[16] = 0;
   out_1574932204090373986[17] = 0;
   out_1574932204090373986[18] = 0;
   out_1574932204090373986[19] = 0;
   out_1574932204090373986[20] = 0;
   out_1574932204090373986[21] = 0;
   out_1574932204090373986[22] = 1.0;
   out_1574932204090373986[23] = 0;
   out_1574932204090373986[24] = 0;
   out_1574932204090373986[25] = 0;
   out_1574932204090373986[26] = 0;
   out_1574932204090373986[27] = 0;
   out_1574932204090373986[28] = 0;
   out_1574932204090373986[29] = 0;
   out_1574932204090373986[30] = 0;
   out_1574932204090373986[31] = 0;
   out_1574932204090373986[32] = 0;
   out_1574932204090373986[33] = 0;
   out_1574932204090373986[34] = 0;
   out_1574932204090373986[35] = 0;
   out_1574932204090373986[36] = 0;
   out_1574932204090373986[37] = 0;
   out_1574932204090373986[38] = 0;
   out_1574932204090373986[39] = 0;
   out_1574932204090373986[40] = 0;
   out_1574932204090373986[41] = 0;
   out_1574932204090373986[42] = 0;
   out_1574932204090373986[43] = 0;
   out_1574932204090373986[44] = 1.0;
   out_1574932204090373986[45] = 0;
   out_1574932204090373986[46] = 0;
   out_1574932204090373986[47] = 0;
   out_1574932204090373986[48] = 0;
   out_1574932204090373986[49] = 0;
   out_1574932204090373986[50] = 0;
   out_1574932204090373986[51] = 0;
   out_1574932204090373986[52] = 0;
   out_1574932204090373986[53] = 0;
   out_1574932204090373986[54] = 0;
   out_1574932204090373986[55] = 0;
   out_1574932204090373986[56] = 0;
   out_1574932204090373986[57] = 0;
   out_1574932204090373986[58] = 0;
   out_1574932204090373986[59] = 0;
   out_1574932204090373986[60] = 0;
   out_1574932204090373986[61] = 0;
   out_1574932204090373986[62] = 0;
   out_1574932204090373986[63] = 0;
   out_1574932204090373986[64] = 0;
   out_1574932204090373986[65] = 0;
   out_1574932204090373986[66] = -0.5*state[4];
   out_1574932204090373986[67] = -0.5*state[5];
   out_1574932204090373986[68] = -0.5*state[6];
   out_1574932204090373986[69] = 0;
   out_1574932204090373986[70] = 0;
   out_1574932204090373986[71] = 0;
   out_1574932204090373986[72] = 0;
   out_1574932204090373986[73] = 0;
   out_1574932204090373986[74] = 0;
   out_1574932204090373986[75] = 0;
   out_1574932204090373986[76] = 0;
   out_1574932204090373986[77] = 0;
   out_1574932204090373986[78] = 0;
   out_1574932204090373986[79] = 0;
   out_1574932204090373986[80] = 0;
   out_1574932204090373986[81] = 0;
   out_1574932204090373986[82] = 0;
   out_1574932204090373986[83] = 0;
   out_1574932204090373986[84] = 0;
   out_1574932204090373986[85] = 0;
   out_1574932204090373986[86] = 0;
   out_1574932204090373986[87] = 0.5*state[3];
   out_1574932204090373986[88] = 0.5*state[6];
   out_1574932204090373986[89] = -0.5*state[5];
   out_1574932204090373986[90] = 0;
   out_1574932204090373986[91] = 0;
   out_1574932204090373986[92] = 0;
   out_1574932204090373986[93] = 0;
   out_1574932204090373986[94] = 0;
   out_1574932204090373986[95] = 0;
   out_1574932204090373986[96] = 0;
   out_1574932204090373986[97] = 0;
   out_1574932204090373986[98] = 0;
   out_1574932204090373986[99] = 0;
   out_1574932204090373986[100] = 0;
   out_1574932204090373986[101] = 0;
   out_1574932204090373986[102] = 0;
   out_1574932204090373986[103] = 0;
   out_1574932204090373986[104] = 0;
   out_1574932204090373986[105] = 0;
   out_1574932204090373986[106] = 0;
   out_1574932204090373986[107] = 0;
   out_1574932204090373986[108] = -0.5*state[6];
   out_1574932204090373986[109] = 0.5*state[3];
   out_1574932204090373986[110] = 0.5*state[4];
   out_1574932204090373986[111] = 0;
   out_1574932204090373986[112] = 0;
   out_1574932204090373986[113] = 0;
   out_1574932204090373986[114] = 0;
   out_1574932204090373986[115] = 0;
   out_1574932204090373986[116] = 0;
   out_1574932204090373986[117] = 0;
   out_1574932204090373986[118] = 0;
   out_1574932204090373986[119] = 0;
   out_1574932204090373986[120] = 0;
   out_1574932204090373986[121] = 0;
   out_1574932204090373986[122] = 0;
   out_1574932204090373986[123] = 0;
   out_1574932204090373986[124] = 0;
   out_1574932204090373986[125] = 0;
   out_1574932204090373986[126] = 0;
   out_1574932204090373986[127] = 0;
   out_1574932204090373986[128] = 0;
   out_1574932204090373986[129] = 0.5*state[5];
   out_1574932204090373986[130] = -0.5*state[4];
   out_1574932204090373986[131] = 0.5*state[3];
   out_1574932204090373986[132] = 0;
   out_1574932204090373986[133] = 0;
   out_1574932204090373986[134] = 0;
   out_1574932204090373986[135] = 0;
   out_1574932204090373986[136] = 0;
   out_1574932204090373986[137] = 0;
   out_1574932204090373986[138] = 0;
   out_1574932204090373986[139] = 0;
   out_1574932204090373986[140] = 0;
   out_1574932204090373986[141] = 0;
   out_1574932204090373986[142] = 0;
   out_1574932204090373986[143] = 0;
   out_1574932204090373986[144] = 0;
   out_1574932204090373986[145] = 0;
   out_1574932204090373986[146] = 0;
   out_1574932204090373986[147] = 0;
   out_1574932204090373986[148] = 0;
   out_1574932204090373986[149] = 0;
   out_1574932204090373986[150] = 0;
   out_1574932204090373986[151] = 0;
   out_1574932204090373986[152] = 0;
   out_1574932204090373986[153] = 1.0;
   out_1574932204090373986[154] = 0;
   out_1574932204090373986[155] = 0;
   out_1574932204090373986[156] = 0;
   out_1574932204090373986[157] = 0;
   out_1574932204090373986[158] = 0;
   out_1574932204090373986[159] = 0;
   out_1574932204090373986[160] = 0;
   out_1574932204090373986[161] = 0;
   out_1574932204090373986[162] = 0;
   out_1574932204090373986[163] = 0;
   out_1574932204090373986[164] = 0;
   out_1574932204090373986[165] = 0;
   out_1574932204090373986[166] = 0;
   out_1574932204090373986[167] = 0;
   out_1574932204090373986[168] = 0;
   out_1574932204090373986[169] = 0;
   out_1574932204090373986[170] = 0;
   out_1574932204090373986[171] = 0;
   out_1574932204090373986[172] = 0;
   out_1574932204090373986[173] = 0;
   out_1574932204090373986[174] = 0;
   out_1574932204090373986[175] = 1.0;
   out_1574932204090373986[176] = 0;
   out_1574932204090373986[177] = 0;
   out_1574932204090373986[178] = 0;
   out_1574932204090373986[179] = 0;
   out_1574932204090373986[180] = 0;
   out_1574932204090373986[181] = 0;
   out_1574932204090373986[182] = 0;
   out_1574932204090373986[183] = 0;
   out_1574932204090373986[184] = 0;
   out_1574932204090373986[185] = 0;
   out_1574932204090373986[186] = 0;
   out_1574932204090373986[187] = 0;
   out_1574932204090373986[188] = 0;
   out_1574932204090373986[189] = 0;
   out_1574932204090373986[190] = 0;
   out_1574932204090373986[191] = 0;
   out_1574932204090373986[192] = 0;
   out_1574932204090373986[193] = 0;
   out_1574932204090373986[194] = 0;
   out_1574932204090373986[195] = 0;
   out_1574932204090373986[196] = 0;
   out_1574932204090373986[197] = 1.0;
   out_1574932204090373986[198] = 0;
   out_1574932204090373986[199] = 0;
   out_1574932204090373986[200] = 0;
   out_1574932204090373986[201] = 0;
   out_1574932204090373986[202] = 0;
   out_1574932204090373986[203] = 0;
   out_1574932204090373986[204] = 0;
   out_1574932204090373986[205] = 0;
   out_1574932204090373986[206] = 0;
   out_1574932204090373986[207] = 0;
   out_1574932204090373986[208] = 0;
   out_1574932204090373986[209] = 0;
   out_1574932204090373986[210] = 0;
   out_1574932204090373986[211] = 0;
   out_1574932204090373986[212] = 0;
   out_1574932204090373986[213] = 0;
   out_1574932204090373986[214] = 0;
   out_1574932204090373986[215] = 0;
   out_1574932204090373986[216] = 0;
   out_1574932204090373986[217] = 0;
   out_1574932204090373986[218] = 0;
   out_1574932204090373986[219] = 1.0;
   out_1574932204090373986[220] = 0;
   out_1574932204090373986[221] = 0;
   out_1574932204090373986[222] = 0;
   out_1574932204090373986[223] = 0;
   out_1574932204090373986[224] = 0;
   out_1574932204090373986[225] = 0;
   out_1574932204090373986[226] = 0;
   out_1574932204090373986[227] = 0;
   out_1574932204090373986[228] = 0;
   out_1574932204090373986[229] = 0;
   out_1574932204090373986[230] = 0;
   out_1574932204090373986[231] = 0;
   out_1574932204090373986[232] = 0;
   out_1574932204090373986[233] = 0;
   out_1574932204090373986[234] = 0;
   out_1574932204090373986[235] = 0;
   out_1574932204090373986[236] = 0;
   out_1574932204090373986[237] = 0;
   out_1574932204090373986[238] = 0;
   out_1574932204090373986[239] = 0;
   out_1574932204090373986[240] = 0;
   out_1574932204090373986[241] = 1.0;
   out_1574932204090373986[242] = 0;
   out_1574932204090373986[243] = 0;
   out_1574932204090373986[244] = 0;
   out_1574932204090373986[245] = 0;
   out_1574932204090373986[246] = 0;
   out_1574932204090373986[247] = 0;
   out_1574932204090373986[248] = 0;
   out_1574932204090373986[249] = 0;
   out_1574932204090373986[250] = 0;
   out_1574932204090373986[251] = 0;
   out_1574932204090373986[252] = 0;
   out_1574932204090373986[253] = 0;
   out_1574932204090373986[254] = 0;
   out_1574932204090373986[255] = 0;
   out_1574932204090373986[256] = 0;
   out_1574932204090373986[257] = 0;
   out_1574932204090373986[258] = 0;
   out_1574932204090373986[259] = 0;
   out_1574932204090373986[260] = 0;
   out_1574932204090373986[261] = 0;
   out_1574932204090373986[262] = 0;
   out_1574932204090373986[263] = 1.0;
   out_1574932204090373986[264] = 0;
   out_1574932204090373986[265] = 0;
   out_1574932204090373986[266] = 0;
   out_1574932204090373986[267] = 0;
   out_1574932204090373986[268] = 0;
   out_1574932204090373986[269] = 0;
   out_1574932204090373986[270] = 0;
   out_1574932204090373986[271] = 0;
   out_1574932204090373986[272] = 0;
   out_1574932204090373986[273] = 0;
   out_1574932204090373986[274] = 0;
   out_1574932204090373986[275] = 0;
   out_1574932204090373986[276] = 0;
   out_1574932204090373986[277] = 0;
   out_1574932204090373986[278] = 0;
   out_1574932204090373986[279] = 0;
   out_1574932204090373986[280] = 0;
   out_1574932204090373986[281] = 0;
   out_1574932204090373986[282] = 0;
   out_1574932204090373986[283] = 0;
   out_1574932204090373986[284] = 0;
   out_1574932204090373986[285] = 1.0;
   out_1574932204090373986[286] = 0;
   out_1574932204090373986[287] = 0;
   out_1574932204090373986[288] = 0;
   out_1574932204090373986[289] = 0;
   out_1574932204090373986[290] = 0;
   out_1574932204090373986[291] = 0;
   out_1574932204090373986[292] = 0;
   out_1574932204090373986[293] = 0;
   out_1574932204090373986[294] = 0;
   out_1574932204090373986[295] = 0;
   out_1574932204090373986[296] = 0;
   out_1574932204090373986[297] = 0;
   out_1574932204090373986[298] = 0;
   out_1574932204090373986[299] = 0;
   out_1574932204090373986[300] = 0;
   out_1574932204090373986[301] = 0;
   out_1574932204090373986[302] = 0;
   out_1574932204090373986[303] = 0;
   out_1574932204090373986[304] = 0;
   out_1574932204090373986[305] = 0;
   out_1574932204090373986[306] = 0;
   out_1574932204090373986[307] = 1.0;
   out_1574932204090373986[308] = 0;
   out_1574932204090373986[309] = 0;
   out_1574932204090373986[310] = 0;
   out_1574932204090373986[311] = 0;
   out_1574932204090373986[312] = 0;
   out_1574932204090373986[313] = 0;
   out_1574932204090373986[314] = 0;
   out_1574932204090373986[315] = 0;
   out_1574932204090373986[316] = 0;
   out_1574932204090373986[317] = 0;
   out_1574932204090373986[318] = 0;
   out_1574932204090373986[319] = 0;
   out_1574932204090373986[320] = 0;
   out_1574932204090373986[321] = 0;
   out_1574932204090373986[322] = 0;
   out_1574932204090373986[323] = 0;
   out_1574932204090373986[324] = 0;
   out_1574932204090373986[325] = 0;
   out_1574932204090373986[326] = 0;
   out_1574932204090373986[327] = 0;
   out_1574932204090373986[328] = 0;
   out_1574932204090373986[329] = 1.0;
   out_1574932204090373986[330] = 0;
   out_1574932204090373986[331] = 0;
   out_1574932204090373986[332] = 0;
   out_1574932204090373986[333] = 0;
   out_1574932204090373986[334] = 0;
   out_1574932204090373986[335] = 0;
   out_1574932204090373986[336] = 0;
   out_1574932204090373986[337] = 0;
   out_1574932204090373986[338] = 0;
   out_1574932204090373986[339] = 0;
   out_1574932204090373986[340] = 0;
   out_1574932204090373986[341] = 0;
   out_1574932204090373986[342] = 0;
   out_1574932204090373986[343] = 0;
   out_1574932204090373986[344] = 0;
   out_1574932204090373986[345] = 0;
   out_1574932204090373986[346] = 0;
   out_1574932204090373986[347] = 0;
   out_1574932204090373986[348] = 0;
   out_1574932204090373986[349] = 0;
   out_1574932204090373986[350] = 0;
   out_1574932204090373986[351] = 1.0;
   out_1574932204090373986[352] = 0;
   out_1574932204090373986[353] = 0;
   out_1574932204090373986[354] = 0;
   out_1574932204090373986[355] = 0;
   out_1574932204090373986[356] = 0;
   out_1574932204090373986[357] = 0;
   out_1574932204090373986[358] = 0;
   out_1574932204090373986[359] = 0;
   out_1574932204090373986[360] = 0;
   out_1574932204090373986[361] = 0;
   out_1574932204090373986[362] = 0;
   out_1574932204090373986[363] = 0;
   out_1574932204090373986[364] = 0;
   out_1574932204090373986[365] = 0;
   out_1574932204090373986[366] = 0;
   out_1574932204090373986[367] = 0;
   out_1574932204090373986[368] = 0;
   out_1574932204090373986[369] = 0;
   out_1574932204090373986[370] = 0;
   out_1574932204090373986[371] = 0;
   out_1574932204090373986[372] = 0;
   out_1574932204090373986[373] = 1.0;
   out_1574932204090373986[374] = 0;
   out_1574932204090373986[375] = 0;
   out_1574932204090373986[376] = 0;
   out_1574932204090373986[377] = 0;
   out_1574932204090373986[378] = 0;
   out_1574932204090373986[379] = 0;
   out_1574932204090373986[380] = 0;
   out_1574932204090373986[381] = 0;
   out_1574932204090373986[382] = 0;
   out_1574932204090373986[383] = 0;
   out_1574932204090373986[384] = 0;
   out_1574932204090373986[385] = 0;
   out_1574932204090373986[386] = 0;
   out_1574932204090373986[387] = 0;
   out_1574932204090373986[388] = 0;
   out_1574932204090373986[389] = 0;
   out_1574932204090373986[390] = 0;
   out_1574932204090373986[391] = 0;
   out_1574932204090373986[392] = 0;
   out_1574932204090373986[393] = 0;
   out_1574932204090373986[394] = 0;
   out_1574932204090373986[395] = 1.0;
   out_1574932204090373986[396] = 0;
   out_1574932204090373986[397] = 0;
   out_1574932204090373986[398] = 0;
   out_1574932204090373986[399] = 0;
   out_1574932204090373986[400] = 0;
   out_1574932204090373986[401] = 0;
   out_1574932204090373986[402] = 0;
   out_1574932204090373986[403] = 0;
   out_1574932204090373986[404] = 0;
   out_1574932204090373986[405] = 0;
   out_1574932204090373986[406] = 0;
   out_1574932204090373986[407] = 0;
   out_1574932204090373986[408] = 0;
   out_1574932204090373986[409] = 0;
   out_1574932204090373986[410] = 0;
   out_1574932204090373986[411] = 0;
   out_1574932204090373986[412] = 0;
   out_1574932204090373986[413] = 0;
   out_1574932204090373986[414] = 0;
   out_1574932204090373986[415] = 0;
   out_1574932204090373986[416] = 0;
   out_1574932204090373986[417] = 1.0;
   out_1574932204090373986[418] = 0;
   out_1574932204090373986[419] = 0;
   out_1574932204090373986[420] = 0;
   out_1574932204090373986[421] = 0;
   out_1574932204090373986[422] = 0;
   out_1574932204090373986[423] = 0;
   out_1574932204090373986[424] = 0;
   out_1574932204090373986[425] = 0;
   out_1574932204090373986[426] = 0;
   out_1574932204090373986[427] = 0;
   out_1574932204090373986[428] = 0;
   out_1574932204090373986[429] = 0;
   out_1574932204090373986[430] = 0;
   out_1574932204090373986[431] = 0;
   out_1574932204090373986[432] = 0;
   out_1574932204090373986[433] = 0;
   out_1574932204090373986[434] = 0;
   out_1574932204090373986[435] = 0;
   out_1574932204090373986[436] = 0;
   out_1574932204090373986[437] = 0;
   out_1574932204090373986[438] = 0;
   out_1574932204090373986[439] = 1.0;
   out_1574932204090373986[440] = 0;
   out_1574932204090373986[441] = 0;
   out_1574932204090373986[442] = 0;
   out_1574932204090373986[443] = 0;
   out_1574932204090373986[444] = 0;
   out_1574932204090373986[445] = 0;
   out_1574932204090373986[446] = 0;
   out_1574932204090373986[447] = 0;
   out_1574932204090373986[448] = 0;
   out_1574932204090373986[449] = 0;
   out_1574932204090373986[450] = 0;
   out_1574932204090373986[451] = 0;
   out_1574932204090373986[452] = 0;
   out_1574932204090373986[453] = 0;
   out_1574932204090373986[454] = 0;
   out_1574932204090373986[455] = 0;
   out_1574932204090373986[456] = 0;
   out_1574932204090373986[457] = 0;
   out_1574932204090373986[458] = 0;
   out_1574932204090373986[459] = 0;
   out_1574932204090373986[460] = 0;
   out_1574932204090373986[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8224232298688865662) {
   out_8224232298688865662[0] = dt*state[7] + state[0];
   out_8224232298688865662[1] = dt*state[8] + state[1];
   out_8224232298688865662[2] = dt*state[9] + state[2];
   out_8224232298688865662[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8224232298688865662[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8224232298688865662[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8224232298688865662[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8224232298688865662[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8224232298688865662[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8224232298688865662[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8224232298688865662[10] = state[10];
   out_8224232298688865662[11] = state[11];
   out_8224232298688865662[12] = state[12];
   out_8224232298688865662[13] = state[13];
   out_8224232298688865662[14] = state[14];
   out_8224232298688865662[15] = state[15];
   out_8224232298688865662[16] = state[16];
   out_8224232298688865662[17] = state[17];
   out_8224232298688865662[18] = state[18];
   out_8224232298688865662[19] = state[19];
   out_8224232298688865662[20] = state[20];
   out_8224232298688865662[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3315806514536798291) {
   out_3315806514536798291[0] = 1;
   out_3315806514536798291[1] = 0;
   out_3315806514536798291[2] = 0;
   out_3315806514536798291[3] = 0;
   out_3315806514536798291[4] = 0;
   out_3315806514536798291[5] = 0;
   out_3315806514536798291[6] = dt;
   out_3315806514536798291[7] = 0;
   out_3315806514536798291[8] = 0;
   out_3315806514536798291[9] = 0;
   out_3315806514536798291[10] = 0;
   out_3315806514536798291[11] = 0;
   out_3315806514536798291[12] = 0;
   out_3315806514536798291[13] = 0;
   out_3315806514536798291[14] = 0;
   out_3315806514536798291[15] = 0;
   out_3315806514536798291[16] = 0;
   out_3315806514536798291[17] = 0;
   out_3315806514536798291[18] = 0;
   out_3315806514536798291[19] = 0;
   out_3315806514536798291[20] = 0;
   out_3315806514536798291[21] = 0;
   out_3315806514536798291[22] = 1;
   out_3315806514536798291[23] = 0;
   out_3315806514536798291[24] = 0;
   out_3315806514536798291[25] = 0;
   out_3315806514536798291[26] = 0;
   out_3315806514536798291[27] = 0;
   out_3315806514536798291[28] = dt;
   out_3315806514536798291[29] = 0;
   out_3315806514536798291[30] = 0;
   out_3315806514536798291[31] = 0;
   out_3315806514536798291[32] = 0;
   out_3315806514536798291[33] = 0;
   out_3315806514536798291[34] = 0;
   out_3315806514536798291[35] = 0;
   out_3315806514536798291[36] = 0;
   out_3315806514536798291[37] = 0;
   out_3315806514536798291[38] = 0;
   out_3315806514536798291[39] = 0;
   out_3315806514536798291[40] = 0;
   out_3315806514536798291[41] = 0;
   out_3315806514536798291[42] = 0;
   out_3315806514536798291[43] = 0;
   out_3315806514536798291[44] = 1;
   out_3315806514536798291[45] = 0;
   out_3315806514536798291[46] = 0;
   out_3315806514536798291[47] = 0;
   out_3315806514536798291[48] = 0;
   out_3315806514536798291[49] = 0;
   out_3315806514536798291[50] = dt;
   out_3315806514536798291[51] = 0;
   out_3315806514536798291[52] = 0;
   out_3315806514536798291[53] = 0;
   out_3315806514536798291[54] = 0;
   out_3315806514536798291[55] = 0;
   out_3315806514536798291[56] = 0;
   out_3315806514536798291[57] = 0;
   out_3315806514536798291[58] = 0;
   out_3315806514536798291[59] = 0;
   out_3315806514536798291[60] = 0;
   out_3315806514536798291[61] = 0;
   out_3315806514536798291[62] = 0;
   out_3315806514536798291[63] = 0;
   out_3315806514536798291[64] = 0;
   out_3315806514536798291[65] = 0;
   out_3315806514536798291[66] = 1;
   out_3315806514536798291[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3315806514536798291[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3315806514536798291[69] = 0;
   out_3315806514536798291[70] = 0;
   out_3315806514536798291[71] = 0;
   out_3315806514536798291[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3315806514536798291[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3315806514536798291[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3315806514536798291[75] = 0;
   out_3315806514536798291[76] = 0;
   out_3315806514536798291[77] = 0;
   out_3315806514536798291[78] = 0;
   out_3315806514536798291[79] = 0;
   out_3315806514536798291[80] = 0;
   out_3315806514536798291[81] = 0;
   out_3315806514536798291[82] = 0;
   out_3315806514536798291[83] = 0;
   out_3315806514536798291[84] = 0;
   out_3315806514536798291[85] = 0;
   out_3315806514536798291[86] = 0;
   out_3315806514536798291[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3315806514536798291[88] = 1;
   out_3315806514536798291[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3315806514536798291[90] = 0;
   out_3315806514536798291[91] = 0;
   out_3315806514536798291[92] = 0;
   out_3315806514536798291[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3315806514536798291[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3315806514536798291[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3315806514536798291[96] = 0;
   out_3315806514536798291[97] = 0;
   out_3315806514536798291[98] = 0;
   out_3315806514536798291[99] = 0;
   out_3315806514536798291[100] = 0;
   out_3315806514536798291[101] = 0;
   out_3315806514536798291[102] = 0;
   out_3315806514536798291[103] = 0;
   out_3315806514536798291[104] = 0;
   out_3315806514536798291[105] = 0;
   out_3315806514536798291[106] = 0;
   out_3315806514536798291[107] = 0;
   out_3315806514536798291[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3315806514536798291[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3315806514536798291[110] = 1;
   out_3315806514536798291[111] = 0;
   out_3315806514536798291[112] = 0;
   out_3315806514536798291[113] = 0;
   out_3315806514536798291[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3315806514536798291[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3315806514536798291[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3315806514536798291[117] = 0;
   out_3315806514536798291[118] = 0;
   out_3315806514536798291[119] = 0;
   out_3315806514536798291[120] = 0;
   out_3315806514536798291[121] = 0;
   out_3315806514536798291[122] = 0;
   out_3315806514536798291[123] = 0;
   out_3315806514536798291[124] = 0;
   out_3315806514536798291[125] = 0;
   out_3315806514536798291[126] = 0;
   out_3315806514536798291[127] = 0;
   out_3315806514536798291[128] = 0;
   out_3315806514536798291[129] = 0;
   out_3315806514536798291[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3315806514536798291[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3315806514536798291[132] = 1;
   out_3315806514536798291[133] = 0;
   out_3315806514536798291[134] = 0;
   out_3315806514536798291[135] = 0;
   out_3315806514536798291[136] = 0;
   out_3315806514536798291[137] = 0;
   out_3315806514536798291[138] = 0;
   out_3315806514536798291[139] = 0;
   out_3315806514536798291[140] = 0;
   out_3315806514536798291[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3315806514536798291[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3315806514536798291[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3315806514536798291[144] = 0;
   out_3315806514536798291[145] = 0;
   out_3315806514536798291[146] = 0;
   out_3315806514536798291[147] = 0;
   out_3315806514536798291[148] = 0;
   out_3315806514536798291[149] = 0;
   out_3315806514536798291[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3315806514536798291[151] = 0;
   out_3315806514536798291[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3315806514536798291[153] = 0;
   out_3315806514536798291[154] = 1;
   out_3315806514536798291[155] = 0;
   out_3315806514536798291[156] = 0;
   out_3315806514536798291[157] = 0;
   out_3315806514536798291[158] = 0;
   out_3315806514536798291[159] = 0;
   out_3315806514536798291[160] = 0;
   out_3315806514536798291[161] = 0;
   out_3315806514536798291[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3315806514536798291[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3315806514536798291[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3315806514536798291[165] = 0;
   out_3315806514536798291[166] = 0;
   out_3315806514536798291[167] = 0;
   out_3315806514536798291[168] = 0;
   out_3315806514536798291[169] = 0;
   out_3315806514536798291[170] = 0;
   out_3315806514536798291[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3315806514536798291[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3315806514536798291[173] = 0;
   out_3315806514536798291[174] = 0;
   out_3315806514536798291[175] = 0;
   out_3315806514536798291[176] = 1;
   out_3315806514536798291[177] = 0;
   out_3315806514536798291[178] = 0;
   out_3315806514536798291[179] = 0;
   out_3315806514536798291[180] = 0;
   out_3315806514536798291[181] = 0;
   out_3315806514536798291[182] = 0;
   out_3315806514536798291[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3315806514536798291[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3315806514536798291[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3315806514536798291[186] = 0;
   out_3315806514536798291[187] = 0;
   out_3315806514536798291[188] = 0;
   out_3315806514536798291[189] = 0;
   out_3315806514536798291[190] = 0;
   out_3315806514536798291[191] = 0;
   out_3315806514536798291[192] = 0;
   out_3315806514536798291[193] = 0;
   out_3315806514536798291[194] = 0;
   out_3315806514536798291[195] = 0;
   out_3315806514536798291[196] = 0;
   out_3315806514536798291[197] = 0;
   out_3315806514536798291[198] = 1;
   out_3315806514536798291[199] = 0;
   out_3315806514536798291[200] = 0;
   out_3315806514536798291[201] = 0;
   out_3315806514536798291[202] = 0;
   out_3315806514536798291[203] = 0;
   out_3315806514536798291[204] = 0;
   out_3315806514536798291[205] = 0;
   out_3315806514536798291[206] = 0;
   out_3315806514536798291[207] = 0;
   out_3315806514536798291[208] = 0;
   out_3315806514536798291[209] = 0;
   out_3315806514536798291[210] = 0;
   out_3315806514536798291[211] = 0;
   out_3315806514536798291[212] = 0;
   out_3315806514536798291[213] = 0;
   out_3315806514536798291[214] = 0;
   out_3315806514536798291[215] = 0;
   out_3315806514536798291[216] = 0;
   out_3315806514536798291[217] = 0;
   out_3315806514536798291[218] = 0;
   out_3315806514536798291[219] = 0;
   out_3315806514536798291[220] = 1;
   out_3315806514536798291[221] = 0;
   out_3315806514536798291[222] = 0;
   out_3315806514536798291[223] = 0;
   out_3315806514536798291[224] = 0;
   out_3315806514536798291[225] = 0;
   out_3315806514536798291[226] = 0;
   out_3315806514536798291[227] = 0;
   out_3315806514536798291[228] = 0;
   out_3315806514536798291[229] = 0;
   out_3315806514536798291[230] = 0;
   out_3315806514536798291[231] = 0;
   out_3315806514536798291[232] = 0;
   out_3315806514536798291[233] = 0;
   out_3315806514536798291[234] = 0;
   out_3315806514536798291[235] = 0;
   out_3315806514536798291[236] = 0;
   out_3315806514536798291[237] = 0;
   out_3315806514536798291[238] = 0;
   out_3315806514536798291[239] = 0;
   out_3315806514536798291[240] = 0;
   out_3315806514536798291[241] = 0;
   out_3315806514536798291[242] = 1;
   out_3315806514536798291[243] = 0;
   out_3315806514536798291[244] = 0;
   out_3315806514536798291[245] = 0;
   out_3315806514536798291[246] = 0;
   out_3315806514536798291[247] = 0;
   out_3315806514536798291[248] = 0;
   out_3315806514536798291[249] = 0;
   out_3315806514536798291[250] = 0;
   out_3315806514536798291[251] = 0;
   out_3315806514536798291[252] = 0;
   out_3315806514536798291[253] = 0;
   out_3315806514536798291[254] = 0;
   out_3315806514536798291[255] = 0;
   out_3315806514536798291[256] = 0;
   out_3315806514536798291[257] = 0;
   out_3315806514536798291[258] = 0;
   out_3315806514536798291[259] = 0;
   out_3315806514536798291[260] = 0;
   out_3315806514536798291[261] = 0;
   out_3315806514536798291[262] = 0;
   out_3315806514536798291[263] = 0;
   out_3315806514536798291[264] = 1;
   out_3315806514536798291[265] = 0;
   out_3315806514536798291[266] = 0;
   out_3315806514536798291[267] = 0;
   out_3315806514536798291[268] = 0;
   out_3315806514536798291[269] = 0;
   out_3315806514536798291[270] = 0;
   out_3315806514536798291[271] = 0;
   out_3315806514536798291[272] = 0;
   out_3315806514536798291[273] = 0;
   out_3315806514536798291[274] = 0;
   out_3315806514536798291[275] = 0;
   out_3315806514536798291[276] = 0;
   out_3315806514536798291[277] = 0;
   out_3315806514536798291[278] = 0;
   out_3315806514536798291[279] = 0;
   out_3315806514536798291[280] = 0;
   out_3315806514536798291[281] = 0;
   out_3315806514536798291[282] = 0;
   out_3315806514536798291[283] = 0;
   out_3315806514536798291[284] = 0;
   out_3315806514536798291[285] = 0;
   out_3315806514536798291[286] = 1;
   out_3315806514536798291[287] = 0;
   out_3315806514536798291[288] = 0;
   out_3315806514536798291[289] = 0;
   out_3315806514536798291[290] = 0;
   out_3315806514536798291[291] = 0;
   out_3315806514536798291[292] = 0;
   out_3315806514536798291[293] = 0;
   out_3315806514536798291[294] = 0;
   out_3315806514536798291[295] = 0;
   out_3315806514536798291[296] = 0;
   out_3315806514536798291[297] = 0;
   out_3315806514536798291[298] = 0;
   out_3315806514536798291[299] = 0;
   out_3315806514536798291[300] = 0;
   out_3315806514536798291[301] = 0;
   out_3315806514536798291[302] = 0;
   out_3315806514536798291[303] = 0;
   out_3315806514536798291[304] = 0;
   out_3315806514536798291[305] = 0;
   out_3315806514536798291[306] = 0;
   out_3315806514536798291[307] = 0;
   out_3315806514536798291[308] = 1;
   out_3315806514536798291[309] = 0;
   out_3315806514536798291[310] = 0;
   out_3315806514536798291[311] = 0;
   out_3315806514536798291[312] = 0;
   out_3315806514536798291[313] = 0;
   out_3315806514536798291[314] = 0;
   out_3315806514536798291[315] = 0;
   out_3315806514536798291[316] = 0;
   out_3315806514536798291[317] = 0;
   out_3315806514536798291[318] = 0;
   out_3315806514536798291[319] = 0;
   out_3315806514536798291[320] = 0;
   out_3315806514536798291[321] = 0;
   out_3315806514536798291[322] = 0;
   out_3315806514536798291[323] = 0;
   out_3315806514536798291[324] = 0;
   out_3315806514536798291[325] = 0;
   out_3315806514536798291[326] = 0;
   out_3315806514536798291[327] = 0;
   out_3315806514536798291[328] = 0;
   out_3315806514536798291[329] = 0;
   out_3315806514536798291[330] = 1;
   out_3315806514536798291[331] = 0;
   out_3315806514536798291[332] = 0;
   out_3315806514536798291[333] = 0;
   out_3315806514536798291[334] = 0;
   out_3315806514536798291[335] = 0;
   out_3315806514536798291[336] = 0;
   out_3315806514536798291[337] = 0;
   out_3315806514536798291[338] = 0;
   out_3315806514536798291[339] = 0;
   out_3315806514536798291[340] = 0;
   out_3315806514536798291[341] = 0;
   out_3315806514536798291[342] = 0;
   out_3315806514536798291[343] = 0;
   out_3315806514536798291[344] = 0;
   out_3315806514536798291[345] = 0;
   out_3315806514536798291[346] = 0;
   out_3315806514536798291[347] = 0;
   out_3315806514536798291[348] = 0;
   out_3315806514536798291[349] = 0;
   out_3315806514536798291[350] = 0;
   out_3315806514536798291[351] = 0;
   out_3315806514536798291[352] = 1;
   out_3315806514536798291[353] = 0;
   out_3315806514536798291[354] = 0;
   out_3315806514536798291[355] = 0;
   out_3315806514536798291[356] = 0;
   out_3315806514536798291[357] = 0;
   out_3315806514536798291[358] = 0;
   out_3315806514536798291[359] = 0;
   out_3315806514536798291[360] = 0;
   out_3315806514536798291[361] = 0;
   out_3315806514536798291[362] = 0;
   out_3315806514536798291[363] = 0;
   out_3315806514536798291[364] = 0;
   out_3315806514536798291[365] = 0;
   out_3315806514536798291[366] = 0;
   out_3315806514536798291[367] = 0;
   out_3315806514536798291[368] = 0;
   out_3315806514536798291[369] = 0;
   out_3315806514536798291[370] = 0;
   out_3315806514536798291[371] = 0;
   out_3315806514536798291[372] = 0;
   out_3315806514536798291[373] = 0;
   out_3315806514536798291[374] = 1;
   out_3315806514536798291[375] = 0;
   out_3315806514536798291[376] = 0;
   out_3315806514536798291[377] = 0;
   out_3315806514536798291[378] = 0;
   out_3315806514536798291[379] = 0;
   out_3315806514536798291[380] = 0;
   out_3315806514536798291[381] = 0;
   out_3315806514536798291[382] = 0;
   out_3315806514536798291[383] = 0;
   out_3315806514536798291[384] = 0;
   out_3315806514536798291[385] = 0;
   out_3315806514536798291[386] = 0;
   out_3315806514536798291[387] = 0;
   out_3315806514536798291[388] = 0;
   out_3315806514536798291[389] = 0;
   out_3315806514536798291[390] = 0;
   out_3315806514536798291[391] = 0;
   out_3315806514536798291[392] = 0;
   out_3315806514536798291[393] = 0;
   out_3315806514536798291[394] = 0;
   out_3315806514536798291[395] = 0;
   out_3315806514536798291[396] = 1;
   out_3315806514536798291[397] = 0;
   out_3315806514536798291[398] = 0;
   out_3315806514536798291[399] = 0;
   out_3315806514536798291[400] = 0;
   out_3315806514536798291[401] = 0;
   out_3315806514536798291[402] = 0;
   out_3315806514536798291[403] = 0;
   out_3315806514536798291[404] = 0;
   out_3315806514536798291[405] = 0;
   out_3315806514536798291[406] = 0;
   out_3315806514536798291[407] = 0;
   out_3315806514536798291[408] = 0;
   out_3315806514536798291[409] = 0;
   out_3315806514536798291[410] = 0;
   out_3315806514536798291[411] = 0;
   out_3315806514536798291[412] = 0;
   out_3315806514536798291[413] = 0;
   out_3315806514536798291[414] = 0;
   out_3315806514536798291[415] = 0;
   out_3315806514536798291[416] = 0;
   out_3315806514536798291[417] = 0;
   out_3315806514536798291[418] = 1;
   out_3315806514536798291[419] = 0;
   out_3315806514536798291[420] = 0;
   out_3315806514536798291[421] = 0;
   out_3315806514536798291[422] = 0;
   out_3315806514536798291[423] = 0;
   out_3315806514536798291[424] = 0;
   out_3315806514536798291[425] = 0;
   out_3315806514536798291[426] = 0;
   out_3315806514536798291[427] = 0;
   out_3315806514536798291[428] = 0;
   out_3315806514536798291[429] = 0;
   out_3315806514536798291[430] = 0;
   out_3315806514536798291[431] = 0;
   out_3315806514536798291[432] = 0;
   out_3315806514536798291[433] = 0;
   out_3315806514536798291[434] = 0;
   out_3315806514536798291[435] = 0;
   out_3315806514536798291[436] = 0;
   out_3315806514536798291[437] = 0;
   out_3315806514536798291[438] = 0;
   out_3315806514536798291[439] = 0;
   out_3315806514536798291[440] = 1;
}
void h_4(double *state, double *unused, double *out_8337687824099498360) {
   out_8337687824099498360[0] = state[10] + state[13];
   out_8337687824099498360[1] = state[11] + state[14];
   out_8337687824099498360[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_915504622902858283) {
   out_915504622902858283[0] = 0;
   out_915504622902858283[1] = 0;
   out_915504622902858283[2] = 0;
   out_915504622902858283[3] = 0;
   out_915504622902858283[4] = 0;
   out_915504622902858283[5] = 0;
   out_915504622902858283[6] = 0;
   out_915504622902858283[7] = 0;
   out_915504622902858283[8] = 0;
   out_915504622902858283[9] = 0;
   out_915504622902858283[10] = 1;
   out_915504622902858283[11] = 0;
   out_915504622902858283[12] = 0;
   out_915504622902858283[13] = 1;
   out_915504622902858283[14] = 0;
   out_915504622902858283[15] = 0;
   out_915504622902858283[16] = 0;
   out_915504622902858283[17] = 0;
   out_915504622902858283[18] = 0;
   out_915504622902858283[19] = 0;
   out_915504622902858283[20] = 0;
   out_915504622902858283[21] = 0;
   out_915504622902858283[22] = 0;
   out_915504622902858283[23] = 0;
   out_915504622902858283[24] = 0;
   out_915504622902858283[25] = 0;
   out_915504622902858283[26] = 0;
   out_915504622902858283[27] = 0;
   out_915504622902858283[28] = 0;
   out_915504622902858283[29] = 0;
   out_915504622902858283[30] = 0;
   out_915504622902858283[31] = 0;
   out_915504622902858283[32] = 0;
   out_915504622902858283[33] = 1;
   out_915504622902858283[34] = 0;
   out_915504622902858283[35] = 0;
   out_915504622902858283[36] = 1;
   out_915504622902858283[37] = 0;
   out_915504622902858283[38] = 0;
   out_915504622902858283[39] = 0;
   out_915504622902858283[40] = 0;
   out_915504622902858283[41] = 0;
   out_915504622902858283[42] = 0;
   out_915504622902858283[43] = 0;
   out_915504622902858283[44] = 0;
   out_915504622902858283[45] = 0;
   out_915504622902858283[46] = 0;
   out_915504622902858283[47] = 0;
   out_915504622902858283[48] = 0;
   out_915504622902858283[49] = 0;
   out_915504622902858283[50] = 0;
   out_915504622902858283[51] = 0;
   out_915504622902858283[52] = 0;
   out_915504622902858283[53] = 0;
   out_915504622902858283[54] = 0;
   out_915504622902858283[55] = 0;
   out_915504622902858283[56] = 1;
   out_915504622902858283[57] = 0;
   out_915504622902858283[58] = 0;
   out_915504622902858283[59] = 1;
   out_915504622902858283[60] = 0;
   out_915504622902858283[61] = 0;
   out_915504622902858283[62] = 0;
   out_915504622902858283[63] = 0;
   out_915504622902858283[64] = 0;
   out_915504622902858283[65] = 0;
}
void h_9(double *state, double *unused, double *out_2730889307674989300) {
   out_2730889307674989300[0] = state[10];
   out_2730889307674989300[1] = state[11];
   out_2730889307674989300[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8202723558167305753) {
   out_8202723558167305753[0] = 0;
   out_8202723558167305753[1] = 0;
   out_8202723558167305753[2] = 0;
   out_8202723558167305753[3] = 0;
   out_8202723558167305753[4] = 0;
   out_8202723558167305753[5] = 0;
   out_8202723558167305753[6] = 0;
   out_8202723558167305753[7] = 0;
   out_8202723558167305753[8] = 0;
   out_8202723558167305753[9] = 0;
   out_8202723558167305753[10] = 1;
   out_8202723558167305753[11] = 0;
   out_8202723558167305753[12] = 0;
   out_8202723558167305753[13] = 0;
   out_8202723558167305753[14] = 0;
   out_8202723558167305753[15] = 0;
   out_8202723558167305753[16] = 0;
   out_8202723558167305753[17] = 0;
   out_8202723558167305753[18] = 0;
   out_8202723558167305753[19] = 0;
   out_8202723558167305753[20] = 0;
   out_8202723558167305753[21] = 0;
   out_8202723558167305753[22] = 0;
   out_8202723558167305753[23] = 0;
   out_8202723558167305753[24] = 0;
   out_8202723558167305753[25] = 0;
   out_8202723558167305753[26] = 0;
   out_8202723558167305753[27] = 0;
   out_8202723558167305753[28] = 0;
   out_8202723558167305753[29] = 0;
   out_8202723558167305753[30] = 0;
   out_8202723558167305753[31] = 0;
   out_8202723558167305753[32] = 0;
   out_8202723558167305753[33] = 1;
   out_8202723558167305753[34] = 0;
   out_8202723558167305753[35] = 0;
   out_8202723558167305753[36] = 0;
   out_8202723558167305753[37] = 0;
   out_8202723558167305753[38] = 0;
   out_8202723558167305753[39] = 0;
   out_8202723558167305753[40] = 0;
   out_8202723558167305753[41] = 0;
   out_8202723558167305753[42] = 0;
   out_8202723558167305753[43] = 0;
   out_8202723558167305753[44] = 0;
   out_8202723558167305753[45] = 0;
   out_8202723558167305753[46] = 0;
   out_8202723558167305753[47] = 0;
   out_8202723558167305753[48] = 0;
   out_8202723558167305753[49] = 0;
   out_8202723558167305753[50] = 0;
   out_8202723558167305753[51] = 0;
   out_8202723558167305753[52] = 0;
   out_8202723558167305753[53] = 0;
   out_8202723558167305753[54] = 0;
   out_8202723558167305753[55] = 0;
   out_8202723558167305753[56] = 1;
   out_8202723558167305753[57] = 0;
   out_8202723558167305753[58] = 0;
   out_8202723558167305753[59] = 0;
   out_8202723558167305753[60] = 0;
   out_8202723558167305753[61] = 0;
   out_8202723558167305753[62] = 0;
   out_8202723558167305753[63] = 0;
   out_8202723558167305753[64] = 0;
   out_8202723558167305753[65] = 0;
}
void h_10(double *state, double *unused, double *out_5702713831410618583) {
   out_5702713831410618583[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5702713831410618583[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5702713831410618583[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7983668509918348132) {
   out_7983668509918348132[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7983668509918348132[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7983668509918348132[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7983668509918348132[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7983668509918348132[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7983668509918348132[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7983668509918348132[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7983668509918348132[7] = 0;
   out_7983668509918348132[8] = 0;
   out_7983668509918348132[9] = 0;
   out_7983668509918348132[10] = 0;
   out_7983668509918348132[11] = 0;
   out_7983668509918348132[12] = 0;
   out_7983668509918348132[13] = 0;
   out_7983668509918348132[14] = 0;
   out_7983668509918348132[15] = 0;
   out_7983668509918348132[16] = 1;
   out_7983668509918348132[17] = 0;
   out_7983668509918348132[18] = 0;
   out_7983668509918348132[19] = 1;
   out_7983668509918348132[20] = 0;
   out_7983668509918348132[21] = 0;
   out_7983668509918348132[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7983668509918348132[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7983668509918348132[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7983668509918348132[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7983668509918348132[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7983668509918348132[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7983668509918348132[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7983668509918348132[29] = 0;
   out_7983668509918348132[30] = 0;
   out_7983668509918348132[31] = 0;
   out_7983668509918348132[32] = 0;
   out_7983668509918348132[33] = 0;
   out_7983668509918348132[34] = 0;
   out_7983668509918348132[35] = 0;
   out_7983668509918348132[36] = 0;
   out_7983668509918348132[37] = 0;
   out_7983668509918348132[38] = 0;
   out_7983668509918348132[39] = 1;
   out_7983668509918348132[40] = 0;
   out_7983668509918348132[41] = 0;
   out_7983668509918348132[42] = 1;
   out_7983668509918348132[43] = 0;
   out_7983668509918348132[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7983668509918348132[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7983668509918348132[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7983668509918348132[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7983668509918348132[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7983668509918348132[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7983668509918348132[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7983668509918348132[51] = 0;
   out_7983668509918348132[52] = 0;
   out_7983668509918348132[53] = 0;
   out_7983668509918348132[54] = 0;
   out_7983668509918348132[55] = 0;
   out_7983668509918348132[56] = 0;
   out_7983668509918348132[57] = 0;
   out_7983668509918348132[58] = 0;
   out_7983668509918348132[59] = 0;
   out_7983668509918348132[60] = 0;
   out_7983668509918348132[61] = 0;
   out_7983668509918348132[62] = 1;
   out_7983668509918348132[63] = 0;
   out_7983668509918348132[64] = 0;
   out_7983668509918348132[65] = 1;
}
void h_12(double *state, double *unused, double *out_6133723601655789375) {
   out_6133723601655789375[0] = state[0];
   out_6133723601655789375[1] = state[1];
   out_6133723601655789375[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5465753754139874713) {
   out_5465753754139874713[0] = 1;
   out_5465753754139874713[1] = 0;
   out_5465753754139874713[2] = 0;
   out_5465753754139874713[3] = 0;
   out_5465753754139874713[4] = 0;
   out_5465753754139874713[5] = 0;
   out_5465753754139874713[6] = 0;
   out_5465753754139874713[7] = 0;
   out_5465753754139874713[8] = 0;
   out_5465753754139874713[9] = 0;
   out_5465753754139874713[10] = 0;
   out_5465753754139874713[11] = 0;
   out_5465753754139874713[12] = 0;
   out_5465753754139874713[13] = 0;
   out_5465753754139874713[14] = 0;
   out_5465753754139874713[15] = 0;
   out_5465753754139874713[16] = 0;
   out_5465753754139874713[17] = 0;
   out_5465753754139874713[18] = 0;
   out_5465753754139874713[19] = 0;
   out_5465753754139874713[20] = 0;
   out_5465753754139874713[21] = 0;
   out_5465753754139874713[22] = 0;
   out_5465753754139874713[23] = 1;
   out_5465753754139874713[24] = 0;
   out_5465753754139874713[25] = 0;
   out_5465753754139874713[26] = 0;
   out_5465753754139874713[27] = 0;
   out_5465753754139874713[28] = 0;
   out_5465753754139874713[29] = 0;
   out_5465753754139874713[30] = 0;
   out_5465753754139874713[31] = 0;
   out_5465753754139874713[32] = 0;
   out_5465753754139874713[33] = 0;
   out_5465753754139874713[34] = 0;
   out_5465753754139874713[35] = 0;
   out_5465753754139874713[36] = 0;
   out_5465753754139874713[37] = 0;
   out_5465753754139874713[38] = 0;
   out_5465753754139874713[39] = 0;
   out_5465753754139874713[40] = 0;
   out_5465753754139874713[41] = 0;
   out_5465753754139874713[42] = 0;
   out_5465753754139874713[43] = 0;
   out_5465753754139874713[44] = 0;
   out_5465753754139874713[45] = 0;
   out_5465753754139874713[46] = 1;
   out_5465753754139874713[47] = 0;
   out_5465753754139874713[48] = 0;
   out_5465753754139874713[49] = 0;
   out_5465753754139874713[50] = 0;
   out_5465753754139874713[51] = 0;
   out_5465753754139874713[52] = 0;
   out_5465753754139874713[53] = 0;
   out_5465753754139874713[54] = 0;
   out_5465753754139874713[55] = 0;
   out_5465753754139874713[56] = 0;
   out_5465753754139874713[57] = 0;
   out_5465753754139874713[58] = 0;
   out_5465753754139874713[59] = 0;
   out_5465753754139874713[60] = 0;
   out_5465753754139874713[61] = 0;
   out_5465753754139874713[62] = 0;
   out_5465753754139874713[63] = 0;
   out_5465753754139874713[64] = 0;
   out_5465753754139874713[65] = 0;
}
void h_35(double *state, double *unused, double *out_8694864508874578697) {
   out_8694864508874578697[0] = state[7];
   out_8694864508874578697[1] = state[8];
   out_8694864508874578697[2] = state[9];
}
void H_35(double *state, double *unused, double *out_7118548104799229132) {
   out_7118548104799229132[0] = 0;
   out_7118548104799229132[1] = 0;
   out_7118548104799229132[2] = 0;
   out_7118548104799229132[3] = 0;
   out_7118548104799229132[4] = 0;
   out_7118548104799229132[5] = 0;
   out_7118548104799229132[6] = 0;
   out_7118548104799229132[7] = 1;
   out_7118548104799229132[8] = 0;
   out_7118548104799229132[9] = 0;
   out_7118548104799229132[10] = 0;
   out_7118548104799229132[11] = 0;
   out_7118548104799229132[12] = 0;
   out_7118548104799229132[13] = 0;
   out_7118548104799229132[14] = 0;
   out_7118548104799229132[15] = 0;
   out_7118548104799229132[16] = 0;
   out_7118548104799229132[17] = 0;
   out_7118548104799229132[18] = 0;
   out_7118548104799229132[19] = 0;
   out_7118548104799229132[20] = 0;
   out_7118548104799229132[21] = 0;
   out_7118548104799229132[22] = 0;
   out_7118548104799229132[23] = 0;
   out_7118548104799229132[24] = 0;
   out_7118548104799229132[25] = 0;
   out_7118548104799229132[26] = 0;
   out_7118548104799229132[27] = 0;
   out_7118548104799229132[28] = 0;
   out_7118548104799229132[29] = 0;
   out_7118548104799229132[30] = 1;
   out_7118548104799229132[31] = 0;
   out_7118548104799229132[32] = 0;
   out_7118548104799229132[33] = 0;
   out_7118548104799229132[34] = 0;
   out_7118548104799229132[35] = 0;
   out_7118548104799229132[36] = 0;
   out_7118548104799229132[37] = 0;
   out_7118548104799229132[38] = 0;
   out_7118548104799229132[39] = 0;
   out_7118548104799229132[40] = 0;
   out_7118548104799229132[41] = 0;
   out_7118548104799229132[42] = 0;
   out_7118548104799229132[43] = 0;
   out_7118548104799229132[44] = 0;
   out_7118548104799229132[45] = 0;
   out_7118548104799229132[46] = 0;
   out_7118548104799229132[47] = 0;
   out_7118548104799229132[48] = 0;
   out_7118548104799229132[49] = 0;
   out_7118548104799229132[50] = 0;
   out_7118548104799229132[51] = 0;
   out_7118548104799229132[52] = 0;
   out_7118548104799229132[53] = 1;
   out_7118548104799229132[54] = 0;
   out_7118548104799229132[55] = 0;
   out_7118548104799229132[56] = 0;
   out_7118548104799229132[57] = 0;
   out_7118548104799229132[58] = 0;
   out_7118548104799229132[59] = 0;
   out_7118548104799229132[60] = 0;
   out_7118548104799229132[61] = 0;
   out_7118548104799229132[62] = 0;
   out_7118548104799229132[63] = 0;
   out_7118548104799229132[64] = 0;
   out_7118548104799229132[65] = 0;
}
void h_32(double *state, double *unused, double *out_5839623609479823434) {
   out_5839623609479823434[0] = state[3];
   out_5839623609479823434[1] = state[4];
   out_5839623609479823434[2] = state[5];
   out_5839623609479823434[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4413331465216206128) {
   out_4413331465216206128[0] = 0;
   out_4413331465216206128[1] = 0;
   out_4413331465216206128[2] = 0;
   out_4413331465216206128[3] = 1;
   out_4413331465216206128[4] = 0;
   out_4413331465216206128[5] = 0;
   out_4413331465216206128[6] = 0;
   out_4413331465216206128[7] = 0;
   out_4413331465216206128[8] = 0;
   out_4413331465216206128[9] = 0;
   out_4413331465216206128[10] = 0;
   out_4413331465216206128[11] = 0;
   out_4413331465216206128[12] = 0;
   out_4413331465216206128[13] = 0;
   out_4413331465216206128[14] = 0;
   out_4413331465216206128[15] = 0;
   out_4413331465216206128[16] = 0;
   out_4413331465216206128[17] = 0;
   out_4413331465216206128[18] = 0;
   out_4413331465216206128[19] = 0;
   out_4413331465216206128[20] = 0;
   out_4413331465216206128[21] = 0;
   out_4413331465216206128[22] = 0;
   out_4413331465216206128[23] = 0;
   out_4413331465216206128[24] = 0;
   out_4413331465216206128[25] = 0;
   out_4413331465216206128[26] = 1;
   out_4413331465216206128[27] = 0;
   out_4413331465216206128[28] = 0;
   out_4413331465216206128[29] = 0;
   out_4413331465216206128[30] = 0;
   out_4413331465216206128[31] = 0;
   out_4413331465216206128[32] = 0;
   out_4413331465216206128[33] = 0;
   out_4413331465216206128[34] = 0;
   out_4413331465216206128[35] = 0;
   out_4413331465216206128[36] = 0;
   out_4413331465216206128[37] = 0;
   out_4413331465216206128[38] = 0;
   out_4413331465216206128[39] = 0;
   out_4413331465216206128[40] = 0;
   out_4413331465216206128[41] = 0;
   out_4413331465216206128[42] = 0;
   out_4413331465216206128[43] = 0;
   out_4413331465216206128[44] = 0;
   out_4413331465216206128[45] = 0;
   out_4413331465216206128[46] = 0;
   out_4413331465216206128[47] = 0;
   out_4413331465216206128[48] = 0;
   out_4413331465216206128[49] = 1;
   out_4413331465216206128[50] = 0;
   out_4413331465216206128[51] = 0;
   out_4413331465216206128[52] = 0;
   out_4413331465216206128[53] = 0;
   out_4413331465216206128[54] = 0;
   out_4413331465216206128[55] = 0;
   out_4413331465216206128[56] = 0;
   out_4413331465216206128[57] = 0;
   out_4413331465216206128[58] = 0;
   out_4413331465216206128[59] = 0;
   out_4413331465216206128[60] = 0;
   out_4413331465216206128[61] = 0;
   out_4413331465216206128[62] = 0;
   out_4413331465216206128[63] = 0;
   out_4413331465216206128[64] = 0;
   out_4413331465216206128[65] = 0;
   out_4413331465216206128[66] = 0;
   out_4413331465216206128[67] = 0;
   out_4413331465216206128[68] = 0;
   out_4413331465216206128[69] = 0;
   out_4413331465216206128[70] = 0;
   out_4413331465216206128[71] = 0;
   out_4413331465216206128[72] = 1;
   out_4413331465216206128[73] = 0;
   out_4413331465216206128[74] = 0;
   out_4413331465216206128[75] = 0;
   out_4413331465216206128[76] = 0;
   out_4413331465216206128[77] = 0;
   out_4413331465216206128[78] = 0;
   out_4413331465216206128[79] = 0;
   out_4413331465216206128[80] = 0;
   out_4413331465216206128[81] = 0;
   out_4413331465216206128[82] = 0;
   out_4413331465216206128[83] = 0;
   out_4413331465216206128[84] = 0;
   out_4413331465216206128[85] = 0;
   out_4413331465216206128[86] = 0;
   out_4413331465216206128[87] = 0;
}
void h_13(double *state, double *unused, double *out_3039521917475715846) {
   out_3039521917475715846[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3039521917475715846[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3039521917475715846[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2275088719999606469) {
   out_2275088719999606469[0] = 0;
   out_2275088719999606469[1] = 0;
   out_2275088719999606469[2] = 0;
   out_2275088719999606469[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2275088719999606469[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2275088719999606469[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2275088719999606469[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2275088719999606469[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2275088719999606469[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2275088719999606469[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2275088719999606469[10] = 0;
   out_2275088719999606469[11] = 0;
   out_2275088719999606469[12] = 0;
   out_2275088719999606469[13] = 0;
   out_2275088719999606469[14] = 0;
   out_2275088719999606469[15] = 0;
   out_2275088719999606469[16] = 0;
   out_2275088719999606469[17] = 0;
   out_2275088719999606469[18] = 0;
   out_2275088719999606469[19] = 0;
   out_2275088719999606469[20] = 0;
   out_2275088719999606469[21] = 0;
   out_2275088719999606469[22] = 0;
   out_2275088719999606469[23] = 0;
   out_2275088719999606469[24] = 0;
   out_2275088719999606469[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2275088719999606469[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2275088719999606469[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2275088719999606469[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2275088719999606469[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2275088719999606469[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2275088719999606469[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2275088719999606469[32] = 0;
   out_2275088719999606469[33] = 0;
   out_2275088719999606469[34] = 0;
   out_2275088719999606469[35] = 0;
   out_2275088719999606469[36] = 0;
   out_2275088719999606469[37] = 0;
   out_2275088719999606469[38] = 0;
   out_2275088719999606469[39] = 0;
   out_2275088719999606469[40] = 0;
   out_2275088719999606469[41] = 0;
   out_2275088719999606469[42] = 0;
   out_2275088719999606469[43] = 0;
   out_2275088719999606469[44] = 0;
   out_2275088719999606469[45] = 0;
   out_2275088719999606469[46] = 0;
   out_2275088719999606469[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2275088719999606469[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2275088719999606469[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2275088719999606469[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2275088719999606469[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2275088719999606469[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2275088719999606469[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2275088719999606469[54] = 0;
   out_2275088719999606469[55] = 0;
   out_2275088719999606469[56] = 0;
   out_2275088719999606469[57] = 0;
   out_2275088719999606469[58] = 0;
   out_2275088719999606469[59] = 0;
   out_2275088719999606469[60] = 0;
   out_2275088719999606469[61] = 0;
   out_2275088719999606469[62] = 0;
   out_2275088719999606469[63] = 0;
   out_2275088719999606469[64] = 0;
   out_2275088719999606469[65] = 0;
}
void h_14(double *state, double *unused, double *out_2730889307674989300) {
   out_2730889307674989300[0] = state[10];
   out_2730889307674989300[1] = state[11];
   out_2730889307674989300[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8202723558167305753) {
   out_8202723558167305753[0] = 0;
   out_8202723558167305753[1] = 0;
   out_8202723558167305753[2] = 0;
   out_8202723558167305753[3] = 0;
   out_8202723558167305753[4] = 0;
   out_8202723558167305753[5] = 0;
   out_8202723558167305753[6] = 0;
   out_8202723558167305753[7] = 0;
   out_8202723558167305753[8] = 0;
   out_8202723558167305753[9] = 0;
   out_8202723558167305753[10] = 1;
   out_8202723558167305753[11] = 0;
   out_8202723558167305753[12] = 0;
   out_8202723558167305753[13] = 0;
   out_8202723558167305753[14] = 0;
   out_8202723558167305753[15] = 0;
   out_8202723558167305753[16] = 0;
   out_8202723558167305753[17] = 0;
   out_8202723558167305753[18] = 0;
   out_8202723558167305753[19] = 0;
   out_8202723558167305753[20] = 0;
   out_8202723558167305753[21] = 0;
   out_8202723558167305753[22] = 0;
   out_8202723558167305753[23] = 0;
   out_8202723558167305753[24] = 0;
   out_8202723558167305753[25] = 0;
   out_8202723558167305753[26] = 0;
   out_8202723558167305753[27] = 0;
   out_8202723558167305753[28] = 0;
   out_8202723558167305753[29] = 0;
   out_8202723558167305753[30] = 0;
   out_8202723558167305753[31] = 0;
   out_8202723558167305753[32] = 0;
   out_8202723558167305753[33] = 1;
   out_8202723558167305753[34] = 0;
   out_8202723558167305753[35] = 0;
   out_8202723558167305753[36] = 0;
   out_8202723558167305753[37] = 0;
   out_8202723558167305753[38] = 0;
   out_8202723558167305753[39] = 0;
   out_8202723558167305753[40] = 0;
   out_8202723558167305753[41] = 0;
   out_8202723558167305753[42] = 0;
   out_8202723558167305753[43] = 0;
   out_8202723558167305753[44] = 0;
   out_8202723558167305753[45] = 0;
   out_8202723558167305753[46] = 0;
   out_8202723558167305753[47] = 0;
   out_8202723558167305753[48] = 0;
   out_8202723558167305753[49] = 0;
   out_8202723558167305753[50] = 0;
   out_8202723558167305753[51] = 0;
   out_8202723558167305753[52] = 0;
   out_8202723558167305753[53] = 0;
   out_8202723558167305753[54] = 0;
   out_8202723558167305753[55] = 0;
   out_8202723558167305753[56] = 1;
   out_8202723558167305753[57] = 0;
   out_8202723558167305753[58] = 0;
   out_8202723558167305753[59] = 0;
   out_8202723558167305753[60] = 0;
   out_8202723558167305753[61] = 0;
   out_8202723558167305753[62] = 0;
   out_8202723558167305753[63] = 0;
   out_8202723558167305753[64] = 0;
   out_8202723558167305753[65] = 0;
}
void h_33(double *state, double *unused, double *out_6772668295343284094) {
   out_6772668295343284094[0] = state[16];
   out_6772668295343284094[1] = state[17];
   out_6772668295343284094[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3967991100160371528) {
   out_3967991100160371528[0] = 0;
   out_3967991100160371528[1] = 0;
   out_3967991100160371528[2] = 0;
   out_3967991100160371528[3] = 0;
   out_3967991100160371528[4] = 0;
   out_3967991100160371528[5] = 0;
   out_3967991100160371528[6] = 0;
   out_3967991100160371528[7] = 0;
   out_3967991100160371528[8] = 0;
   out_3967991100160371528[9] = 0;
   out_3967991100160371528[10] = 0;
   out_3967991100160371528[11] = 0;
   out_3967991100160371528[12] = 0;
   out_3967991100160371528[13] = 0;
   out_3967991100160371528[14] = 0;
   out_3967991100160371528[15] = 0;
   out_3967991100160371528[16] = 1;
   out_3967991100160371528[17] = 0;
   out_3967991100160371528[18] = 0;
   out_3967991100160371528[19] = 0;
   out_3967991100160371528[20] = 0;
   out_3967991100160371528[21] = 0;
   out_3967991100160371528[22] = 0;
   out_3967991100160371528[23] = 0;
   out_3967991100160371528[24] = 0;
   out_3967991100160371528[25] = 0;
   out_3967991100160371528[26] = 0;
   out_3967991100160371528[27] = 0;
   out_3967991100160371528[28] = 0;
   out_3967991100160371528[29] = 0;
   out_3967991100160371528[30] = 0;
   out_3967991100160371528[31] = 0;
   out_3967991100160371528[32] = 0;
   out_3967991100160371528[33] = 0;
   out_3967991100160371528[34] = 0;
   out_3967991100160371528[35] = 0;
   out_3967991100160371528[36] = 0;
   out_3967991100160371528[37] = 0;
   out_3967991100160371528[38] = 0;
   out_3967991100160371528[39] = 1;
   out_3967991100160371528[40] = 0;
   out_3967991100160371528[41] = 0;
   out_3967991100160371528[42] = 0;
   out_3967991100160371528[43] = 0;
   out_3967991100160371528[44] = 0;
   out_3967991100160371528[45] = 0;
   out_3967991100160371528[46] = 0;
   out_3967991100160371528[47] = 0;
   out_3967991100160371528[48] = 0;
   out_3967991100160371528[49] = 0;
   out_3967991100160371528[50] = 0;
   out_3967991100160371528[51] = 0;
   out_3967991100160371528[52] = 0;
   out_3967991100160371528[53] = 0;
   out_3967991100160371528[54] = 0;
   out_3967991100160371528[55] = 0;
   out_3967991100160371528[56] = 0;
   out_3967991100160371528[57] = 0;
   out_3967991100160371528[58] = 0;
   out_3967991100160371528[59] = 0;
   out_3967991100160371528[60] = 0;
   out_3967991100160371528[61] = 0;
   out_3967991100160371528[62] = 1;
   out_3967991100160371528[63] = 0;
   out_3967991100160371528[64] = 0;
   out_3967991100160371528[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5926411757070003754) {
  H(in_vec, out_5926411757070003754);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8200478830293360681) {
  err_fun(nom_x, delta_x, out_8200478830293360681);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_115030611883736755) {
  inv_err_fun(nom_x, true_x, out_115030611883736755);
}
void live_H_mod_fun(double *state, double *out_1574932204090373986) {
  H_mod_fun(state, out_1574932204090373986);
}
void live_f_fun(double *state, double dt, double *out_8224232298688865662) {
  f_fun(state,  dt, out_8224232298688865662);
}
void live_F_fun(double *state, double dt, double *out_3315806514536798291) {
  F_fun(state,  dt, out_3315806514536798291);
}
void live_h_4(double *state, double *unused, double *out_8337687824099498360) {
  h_4(state, unused, out_8337687824099498360);
}
void live_H_4(double *state, double *unused, double *out_915504622902858283) {
  H_4(state, unused, out_915504622902858283);
}
void live_h_9(double *state, double *unused, double *out_2730889307674989300) {
  h_9(state, unused, out_2730889307674989300);
}
void live_H_9(double *state, double *unused, double *out_8202723558167305753) {
  H_9(state, unused, out_8202723558167305753);
}
void live_h_10(double *state, double *unused, double *out_5702713831410618583) {
  h_10(state, unused, out_5702713831410618583);
}
void live_H_10(double *state, double *unused, double *out_7983668509918348132) {
  H_10(state, unused, out_7983668509918348132);
}
void live_h_12(double *state, double *unused, double *out_6133723601655789375) {
  h_12(state, unused, out_6133723601655789375);
}
void live_H_12(double *state, double *unused, double *out_5465753754139874713) {
  H_12(state, unused, out_5465753754139874713);
}
void live_h_35(double *state, double *unused, double *out_8694864508874578697) {
  h_35(state, unused, out_8694864508874578697);
}
void live_H_35(double *state, double *unused, double *out_7118548104799229132) {
  H_35(state, unused, out_7118548104799229132);
}
void live_h_32(double *state, double *unused, double *out_5839623609479823434) {
  h_32(state, unused, out_5839623609479823434);
}
void live_H_32(double *state, double *unused, double *out_4413331465216206128) {
  H_32(state, unused, out_4413331465216206128);
}
void live_h_13(double *state, double *unused, double *out_3039521917475715846) {
  h_13(state, unused, out_3039521917475715846);
}
void live_H_13(double *state, double *unused, double *out_2275088719999606469) {
  H_13(state, unused, out_2275088719999606469);
}
void live_h_14(double *state, double *unused, double *out_2730889307674989300) {
  h_14(state, unused, out_2730889307674989300);
}
void live_H_14(double *state, double *unused, double *out_8202723558167305753) {
  H_14(state, unused, out_8202723558167305753);
}
void live_h_33(double *state, double *unused, double *out_6772668295343284094) {
  h_33(state, unused, out_6772668295343284094);
}
void live_H_33(double *state, double *unused, double *out_3967991100160371528) {
  H_33(state, unused, out_3967991100160371528);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
