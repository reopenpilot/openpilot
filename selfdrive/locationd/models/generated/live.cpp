#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8966725824989906990) {
   out_8966725824989906990[0] = 0;
   out_8966725824989906990[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8966725824989906990[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8966725824989906990[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8966725824989906990[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8966725824989906990[5] = -sin(in_vec[1]);
   out_8966725824989906990[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8966725824989906990[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8966725824989906990[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8966725824989906990[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8966725824989906990[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8966725824989906990[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8966725824989906990[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8966725824989906990[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8966725824989906990[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8966725824989906990[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8966725824989906990[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8966725824989906990[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7052001764481871532) {
   out_7052001764481871532[0] = delta_x[0] + nom_x[0];
   out_7052001764481871532[1] = delta_x[1] + nom_x[1];
   out_7052001764481871532[2] = delta_x[2] + nom_x[2];
   out_7052001764481871532[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7052001764481871532[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7052001764481871532[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7052001764481871532[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7052001764481871532[7] = delta_x[6] + nom_x[7];
   out_7052001764481871532[8] = delta_x[7] + nom_x[8];
   out_7052001764481871532[9] = delta_x[8] + nom_x[9];
   out_7052001764481871532[10] = delta_x[9] + nom_x[10];
   out_7052001764481871532[11] = delta_x[10] + nom_x[11];
   out_7052001764481871532[12] = delta_x[11] + nom_x[12];
   out_7052001764481871532[13] = delta_x[12] + nom_x[13];
   out_7052001764481871532[14] = delta_x[13] + nom_x[14];
   out_7052001764481871532[15] = delta_x[14] + nom_x[15];
   out_7052001764481871532[16] = delta_x[15] + nom_x[16];
   out_7052001764481871532[17] = delta_x[16] + nom_x[17];
   out_7052001764481871532[18] = delta_x[17] + nom_x[18];
   out_7052001764481871532[19] = delta_x[18] + nom_x[19];
   out_7052001764481871532[20] = delta_x[19] + nom_x[20];
   out_7052001764481871532[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1158336787041246033) {
   out_1158336787041246033[0] = -nom_x[0] + true_x[0];
   out_1158336787041246033[1] = -nom_x[1] + true_x[1];
   out_1158336787041246033[2] = -nom_x[2] + true_x[2];
   out_1158336787041246033[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1158336787041246033[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1158336787041246033[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1158336787041246033[6] = -nom_x[7] + true_x[7];
   out_1158336787041246033[7] = -nom_x[8] + true_x[8];
   out_1158336787041246033[8] = -nom_x[9] + true_x[9];
   out_1158336787041246033[9] = -nom_x[10] + true_x[10];
   out_1158336787041246033[10] = -nom_x[11] + true_x[11];
   out_1158336787041246033[11] = -nom_x[12] + true_x[12];
   out_1158336787041246033[12] = -nom_x[13] + true_x[13];
   out_1158336787041246033[13] = -nom_x[14] + true_x[14];
   out_1158336787041246033[14] = -nom_x[15] + true_x[15];
   out_1158336787041246033[15] = -nom_x[16] + true_x[16];
   out_1158336787041246033[16] = -nom_x[17] + true_x[17];
   out_1158336787041246033[17] = -nom_x[18] + true_x[18];
   out_1158336787041246033[18] = -nom_x[19] + true_x[19];
   out_1158336787041246033[19] = -nom_x[20] + true_x[20];
   out_1158336787041246033[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6507532050145030666) {
   out_6507532050145030666[0] = 1.0;
   out_6507532050145030666[1] = 0;
   out_6507532050145030666[2] = 0;
   out_6507532050145030666[3] = 0;
   out_6507532050145030666[4] = 0;
   out_6507532050145030666[5] = 0;
   out_6507532050145030666[6] = 0;
   out_6507532050145030666[7] = 0;
   out_6507532050145030666[8] = 0;
   out_6507532050145030666[9] = 0;
   out_6507532050145030666[10] = 0;
   out_6507532050145030666[11] = 0;
   out_6507532050145030666[12] = 0;
   out_6507532050145030666[13] = 0;
   out_6507532050145030666[14] = 0;
   out_6507532050145030666[15] = 0;
   out_6507532050145030666[16] = 0;
   out_6507532050145030666[17] = 0;
   out_6507532050145030666[18] = 0;
   out_6507532050145030666[19] = 0;
   out_6507532050145030666[20] = 0;
   out_6507532050145030666[21] = 0;
   out_6507532050145030666[22] = 1.0;
   out_6507532050145030666[23] = 0;
   out_6507532050145030666[24] = 0;
   out_6507532050145030666[25] = 0;
   out_6507532050145030666[26] = 0;
   out_6507532050145030666[27] = 0;
   out_6507532050145030666[28] = 0;
   out_6507532050145030666[29] = 0;
   out_6507532050145030666[30] = 0;
   out_6507532050145030666[31] = 0;
   out_6507532050145030666[32] = 0;
   out_6507532050145030666[33] = 0;
   out_6507532050145030666[34] = 0;
   out_6507532050145030666[35] = 0;
   out_6507532050145030666[36] = 0;
   out_6507532050145030666[37] = 0;
   out_6507532050145030666[38] = 0;
   out_6507532050145030666[39] = 0;
   out_6507532050145030666[40] = 0;
   out_6507532050145030666[41] = 0;
   out_6507532050145030666[42] = 0;
   out_6507532050145030666[43] = 0;
   out_6507532050145030666[44] = 1.0;
   out_6507532050145030666[45] = 0;
   out_6507532050145030666[46] = 0;
   out_6507532050145030666[47] = 0;
   out_6507532050145030666[48] = 0;
   out_6507532050145030666[49] = 0;
   out_6507532050145030666[50] = 0;
   out_6507532050145030666[51] = 0;
   out_6507532050145030666[52] = 0;
   out_6507532050145030666[53] = 0;
   out_6507532050145030666[54] = 0;
   out_6507532050145030666[55] = 0;
   out_6507532050145030666[56] = 0;
   out_6507532050145030666[57] = 0;
   out_6507532050145030666[58] = 0;
   out_6507532050145030666[59] = 0;
   out_6507532050145030666[60] = 0;
   out_6507532050145030666[61] = 0;
   out_6507532050145030666[62] = 0;
   out_6507532050145030666[63] = 0;
   out_6507532050145030666[64] = 0;
   out_6507532050145030666[65] = 0;
   out_6507532050145030666[66] = -0.5*state[4];
   out_6507532050145030666[67] = -0.5*state[5];
   out_6507532050145030666[68] = -0.5*state[6];
   out_6507532050145030666[69] = 0;
   out_6507532050145030666[70] = 0;
   out_6507532050145030666[71] = 0;
   out_6507532050145030666[72] = 0;
   out_6507532050145030666[73] = 0;
   out_6507532050145030666[74] = 0;
   out_6507532050145030666[75] = 0;
   out_6507532050145030666[76] = 0;
   out_6507532050145030666[77] = 0;
   out_6507532050145030666[78] = 0;
   out_6507532050145030666[79] = 0;
   out_6507532050145030666[80] = 0;
   out_6507532050145030666[81] = 0;
   out_6507532050145030666[82] = 0;
   out_6507532050145030666[83] = 0;
   out_6507532050145030666[84] = 0;
   out_6507532050145030666[85] = 0;
   out_6507532050145030666[86] = 0;
   out_6507532050145030666[87] = 0.5*state[3];
   out_6507532050145030666[88] = 0.5*state[6];
   out_6507532050145030666[89] = -0.5*state[5];
   out_6507532050145030666[90] = 0;
   out_6507532050145030666[91] = 0;
   out_6507532050145030666[92] = 0;
   out_6507532050145030666[93] = 0;
   out_6507532050145030666[94] = 0;
   out_6507532050145030666[95] = 0;
   out_6507532050145030666[96] = 0;
   out_6507532050145030666[97] = 0;
   out_6507532050145030666[98] = 0;
   out_6507532050145030666[99] = 0;
   out_6507532050145030666[100] = 0;
   out_6507532050145030666[101] = 0;
   out_6507532050145030666[102] = 0;
   out_6507532050145030666[103] = 0;
   out_6507532050145030666[104] = 0;
   out_6507532050145030666[105] = 0;
   out_6507532050145030666[106] = 0;
   out_6507532050145030666[107] = 0;
   out_6507532050145030666[108] = -0.5*state[6];
   out_6507532050145030666[109] = 0.5*state[3];
   out_6507532050145030666[110] = 0.5*state[4];
   out_6507532050145030666[111] = 0;
   out_6507532050145030666[112] = 0;
   out_6507532050145030666[113] = 0;
   out_6507532050145030666[114] = 0;
   out_6507532050145030666[115] = 0;
   out_6507532050145030666[116] = 0;
   out_6507532050145030666[117] = 0;
   out_6507532050145030666[118] = 0;
   out_6507532050145030666[119] = 0;
   out_6507532050145030666[120] = 0;
   out_6507532050145030666[121] = 0;
   out_6507532050145030666[122] = 0;
   out_6507532050145030666[123] = 0;
   out_6507532050145030666[124] = 0;
   out_6507532050145030666[125] = 0;
   out_6507532050145030666[126] = 0;
   out_6507532050145030666[127] = 0;
   out_6507532050145030666[128] = 0;
   out_6507532050145030666[129] = 0.5*state[5];
   out_6507532050145030666[130] = -0.5*state[4];
   out_6507532050145030666[131] = 0.5*state[3];
   out_6507532050145030666[132] = 0;
   out_6507532050145030666[133] = 0;
   out_6507532050145030666[134] = 0;
   out_6507532050145030666[135] = 0;
   out_6507532050145030666[136] = 0;
   out_6507532050145030666[137] = 0;
   out_6507532050145030666[138] = 0;
   out_6507532050145030666[139] = 0;
   out_6507532050145030666[140] = 0;
   out_6507532050145030666[141] = 0;
   out_6507532050145030666[142] = 0;
   out_6507532050145030666[143] = 0;
   out_6507532050145030666[144] = 0;
   out_6507532050145030666[145] = 0;
   out_6507532050145030666[146] = 0;
   out_6507532050145030666[147] = 0;
   out_6507532050145030666[148] = 0;
   out_6507532050145030666[149] = 0;
   out_6507532050145030666[150] = 0;
   out_6507532050145030666[151] = 0;
   out_6507532050145030666[152] = 0;
   out_6507532050145030666[153] = 1.0;
   out_6507532050145030666[154] = 0;
   out_6507532050145030666[155] = 0;
   out_6507532050145030666[156] = 0;
   out_6507532050145030666[157] = 0;
   out_6507532050145030666[158] = 0;
   out_6507532050145030666[159] = 0;
   out_6507532050145030666[160] = 0;
   out_6507532050145030666[161] = 0;
   out_6507532050145030666[162] = 0;
   out_6507532050145030666[163] = 0;
   out_6507532050145030666[164] = 0;
   out_6507532050145030666[165] = 0;
   out_6507532050145030666[166] = 0;
   out_6507532050145030666[167] = 0;
   out_6507532050145030666[168] = 0;
   out_6507532050145030666[169] = 0;
   out_6507532050145030666[170] = 0;
   out_6507532050145030666[171] = 0;
   out_6507532050145030666[172] = 0;
   out_6507532050145030666[173] = 0;
   out_6507532050145030666[174] = 0;
   out_6507532050145030666[175] = 1.0;
   out_6507532050145030666[176] = 0;
   out_6507532050145030666[177] = 0;
   out_6507532050145030666[178] = 0;
   out_6507532050145030666[179] = 0;
   out_6507532050145030666[180] = 0;
   out_6507532050145030666[181] = 0;
   out_6507532050145030666[182] = 0;
   out_6507532050145030666[183] = 0;
   out_6507532050145030666[184] = 0;
   out_6507532050145030666[185] = 0;
   out_6507532050145030666[186] = 0;
   out_6507532050145030666[187] = 0;
   out_6507532050145030666[188] = 0;
   out_6507532050145030666[189] = 0;
   out_6507532050145030666[190] = 0;
   out_6507532050145030666[191] = 0;
   out_6507532050145030666[192] = 0;
   out_6507532050145030666[193] = 0;
   out_6507532050145030666[194] = 0;
   out_6507532050145030666[195] = 0;
   out_6507532050145030666[196] = 0;
   out_6507532050145030666[197] = 1.0;
   out_6507532050145030666[198] = 0;
   out_6507532050145030666[199] = 0;
   out_6507532050145030666[200] = 0;
   out_6507532050145030666[201] = 0;
   out_6507532050145030666[202] = 0;
   out_6507532050145030666[203] = 0;
   out_6507532050145030666[204] = 0;
   out_6507532050145030666[205] = 0;
   out_6507532050145030666[206] = 0;
   out_6507532050145030666[207] = 0;
   out_6507532050145030666[208] = 0;
   out_6507532050145030666[209] = 0;
   out_6507532050145030666[210] = 0;
   out_6507532050145030666[211] = 0;
   out_6507532050145030666[212] = 0;
   out_6507532050145030666[213] = 0;
   out_6507532050145030666[214] = 0;
   out_6507532050145030666[215] = 0;
   out_6507532050145030666[216] = 0;
   out_6507532050145030666[217] = 0;
   out_6507532050145030666[218] = 0;
   out_6507532050145030666[219] = 1.0;
   out_6507532050145030666[220] = 0;
   out_6507532050145030666[221] = 0;
   out_6507532050145030666[222] = 0;
   out_6507532050145030666[223] = 0;
   out_6507532050145030666[224] = 0;
   out_6507532050145030666[225] = 0;
   out_6507532050145030666[226] = 0;
   out_6507532050145030666[227] = 0;
   out_6507532050145030666[228] = 0;
   out_6507532050145030666[229] = 0;
   out_6507532050145030666[230] = 0;
   out_6507532050145030666[231] = 0;
   out_6507532050145030666[232] = 0;
   out_6507532050145030666[233] = 0;
   out_6507532050145030666[234] = 0;
   out_6507532050145030666[235] = 0;
   out_6507532050145030666[236] = 0;
   out_6507532050145030666[237] = 0;
   out_6507532050145030666[238] = 0;
   out_6507532050145030666[239] = 0;
   out_6507532050145030666[240] = 0;
   out_6507532050145030666[241] = 1.0;
   out_6507532050145030666[242] = 0;
   out_6507532050145030666[243] = 0;
   out_6507532050145030666[244] = 0;
   out_6507532050145030666[245] = 0;
   out_6507532050145030666[246] = 0;
   out_6507532050145030666[247] = 0;
   out_6507532050145030666[248] = 0;
   out_6507532050145030666[249] = 0;
   out_6507532050145030666[250] = 0;
   out_6507532050145030666[251] = 0;
   out_6507532050145030666[252] = 0;
   out_6507532050145030666[253] = 0;
   out_6507532050145030666[254] = 0;
   out_6507532050145030666[255] = 0;
   out_6507532050145030666[256] = 0;
   out_6507532050145030666[257] = 0;
   out_6507532050145030666[258] = 0;
   out_6507532050145030666[259] = 0;
   out_6507532050145030666[260] = 0;
   out_6507532050145030666[261] = 0;
   out_6507532050145030666[262] = 0;
   out_6507532050145030666[263] = 1.0;
   out_6507532050145030666[264] = 0;
   out_6507532050145030666[265] = 0;
   out_6507532050145030666[266] = 0;
   out_6507532050145030666[267] = 0;
   out_6507532050145030666[268] = 0;
   out_6507532050145030666[269] = 0;
   out_6507532050145030666[270] = 0;
   out_6507532050145030666[271] = 0;
   out_6507532050145030666[272] = 0;
   out_6507532050145030666[273] = 0;
   out_6507532050145030666[274] = 0;
   out_6507532050145030666[275] = 0;
   out_6507532050145030666[276] = 0;
   out_6507532050145030666[277] = 0;
   out_6507532050145030666[278] = 0;
   out_6507532050145030666[279] = 0;
   out_6507532050145030666[280] = 0;
   out_6507532050145030666[281] = 0;
   out_6507532050145030666[282] = 0;
   out_6507532050145030666[283] = 0;
   out_6507532050145030666[284] = 0;
   out_6507532050145030666[285] = 1.0;
   out_6507532050145030666[286] = 0;
   out_6507532050145030666[287] = 0;
   out_6507532050145030666[288] = 0;
   out_6507532050145030666[289] = 0;
   out_6507532050145030666[290] = 0;
   out_6507532050145030666[291] = 0;
   out_6507532050145030666[292] = 0;
   out_6507532050145030666[293] = 0;
   out_6507532050145030666[294] = 0;
   out_6507532050145030666[295] = 0;
   out_6507532050145030666[296] = 0;
   out_6507532050145030666[297] = 0;
   out_6507532050145030666[298] = 0;
   out_6507532050145030666[299] = 0;
   out_6507532050145030666[300] = 0;
   out_6507532050145030666[301] = 0;
   out_6507532050145030666[302] = 0;
   out_6507532050145030666[303] = 0;
   out_6507532050145030666[304] = 0;
   out_6507532050145030666[305] = 0;
   out_6507532050145030666[306] = 0;
   out_6507532050145030666[307] = 1.0;
   out_6507532050145030666[308] = 0;
   out_6507532050145030666[309] = 0;
   out_6507532050145030666[310] = 0;
   out_6507532050145030666[311] = 0;
   out_6507532050145030666[312] = 0;
   out_6507532050145030666[313] = 0;
   out_6507532050145030666[314] = 0;
   out_6507532050145030666[315] = 0;
   out_6507532050145030666[316] = 0;
   out_6507532050145030666[317] = 0;
   out_6507532050145030666[318] = 0;
   out_6507532050145030666[319] = 0;
   out_6507532050145030666[320] = 0;
   out_6507532050145030666[321] = 0;
   out_6507532050145030666[322] = 0;
   out_6507532050145030666[323] = 0;
   out_6507532050145030666[324] = 0;
   out_6507532050145030666[325] = 0;
   out_6507532050145030666[326] = 0;
   out_6507532050145030666[327] = 0;
   out_6507532050145030666[328] = 0;
   out_6507532050145030666[329] = 1.0;
   out_6507532050145030666[330] = 0;
   out_6507532050145030666[331] = 0;
   out_6507532050145030666[332] = 0;
   out_6507532050145030666[333] = 0;
   out_6507532050145030666[334] = 0;
   out_6507532050145030666[335] = 0;
   out_6507532050145030666[336] = 0;
   out_6507532050145030666[337] = 0;
   out_6507532050145030666[338] = 0;
   out_6507532050145030666[339] = 0;
   out_6507532050145030666[340] = 0;
   out_6507532050145030666[341] = 0;
   out_6507532050145030666[342] = 0;
   out_6507532050145030666[343] = 0;
   out_6507532050145030666[344] = 0;
   out_6507532050145030666[345] = 0;
   out_6507532050145030666[346] = 0;
   out_6507532050145030666[347] = 0;
   out_6507532050145030666[348] = 0;
   out_6507532050145030666[349] = 0;
   out_6507532050145030666[350] = 0;
   out_6507532050145030666[351] = 1.0;
   out_6507532050145030666[352] = 0;
   out_6507532050145030666[353] = 0;
   out_6507532050145030666[354] = 0;
   out_6507532050145030666[355] = 0;
   out_6507532050145030666[356] = 0;
   out_6507532050145030666[357] = 0;
   out_6507532050145030666[358] = 0;
   out_6507532050145030666[359] = 0;
   out_6507532050145030666[360] = 0;
   out_6507532050145030666[361] = 0;
   out_6507532050145030666[362] = 0;
   out_6507532050145030666[363] = 0;
   out_6507532050145030666[364] = 0;
   out_6507532050145030666[365] = 0;
   out_6507532050145030666[366] = 0;
   out_6507532050145030666[367] = 0;
   out_6507532050145030666[368] = 0;
   out_6507532050145030666[369] = 0;
   out_6507532050145030666[370] = 0;
   out_6507532050145030666[371] = 0;
   out_6507532050145030666[372] = 0;
   out_6507532050145030666[373] = 1.0;
   out_6507532050145030666[374] = 0;
   out_6507532050145030666[375] = 0;
   out_6507532050145030666[376] = 0;
   out_6507532050145030666[377] = 0;
   out_6507532050145030666[378] = 0;
   out_6507532050145030666[379] = 0;
   out_6507532050145030666[380] = 0;
   out_6507532050145030666[381] = 0;
   out_6507532050145030666[382] = 0;
   out_6507532050145030666[383] = 0;
   out_6507532050145030666[384] = 0;
   out_6507532050145030666[385] = 0;
   out_6507532050145030666[386] = 0;
   out_6507532050145030666[387] = 0;
   out_6507532050145030666[388] = 0;
   out_6507532050145030666[389] = 0;
   out_6507532050145030666[390] = 0;
   out_6507532050145030666[391] = 0;
   out_6507532050145030666[392] = 0;
   out_6507532050145030666[393] = 0;
   out_6507532050145030666[394] = 0;
   out_6507532050145030666[395] = 1.0;
   out_6507532050145030666[396] = 0;
   out_6507532050145030666[397] = 0;
   out_6507532050145030666[398] = 0;
   out_6507532050145030666[399] = 0;
   out_6507532050145030666[400] = 0;
   out_6507532050145030666[401] = 0;
   out_6507532050145030666[402] = 0;
   out_6507532050145030666[403] = 0;
   out_6507532050145030666[404] = 0;
   out_6507532050145030666[405] = 0;
   out_6507532050145030666[406] = 0;
   out_6507532050145030666[407] = 0;
   out_6507532050145030666[408] = 0;
   out_6507532050145030666[409] = 0;
   out_6507532050145030666[410] = 0;
   out_6507532050145030666[411] = 0;
   out_6507532050145030666[412] = 0;
   out_6507532050145030666[413] = 0;
   out_6507532050145030666[414] = 0;
   out_6507532050145030666[415] = 0;
   out_6507532050145030666[416] = 0;
   out_6507532050145030666[417] = 1.0;
   out_6507532050145030666[418] = 0;
   out_6507532050145030666[419] = 0;
   out_6507532050145030666[420] = 0;
   out_6507532050145030666[421] = 0;
   out_6507532050145030666[422] = 0;
   out_6507532050145030666[423] = 0;
   out_6507532050145030666[424] = 0;
   out_6507532050145030666[425] = 0;
   out_6507532050145030666[426] = 0;
   out_6507532050145030666[427] = 0;
   out_6507532050145030666[428] = 0;
   out_6507532050145030666[429] = 0;
   out_6507532050145030666[430] = 0;
   out_6507532050145030666[431] = 0;
   out_6507532050145030666[432] = 0;
   out_6507532050145030666[433] = 0;
   out_6507532050145030666[434] = 0;
   out_6507532050145030666[435] = 0;
   out_6507532050145030666[436] = 0;
   out_6507532050145030666[437] = 0;
   out_6507532050145030666[438] = 0;
   out_6507532050145030666[439] = 1.0;
   out_6507532050145030666[440] = 0;
   out_6507532050145030666[441] = 0;
   out_6507532050145030666[442] = 0;
   out_6507532050145030666[443] = 0;
   out_6507532050145030666[444] = 0;
   out_6507532050145030666[445] = 0;
   out_6507532050145030666[446] = 0;
   out_6507532050145030666[447] = 0;
   out_6507532050145030666[448] = 0;
   out_6507532050145030666[449] = 0;
   out_6507532050145030666[450] = 0;
   out_6507532050145030666[451] = 0;
   out_6507532050145030666[452] = 0;
   out_6507532050145030666[453] = 0;
   out_6507532050145030666[454] = 0;
   out_6507532050145030666[455] = 0;
   out_6507532050145030666[456] = 0;
   out_6507532050145030666[457] = 0;
   out_6507532050145030666[458] = 0;
   out_6507532050145030666[459] = 0;
   out_6507532050145030666[460] = 0;
   out_6507532050145030666[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1604922508353746630) {
   out_1604922508353746630[0] = dt*state[7] + state[0];
   out_1604922508353746630[1] = dt*state[8] + state[1];
   out_1604922508353746630[2] = dt*state[9] + state[2];
   out_1604922508353746630[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1604922508353746630[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1604922508353746630[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1604922508353746630[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1604922508353746630[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1604922508353746630[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1604922508353746630[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1604922508353746630[10] = state[10];
   out_1604922508353746630[11] = state[11];
   out_1604922508353746630[12] = state[12];
   out_1604922508353746630[13] = state[13];
   out_1604922508353746630[14] = state[14];
   out_1604922508353746630[15] = state[15];
   out_1604922508353746630[16] = state[16];
   out_1604922508353746630[17] = state[17];
   out_1604922508353746630[18] = state[18];
   out_1604922508353746630[19] = state[19];
   out_1604922508353746630[20] = state[20];
   out_1604922508353746630[21] = state[21];
}
void F_fun(double *state, double dt, double *out_50739696382799731) {
   out_50739696382799731[0] = 1;
   out_50739696382799731[1] = 0;
   out_50739696382799731[2] = 0;
   out_50739696382799731[3] = 0;
   out_50739696382799731[4] = 0;
   out_50739696382799731[5] = 0;
   out_50739696382799731[6] = dt;
   out_50739696382799731[7] = 0;
   out_50739696382799731[8] = 0;
   out_50739696382799731[9] = 0;
   out_50739696382799731[10] = 0;
   out_50739696382799731[11] = 0;
   out_50739696382799731[12] = 0;
   out_50739696382799731[13] = 0;
   out_50739696382799731[14] = 0;
   out_50739696382799731[15] = 0;
   out_50739696382799731[16] = 0;
   out_50739696382799731[17] = 0;
   out_50739696382799731[18] = 0;
   out_50739696382799731[19] = 0;
   out_50739696382799731[20] = 0;
   out_50739696382799731[21] = 0;
   out_50739696382799731[22] = 1;
   out_50739696382799731[23] = 0;
   out_50739696382799731[24] = 0;
   out_50739696382799731[25] = 0;
   out_50739696382799731[26] = 0;
   out_50739696382799731[27] = 0;
   out_50739696382799731[28] = dt;
   out_50739696382799731[29] = 0;
   out_50739696382799731[30] = 0;
   out_50739696382799731[31] = 0;
   out_50739696382799731[32] = 0;
   out_50739696382799731[33] = 0;
   out_50739696382799731[34] = 0;
   out_50739696382799731[35] = 0;
   out_50739696382799731[36] = 0;
   out_50739696382799731[37] = 0;
   out_50739696382799731[38] = 0;
   out_50739696382799731[39] = 0;
   out_50739696382799731[40] = 0;
   out_50739696382799731[41] = 0;
   out_50739696382799731[42] = 0;
   out_50739696382799731[43] = 0;
   out_50739696382799731[44] = 1;
   out_50739696382799731[45] = 0;
   out_50739696382799731[46] = 0;
   out_50739696382799731[47] = 0;
   out_50739696382799731[48] = 0;
   out_50739696382799731[49] = 0;
   out_50739696382799731[50] = dt;
   out_50739696382799731[51] = 0;
   out_50739696382799731[52] = 0;
   out_50739696382799731[53] = 0;
   out_50739696382799731[54] = 0;
   out_50739696382799731[55] = 0;
   out_50739696382799731[56] = 0;
   out_50739696382799731[57] = 0;
   out_50739696382799731[58] = 0;
   out_50739696382799731[59] = 0;
   out_50739696382799731[60] = 0;
   out_50739696382799731[61] = 0;
   out_50739696382799731[62] = 0;
   out_50739696382799731[63] = 0;
   out_50739696382799731[64] = 0;
   out_50739696382799731[65] = 0;
   out_50739696382799731[66] = 1;
   out_50739696382799731[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_50739696382799731[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_50739696382799731[69] = 0;
   out_50739696382799731[70] = 0;
   out_50739696382799731[71] = 0;
   out_50739696382799731[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_50739696382799731[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_50739696382799731[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_50739696382799731[75] = 0;
   out_50739696382799731[76] = 0;
   out_50739696382799731[77] = 0;
   out_50739696382799731[78] = 0;
   out_50739696382799731[79] = 0;
   out_50739696382799731[80] = 0;
   out_50739696382799731[81] = 0;
   out_50739696382799731[82] = 0;
   out_50739696382799731[83] = 0;
   out_50739696382799731[84] = 0;
   out_50739696382799731[85] = 0;
   out_50739696382799731[86] = 0;
   out_50739696382799731[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_50739696382799731[88] = 1;
   out_50739696382799731[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_50739696382799731[90] = 0;
   out_50739696382799731[91] = 0;
   out_50739696382799731[92] = 0;
   out_50739696382799731[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_50739696382799731[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_50739696382799731[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_50739696382799731[96] = 0;
   out_50739696382799731[97] = 0;
   out_50739696382799731[98] = 0;
   out_50739696382799731[99] = 0;
   out_50739696382799731[100] = 0;
   out_50739696382799731[101] = 0;
   out_50739696382799731[102] = 0;
   out_50739696382799731[103] = 0;
   out_50739696382799731[104] = 0;
   out_50739696382799731[105] = 0;
   out_50739696382799731[106] = 0;
   out_50739696382799731[107] = 0;
   out_50739696382799731[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_50739696382799731[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_50739696382799731[110] = 1;
   out_50739696382799731[111] = 0;
   out_50739696382799731[112] = 0;
   out_50739696382799731[113] = 0;
   out_50739696382799731[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_50739696382799731[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_50739696382799731[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_50739696382799731[117] = 0;
   out_50739696382799731[118] = 0;
   out_50739696382799731[119] = 0;
   out_50739696382799731[120] = 0;
   out_50739696382799731[121] = 0;
   out_50739696382799731[122] = 0;
   out_50739696382799731[123] = 0;
   out_50739696382799731[124] = 0;
   out_50739696382799731[125] = 0;
   out_50739696382799731[126] = 0;
   out_50739696382799731[127] = 0;
   out_50739696382799731[128] = 0;
   out_50739696382799731[129] = 0;
   out_50739696382799731[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_50739696382799731[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_50739696382799731[132] = 1;
   out_50739696382799731[133] = 0;
   out_50739696382799731[134] = 0;
   out_50739696382799731[135] = 0;
   out_50739696382799731[136] = 0;
   out_50739696382799731[137] = 0;
   out_50739696382799731[138] = 0;
   out_50739696382799731[139] = 0;
   out_50739696382799731[140] = 0;
   out_50739696382799731[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_50739696382799731[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_50739696382799731[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_50739696382799731[144] = 0;
   out_50739696382799731[145] = 0;
   out_50739696382799731[146] = 0;
   out_50739696382799731[147] = 0;
   out_50739696382799731[148] = 0;
   out_50739696382799731[149] = 0;
   out_50739696382799731[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_50739696382799731[151] = 0;
   out_50739696382799731[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_50739696382799731[153] = 0;
   out_50739696382799731[154] = 1;
   out_50739696382799731[155] = 0;
   out_50739696382799731[156] = 0;
   out_50739696382799731[157] = 0;
   out_50739696382799731[158] = 0;
   out_50739696382799731[159] = 0;
   out_50739696382799731[160] = 0;
   out_50739696382799731[161] = 0;
   out_50739696382799731[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_50739696382799731[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_50739696382799731[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_50739696382799731[165] = 0;
   out_50739696382799731[166] = 0;
   out_50739696382799731[167] = 0;
   out_50739696382799731[168] = 0;
   out_50739696382799731[169] = 0;
   out_50739696382799731[170] = 0;
   out_50739696382799731[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_50739696382799731[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_50739696382799731[173] = 0;
   out_50739696382799731[174] = 0;
   out_50739696382799731[175] = 0;
   out_50739696382799731[176] = 1;
   out_50739696382799731[177] = 0;
   out_50739696382799731[178] = 0;
   out_50739696382799731[179] = 0;
   out_50739696382799731[180] = 0;
   out_50739696382799731[181] = 0;
   out_50739696382799731[182] = 0;
   out_50739696382799731[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_50739696382799731[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_50739696382799731[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_50739696382799731[186] = 0;
   out_50739696382799731[187] = 0;
   out_50739696382799731[188] = 0;
   out_50739696382799731[189] = 0;
   out_50739696382799731[190] = 0;
   out_50739696382799731[191] = 0;
   out_50739696382799731[192] = 0;
   out_50739696382799731[193] = 0;
   out_50739696382799731[194] = 0;
   out_50739696382799731[195] = 0;
   out_50739696382799731[196] = 0;
   out_50739696382799731[197] = 0;
   out_50739696382799731[198] = 1;
   out_50739696382799731[199] = 0;
   out_50739696382799731[200] = 0;
   out_50739696382799731[201] = 0;
   out_50739696382799731[202] = 0;
   out_50739696382799731[203] = 0;
   out_50739696382799731[204] = 0;
   out_50739696382799731[205] = 0;
   out_50739696382799731[206] = 0;
   out_50739696382799731[207] = 0;
   out_50739696382799731[208] = 0;
   out_50739696382799731[209] = 0;
   out_50739696382799731[210] = 0;
   out_50739696382799731[211] = 0;
   out_50739696382799731[212] = 0;
   out_50739696382799731[213] = 0;
   out_50739696382799731[214] = 0;
   out_50739696382799731[215] = 0;
   out_50739696382799731[216] = 0;
   out_50739696382799731[217] = 0;
   out_50739696382799731[218] = 0;
   out_50739696382799731[219] = 0;
   out_50739696382799731[220] = 1;
   out_50739696382799731[221] = 0;
   out_50739696382799731[222] = 0;
   out_50739696382799731[223] = 0;
   out_50739696382799731[224] = 0;
   out_50739696382799731[225] = 0;
   out_50739696382799731[226] = 0;
   out_50739696382799731[227] = 0;
   out_50739696382799731[228] = 0;
   out_50739696382799731[229] = 0;
   out_50739696382799731[230] = 0;
   out_50739696382799731[231] = 0;
   out_50739696382799731[232] = 0;
   out_50739696382799731[233] = 0;
   out_50739696382799731[234] = 0;
   out_50739696382799731[235] = 0;
   out_50739696382799731[236] = 0;
   out_50739696382799731[237] = 0;
   out_50739696382799731[238] = 0;
   out_50739696382799731[239] = 0;
   out_50739696382799731[240] = 0;
   out_50739696382799731[241] = 0;
   out_50739696382799731[242] = 1;
   out_50739696382799731[243] = 0;
   out_50739696382799731[244] = 0;
   out_50739696382799731[245] = 0;
   out_50739696382799731[246] = 0;
   out_50739696382799731[247] = 0;
   out_50739696382799731[248] = 0;
   out_50739696382799731[249] = 0;
   out_50739696382799731[250] = 0;
   out_50739696382799731[251] = 0;
   out_50739696382799731[252] = 0;
   out_50739696382799731[253] = 0;
   out_50739696382799731[254] = 0;
   out_50739696382799731[255] = 0;
   out_50739696382799731[256] = 0;
   out_50739696382799731[257] = 0;
   out_50739696382799731[258] = 0;
   out_50739696382799731[259] = 0;
   out_50739696382799731[260] = 0;
   out_50739696382799731[261] = 0;
   out_50739696382799731[262] = 0;
   out_50739696382799731[263] = 0;
   out_50739696382799731[264] = 1;
   out_50739696382799731[265] = 0;
   out_50739696382799731[266] = 0;
   out_50739696382799731[267] = 0;
   out_50739696382799731[268] = 0;
   out_50739696382799731[269] = 0;
   out_50739696382799731[270] = 0;
   out_50739696382799731[271] = 0;
   out_50739696382799731[272] = 0;
   out_50739696382799731[273] = 0;
   out_50739696382799731[274] = 0;
   out_50739696382799731[275] = 0;
   out_50739696382799731[276] = 0;
   out_50739696382799731[277] = 0;
   out_50739696382799731[278] = 0;
   out_50739696382799731[279] = 0;
   out_50739696382799731[280] = 0;
   out_50739696382799731[281] = 0;
   out_50739696382799731[282] = 0;
   out_50739696382799731[283] = 0;
   out_50739696382799731[284] = 0;
   out_50739696382799731[285] = 0;
   out_50739696382799731[286] = 1;
   out_50739696382799731[287] = 0;
   out_50739696382799731[288] = 0;
   out_50739696382799731[289] = 0;
   out_50739696382799731[290] = 0;
   out_50739696382799731[291] = 0;
   out_50739696382799731[292] = 0;
   out_50739696382799731[293] = 0;
   out_50739696382799731[294] = 0;
   out_50739696382799731[295] = 0;
   out_50739696382799731[296] = 0;
   out_50739696382799731[297] = 0;
   out_50739696382799731[298] = 0;
   out_50739696382799731[299] = 0;
   out_50739696382799731[300] = 0;
   out_50739696382799731[301] = 0;
   out_50739696382799731[302] = 0;
   out_50739696382799731[303] = 0;
   out_50739696382799731[304] = 0;
   out_50739696382799731[305] = 0;
   out_50739696382799731[306] = 0;
   out_50739696382799731[307] = 0;
   out_50739696382799731[308] = 1;
   out_50739696382799731[309] = 0;
   out_50739696382799731[310] = 0;
   out_50739696382799731[311] = 0;
   out_50739696382799731[312] = 0;
   out_50739696382799731[313] = 0;
   out_50739696382799731[314] = 0;
   out_50739696382799731[315] = 0;
   out_50739696382799731[316] = 0;
   out_50739696382799731[317] = 0;
   out_50739696382799731[318] = 0;
   out_50739696382799731[319] = 0;
   out_50739696382799731[320] = 0;
   out_50739696382799731[321] = 0;
   out_50739696382799731[322] = 0;
   out_50739696382799731[323] = 0;
   out_50739696382799731[324] = 0;
   out_50739696382799731[325] = 0;
   out_50739696382799731[326] = 0;
   out_50739696382799731[327] = 0;
   out_50739696382799731[328] = 0;
   out_50739696382799731[329] = 0;
   out_50739696382799731[330] = 1;
   out_50739696382799731[331] = 0;
   out_50739696382799731[332] = 0;
   out_50739696382799731[333] = 0;
   out_50739696382799731[334] = 0;
   out_50739696382799731[335] = 0;
   out_50739696382799731[336] = 0;
   out_50739696382799731[337] = 0;
   out_50739696382799731[338] = 0;
   out_50739696382799731[339] = 0;
   out_50739696382799731[340] = 0;
   out_50739696382799731[341] = 0;
   out_50739696382799731[342] = 0;
   out_50739696382799731[343] = 0;
   out_50739696382799731[344] = 0;
   out_50739696382799731[345] = 0;
   out_50739696382799731[346] = 0;
   out_50739696382799731[347] = 0;
   out_50739696382799731[348] = 0;
   out_50739696382799731[349] = 0;
   out_50739696382799731[350] = 0;
   out_50739696382799731[351] = 0;
   out_50739696382799731[352] = 1;
   out_50739696382799731[353] = 0;
   out_50739696382799731[354] = 0;
   out_50739696382799731[355] = 0;
   out_50739696382799731[356] = 0;
   out_50739696382799731[357] = 0;
   out_50739696382799731[358] = 0;
   out_50739696382799731[359] = 0;
   out_50739696382799731[360] = 0;
   out_50739696382799731[361] = 0;
   out_50739696382799731[362] = 0;
   out_50739696382799731[363] = 0;
   out_50739696382799731[364] = 0;
   out_50739696382799731[365] = 0;
   out_50739696382799731[366] = 0;
   out_50739696382799731[367] = 0;
   out_50739696382799731[368] = 0;
   out_50739696382799731[369] = 0;
   out_50739696382799731[370] = 0;
   out_50739696382799731[371] = 0;
   out_50739696382799731[372] = 0;
   out_50739696382799731[373] = 0;
   out_50739696382799731[374] = 1;
   out_50739696382799731[375] = 0;
   out_50739696382799731[376] = 0;
   out_50739696382799731[377] = 0;
   out_50739696382799731[378] = 0;
   out_50739696382799731[379] = 0;
   out_50739696382799731[380] = 0;
   out_50739696382799731[381] = 0;
   out_50739696382799731[382] = 0;
   out_50739696382799731[383] = 0;
   out_50739696382799731[384] = 0;
   out_50739696382799731[385] = 0;
   out_50739696382799731[386] = 0;
   out_50739696382799731[387] = 0;
   out_50739696382799731[388] = 0;
   out_50739696382799731[389] = 0;
   out_50739696382799731[390] = 0;
   out_50739696382799731[391] = 0;
   out_50739696382799731[392] = 0;
   out_50739696382799731[393] = 0;
   out_50739696382799731[394] = 0;
   out_50739696382799731[395] = 0;
   out_50739696382799731[396] = 1;
   out_50739696382799731[397] = 0;
   out_50739696382799731[398] = 0;
   out_50739696382799731[399] = 0;
   out_50739696382799731[400] = 0;
   out_50739696382799731[401] = 0;
   out_50739696382799731[402] = 0;
   out_50739696382799731[403] = 0;
   out_50739696382799731[404] = 0;
   out_50739696382799731[405] = 0;
   out_50739696382799731[406] = 0;
   out_50739696382799731[407] = 0;
   out_50739696382799731[408] = 0;
   out_50739696382799731[409] = 0;
   out_50739696382799731[410] = 0;
   out_50739696382799731[411] = 0;
   out_50739696382799731[412] = 0;
   out_50739696382799731[413] = 0;
   out_50739696382799731[414] = 0;
   out_50739696382799731[415] = 0;
   out_50739696382799731[416] = 0;
   out_50739696382799731[417] = 0;
   out_50739696382799731[418] = 1;
   out_50739696382799731[419] = 0;
   out_50739696382799731[420] = 0;
   out_50739696382799731[421] = 0;
   out_50739696382799731[422] = 0;
   out_50739696382799731[423] = 0;
   out_50739696382799731[424] = 0;
   out_50739696382799731[425] = 0;
   out_50739696382799731[426] = 0;
   out_50739696382799731[427] = 0;
   out_50739696382799731[428] = 0;
   out_50739696382799731[429] = 0;
   out_50739696382799731[430] = 0;
   out_50739696382799731[431] = 0;
   out_50739696382799731[432] = 0;
   out_50739696382799731[433] = 0;
   out_50739696382799731[434] = 0;
   out_50739696382799731[435] = 0;
   out_50739696382799731[436] = 0;
   out_50739696382799731[437] = 0;
   out_50739696382799731[438] = 0;
   out_50739696382799731[439] = 0;
   out_50739696382799731[440] = 1;
}
void h_4(double *state, double *unused, double *out_2283543297913815152) {
   out_2283543297913815152[0] = state[10] + state[13];
   out_2283543297913815152[1] = state[11] + state[14];
   out_2283543297913815152[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5143408797123224918) {
   out_5143408797123224918[0] = 0;
   out_5143408797123224918[1] = 0;
   out_5143408797123224918[2] = 0;
   out_5143408797123224918[3] = 0;
   out_5143408797123224918[4] = 0;
   out_5143408797123224918[5] = 0;
   out_5143408797123224918[6] = 0;
   out_5143408797123224918[7] = 0;
   out_5143408797123224918[8] = 0;
   out_5143408797123224918[9] = 0;
   out_5143408797123224918[10] = 1;
   out_5143408797123224918[11] = 0;
   out_5143408797123224918[12] = 0;
   out_5143408797123224918[13] = 1;
   out_5143408797123224918[14] = 0;
   out_5143408797123224918[15] = 0;
   out_5143408797123224918[16] = 0;
   out_5143408797123224918[17] = 0;
   out_5143408797123224918[18] = 0;
   out_5143408797123224918[19] = 0;
   out_5143408797123224918[20] = 0;
   out_5143408797123224918[21] = 0;
   out_5143408797123224918[22] = 0;
   out_5143408797123224918[23] = 0;
   out_5143408797123224918[24] = 0;
   out_5143408797123224918[25] = 0;
   out_5143408797123224918[26] = 0;
   out_5143408797123224918[27] = 0;
   out_5143408797123224918[28] = 0;
   out_5143408797123224918[29] = 0;
   out_5143408797123224918[30] = 0;
   out_5143408797123224918[31] = 0;
   out_5143408797123224918[32] = 0;
   out_5143408797123224918[33] = 1;
   out_5143408797123224918[34] = 0;
   out_5143408797123224918[35] = 0;
   out_5143408797123224918[36] = 1;
   out_5143408797123224918[37] = 0;
   out_5143408797123224918[38] = 0;
   out_5143408797123224918[39] = 0;
   out_5143408797123224918[40] = 0;
   out_5143408797123224918[41] = 0;
   out_5143408797123224918[42] = 0;
   out_5143408797123224918[43] = 0;
   out_5143408797123224918[44] = 0;
   out_5143408797123224918[45] = 0;
   out_5143408797123224918[46] = 0;
   out_5143408797123224918[47] = 0;
   out_5143408797123224918[48] = 0;
   out_5143408797123224918[49] = 0;
   out_5143408797123224918[50] = 0;
   out_5143408797123224918[51] = 0;
   out_5143408797123224918[52] = 0;
   out_5143408797123224918[53] = 0;
   out_5143408797123224918[54] = 0;
   out_5143408797123224918[55] = 0;
   out_5143408797123224918[56] = 1;
   out_5143408797123224918[57] = 0;
   out_5143408797123224918[58] = 0;
   out_5143408797123224918[59] = 1;
   out_5143408797123224918[60] = 0;
   out_5143408797123224918[61] = 0;
   out_5143408797123224918[62] = 0;
   out_5143408797123224918[63] = 0;
   out_5143408797123224918[64] = 0;
   out_5143408797123224918[65] = 0;
}
void h_9(double *state, double *unused, double *out_7773400606407566715) {
   out_7773400606407566715[0] = state[10];
   out_7773400606407566715[1] = state[11];
   out_7773400606407566715[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6016116341321879228) {
   out_6016116341321879228[0] = 0;
   out_6016116341321879228[1] = 0;
   out_6016116341321879228[2] = 0;
   out_6016116341321879228[3] = 0;
   out_6016116341321879228[4] = 0;
   out_6016116341321879228[5] = 0;
   out_6016116341321879228[6] = 0;
   out_6016116341321879228[7] = 0;
   out_6016116341321879228[8] = 0;
   out_6016116341321879228[9] = 0;
   out_6016116341321879228[10] = 1;
   out_6016116341321879228[11] = 0;
   out_6016116341321879228[12] = 0;
   out_6016116341321879228[13] = 0;
   out_6016116341321879228[14] = 0;
   out_6016116341321879228[15] = 0;
   out_6016116341321879228[16] = 0;
   out_6016116341321879228[17] = 0;
   out_6016116341321879228[18] = 0;
   out_6016116341321879228[19] = 0;
   out_6016116341321879228[20] = 0;
   out_6016116341321879228[21] = 0;
   out_6016116341321879228[22] = 0;
   out_6016116341321879228[23] = 0;
   out_6016116341321879228[24] = 0;
   out_6016116341321879228[25] = 0;
   out_6016116341321879228[26] = 0;
   out_6016116341321879228[27] = 0;
   out_6016116341321879228[28] = 0;
   out_6016116341321879228[29] = 0;
   out_6016116341321879228[30] = 0;
   out_6016116341321879228[31] = 0;
   out_6016116341321879228[32] = 0;
   out_6016116341321879228[33] = 1;
   out_6016116341321879228[34] = 0;
   out_6016116341321879228[35] = 0;
   out_6016116341321879228[36] = 0;
   out_6016116341321879228[37] = 0;
   out_6016116341321879228[38] = 0;
   out_6016116341321879228[39] = 0;
   out_6016116341321879228[40] = 0;
   out_6016116341321879228[41] = 0;
   out_6016116341321879228[42] = 0;
   out_6016116341321879228[43] = 0;
   out_6016116341321879228[44] = 0;
   out_6016116341321879228[45] = 0;
   out_6016116341321879228[46] = 0;
   out_6016116341321879228[47] = 0;
   out_6016116341321879228[48] = 0;
   out_6016116341321879228[49] = 0;
   out_6016116341321879228[50] = 0;
   out_6016116341321879228[51] = 0;
   out_6016116341321879228[52] = 0;
   out_6016116341321879228[53] = 0;
   out_6016116341321879228[54] = 0;
   out_6016116341321879228[55] = 0;
   out_6016116341321879228[56] = 1;
   out_6016116341321879228[57] = 0;
   out_6016116341321879228[58] = 0;
   out_6016116341321879228[59] = 0;
   out_6016116341321879228[60] = 0;
   out_6016116341321879228[61] = 0;
   out_6016116341321879228[62] = 0;
   out_6016116341321879228[63] = 0;
   out_6016116341321879228[64] = 0;
   out_6016116341321879228[65] = 0;
}
void h_10(double *state, double *unused, double *out_8311890673652792723) {
   out_8311890673652792723[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8311890673652792723[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8311890673652792723[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7263949073185548482) {
   out_7263949073185548482[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7263949073185548482[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7263949073185548482[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7263949073185548482[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7263949073185548482[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7263949073185548482[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7263949073185548482[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7263949073185548482[7] = 0;
   out_7263949073185548482[8] = 0;
   out_7263949073185548482[9] = 0;
   out_7263949073185548482[10] = 0;
   out_7263949073185548482[11] = 0;
   out_7263949073185548482[12] = 0;
   out_7263949073185548482[13] = 0;
   out_7263949073185548482[14] = 0;
   out_7263949073185548482[15] = 0;
   out_7263949073185548482[16] = 1;
   out_7263949073185548482[17] = 0;
   out_7263949073185548482[18] = 0;
   out_7263949073185548482[19] = 1;
   out_7263949073185548482[20] = 0;
   out_7263949073185548482[21] = 0;
   out_7263949073185548482[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7263949073185548482[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7263949073185548482[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7263949073185548482[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7263949073185548482[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7263949073185548482[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7263949073185548482[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7263949073185548482[29] = 0;
   out_7263949073185548482[30] = 0;
   out_7263949073185548482[31] = 0;
   out_7263949073185548482[32] = 0;
   out_7263949073185548482[33] = 0;
   out_7263949073185548482[34] = 0;
   out_7263949073185548482[35] = 0;
   out_7263949073185548482[36] = 0;
   out_7263949073185548482[37] = 0;
   out_7263949073185548482[38] = 0;
   out_7263949073185548482[39] = 1;
   out_7263949073185548482[40] = 0;
   out_7263949073185548482[41] = 0;
   out_7263949073185548482[42] = 1;
   out_7263949073185548482[43] = 0;
   out_7263949073185548482[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7263949073185548482[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7263949073185548482[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7263949073185548482[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7263949073185548482[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7263949073185548482[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7263949073185548482[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7263949073185548482[51] = 0;
   out_7263949073185548482[52] = 0;
   out_7263949073185548482[53] = 0;
   out_7263949073185548482[54] = 0;
   out_7263949073185548482[55] = 0;
   out_7263949073185548482[56] = 0;
   out_7263949073185548482[57] = 0;
   out_7263949073185548482[58] = 0;
   out_7263949073185548482[59] = 0;
   out_7263949073185548482[60] = 0;
   out_7263949073185548482[61] = 0;
   out_7263949073185548482[62] = 1;
   out_7263949073185548482[63] = 0;
   out_7263949073185548482[64] = 0;
   out_7263949073185548482[65] = 1;
}
void h_12(double *state, double *unused, double *out_6834930411344106958) {
   out_6834930411344106958[0] = state[0];
   out_6834930411344106958[1] = state[1];
   out_6834930411344106958[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8283878868554364903) {
   out_8283878868554364903[0] = 1;
   out_8283878868554364903[1] = 0;
   out_8283878868554364903[2] = 0;
   out_8283878868554364903[3] = 0;
   out_8283878868554364903[4] = 0;
   out_8283878868554364903[5] = 0;
   out_8283878868554364903[6] = 0;
   out_8283878868554364903[7] = 0;
   out_8283878868554364903[8] = 0;
   out_8283878868554364903[9] = 0;
   out_8283878868554364903[10] = 0;
   out_8283878868554364903[11] = 0;
   out_8283878868554364903[12] = 0;
   out_8283878868554364903[13] = 0;
   out_8283878868554364903[14] = 0;
   out_8283878868554364903[15] = 0;
   out_8283878868554364903[16] = 0;
   out_8283878868554364903[17] = 0;
   out_8283878868554364903[18] = 0;
   out_8283878868554364903[19] = 0;
   out_8283878868554364903[20] = 0;
   out_8283878868554364903[21] = 0;
   out_8283878868554364903[22] = 0;
   out_8283878868554364903[23] = 1;
   out_8283878868554364903[24] = 0;
   out_8283878868554364903[25] = 0;
   out_8283878868554364903[26] = 0;
   out_8283878868554364903[27] = 0;
   out_8283878868554364903[28] = 0;
   out_8283878868554364903[29] = 0;
   out_8283878868554364903[30] = 0;
   out_8283878868554364903[31] = 0;
   out_8283878868554364903[32] = 0;
   out_8283878868554364903[33] = 0;
   out_8283878868554364903[34] = 0;
   out_8283878868554364903[35] = 0;
   out_8283878868554364903[36] = 0;
   out_8283878868554364903[37] = 0;
   out_8283878868554364903[38] = 0;
   out_8283878868554364903[39] = 0;
   out_8283878868554364903[40] = 0;
   out_8283878868554364903[41] = 0;
   out_8283878868554364903[42] = 0;
   out_8283878868554364903[43] = 0;
   out_8283878868554364903[44] = 0;
   out_8283878868554364903[45] = 0;
   out_8283878868554364903[46] = 1;
   out_8283878868554364903[47] = 0;
   out_8283878868554364903[48] = 0;
   out_8283878868554364903[49] = 0;
   out_8283878868554364903[50] = 0;
   out_8283878868554364903[51] = 0;
   out_8283878868554364903[52] = 0;
   out_8283878868554364903[53] = 0;
   out_8283878868554364903[54] = 0;
   out_8283878868554364903[55] = 0;
   out_8283878868554364903[56] = 0;
   out_8283878868554364903[57] = 0;
   out_8283878868554364903[58] = 0;
   out_8283878868554364903[59] = 0;
   out_8283878868554364903[60] = 0;
   out_8283878868554364903[61] = 0;
   out_8283878868554364903[62] = 0;
   out_8283878868554364903[63] = 0;
   out_8283878868554364903[64] = 0;
   out_8283878868554364903[65] = 0;
}
void h_35(double *state, double *unused, double *out_6074010352484428937) {
   out_6074010352484428937[0] = state[7];
   out_6074010352484428937[1] = state[8];
   out_6074010352484428937[2] = state[9];
}
void H_35(double *state, double *unused, double *out_5538315836229351194) {
   out_5538315836229351194[0] = 0;
   out_5538315836229351194[1] = 0;
   out_5538315836229351194[2] = 0;
   out_5538315836229351194[3] = 0;
   out_5538315836229351194[4] = 0;
   out_5538315836229351194[5] = 0;
   out_5538315836229351194[6] = 0;
   out_5538315836229351194[7] = 1;
   out_5538315836229351194[8] = 0;
   out_5538315836229351194[9] = 0;
   out_5538315836229351194[10] = 0;
   out_5538315836229351194[11] = 0;
   out_5538315836229351194[12] = 0;
   out_5538315836229351194[13] = 0;
   out_5538315836229351194[14] = 0;
   out_5538315836229351194[15] = 0;
   out_5538315836229351194[16] = 0;
   out_5538315836229351194[17] = 0;
   out_5538315836229351194[18] = 0;
   out_5538315836229351194[19] = 0;
   out_5538315836229351194[20] = 0;
   out_5538315836229351194[21] = 0;
   out_5538315836229351194[22] = 0;
   out_5538315836229351194[23] = 0;
   out_5538315836229351194[24] = 0;
   out_5538315836229351194[25] = 0;
   out_5538315836229351194[26] = 0;
   out_5538315836229351194[27] = 0;
   out_5538315836229351194[28] = 0;
   out_5538315836229351194[29] = 0;
   out_5538315836229351194[30] = 1;
   out_5538315836229351194[31] = 0;
   out_5538315836229351194[32] = 0;
   out_5538315836229351194[33] = 0;
   out_5538315836229351194[34] = 0;
   out_5538315836229351194[35] = 0;
   out_5538315836229351194[36] = 0;
   out_5538315836229351194[37] = 0;
   out_5538315836229351194[38] = 0;
   out_5538315836229351194[39] = 0;
   out_5538315836229351194[40] = 0;
   out_5538315836229351194[41] = 0;
   out_5538315836229351194[42] = 0;
   out_5538315836229351194[43] = 0;
   out_5538315836229351194[44] = 0;
   out_5538315836229351194[45] = 0;
   out_5538315836229351194[46] = 0;
   out_5538315836229351194[47] = 0;
   out_5538315836229351194[48] = 0;
   out_5538315836229351194[49] = 0;
   out_5538315836229351194[50] = 0;
   out_5538315836229351194[51] = 0;
   out_5538315836229351194[52] = 0;
   out_5538315836229351194[53] = 1;
   out_5538315836229351194[54] = 0;
   out_5538315836229351194[55] = 0;
   out_5538315836229351194[56] = 0;
   out_5538315836229351194[57] = 0;
   out_5538315836229351194[58] = 0;
   out_5538315836229351194[59] = 0;
   out_5538315836229351194[60] = 0;
   out_5538315836229351194[61] = 0;
   out_5538315836229351194[62] = 0;
   out_5538315836229351194[63] = 0;
   out_5538315836229351194[64] = 0;
   out_5538315836229351194[65] = 0;
}
void h_32(double *state, double *unused, double *out_208919398550340897) {
   out_208919398550340897[0] = state[3];
   out_208919398550340897[1] = state[4];
   out_208919398550340897[2] = state[5];
   out_208919398550340897[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8641235639436572763) {
   out_8641235639436572763[0] = 0;
   out_8641235639436572763[1] = 0;
   out_8641235639436572763[2] = 0;
   out_8641235639436572763[3] = 1;
   out_8641235639436572763[4] = 0;
   out_8641235639436572763[5] = 0;
   out_8641235639436572763[6] = 0;
   out_8641235639436572763[7] = 0;
   out_8641235639436572763[8] = 0;
   out_8641235639436572763[9] = 0;
   out_8641235639436572763[10] = 0;
   out_8641235639436572763[11] = 0;
   out_8641235639436572763[12] = 0;
   out_8641235639436572763[13] = 0;
   out_8641235639436572763[14] = 0;
   out_8641235639436572763[15] = 0;
   out_8641235639436572763[16] = 0;
   out_8641235639436572763[17] = 0;
   out_8641235639436572763[18] = 0;
   out_8641235639436572763[19] = 0;
   out_8641235639436572763[20] = 0;
   out_8641235639436572763[21] = 0;
   out_8641235639436572763[22] = 0;
   out_8641235639436572763[23] = 0;
   out_8641235639436572763[24] = 0;
   out_8641235639436572763[25] = 0;
   out_8641235639436572763[26] = 1;
   out_8641235639436572763[27] = 0;
   out_8641235639436572763[28] = 0;
   out_8641235639436572763[29] = 0;
   out_8641235639436572763[30] = 0;
   out_8641235639436572763[31] = 0;
   out_8641235639436572763[32] = 0;
   out_8641235639436572763[33] = 0;
   out_8641235639436572763[34] = 0;
   out_8641235639436572763[35] = 0;
   out_8641235639436572763[36] = 0;
   out_8641235639436572763[37] = 0;
   out_8641235639436572763[38] = 0;
   out_8641235639436572763[39] = 0;
   out_8641235639436572763[40] = 0;
   out_8641235639436572763[41] = 0;
   out_8641235639436572763[42] = 0;
   out_8641235639436572763[43] = 0;
   out_8641235639436572763[44] = 0;
   out_8641235639436572763[45] = 0;
   out_8641235639436572763[46] = 0;
   out_8641235639436572763[47] = 0;
   out_8641235639436572763[48] = 0;
   out_8641235639436572763[49] = 1;
   out_8641235639436572763[50] = 0;
   out_8641235639436572763[51] = 0;
   out_8641235639436572763[52] = 0;
   out_8641235639436572763[53] = 0;
   out_8641235639436572763[54] = 0;
   out_8641235639436572763[55] = 0;
   out_8641235639436572763[56] = 0;
   out_8641235639436572763[57] = 0;
   out_8641235639436572763[58] = 0;
   out_8641235639436572763[59] = 0;
   out_8641235639436572763[60] = 0;
   out_8641235639436572763[61] = 0;
   out_8641235639436572763[62] = 0;
   out_8641235639436572763[63] = 0;
   out_8641235639436572763[64] = 0;
   out_8641235639436572763[65] = 0;
   out_8641235639436572763[66] = 0;
   out_8641235639436572763[67] = 0;
   out_8641235639436572763[68] = 0;
   out_8641235639436572763[69] = 0;
   out_8641235639436572763[70] = 0;
   out_8641235639436572763[71] = 0;
   out_8641235639436572763[72] = 1;
   out_8641235639436572763[73] = 0;
   out_8641235639436572763[74] = 0;
   out_8641235639436572763[75] = 0;
   out_8641235639436572763[76] = 0;
   out_8641235639436572763[77] = 0;
   out_8641235639436572763[78] = 0;
   out_8641235639436572763[79] = 0;
   out_8641235639436572763[80] = 0;
   out_8641235639436572763[81] = 0;
   out_8641235639436572763[82] = 0;
   out_8641235639436572763[83] = 0;
   out_8641235639436572763[84] = 0;
   out_8641235639436572763[85] = 0;
   out_8641235639436572763[86] = 0;
   out_8641235639436572763[87] = 0;
}
void h_13(double *state, double *unused, double *out_776042024312951559) {
   out_776042024312951559[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_776042024312951559[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_776042024312951559[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1894413721670428005) {
   out_1894413721670428005[0] = 0;
   out_1894413721670428005[1] = 0;
   out_1894413721670428005[2] = 0;
   out_1894413721670428005[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1894413721670428005[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1894413721670428005[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1894413721670428005[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1894413721670428005[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1894413721670428005[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1894413721670428005[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1894413721670428005[10] = 0;
   out_1894413721670428005[11] = 0;
   out_1894413721670428005[12] = 0;
   out_1894413721670428005[13] = 0;
   out_1894413721670428005[14] = 0;
   out_1894413721670428005[15] = 0;
   out_1894413721670428005[16] = 0;
   out_1894413721670428005[17] = 0;
   out_1894413721670428005[18] = 0;
   out_1894413721670428005[19] = 0;
   out_1894413721670428005[20] = 0;
   out_1894413721670428005[21] = 0;
   out_1894413721670428005[22] = 0;
   out_1894413721670428005[23] = 0;
   out_1894413721670428005[24] = 0;
   out_1894413721670428005[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1894413721670428005[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1894413721670428005[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1894413721670428005[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1894413721670428005[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1894413721670428005[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1894413721670428005[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1894413721670428005[32] = 0;
   out_1894413721670428005[33] = 0;
   out_1894413721670428005[34] = 0;
   out_1894413721670428005[35] = 0;
   out_1894413721670428005[36] = 0;
   out_1894413721670428005[37] = 0;
   out_1894413721670428005[38] = 0;
   out_1894413721670428005[39] = 0;
   out_1894413721670428005[40] = 0;
   out_1894413721670428005[41] = 0;
   out_1894413721670428005[42] = 0;
   out_1894413721670428005[43] = 0;
   out_1894413721670428005[44] = 0;
   out_1894413721670428005[45] = 0;
   out_1894413721670428005[46] = 0;
   out_1894413721670428005[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1894413721670428005[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1894413721670428005[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1894413721670428005[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1894413721670428005[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1894413721670428005[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1894413721670428005[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1894413721670428005[54] = 0;
   out_1894413721670428005[55] = 0;
   out_1894413721670428005[56] = 0;
   out_1894413721670428005[57] = 0;
   out_1894413721670428005[58] = 0;
   out_1894413721670428005[59] = 0;
   out_1894413721670428005[60] = 0;
   out_1894413721670428005[61] = 0;
   out_1894413721670428005[62] = 0;
   out_1894413721670428005[63] = 0;
   out_1894413721670428005[64] = 0;
   out_1894413721670428005[65] = 0;
}
void h_14(double *state, double *unused, double *out_7773400606407566715) {
   out_7773400606407566715[0] = state[10];
   out_7773400606407566715[1] = state[11];
   out_7773400606407566715[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6016116341321879228) {
   out_6016116341321879228[0] = 0;
   out_6016116341321879228[1] = 0;
   out_6016116341321879228[2] = 0;
   out_6016116341321879228[3] = 0;
   out_6016116341321879228[4] = 0;
   out_6016116341321879228[5] = 0;
   out_6016116341321879228[6] = 0;
   out_6016116341321879228[7] = 0;
   out_6016116341321879228[8] = 0;
   out_6016116341321879228[9] = 0;
   out_6016116341321879228[10] = 1;
   out_6016116341321879228[11] = 0;
   out_6016116341321879228[12] = 0;
   out_6016116341321879228[13] = 0;
   out_6016116341321879228[14] = 0;
   out_6016116341321879228[15] = 0;
   out_6016116341321879228[16] = 0;
   out_6016116341321879228[17] = 0;
   out_6016116341321879228[18] = 0;
   out_6016116341321879228[19] = 0;
   out_6016116341321879228[20] = 0;
   out_6016116341321879228[21] = 0;
   out_6016116341321879228[22] = 0;
   out_6016116341321879228[23] = 0;
   out_6016116341321879228[24] = 0;
   out_6016116341321879228[25] = 0;
   out_6016116341321879228[26] = 0;
   out_6016116341321879228[27] = 0;
   out_6016116341321879228[28] = 0;
   out_6016116341321879228[29] = 0;
   out_6016116341321879228[30] = 0;
   out_6016116341321879228[31] = 0;
   out_6016116341321879228[32] = 0;
   out_6016116341321879228[33] = 1;
   out_6016116341321879228[34] = 0;
   out_6016116341321879228[35] = 0;
   out_6016116341321879228[36] = 0;
   out_6016116341321879228[37] = 0;
   out_6016116341321879228[38] = 0;
   out_6016116341321879228[39] = 0;
   out_6016116341321879228[40] = 0;
   out_6016116341321879228[41] = 0;
   out_6016116341321879228[42] = 0;
   out_6016116341321879228[43] = 0;
   out_6016116341321879228[44] = 0;
   out_6016116341321879228[45] = 0;
   out_6016116341321879228[46] = 0;
   out_6016116341321879228[47] = 0;
   out_6016116341321879228[48] = 0;
   out_6016116341321879228[49] = 0;
   out_6016116341321879228[50] = 0;
   out_6016116341321879228[51] = 0;
   out_6016116341321879228[52] = 0;
   out_6016116341321879228[53] = 0;
   out_6016116341321879228[54] = 0;
   out_6016116341321879228[55] = 0;
   out_6016116341321879228[56] = 1;
   out_6016116341321879228[57] = 0;
   out_6016116341321879228[58] = 0;
   out_6016116341321879228[59] = 0;
   out_6016116341321879228[60] = 0;
   out_6016116341321879228[61] = 0;
   out_6016116341321879228[62] = 0;
   out_6016116341321879228[63] = 0;
   out_6016116341321879228[64] = 0;
   out_6016116341321879228[65] = 0;
}
void h_33(double *state, double *unused, double *out_254181503398324334) {
   out_254181503398324334[0] = state[16];
   out_254181503398324334[1] = state[17];
   out_254181503398324334[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2387758831590493590) {
   out_2387758831590493590[0] = 0;
   out_2387758831590493590[1] = 0;
   out_2387758831590493590[2] = 0;
   out_2387758831590493590[3] = 0;
   out_2387758831590493590[4] = 0;
   out_2387758831590493590[5] = 0;
   out_2387758831590493590[6] = 0;
   out_2387758831590493590[7] = 0;
   out_2387758831590493590[8] = 0;
   out_2387758831590493590[9] = 0;
   out_2387758831590493590[10] = 0;
   out_2387758831590493590[11] = 0;
   out_2387758831590493590[12] = 0;
   out_2387758831590493590[13] = 0;
   out_2387758831590493590[14] = 0;
   out_2387758831590493590[15] = 0;
   out_2387758831590493590[16] = 1;
   out_2387758831590493590[17] = 0;
   out_2387758831590493590[18] = 0;
   out_2387758831590493590[19] = 0;
   out_2387758831590493590[20] = 0;
   out_2387758831590493590[21] = 0;
   out_2387758831590493590[22] = 0;
   out_2387758831590493590[23] = 0;
   out_2387758831590493590[24] = 0;
   out_2387758831590493590[25] = 0;
   out_2387758831590493590[26] = 0;
   out_2387758831590493590[27] = 0;
   out_2387758831590493590[28] = 0;
   out_2387758831590493590[29] = 0;
   out_2387758831590493590[30] = 0;
   out_2387758831590493590[31] = 0;
   out_2387758831590493590[32] = 0;
   out_2387758831590493590[33] = 0;
   out_2387758831590493590[34] = 0;
   out_2387758831590493590[35] = 0;
   out_2387758831590493590[36] = 0;
   out_2387758831590493590[37] = 0;
   out_2387758831590493590[38] = 0;
   out_2387758831590493590[39] = 1;
   out_2387758831590493590[40] = 0;
   out_2387758831590493590[41] = 0;
   out_2387758831590493590[42] = 0;
   out_2387758831590493590[43] = 0;
   out_2387758831590493590[44] = 0;
   out_2387758831590493590[45] = 0;
   out_2387758831590493590[46] = 0;
   out_2387758831590493590[47] = 0;
   out_2387758831590493590[48] = 0;
   out_2387758831590493590[49] = 0;
   out_2387758831590493590[50] = 0;
   out_2387758831590493590[51] = 0;
   out_2387758831590493590[52] = 0;
   out_2387758831590493590[53] = 0;
   out_2387758831590493590[54] = 0;
   out_2387758831590493590[55] = 0;
   out_2387758831590493590[56] = 0;
   out_2387758831590493590[57] = 0;
   out_2387758831590493590[58] = 0;
   out_2387758831590493590[59] = 0;
   out_2387758831590493590[60] = 0;
   out_2387758831590493590[61] = 0;
   out_2387758831590493590[62] = 1;
   out_2387758831590493590[63] = 0;
   out_2387758831590493590[64] = 0;
   out_2387758831590493590[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8966725824989906990) {
  H(in_vec, out_8966725824989906990);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7052001764481871532) {
  err_fun(nom_x, delta_x, out_7052001764481871532);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1158336787041246033) {
  inv_err_fun(nom_x, true_x, out_1158336787041246033);
}
void live_H_mod_fun(double *state, double *out_6507532050145030666) {
  H_mod_fun(state, out_6507532050145030666);
}
void live_f_fun(double *state, double dt, double *out_1604922508353746630) {
  f_fun(state,  dt, out_1604922508353746630);
}
void live_F_fun(double *state, double dt, double *out_50739696382799731) {
  F_fun(state,  dt, out_50739696382799731);
}
void live_h_4(double *state, double *unused, double *out_2283543297913815152) {
  h_4(state, unused, out_2283543297913815152);
}
void live_H_4(double *state, double *unused, double *out_5143408797123224918) {
  H_4(state, unused, out_5143408797123224918);
}
void live_h_9(double *state, double *unused, double *out_7773400606407566715) {
  h_9(state, unused, out_7773400606407566715);
}
void live_H_9(double *state, double *unused, double *out_6016116341321879228) {
  H_9(state, unused, out_6016116341321879228);
}
void live_h_10(double *state, double *unused, double *out_8311890673652792723) {
  h_10(state, unused, out_8311890673652792723);
}
void live_H_10(double *state, double *unused, double *out_7263949073185548482) {
  H_10(state, unused, out_7263949073185548482);
}
void live_h_12(double *state, double *unused, double *out_6834930411344106958) {
  h_12(state, unused, out_6834930411344106958);
}
void live_H_12(double *state, double *unused, double *out_8283878868554364903) {
  H_12(state, unused, out_8283878868554364903);
}
void live_h_35(double *state, double *unused, double *out_6074010352484428937) {
  h_35(state, unused, out_6074010352484428937);
}
void live_H_35(double *state, double *unused, double *out_5538315836229351194) {
  H_35(state, unused, out_5538315836229351194);
}
void live_h_32(double *state, double *unused, double *out_208919398550340897) {
  h_32(state, unused, out_208919398550340897);
}
void live_H_32(double *state, double *unused, double *out_8641235639436572763) {
  H_32(state, unused, out_8641235639436572763);
}
void live_h_13(double *state, double *unused, double *out_776042024312951559) {
  h_13(state, unused, out_776042024312951559);
}
void live_H_13(double *state, double *unused, double *out_1894413721670428005) {
  H_13(state, unused, out_1894413721670428005);
}
void live_h_14(double *state, double *unused, double *out_7773400606407566715) {
  h_14(state, unused, out_7773400606407566715);
}
void live_H_14(double *state, double *unused, double *out_6016116341321879228) {
  H_14(state, unused, out_6016116341321879228);
}
void live_h_33(double *state, double *unused, double *out_254181503398324334) {
  h_33(state, unused, out_254181503398324334);
}
void live_H_33(double *state, double *unused, double *out_2387758831590493590) {
  H_33(state, unused, out_2387758831590493590);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
