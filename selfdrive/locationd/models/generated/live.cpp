#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4723732251547718860) {
   out_4723732251547718860[0] = 0;
   out_4723732251547718860[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4723732251547718860[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4723732251547718860[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4723732251547718860[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4723732251547718860[5] = -sin(in_vec[1]);
   out_4723732251547718860[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4723732251547718860[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4723732251547718860[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4723732251547718860[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4723732251547718860[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4723732251547718860[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4723732251547718860[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4723732251547718860[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4723732251547718860[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4723732251547718860[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4723732251547718860[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4723732251547718860[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8039421302295105776) {
   out_8039421302295105776[0] = delta_x[0] + nom_x[0];
   out_8039421302295105776[1] = delta_x[1] + nom_x[1];
   out_8039421302295105776[2] = delta_x[2] + nom_x[2];
   out_8039421302295105776[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8039421302295105776[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8039421302295105776[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8039421302295105776[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8039421302295105776[7] = delta_x[6] + nom_x[7];
   out_8039421302295105776[8] = delta_x[7] + nom_x[8];
   out_8039421302295105776[9] = delta_x[8] + nom_x[9];
   out_8039421302295105776[10] = delta_x[9] + nom_x[10];
   out_8039421302295105776[11] = delta_x[10] + nom_x[11];
   out_8039421302295105776[12] = delta_x[11] + nom_x[12];
   out_8039421302295105776[13] = delta_x[12] + nom_x[13];
   out_8039421302295105776[14] = delta_x[13] + nom_x[14];
   out_8039421302295105776[15] = delta_x[14] + nom_x[15];
   out_8039421302295105776[16] = delta_x[15] + nom_x[16];
   out_8039421302295105776[17] = delta_x[16] + nom_x[17];
   out_8039421302295105776[18] = delta_x[17] + nom_x[18];
   out_8039421302295105776[19] = delta_x[18] + nom_x[19];
   out_8039421302295105776[20] = delta_x[19] + nom_x[20];
   out_8039421302295105776[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5258012845381697229) {
   out_5258012845381697229[0] = -nom_x[0] + true_x[0];
   out_5258012845381697229[1] = -nom_x[1] + true_x[1];
   out_5258012845381697229[2] = -nom_x[2] + true_x[2];
   out_5258012845381697229[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5258012845381697229[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5258012845381697229[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5258012845381697229[6] = -nom_x[7] + true_x[7];
   out_5258012845381697229[7] = -nom_x[8] + true_x[8];
   out_5258012845381697229[8] = -nom_x[9] + true_x[9];
   out_5258012845381697229[9] = -nom_x[10] + true_x[10];
   out_5258012845381697229[10] = -nom_x[11] + true_x[11];
   out_5258012845381697229[11] = -nom_x[12] + true_x[12];
   out_5258012845381697229[12] = -nom_x[13] + true_x[13];
   out_5258012845381697229[13] = -nom_x[14] + true_x[14];
   out_5258012845381697229[14] = -nom_x[15] + true_x[15];
   out_5258012845381697229[15] = -nom_x[16] + true_x[16];
   out_5258012845381697229[16] = -nom_x[17] + true_x[17];
   out_5258012845381697229[17] = -nom_x[18] + true_x[18];
   out_5258012845381697229[18] = -nom_x[19] + true_x[19];
   out_5258012845381697229[19] = -nom_x[20] + true_x[20];
   out_5258012845381697229[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4602111055287638084) {
   out_4602111055287638084[0] = 1.0;
   out_4602111055287638084[1] = 0;
   out_4602111055287638084[2] = 0;
   out_4602111055287638084[3] = 0;
   out_4602111055287638084[4] = 0;
   out_4602111055287638084[5] = 0;
   out_4602111055287638084[6] = 0;
   out_4602111055287638084[7] = 0;
   out_4602111055287638084[8] = 0;
   out_4602111055287638084[9] = 0;
   out_4602111055287638084[10] = 0;
   out_4602111055287638084[11] = 0;
   out_4602111055287638084[12] = 0;
   out_4602111055287638084[13] = 0;
   out_4602111055287638084[14] = 0;
   out_4602111055287638084[15] = 0;
   out_4602111055287638084[16] = 0;
   out_4602111055287638084[17] = 0;
   out_4602111055287638084[18] = 0;
   out_4602111055287638084[19] = 0;
   out_4602111055287638084[20] = 0;
   out_4602111055287638084[21] = 0;
   out_4602111055287638084[22] = 1.0;
   out_4602111055287638084[23] = 0;
   out_4602111055287638084[24] = 0;
   out_4602111055287638084[25] = 0;
   out_4602111055287638084[26] = 0;
   out_4602111055287638084[27] = 0;
   out_4602111055287638084[28] = 0;
   out_4602111055287638084[29] = 0;
   out_4602111055287638084[30] = 0;
   out_4602111055287638084[31] = 0;
   out_4602111055287638084[32] = 0;
   out_4602111055287638084[33] = 0;
   out_4602111055287638084[34] = 0;
   out_4602111055287638084[35] = 0;
   out_4602111055287638084[36] = 0;
   out_4602111055287638084[37] = 0;
   out_4602111055287638084[38] = 0;
   out_4602111055287638084[39] = 0;
   out_4602111055287638084[40] = 0;
   out_4602111055287638084[41] = 0;
   out_4602111055287638084[42] = 0;
   out_4602111055287638084[43] = 0;
   out_4602111055287638084[44] = 1.0;
   out_4602111055287638084[45] = 0;
   out_4602111055287638084[46] = 0;
   out_4602111055287638084[47] = 0;
   out_4602111055287638084[48] = 0;
   out_4602111055287638084[49] = 0;
   out_4602111055287638084[50] = 0;
   out_4602111055287638084[51] = 0;
   out_4602111055287638084[52] = 0;
   out_4602111055287638084[53] = 0;
   out_4602111055287638084[54] = 0;
   out_4602111055287638084[55] = 0;
   out_4602111055287638084[56] = 0;
   out_4602111055287638084[57] = 0;
   out_4602111055287638084[58] = 0;
   out_4602111055287638084[59] = 0;
   out_4602111055287638084[60] = 0;
   out_4602111055287638084[61] = 0;
   out_4602111055287638084[62] = 0;
   out_4602111055287638084[63] = 0;
   out_4602111055287638084[64] = 0;
   out_4602111055287638084[65] = 0;
   out_4602111055287638084[66] = -0.5*state[4];
   out_4602111055287638084[67] = -0.5*state[5];
   out_4602111055287638084[68] = -0.5*state[6];
   out_4602111055287638084[69] = 0;
   out_4602111055287638084[70] = 0;
   out_4602111055287638084[71] = 0;
   out_4602111055287638084[72] = 0;
   out_4602111055287638084[73] = 0;
   out_4602111055287638084[74] = 0;
   out_4602111055287638084[75] = 0;
   out_4602111055287638084[76] = 0;
   out_4602111055287638084[77] = 0;
   out_4602111055287638084[78] = 0;
   out_4602111055287638084[79] = 0;
   out_4602111055287638084[80] = 0;
   out_4602111055287638084[81] = 0;
   out_4602111055287638084[82] = 0;
   out_4602111055287638084[83] = 0;
   out_4602111055287638084[84] = 0;
   out_4602111055287638084[85] = 0;
   out_4602111055287638084[86] = 0;
   out_4602111055287638084[87] = 0.5*state[3];
   out_4602111055287638084[88] = 0.5*state[6];
   out_4602111055287638084[89] = -0.5*state[5];
   out_4602111055287638084[90] = 0;
   out_4602111055287638084[91] = 0;
   out_4602111055287638084[92] = 0;
   out_4602111055287638084[93] = 0;
   out_4602111055287638084[94] = 0;
   out_4602111055287638084[95] = 0;
   out_4602111055287638084[96] = 0;
   out_4602111055287638084[97] = 0;
   out_4602111055287638084[98] = 0;
   out_4602111055287638084[99] = 0;
   out_4602111055287638084[100] = 0;
   out_4602111055287638084[101] = 0;
   out_4602111055287638084[102] = 0;
   out_4602111055287638084[103] = 0;
   out_4602111055287638084[104] = 0;
   out_4602111055287638084[105] = 0;
   out_4602111055287638084[106] = 0;
   out_4602111055287638084[107] = 0;
   out_4602111055287638084[108] = -0.5*state[6];
   out_4602111055287638084[109] = 0.5*state[3];
   out_4602111055287638084[110] = 0.5*state[4];
   out_4602111055287638084[111] = 0;
   out_4602111055287638084[112] = 0;
   out_4602111055287638084[113] = 0;
   out_4602111055287638084[114] = 0;
   out_4602111055287638084[115] = 0;
   out_4602111055287638084[116] = 0;
   out_4602111055287638084[117] = 0;
   out_4602111055287638084[118] = 0;
   out_4602111055287638084[119] = 0;
   out_4602111055287638084[120] = 0;
   out_4602111055287638084[121] = 0;
   out_4602111055287638084[122] = 0;
   out_4602111055287638084[123] = 0;
   out_4602111055287638084[124] = 0;
   out_4602111055287638084[125] = 0;
   out_4602111055287638084[126] = 0;
   out_4602111055287638084[127] = 0;
   out_4602111055287638084[128] = 0;
   out_4602111055287638084[129] = 0.5*state[5];
   out_4602111055287638084[130] = -0.5*state[4];
   out_4602111055287638084[131] = 0.5*state[3];
   out_4602111055287638084[132] = 0;
   out_4602111055287638084[133] = 0;
   out_4602111055287638084[134] = 0;
   out_4602111055287638084[135] = 0;
   out_4602111055287638084[136] = 0;
   out_4602111055287638084[137] = 0;
   out_4602111055287638084[138] = 0;
   out_4602111055287638084[139] = 0;
   out_4602111055287638084[140] = 0;
   out_4602111055287638084[141] = 0;
   out_4602111055287638084[142] = 0;
   out_4602111055287638084[143] = 0;
   out_4602111055287638084[144] = 0;
   out_4602111055287638084[145] = 0;
   out_4602111055287638084[146] = 0;
   out_4602111055287638084[147] = 0;
   out_4602111055287638084[148] = 0;
   out_4602111055287638084[149] = 0;
   out_4602111055287638084[150] = 0;
   out_4602111055287638084[151] = 0;
   out_4602111055287638084[152] = 0;
   out_4602111055287638084[153] = 1.0;
   out_4602111055287638084[154] = 0;
   out_4602111055287638084[155] = 0;
   out_4602111055287638084[156] = 0;
   out_4602111055287638084[157] = 0;
   out_4602111055287638084[158] = 0;
   out_4602111055287638084[159] = 0;
   out_4602111055287638084[160] = 0;
   out_4602111055287638084[161] = 0;
   out_4602111055287638084[162] = 0;
   out_4602111055287638084[163] = 0;
   out_4602111055287638084[164] = 0;
   out_4602111055287638084[165] = 0;
   out_4602111055287638084[166] = 0;
   out_4602111055287638084[167] = 0;
   out_4602111055287638084[168] = 0;
   out_4602111055287638084[169] = 0;
   out_4602111055287638084[170] = 0;
   out_4602111055287638084[171] = 0;
   out_4602111055287638084[172] = 0;
   out_4602111055287638084[173] = 0;
   out_4602111055287638084[174] = 0;
   out_4602111055287638084[175] = 1.0;
   out_4602111055287638084[176] = 0;
   out_4602111055287638084[177] = 0;
   out_4602111055287638084[178] = 0;
   out_4602111055287638084[179] = 0;
   out_4602111055287638084[180] = 0;
   out_4602111055287638084[181] = 0;
   out_4602111055287638084[182] = 0;
   out_4602111055287638084[183] = 0;
   out_4602111055287638084[184] = 0;
   out_4602111055287638084[185] = 0;
   out_4602111055287638084[186] = 0;
   out_4602111055287638084[187] = 0;
   out_4602111055287638084[188] = 0;
   out_4602111055287638084[189] = 0;
   out_4602111055287638084[190] = 0;
   out_4602111055287638084[191] = 0;
   out_4602111055287638084[192] = 0;
   out_4602111055287638084[193] = 0;
   out_4602111055287638084[194] = 0;
   out_4602111055287638084[195] = 0;
   out_4602111055287638084[196] = 0;
   out_4602111055287638084[197] = 1.0;
   out_4602111055287638084[198] = 0;
   out_4602111055287638084[199] = 0;
   out_4602111055287638084[200] = 0;
   out_4602111055287638084[201] = 0;
   out_4602111055287638084[202] = 0;
   out_4602111055287638084[203] = 0;
   out_4602111055287638084[204] = 0;
   out_4602111055287638084[205] = 0;
   out_4602111055287638084[206] = 0;
   out_4602111055287638084[207] = 0;
   out_4602111055287638084[208] = 0;
   out_4602111055287638084[209] = 0;
   out_4602111055287638084[210] = 0;
   out_4602111055287638084[211] = 0;
   out_4602111055287638084[212] = 0;
   out_4602111055287638084[213] = 0;
   out_4602111055287638084[214] = 0;
   out_4602111055287638084[215] = 0;
   out_4602111055287638084[216] = 0;
   out_4602111055287638084[217] = 0;
   out_4602111055287638084[218] = 0;
   out_4602111055287638084[219] = 1.0;
   out_4602111055287638084[220] = 0;
   out_4602111055287638084[221] = 0;
   out_4602111055287638084[222] = 0;
   out_4602111055287638084[223] = 0;
   out_4602111055287638084[224] = 0;
   out_4602111055287638084[225] = 0;
   out_4602111055287638084[226] = 0;
   out_4602111055287638084[227] = 0;
   out_4602111055287638084[228] = 0;
   out_4602111055287638084[229] = 0;
   out_4602111055287638084[230] = 0;
   out_4602111055287638084[231] = 0;
   out_4602111055287638084[232] = 0;
   out_4602111055287638084[233] = 0;
   out_4602111055287638084[234] = 0;
   out_4602111055287638084[235] = 0;
   out_4602111055287638084[236] = 0;
   out_4602111055287638084[237] = 0;
   out_4602111055287638084[238] = 0;
   out_4602111055287638084[239] = 0;
   out_4602111055287638084[240] = 0;
   out_4602111055287638084[241] = 1.0;
   out_4602111055287638084[242] = 0;
   out_4602111055287638084[243] = 0;
   out_4602111055287638084[244] = 0;
   out_4602111055287638084[245] = 0;
   out_4602111055287638084[246] = 0;
   out_4602111055287638084[247] = 0;
   out_4602111055287638084[248] = 0;
   out_4602111055287638084[249] = 0;
   out_4602111055287638084[250] = 0;
   out_4602111055287638084[251] = 0;
   out_4602111055287638084[252] = 0;
   out_4602111055287638084[253] = 0;
   out_4602111055287638084[254] = 0;
   out_4602111055287638084[255] = 0;
   out_4602111055287638084[256] = 0;
   out_4602111055287638084[257] = 0;
   out_4602111055287638084[258] = 0;
   out_4602111055287638084[259] = 0;
   out_4602111055287638084[260] = 0;
   out_4602111055287638084[261] = 0;
   out_4602111055287638084[262] = 0;
   out_4602111055287638084[263] = 1.0;
   out_4602111055287638084[264] = 0;
   out_4602111055287638084[265] = 0;
   out_4602111055287638084[266] = 0;
   out_4602111055287638084[267] = 0;
   out_4602111055287638084[268] = 0;
   out_4602111055287638084[269] = 0;
   out_4602111055287638084[270] = 0;
   out_4602111055287638084[271] = 0;
   out_4602111055287638084[272] = 0;
   out_4602111055287638084[273] = 0;
   out_4602111055287638084[274] = 0;
   out_4602111055287638084[275] = 0;
   out_4602111055287638084[276] = 0;
   out_4602111055287638084[277] = 0;
   out_4602111055287638084[278] = 0;
   out_4602111055287638084[279] = 0;
   out_4602111055287638084[280] = 0;
   out_4602111055287638084[281] = 0;
   out_4602111055287638084[282] = 0;
   out_4602111055287638084[283] = 0;
   out_4602111055287638084[284] = 0;
   out_4602111055287638084[285] = 1.0;
   out_4602111055287638084[286] = 0;
   out_4602111055287638084[287] = 0;
   out_4602111055287638084[288] = 0;
   out_4602111055287638084[289] = 0;
   out_4602111055287638084[290] = 0;
   out_4602111055287638084[291] = 0;
   out_4602111055287638084[292] = 0;
   out_4602111055287638084[293] = 0;
   out_4602111055287638084[294] = 0;
   out_4602111055287638084[295] = 0;
   out_4602111055287638084[296] = 0;
   out_4602111055287638084[297] = 0;
   out_4602111055287638084[298] = 0;
   out_4602111055287638084[299] = 0;
   out_4602111055287638084[300] = 0;
   out_4602111055287638084[301] = 0;
   out_4602111055287638084[302] = 0;
   out_4602111055287638084[303] = 0;
   out_4602111055287638084[304] = 0;
   out_4602111055287638084[305] = 0;
   out_4602111055287638084[306] = 0;
   out_4602111055287638084[307] = 1.0;
   out_4602111055287638084[308] = 0;
   out_4602111055287638084[309] = 0;
   out_4602111055287638084[310] = 0;
   out_4602111055287638084[311] = 0;
   out_4602111055287638084[312] = 0;
   out_4602111055287638084[313] = 0;
   out_4602111055287638084[314] = 0;
   out_4602111055287638084[315] = 0;
   out_4602111055287638084[316] = 0;
   out_4602111055287638084[317] = 0;
   out_4602111055287638084[318] = 0;
   out_4602111055287638084[319] = 0;
   out_4602111055287638084[320] = 0;
   out_4602111055287638084[321] = 0;
   out_4602111055287638084[322] = 0;
   out_4602111055287638084[323] = 0;
   out_4602111055287638084[324] = 0;
   out_4602111055287638084[325] = 0;
   out_4602111055287638084[326] = 0;
   out_4602111055287638084[327] = 0;
   out_4602111055287638084[328] = 0;
   out_4602111055287638084[329] = 1.0;
   out_4602111055287638084[330] = 0;
   out_4602111055287638084[331] = 0;
   out_4602111055287638084[332] = 0;
   out_4602111055287638084[333] = 0;
   out_4602111055287638084[334] = 0;
   out_4602111055287638084[335] = 0;
   out_4602111055287638084[336] = 0;
   out_4602111055287638084[337] = 0;
   out_4602111055287638084[338] = 0;
   out_4602111055287638084[339] = 0;
   out_4602111055287638084[340] = 0;
   out_4602111055287638084[341] = 0;
   out_4602111055287638084[342] = 0;
   out_4602111055287638084[343] = 0;
   out_4602111055287638084[344] = 0;
   out_4602111055287638084[345] = 0;
   out_4602111055287638084[346] = 0;
   out_4602111055287638084[347] = 0;
   out_4602111055287638084[348] = 0;
   out_4602111055287638084[349] = 0;
   out_4602111055287638084[350] = 0;
   out_4602111055287638084[351] = 1.0;
   out_4602111055287638084[352] = 0;
   out_4602111055287638084[353] = 0;
   out_4602111055287638084[354] = 0;
   out_4602111055287638084[355] = 0;
   out_4602111055287638084[356] = 0;
   out_4602111055287638084[357] = 0;
   out_4602111055287638084[358] = 0;
   out_4602111055287638084[359] = 0;
   out_4602111055287638084[360] = 0;
   out_4602111055287638084[361] = 0;
   out_4602111055287638084[362] = 0;
   out_4602111055287638084[363] = 0;
   out_4602111055287638084[364] = 0;
   out_4602111055287638084[365] = 0;
   out_4602111055287638084[366] = 0;
   out_4602111055287638084[367] = 0;
   out_4602111055287638084[368] = 0;
   out_4602111055287638084[369] = 0;
   out_4602111055287638084[370] = 0;
   out_4602111055287638084[371] = 0;
   out_4602111055287638084[372] = 0;
   out_4602111055287638084[373] = 1.0;
   out_4602111055287638084[374] = 0;
   out_4602111055287638084[375] = 0;
   out_4602111055287638084[376] = 0;
   out_4602111055287638084[377] = 0;
   out_4602111055287638084[378] = 0;
   out_4602111055287638084[379] = 0;
   out_4602111055287638084[380] = 0;
   out_4602111055287638084[381] = 0;
   out_4602111055287638084[382] = 0;
   out_4602111055287638084[383] = 0;
   out_4602111055287638084[384] = 0;
   out_4602111055287638084[385] = 0;
   out_4602111055287638084[386] = 0;
   out_4602111055287638084[387] = 0;
   out_4602111055287638084[388] = 0;
   out_4602111055287638084[389] = 0;
   out_4602111055287638084[390] = 0;
   out_4602111055287638084[391] = 0;
   out_4602111055287638084[392] = 0;
   out_4602111055287638084[393] = 0;
   out_4602111055287638084[394] = 0;
   out_4602111055287638084[395] = 1.0;
   out_4602111055287638084[396] = 0;
   out_4602111055287638084[397] = 0;
   out_4602111055287638084[398] = 0;
   out_4602111055287638084[399] = 0;
   out_4602111055287638084[400] = 0;
   out_4602111055287638084[401] = 0;
   out_4602111055287638084[402] = 0;
   out_4602111055287638084[403] = 0;
   out_4602111055287638084[404] = 0;
   out_4602111055287638084[405] = 0;
   out_4602111055287638084[406] = 0;
   out_4602111055287638084[407] = 0;
   out_4602111055287638084[408] = 0;
   out_4602111055287638084[409] = 0;
   out_4602111055287638084[410] = 0;
   out_4602111055287638084[411] = 0;
   out_4602111055287638084[412] = 0;
   out_4602111055287638084[413] = 0;
   out_4602111055287638084[414] = 0;
   out_4602111055287638084[415] = 0;
   out_4602111055287638084[416] = 0;
   out_4602111055287638084[417] = 1.0;
   out_4602111055287638084[418] = 0;
   out_4602111055287638084[419] = 0;
   out_4602111055287638084[420] = 0;
   out_4602111055287638084[421] = 0;
   out_4602111055287638084[422] = 0;
   out_4602111055287638084[423] = 0;
   out_4602111055287638084[424] = 0;
   out_4602111055287638084[425] = 0;
   out_4602111055287638084[426] = 0;
   out_4602111055287638084[427] = 0;
   out_4602111055287638084[428] = 0;
   out_4602111055287638084[429] = 0;
   out_4602111055287638084[430] = 0;
   out_4602111055287638084[431] = 0;
   out_4602111055287638084[432] = 0;
   out_4602111055287638084[433] = 0;
   out_4602111055287638084[434] = 0;
   out_4602111055287638084[435] = 0;
   out_4602111055287638084[436] = 0;
   out_4602111055287638084[437] = 0;
   out_4602111055287638084[438] = 0;
   out_4602111055287638084[439] = 1.0;
   out_4602111055287638084[440] = 0;
   out_4602111055287638084[441] = 0;
   out_4602111055287638084[442] = 0;
   out_4602111055287638084[443] = 0;
   out_4602111055287638084[444] = 0;
   out_4602111055287638084[445] = 0;
   out_4602111055287638084[446] = 0;
   out_4602111055287638084[447] = 0;
   out_4602111055287638084[448] = 0;
   out_4602111055287638084[449] = 0;
   out_4602111055287638084[450] = 0;
   out_4602111055287638084[451] = 0;
   out_4602111055287638084[452] = 0;
   out_4602111055287638084[453] = 0;
   out_4602111055287638084[454] = 0;
   out_4602111055287638084[455] = 0;
   out_4602111055287638084[456] = 0;
   out_4602111055287638084[457] = 0;
   out_4602111055287638084[458] = 0;
   out_4602111055287638084[459] = 0;
   out_4602111055287638084[460] = 0;
   out_4602111055287638084[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2494991483937947279) {
   out_2494991483937947279[0] = dt*state[7] + state[0];
   out_2494991483937947279[1] = dt*state[8] + state[1];
   out_2494991483937947279[2] = dt*state[9] + state[2];
   out_2494991483937947279[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2494991483937947279[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2494991483937947279[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2494991483937947279[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2494991483937947279[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2494991483937947279[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2494991483937947279[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2494991483937947279[10] = state[10];
   out_2494991483937947279[11] = state[11];
   out_2494991483937947279[12] = state[12];
   out_2494991483937947279[13] = state[13];
   out_2494991483937947279[14] = state[14];
   out_2494991483937947279[15] = state[15];
   out_2494991483937947279[16] = state[16];
   out_2494991483937947279[17] = state[17];
   out_2494991483937947279[18] = state[18];
   out_2494991483937947279[19] = state[19];
   out_2494991483937947279[20] = state[20];
   out_2494991483937947279[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5242126298311218128) {
   out_5242126298311218128[0] = 1;
   out_5242126298311218128[1] = 0;
   out_5242126298311218128[2] = 0;
   out_5242126298311218128[3] = 0;
   out_5242126298311218128[4] = 0;
   out_5242126298311218128[5] = 0;
   out_5242126298311218128[6] = dt;
   out_5242126298311218128[7] = 0;
   out_5242126298311218128[8] = 0;
   out_5242126298311218128[9] = 0;
   out_5242126298311218128[10] = 0;
   out_5242126298311218128[11] = 0;
   out_5242126298311218128[12] = 0;
   out_5242126298311218128[13] = 0;
   out_5242126298311218128[14] = 0;
   out_5242126298311218128[15] = 0;
   out_5242126298311218128[16] = 0;
   out_5242126298311218128[17] = 0;
   out_5242126298311218128[18] = 0;
   out_5242126298311218128[19] = 0;
   out_5242126298311218128[20] = 0;
   out_5242126298311218128[21] = 0;
   out_5242126298311218128[22] = 1;
   out_5242126298311218128[23] = 0;
   out_5242126298311218128[24] = 0;
   out_5242126298311218128[25] = 0;
   out_5242126298311218128[26] = 0;
   out_5242126298311218128[27] = 0;
   out_5242126298311218128[28] = dt;
   out_5242126298311218128[29] = 0;
   out_5242126298311218128[30] = 0;
   out_5242126298311218128[31] = 0;
   out_5242126298311218128[32] = 0;
   out_5242126298311218128[33] = 0;
   out_5242126298311218128[34] = 0;
   out_5242126298311218128[35] = 0;
   out_5242126298311218128[36] = 0;
   out_5242126298311218128[37] = 0;
   out_5242126298311218128[38] = 0;
   out_5242126298311218128[39] = 0;
   out_5242126298311218128[40] = 0;
   out_5242126298311218128[41] = 0;
   out_5242126298311218128[42] = 0;
   out_5242126298311218128[43] = 0;
   out_5242126298311218128[44] = 1;
   out_5242126298311218128[45] = 0;
   out_5242126298311218128[46] = 0;
   out_5242126298311218128[47] = 0;
   out_5242126298311218128[48] = 0;
   out_5242126298311218128[49] = 0;
   out_5242126298311218128[50] = dt;
   out_5242126298311218128[51] = 0;
   out_5242126298311218128[52] = 0;
   out_5242126298311218128[53] = 0;
   out_5242126298311218128[54] = 0;
   out_5242126298311218128[55] = 0;
   out_5242126298311218128[56] = 0;
   out_5242126298311218128[57] = 0;
   out_5242126298311218128[58] = 0;
   out_5242126298311218128[59] = 0;
   out_5242126298311218128[60] = 0;
   out_5242126298311218128[61] = 0;
   out_5242126298311218128[62] = 0;
   out_5242126298311218128[63] = 0;
   out_5242126298311218128[64] = 0;
   out_5242126298311218128[65] = 0;
   out_5242126298311218128[66] = 1;
   out_5242126298311218128[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5242126298311218128[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5242126298311218128[69] = 0;
   out_5242126298311218128[70] = 0;
   out_5242126298311218128[71] = 0;
   out_5242126298311218128[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5242126298311218128[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5242126298311218128[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5242126298311218128[75] = 0;
   out_5242126298311218128[76] = 0;
   out_5242126298311218128[77] = 0;
   out_5242126298311218128[78] = 0;
   out_5242126298311218128[79] = 0;
   out_5242126298311218128[80] = 0;
   out_5242126298311218128[81] = 0;
   out_5242126298311218128[82] = 0;
   out_5242126298311218128[83] = 0;
   out_5242126298311218128[84] = 0;
   out_5242126298311218128[85] = 0;
   out_5242126298311218128[86] = 0;
   out_5242126298311218128[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5242126298311218128[88] = 1;
   out_5242126298311218128[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5242126298311218128[90] = 0;
   out_5242126298311218128[91] = 0;
   out_5242126298311218128[92] = 0;
   out_5242126298311218128[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5242126298311218128[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5242126298311218128[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5242126298311218128[96] = 0;
   out_5242126298311218128[97] = 0;
   out_5242126298311218128[98] = 0;
   out_5242126298311218128[99] = 0;
   out_5242126298311218128[100] = 0;
   out_5242126298311218128[101] = 0;
   out_5242126298311218128[102] = 0;
   out_5242126298311218128[103] = 0;
   out_5242126298311218128[104] = 0;
   out_5242126298311218128[105] = 0;
   out_5242126298311218128[106] = 0;
   out_5242126298311218128[107] = 0;
   out_5242126298311218128[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5242126298311218128[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5242126298311218128[110] = 1;
   out_5242126298311218128[111] = 0;
   out_5242126298311218128[112] = 0;
   out_5242126298311218128[113] = 0;
   out_5242126298311218128[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5242126298311218128[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5242126298311218128[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5242126298311218128[117] = 0;
   out_5242126298311218128[118] = 0;
   out_5242126298311218128[119] = 0;
   out_5242126298311218128[120] = 0;
   out_5242126298311218128[121] = 0;
   out_5242126298311218128[122] = 0;
   out_5242126298311218128[123] = 0;
   out_5242126298311218128[124] = 0;
   out_5242126298311218128[125] = 0;
   out_5242126298311218128[126] = 0;
   out_5242126298311218128[127] = 0;
   out_5242126298311218128[128] = 0;
   out_5242126298311218128[129] = 0;
   out_5242126298311218128[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5242126298311218128[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5242126298311218128[132] = 1;
   out_5242126298311218128[133] = 0;
   out_5242126298311218128[134] = 0;
   out_5242126298311218128[135] = 0;
   out_5242126298311218128[136] = 0;
   out_5242126298311218128[137] = 0;
   out_5242126298311218128[138] = 0;
   out_5242126298311218128[139] = 0;
   out_5242126298311218128[140] = 0;
   out_5242126298311218128[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5242126298311218128[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5242126298311218128[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5242126298311218128[144] = 0;
   out_5242126298311218128[145] = 0;
   out_5242126298311218128[146] = 0;
   out_5242126298311218128[147] = 0;
   out_5242126298311218128[148] = 0;
   out_5242126298311218128[149] = 0;
   out_5242126298311218128[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5242126298311218128[151] = 0;
   out_5242126298311218128[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5242126298311218128[153] = 0;
   out_5242126298311218128[154] = 1;
   out_5242126298311218128[155] = 0;
   out_5242126298311218128[156] = 0;
   out_5242126298311218128[157] = 0;
   out_5242126298311218128[158] = 0;
   out_5242126298311218128[159] = 0;
   out_5242126298311218128[160] = 0;
   out_5242126298311218128[161] = 0;
   out_5242126298311218128[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5242126298311218128[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5242126298311218128[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5242126298311218128[165] = 0;
   out_5242126298311218128[166] = 0;
   out_5242126298311218128[167] = 0;
   out_5242126298311218128[168] = 0;
   out_5242126298311218128[169] = 0;
   out_5242126298311218128[170] = 0;
   out_5242126298311218128[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5242126298311218128[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5242126298311218128[173] = 0;
   out_5242126298311218128[174] = 0;
   out_5242126298311218128[175] = 0;
   out_5242126298311218128[176] = 1;
   out_5242126298311218128[177] = 0;
   out_5242126298311218128[178] = 0;
   out_5242126298311218128[179] = 0;
   out_5242126298311218128[180] = 0;
   out_5242126298311218128[181] = 0;
   out_5242126298311218128[182] = 0;
   out_5242126298311218128[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5242126298311218128[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5242126298311218128[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5242126298311218128[186] = 0;
   out_5242126298311218128[187] = 0;
   out_5242126298311218128[188] = 0;
   out_5242126298311218128[189] = 0;
   out_5242126298311218128[190] = 0;
   out_5242126298311218128[191] = 0;
   out_5242126298311218128[192] = 0;
   out_5242126298311218128[193] = 0;
   out_5242126298311218128[194] = 0;
   out_5242126298311218128[195] = 0;
   out_5242126298311218128[196] = 0;
   out_5242126298311218128[197] = 0;
   out_5242126298311218128[198] = 1;
   out_5242126298311218128[199] = 0;
   out_5242126298311218128[200] = 0;
   out_5242126298311218128[201] = 0;
   out_5242126298311218128[202] = 0;
   out_5242126298311218128[203] = 0;
   out_5242126298311218128[204] = 0;
   out_5242126298311218128[205] = 0;
   out_5242126298311218128[206] = 0;
   out_5242126298311218128[207] = 0;
   out_5242126298311218128[208] = 0;
   out_5242126298311218128[209] = 0;
   out_5242126298311218128[210] = 0;
   out_5242126298311218128[211] = 0;
   out_5242126298311218128[212] = 0;
   out_5242126298311218128[213] = 0;
   out_5242126298311218128[214] = 0;
   out_5242126298311218128[215] = 0;
   out_5242126298311218128[216] = 0;
   out_5242126298311218128[217] = 0;
   out_5242126298311218128[218] = 0;
   out_5242126298311218128[219] = 0;
   out_5242126298311218128[220] = 1;
   out_5242126298311218128[221] = 0;
   out_5242126298311218128[222] = 0;
   out_5242126298311218128[223] = 0;
   out_5242126298311218128[224] = 0;
   out_5242126298311218128[225] = 0;
   out_5242126298311218128[226] = 0;
   out_5242126298311218128[227] = 0;
   out_5242126298311218128[228] = 0;
   out_5242126298311218128[229] = 0;
   out_5242126298311218128[230] = 0;
   out_5242126298311218128[231] = 0;
   out_5242126298311218128[232] = 0;
   out_5242126298311218128[233] = 0;
   out_5242126298311218128[234] = 0;
   out_5242126298311218128[235] = 0;
   out_5242126298311218128[236] = 0;
   out_5242126298311218128[237] = 0;
   out_5242126298311218128[238] = 0;
   out_5242126298311218128[239] = 0;
   out_5242126298311218128[240] = 0;
   out_5242126298311218128[241] = 0;
   out_5242126298311218128[242] = 1;
   out_5242126298311218128[243] = 0;
   out_5242126298311218128[244] = 0;
   out_5242126298311218128[245] = 0;
   out_5242126298311218128[246] = 0;
   out_5242126298311218128[247] = 0;
   out_5242126298311218128[248] = 0;
   out_5242126298311218128[249] = 0;
   out_5242126298311218128[250] = 0;
   out_5242126298311218128[251] = 0;
   out_5242126298311218128[252] = 0;
   out_5242126298311218128[253] = 0;
   out_5242126298311218128[254] = 0;
   out_5242126298311218128[255] = 0;
   out_5242126298311218128[256] = 0;
   out_5242126298311218128[257] = 0;
   out_5242126298311218128[258] = 0;
   out_5242126298311218128[259] = 0;
   out_5242126298311218128[260] = 0;
   out_5242126298311218128[261] = 0;
   out_5242126298311218128[262] = 0;
   out_5242126298311218128[263] = 0;
   out_5242126298311218128[264] = 1;
   out_5242126298311218128[265] = 0;
   out_5242126298311218128[266] = 0;
   out_5242126298311218128[267] = 0;
   out_5242126298311218128[268] = 0;
   out_5242126298311218128[269] = 0;
   out_5242126298311218128[270] = 0;
   out_5242126298311218128[271] = 0;
   out_5242126298311218128[272] = 0;
   out_5242126298311218128[273] = 0;
   out_5242126298311218128[274] = 0;
   out_5242126298311218128[275] = 0;
   out_5242126298311218128[276] = 0;
   out_5242126298311218128[277] = 0;
   out_5242126298311218128[278] = 0;
   out_5242126298311218128[279] = 0;
   out_5242126298311218128[280] = 0;
   out_5242126298311218128[281] = 0;
   out_5242126298311218128[282] = 0;
   out_5242126298311218128[283] = 0;
   out_5242126298311218128[284] = 0;
   out_5242126298311218128[285] = 0;
   out_5242126298311218128[286] = 1;
   out_5242126298311218128[287] = 0;
   out_5242126298311218128[288] = 0;
   out_5242126298311218128[289] = 0;
   out_5242126298311218128[290] = 0;
   out_5242126298311218128[291] = 0;
   out_5242126298311218128[292] = 0;
   out_5242126298311218128[293] = 0;
   out_5242126298311218128[294] = 0;
   out_5242126298311218128[295] = 0;
   out_5242126298311218128[296] = 0;
   out_5242126298311218128[297] = 0;
   out_5242126298311218128[298] = 0;
   out_5242126298311218128[299] = 0;
   out_5242126298311218128[300] = 0;
   out_5242126298311218128[301] = 0;
   out_5242126298311218128[302] = 0;
   out_5242126298311218128[303] = 0;
   out_5242126298311218128[304] = 0;
   out_5242126298311218128[305] = 0;
   out_5242126298311218128[306] = 0;
   out_5242126298311218128[307] = 0;
   out_5242126298311218128[308] = 1;
   out_5242126298311218128[309] = 0;
   out_5242126298311218128[310] = 0;
   out_5242126298311218128[311] = 0;
   out_5242126298311218128[312] = 0;
   out_5242126298311218128[313] = 0;
   out_5242126298311218128[314] = 0;
   out_5242126298311218128[315] = 0;
   out_5242126298311218128[316] = 0;
   out_5242126298311218128[317] = 0;
   out_5242126298311218128[318] = 0;
   out_5242126298311218128[319] = 0;
   out_5242126298311218128[320] = 0;
   out_5242126298311218128[321] = 0;
   out_5242126298311218128[322] = 0;
   out_5242126298311218128[323] = 0;
   out_5242126298311218128[324] = 0;
   out_5242126298311218128[325] = 0;
   out_5242126298311218128[326] = 0;
   out_5242126298311218128[327] = 0;
   out_5242126298311218128[328] = 0;
   out_5242126298311218128[329] = 0;
   out_5242126298311218128[330] = 1;
   out_5242126298311218128[331] = 0;
   out_5242126298311218128[332] = 0;
   out_5242126298311218128[333] = 0;
   out_5242126298311218128[334] = 0;
   out_5242126298311218128[335] = 0;
   out_5242126298311218128[336] = 0;
   out_5242126298311218128[337] = 0;
   out_5242126298311218128[338] = 0;
   out_5242126298311218128[339] = 0;
   out_5242126298311218128[340] = 0;
   out_5242126298311218128[341] = 0;
   out_5242126298311218128[342] = 0;
   out_5242126298311218128[343] = 0;
   out_5242126298311218128[344] = 0;
   out_5242126298311218128[345] = 0;
   out_5242126298311218128[346] = 0;
   out_5242126298311218128[347] = 0;
   out_5242126298311218128[348] = 0;
   out_5242126298311218128[349] = 0;
   out_5242126298311218128[350] = 0;
   out_5242126298311218128[351] = 0;
   out_5242126298311218128[352] = 1;
   out_5242126298311218128[353] = 0;
   out_5242126298311218128[354] = 0;
   out_5242126298311218128[355] = 0;
   out_5242126298311218128[356] = 0;
   out_5242126298311218128[357] = 0;
   out_5242126298311218128[358] = 0;
   out_5242126298311218128[359] = 0;
   out_5242126298311218128[360] = 0;
   out_5242126298311218128[361] = 0;
   out_5242126298311218128[362] = 0;
   out_5242126298311218128[363] = 0;
   out_5242126298311218128[364] = 0;
   out_5242126298311218128[365] = 0;
   out_5242126298311218128[366] = 0;
   out_5242126298311218128[367] = 0;
   out_5242126298311218128[368] = 0;
   out_5242126298311218128[369] = 0;
   out_5242126298311218128[370] = 0;
   out_5242126298311218128[371] = 0;
   out_5242126298311218128[372] = 0;
   out_5242126298311218128[373] = 0;
   out_5242126298311218128[374] = 1;
   out_5242126298311218128[375] = 0;
   out_5242126298311218128[376] = 0;
   out_5242126298311218128[377] = 0;
   out_5242126298311218128[378] = 0;
   out_5242126298311218128[379] = 0;
   out_5242126298311218128[380] = 0;
   out_5242126298311218128[381] = 0;
   out_5242126298311218128[382] = 0;
   out_5242126298311218128[383] = 0;
   out_5242126298311218128[384] = 0;
   out_5242126298311218128[385] = 0;
   out_5242126298311218128[386] = 0;
   out_5242126298311218128[387] = 0;
   out_5242126298311218128[388] = 0;
   out_5242126298311218128[389] = 0;
   out_5242126298311218128[390] = 0;
   out_5242126298311218128[391] = 0;
   out_5242126298311218128[392] = 0;
   out_5242126298311218128[393] = 0;
   out_5242126298311218128[394] = 0;
   out_5242126298311218128[395] = 0;
   out_5242126298311218128[396] = 1;
   out_5242126298311218128[397] = 0;
   out_5242126298311218128[398] = 0;
   out_5242126298311218128[399] = 0;
   out_5242126298311218128[400] = 0;
   out_5242126298311218128[401] = 0;
   out_5242126298311218128[402] = 0;
   out_5242126298311218128[403] = 0;
   out_5242126298311218128[404] = 0;
   out_5242126298311218128[405] = 0;
   out_5242126298311218128[406] = 0;
   out_5242126298311218128[407] = 0;
   out_5242126298311218128[408] = 0;
   out_5242126298311218128[409] = 0;
   out_5242126298311218128[410] = 0;
   out_5242126298311218128[411] = 0;
   out_5242126298311218128[412] = 0;
   out_5242126298311218128[413] = 0;
   out_5242126298311218128[414] = 0;
   out_5242126298311218128[415] = 0;
   out_5242126298311218128[416] = 0;
   out_5242126298311218128[417] = 0;
   out_5242126298311218128[418] = 1;
   out_5242126298311218128[419] = 0;
   out_5242126298311218128[420] = 0;
   out_5242126298311218128[421] = 0;
   out_5242126298311218128[422] = 0;
   out_5242126298311218128[423] = 0;
   out_5242126298311218128[424] = 0;
   out_5242126298311218128[425] = 0;
   out_5242126298311218128[426] = 0;
   out_5242126298311218128[427] = 0;
   out_5242126298311218128[428] = 0;
   out_5242126298311218128[429] = 0;
   out_5242126298311218128[430] = 0;
   out_5242126298311218128[431] = 0;
   out_5242126298311218128[432] = 0;
   out_5242126298311218128[433] = 0;
   out_5242126298311218128[434] = 0;
   out_5242126298311218128[435] = 0;
   out_5242126298311218128[436] = 0;
   out_5242126298311218128[437] = 0;
   out_5242126298311218128[438] = 0;
   out_5242126298311218128[439] = 0;
   out_5242126298311218128[440] = 1;
}
void h_4(double *state, double *unused, double *out_7557171517810886780) {
   out_7557171517810886780[0] = state[10] + state[13];
   out_7557171517810886780[1] = state[11] + state[14];
   out_7557171517810886780[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_666163721163740906) {
   out_666163721163740906[0] = 0;
   out_666163721163740906[1] = 0;
   out_666163721163740906[2] = 0;
   out_666163721163740906[3] = 0;
   out_666163721163740906[4] = 0;
   out_666163721163740906[5] = 0;
   out_666163721163740906[6] = 0;
   out_666163721163740906[7] = 0;
   out_666163721163740906[8] = 0;
   out_666163721163740906[9] = 0;
   out_666163721163740906[10] = 1;
   out_666163721163740906[11] = 0;
   out_666163721163740906[12] = 0;
   out_666163721163740906[13] = 1;
   out_666163721163740906[14] = 0;
   out_666163721163740906[15] = 0;
   out_666163721163740906[16] = 0;
   out_666163721163740906[17] = 0;
   out_666163721163740906[18] = 0;
   out_666163721163740906[19] = 0;
   out_666163721163740906[20] = 0;
   out_666163721163740906[21] = 0;
   out_666163721163740906[22] = 0;
   out_666163721163740906[23] = 0;
   out_666163721163740906[24] = 0;
   out_666163721163740906[25] = 0;
   out_666163721163740906[26] = 0;
   out_666163721163740906[27] = 0;
   out_666163721163740906[28] = 0;
   out_666163721163740906[29] = 0;
   out_666163721163740906[30] = 0;
   out_666163721163740906[31] = 0;
   out_666163721163740906[32] = 0;
   out_666163721163740906[33] = 1;
   out_666163721163740906[34] = 0;
   out_666163721163740906[35] = 0;
   out_666163721163740906[36] = 1;
   out_666163721163740906[37] = 0;
   out_666163721163740906[38] = 0;
   out_666163721163740906[39] = 0;
   out_666163721163740906[40] = 0;
   out_666163721163740906[41] = 0;
   out_666163721163740906[42] = 0;
   out_666163721163740906[43] = 0;
   out_666163721163740906[44] = 0;
   out_666163721163740906[45] = 0;
   out_666163721163740906[46] = 0;
   out_666163721163740906[47] = 0;
   out_666163721163740906[48] = 0;
   out_666163721163740906[49] = 0;
   out_666163721163740906[50] = 0;
   out_666163721163740906[51] = 0;
   out_666163721163740906[52] = 0;
   out_666163721163740906[53] = 0;
   out_666163721163740906[54] = 0;
   out_666163721163740906[55] = 0;
   out_666163721163740906[56] = 1;
   out_666163721163740906[57] = 0;
   out_666163721163740906[58] = 0;
   out_666163721163740906[59] = 1;
   out_666163721163740906[60] = 0;
   out_666163721163740906[61] = 0;
   out_666163721163740906[62] = 0;
   out_666163721163740906[63] = 0;
   out_666163721163740906[64] = 0;
   out_666163721163740906[65] = 0;
}
void h_9(double *state, double *unused, double *out_4575917590972209973) {
   out_4575917590972209973[0] = state[10];
   out_4575917590972209973[1] = state[11];
   out_4575917590972209973[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6621055214100706564) {
   out_6621055214100706564[0] = 0;
   out_6621055214100706564[1] = 0;
   out_6621055214100706564[2] = 0;
   out_6621055214100706564[3] = 0;
   out_6621055214100706564[4] = 0;
   out_6621055214100706564[5] = 0;
   out_6621055214100706564[6] = 0;
   out_6621055214100706564[7] = 0;
   out_6621055214100706564[8] = 0;
   out_6621055214100706564[9] = 0;
   out_6621055214100706564[10] = 1;
   out_6621055214100706564[11] = 0;
   out_6621055214100706564[12] = 0;
   out_6621055214100706564[13] = 0;
   out_6621055214100706564[14] = 0;
   out_6621055214100706564[15] = 0;
   out_6621055214100706564[16] = 0;
   out_6621055214100706564[17] = 0;
   out_6621055214100706564[18] = 0;
   out_6621055214100706564[19] = 0;
   out_6621055214100706564[20] = 0;
   out_6621055214100706564[21] = 0;
   out_6621055214100706564[22] = 0;
   out_6621055214100706564[23] = 0;
   out_6621055214100706564[24] = 0;
   out_6621055214100706564[25] = 0;
   out_6621055214100706564[26] = 0;
   out_6621055214100706564[27] = 0;
   out_6621055214100706564[28] = 0;
   out_6621055214100706564[29] = 0;
   out_6621055214100706564[30] = 0;
   out_6621055214100706564[31] = 0;
   out_6621055214100706564[32] = 0;
   out_6621055214100706564[33] = 1;
   out_6621055214100706564[34] = 0;
   out_6621055214100706564[35] = 0;
   out_6621055214100706564[36] = 0;
   out_6621055214100706564[37] = 0;
   out_6621055214100706564[38] = 0;
   out_6621055214100706564[39] = 0;
   out_6621055214100706564[40] = 0;
   out_6621055214100706564[41] = 0;
   out_6621055214100706564[42] = 0;
   out_6621055214100706564[43] = 0;
   out_6621055214100706564[44] = 0;
   out_6621055214100706564[45] = 0;
   out_6621055214100706564[46] = 0;
   out_6621055214100706564[47] = 0;
   out_6621055214100706564[48] = 0;
   out_6621055214100706564[49] = 0;
   out_6621055214100706564[50] = 0;
   out_6621055214100706564[51] = 0;
   out_6621055214100706564[52] = 0;
   out_6621055214100706564[53] = 0;
   out_6621055214100706564[54] = 0;
   out_6621055214100706564[55] = 0;
   out_6621055214100706564[56] = 1;
   out_6621055214100706564[57] = 0;
   out_6621055214100706564[58] = 0;
   out_6621055214100706564[59] = 0;
   out_6621055214100706564[60] = 0;
   out_6621055214100706564[61] = 0;
   out_6621055214100706564[62] = 0;
   out_6621055214100706564[63] = 0;
   out_6621055214100706564[64] = 0;
   out_6621055214100706564[65] = 0;
}
void h_10(double *state, double *unused, double *out_2542662905733650449) {
   out_2542662905733650449[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2542662905733650449[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2542662905733650449[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_191145321231249777) {
   out_191145321231249777[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_191145321231249777[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_191145321231249777[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_191145321231249777[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_191145321231249777[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_191145321231249777[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_191145321231249777[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_191145321231249777[7] = 0;
   out_191145321231249777[8] = 0;
   out_191145321231249777[9] = 0;
   out_191145321231249777[10] = 0;
   out_191145321231249777[11] = 0;
   out_191145321231249777[12] = 0;
   out_191145321231249777[13] = 0;
   out_191145321231249777[14] = 0;
   out_191145321231249777[15] = 0;
   out_191145321231249777[16] = 1;
   out_191145321231249777[17] = 0;
   out_191145321231249777[18] = 0;
   out_191145321231249777[19] = 1;
   out_191145321231249777[20] = 0;
   out_191145321231249777[21] = 0;
   out_191145321231249777[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_191145321231249777[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_191145321231249777[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_191145321231249777[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_191145321231249777[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_191145321231249777[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_191145321231249777[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_191145321231249777[29] = 0;
   out_191145321231249777[30] = 0;
   out_191145321231249777[31] = 0;
   out_191145321231249777[32] = 0;
   out_191145321231249777[33] = 0;
   out_191145321231249777[34] = 0;
   out_191145321231249777[35] = 0;
   out_191145321231249777[36] = 0;
   out_191145321231249777[37] = 0;
   out_191145321231249777[38] = 0;
   out_191145321231249777[39] = 1;
   out_191145321231249777[40] = 0;
   out_191145321231249777[41] = 0;
   out_191145321231249777[42] = 1;
   out_191145321231249777[43] = 0;
   out_191145321231249777[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_191145321231249777[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_191145321231249777[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_191145321231249777[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_191145321231249777[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_191145321231249777[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_191145321231249777[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_191145321231249777[51] = 0;
   out_191145321231249777[52] = 0;
   out_191145321231249777[53] = 0;
   out_191145321231249777[54] = 0;
   out_191145321231249777[55] = 0;
   out_191145321231249777[56] = 0;
   out_191145321231249777[57] = 0;
   out_191145321231249777[58] = 0;
   out_191145321231249777[59] = 0;
   out_191145321231249777[60] = 0;
   out_191145321231249777[61] = 0;
   out_191145321231249777[62] = 1;
   out_191145321231249777[63] = 0;
   out_191145321231249777[64] = 0;
   out_191145321231249777[65] = 1;
}
void h_12(double *state, double *unused, double *out_5988229625246386217) {
   out_5988229625246386217[0] = state[0];
   out_5988229625246386217[1] = state[1];
   out_5988229625246386217[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7047422098206473902) {
   out_7047422098206473902[0] = 1;
   out_7047422098206473902[1] = 0;
   out_7047422098206473902[2] = 0;
   out_7047422098206473902[3] = 0;
   out_7047422098206473902[4] = 0;
   out_7047422098206473902[5] = 0;
   out_7047422098206473902[6] = 0;
   out_7047422098206473902[7] = 0;
   out_7047422098206473902[8] = 0;
   out_7047422098206473902[9] = 0;
   out_7047422098206473902[10] = 0;
   out_7047422098206473902[11] = 0;
   out_7047422098206473902[12] = 0;
   out_7047422098206473902[13] = 0;
   out_7047422098206473902[14] = 0;
   out_7047422098206473902[15] = 0;
   out_7047422098206473902[16] = 0;
   out_7047422098206473902[17] = 0;
   out_7047422098206473902[18] = 0;
   out_7047422098206473902[19] = 0;
   out_7047422098206473902[20] = 0;
   out_7047422098206473902[21] = 0;
   out_7047422098206473902[22] = 0;
   out_7047422098206473902[23] = 1;
   out_7047422098206473902[24] = 0;
   out_7047422098206473902[25] = 0;
   out_7047422098206473902[26] = 0;
   out_7047422098206473902[27] = 0;
   out_7047422098206473902[28] = 0;
   out_7047422098206473902[29] = 0;
   out_7047422098206473902[30] = 0;
   out_7047422098206473902[31] = 0;
   out_7047422098206473902[32] = 0;
   out_7047422098206473902[33] = 0;
   out_7047422098206473902[34] = 0;
   out_7047422098206473902[35] = 0;
   out_7047422098206473902[36] = 0;
   out_7047422098206473902[37] = 0;
   out_7047422098206473902[38] = 0;
   out_7047422098206473902[39] = 0;
   out_7047422098206473902[40] = 0;
   out_7047422098206473902[41] = 0;
   out_7047422098206473902[42] = 0;
   out_7047422098206473902[43] = 0;
   out_7047422098206473902[44] = 0;
   out_7047422098206473902[45] = 0;
   out_7047422098206473902[46] = 1;
   out_7047422098206473902[47] = 0;
   out_7047422098206473902[48] = 0;
   out_7047422098206473902[49] = 0;
   out_7047422098206473902[50] = 0;
   out_7047422098206473902[51] = 0;
   out_7047422098206473902[52] = 0;
   out_7047422098206473902[53] = 0;
   out_7047422098206473902[54] = 0;
   out_7047422098206473902[55] = 0;
   out_7047422098206473902[56] = 0;
   out_7047422098206473902[57] = 0;
   out_7047422098206473902[58] = 0;
   out_7047422098206473902[59] = 0;
   out_7047422098206473902[60] = 0;
   out_7047422098206473902[61] = 0;
   out_7047422098206473902[62] = 0;
   out_7047422098206473902[63] = 0;
   out_7047422098206473902[64] = 0;
   out_7047422098206473902[65] = 0;
}
void h_35(double *state, double *unused, double *out_1884394027017516911) {
   out_1884394027017516911[0] = state[7];
   out_1884394027017516911[1] = state[8];
   out_1884394027017516911[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2700498336208866470) {
   out_2700498336208866470[0] = 0;
   out_2700498336208866470[1] = 0;
   out_2700498336208866470[2] = 0;
   out_2700498336208866470[3] = 0;
   out_2700498336208866470[4] = 0;
   out_2700498336208866470[5] = 0;
   out_2700498336208866470[6] = 0;
   out_2700498336208866470[7] = 1;
   out_2700498336208866470[8] = 0;
   out_2700498336208866470[9] = 0;
   out_2700498336208866470[10] = 0;
   out_2700498336208866470[11] = 0;
   out_2700498336208866470[12] = 0;
   out_2700498336208866470[13] = 0;
   out_2700498336208866470[14] = 0;
   out_2700498336208866470[15] = 0;
   out_2700498336208866470[16] = 0;
   out_2700498336208866470[17] = 0;
   out_2700498336208866470[18] = 0;
   out_2700498336208866470[19] = 0;
   out_2700498336208866470[20] = 0;
   out_2700498336208866470[21] = 0;
   out_2700498336208866470[22] = 0;
   out_2700498336208866470[23] = 0;
   out_2700498336208866470[24] = 0;
   out_2700498336208866470[25] = 0;
   out_2700498336208866470[26] = 0;
   out_2700498336208866470[27] = 0;
   out_2700498336208866470[28] = 0;
   out_2700498336208866470[29] = 0;
   out_2700498336208866470[30] = 1;
   out_2700498336208866470[31] = 0;
   out_2700498336208866470[32] = 0;
   out_2700498336208866470[33] = 0;
   out_2700498336208866470[34] = 0;
   out_2700498336208866470[35] = 0;
   out_2700498336208866470[36] = 0;
   out_2700498336208866470[37] = 0;
   out_2700498336208866470[38] = 0;
   out_2700498336208866470[39] = 0;
   out_2700498336208866470[40] = 0;
   out_2700498336208866470[41] = 0;
   out_2700498336208866470[42] = 0;
   out_2700498336208866470[43] = 0;
   out_2700498336208866470[44] = 0;
   out_2700498336208866470[45] = 0;
   out_2700498336208866470[46] = 0;
   out_2700498336208866470[47] = 0;
   out_2700498336208866470[48] = 0;
   out_2700498336208866470[49] = 0;
   out_2700498336208866470[50] = 0;
   out_2700498336208866470[51] = 0;
   out_2700498336208866470[52] = 0;
   out_2700498336208866470[53] = 1;
   out_2700498336208866470[54] = 0;
   out_2700498336208866470[55] = 0;
   out_2700498336208866470[56] = 0;
   out_2700498336208866470[57] = 0;
   out_2700498336208866470[58] = 0;
   out_2700498336208866470[59] = 0;
   out_2700498336208866470[60] = 0;
   out_2700498336208866470[61] = 0;
   out_2700498336208866470[62] = 0;
   out_2700498336208866470[63] = 0;
   out_2700498336208866470[64] = 0;
   out_2700498336208866470[65] = 0;
}
void h_32(double *state, double *unused, double *out_4367162044804246157) {
   out_4367162044804246157[0] = state[3];
   out_4367162044804246157[1] = state[4];
   out_4367162044804246157[2] = state[5];
   out_4367162044804246157[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1518200901463042600) {
   out_1518200901463042600[0] = 0;
   out_1518200901463042600[1] = 0;
   out_1518200901463042600[2] = 0;
   out_1518200901463042600[3] = 1;
   out_1518200901463042600[4] = 0;
   out_1518200901463042600[5] = 0;
   out_1518200901463042600[6] = 0;
   out_1518200901463042600[7] = 0;
   out_1518200901463042600[8] = 0;
   out_1518200901463042600[9] = 0;
   out_1518200901463042600[10] = 0;
   out_1518200901463042600[11] = 0;
   out_1518200901463042600[12] = 0;
   out_1518200901463042600[13] = 0;
   out_1518200901463042600[14] = 0;
   out_1518200901463042600[15] = 0;
   out_1518200901463042600[16] = 0;
   out_1518200901463042600[17] = 0;
   out_1518200901463042600[18] = 0;
   out_1518200901463042600[19] = 0;
   out_1518200901463042600[20] = 0;
   out_1518200901463042600[21] = 0;
   out_1518200901463042600[22] = 0;
   out_1518200901463042600[23] = 0;
   out_1518200901463042600[24] = 0;
   out_1518200901463042600[25] = 0;
   out_1518200901463042600[26] = 1;
   out_1518200901463042600[27] = 0;
   out_1518200901463042600[28] = 0;
   out_1518200901463042600[29] = 0;
   out_1518200901463042600[30] = 0;
   out_1518200901463042600[31] = 0;
   out_1518200901463042600[32] = 0;
   out_1518200901463042600[33] = 0;
   out_1518200901463042600[34] = 0;
   out_1518200901463042600[35] = 0;
   out_1518200901463042600[36] = 0;
   out_1518200901463042600[37] = 0;
   out_1518200901463042600[38] = 0;
   out_1518200901463042600[39] = 0;
   out_1518200901463042600[40] = 0;
   out_1518200901463042600[41] = 0;
   out_1518200901463042600[42] = 0;
   out_1518200901463042600[43] = 0;
   out_1518200901463042600[44] = 0;
   out_1518200901463042600[45] = 0;
   out_1518200901463042600[46] = 0;
   out_1518200901463042600[47] = 0;
   out_1518200901463042600[48] = 0;
   out_1518200901463042600[49] = 1;
   out_1518200901463042600[50] = 0;
   out_1518200901463042600[51] = 0;
   out_1518200901463042600[52] = 0;
   out_1518200901463042600[53] = 0;
   out_1518200901463042600[54] = 0;
   out_1518200901463042600[55] = 0;
   out_1518200901463042600[56] = 0;
   out_1518200901463042600[57] = 0;
   out_1518200901463042600[58] = 0;
   out_1518200901463042600[59] = 0;
   out_1518200901463042600[60] = 0;
   out_1518200901463042600[61] = 0;
   out_1518200901463042600[62] = 0;
   out_1518200901463042600[63] = 0;
   out_1518200901463042600[64] = 0;
   out_1518200901463042600[65] = 0;
   out_1518200901463042600[66] = 0;
   out_1518200901463042600[67] = 0;
   out_1518200901463042600[68] = 0;
   out_1518200901463042600[69] = 0;
   out_1518200901463042600[70] = 0;
   out_1518200901463042600[71] = 0;
   out_1518200901463042600[72] = 1;
   out_1518200901463042600[73] = 0;
   out_1518200901463042600[74] = 0;
   out_1518200901463042600[75] = 0;
   out_1518200901463042600[76] = 0;
   out_1518200901463042600[77] = 0;
   out_1518200901463042600[78] = 0;
   out_1518200901463042600[79] = 0;
   out_1518200901463042600[80] = 0;
   out_1518200901463042600[81] = 0;
   out_1518200901463042600[82] = 0;
   out_1518200901463042600[83] = 0;
   out_1518200901463042600[84] = 0;
   out_1518200901463042600[85] = 0;
   out_1518200901463042600[86] = 0;
   out_1518200901463042600[87] = 0;
}
void h_13(double *state, double *unused, double *out_8085451560721964132) {
   out_8085451560721964132[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8085451560721964132[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8085451560721964132[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8479815537807308948) {
   out_8479815537807308948[0] = 0;
   out_8479815537807308948[1] = 0;
   out_8479815537807308948[2] = 0;
   out_8479815537807308948[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8479815537807308948[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8479815537807308948[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8479815537807308948[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8479815537807308948[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8479815537807308948[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8479815537807308948[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8479815537807308948[10] = 0;
   out_8479815537807308948[11] = 0;
   out_8479815537807308948[12] = 0;
   out_8479815537807308948[13] = 0;
   out_8479815537807308948[14] = 0;
   out_8479815537807308948[15] = 0;
   out_8479815537807308948[16] = 0;
   out_8479815537807308948[17] = 0;
   out_8479815537807308948[18] = 0;
   out_8479815537807308948[19] = 0;
   out_8479815537807308948[20] = 0;
   out_8479815537807308948[21] = 0;
   out_8479815537807308948[22] = 0;
   out_8479815537807308948[23] = 0;
   out_8479815537807308948[24] = 0;
   out_8479815537807308948[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8479815537807308948[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8479815537807308948[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8479815537807308948[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8479815537807308948[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8479815537807308948[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8479815537807308948[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8479815537807308948[32] = 0;
   out_8479815537807308948[33] = 0;
   out_8479815537807308948[34] = 0;
   out_8479815537807308948[35] = 0;
   out_8479815537807308948[36] = 0;
   out_8479815537807308948[37] = 0;
   out_8479815537807308948[38] = 0;
   out_8479815537807308948[39] = 0;
   out_8479815537807308948[40] = 0;
   out_8479815537807308948[41] = 0;
   out_8479815537807308948[42] = 0;
   out_8479815537807308948[43] = 0;
   out_8479815537807308948[44] = 0;
   out_8479815537807308948[45] = 0;
   out_8479815537807308948[46] = 0;
   out_8479815537807308948[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8479815537807308948[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8479815537807308948[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8479815537807308948[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8479815537807308948[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8479815537807308948[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8479815537807308948[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8479815537807308948[54] = 0;
   out_8479815537807308948[55] = 0;
   out_8479815537807308948[56] = 0;
   out_8479815537807308948[57] = 0;
   out_8479815537807308948[58] = 0;
   out_8479815537807308948[59] = 0;
   out_8479815537807308948[60] = 0;
   out_8479815537807308948[61] = 0;
   out_8479815537807308948[62] = 0;
   out_8479815537807308948[63] = 0;
   out_8479815537807308948[64] = 0;
   out_8479815537807308948[65] = 0;
}
void h_14(double *state, double *unused, double *out_4575917590972209973) {
   out_4575917590972209973[0] = state[10];
   out_4575917590972209973[1] = state[11];
   out_4575917590972209973[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6621055214100706564) {
   out_6621055214100706564[0] = 0;
   out_6621055214100706564[1] = 0;
   out_6621055214100706564[2] = 0;
   out_6621055214100706564[3] = 0;
   out_6621055214100706564[4] = 0;
   out_6621055214100706564[5] = 0;
   out_6621055214100706564[6] = 0;
   out_6621055214100706564[7] = 0;
   out_6621055214100706564[8] = 0;
   out_6621055214100706564[9] = 0;
   out_6621055214100706564[10] = 1;
   out_6621055214100706564[11] = 0;
   out_6621055214100706564[12] = 0;
   out_6621055214100706564[13] = 0;
   out_6621055214100706564[14] = 0;
   out_6621055214100706564[15] = 0;
   out_6621055214100706564[16] = 0;
   out_6621055214100706564[17] = 0;
   out_6621055214100706564[18] = 0;
   out_6621055214100706564[19] = 0;
   out_6621055214100706564[20] = 0;
   out_6621055214100706564[21] = 0;
   out_6621055214100706564[22] = 0;
   out_6621055214100706564[23] = 0;
   out_6621055214100706564[24] = 0;
   out_6621055214100706564[25] = 0;
   out_6621055214100706564[26] = 0;
   out_6621055214100706564[27] = 0;
   out_6621055214100706564[28] = 0;
   out_6621055214100706564[29] = 0;
   out_6621055214100706564[30] = 0;
   out_6621055214100706564[31] = 0;
   out_6621055214100706564[32] = 0;
   out_6621055214100706564[33] = 1;
   out_6621055214100706564[34] = 0;
   out_6621055214100706564[35] = 0;
   out_6621055214100706564[36] = 0;
   out_6621055214100706564[37] = 0;
   out_6621055214100706564[38] = 0;
   out_6621055214100706564[39] = 0;
   out_6621055214100706564[40] = 0;
   out_6621055214100706564[41] = 0;
   out_6621055214100706564[42] = 0;
   out_6621055214100706564[43] = 0;
   out_6621055214100706564[44] = 0;
   out_6621055214100706564[45] = 0;
   out_6621055214100706564[46] = 0;
   out_6621055214100706564[47] = 0;
   out_6621055214100706564[48] = 0;
   out_6621055214100706564[49] = 0;
   out_6621055214100706564[50] = 0;
   out_6621055214100706564[51] = 0;
   out_6621055214100706564[52] = 0;
   out_6621055214100706564[53] = 0;
   out_6621055214100706564[54] = 0;
   out_6621055214100706564[55] = 0;
   out_6621055214100706564[56] = 1;
   out_6621055214100706564[57] = 0;
   out_6621055214100706564[58] = 0;
   out_6621055214100706564[59] = 0;
   out_6621055214100706564[60] = 0;
   out_6621055214100706564[61] = 0;
   out_6621055214100706564[62] = 0;
   out_6621055214100706564[63] = 0;
   out_6621055214100706564[64] = 0;
   out_6621055214100706564[65] = 0;
}
void h_33(double *state, double *unused, double *out_5161320250989203859) {
   out_5161320250989203859[0] = state[16];
   out_5161320250989203859[1] = state[17];
   out_5161320250989203859[2] = state[18];
}
void H_33(double *state, double *unused, double *out_5851055340847724074) {
   out_5851055340847724074[0] = 0;
   out_5851055340847724074[1] = 0;
   out_5851055340847724074[2] = 0;
   out_5851055340847724074[3] = 0;
   out_5851055340847724074[4] = 0;
   out_5851055340847724074[5] = 0;
   out_5851055340847724074[6] = 0;
   out_5851055340847724074[7] = 0;
   out_5851055340847724074[8] = 0;
   out_5851055340847724074[9] = 0;
   out_5851055340847724074[10] = 0;
   out_5851055340847724074[11] = 0;
   out_5851055340847724074[12] = 0;
   out_5851055340847724074[13] = 0;
   out_5851055340847724074[14] = 0;
   out_5851055340847724074[15] = 0;
   out_5851055340847724074[16] = 1;
   out_5851055340847724074[17] = 0;
   out_5851055340847724074[18] = 0;
   out_5851055340847724074[19] = 0;
   out_5851055340847724074[20] = 0;
   out_5851055340847724074[21] = 0;
   out_5851055340847724074[22] = 0;
   out_5851055340847724074[23] = 0;
   out_5851055340847724074[24] = 0;
   out_5851055340847724074[25] = 0;
   out_5851055340847724074[26] = 0;
   out_5851055340847724074[27] = 0;
   out_5851055340847724074[28] = 0;
   out_5851055340847724074[29] = 0;
   out_5851055340847724074[30] = 0;
   out_5851055340847724074[31] = 0;
   out_5851055340847724074[32] = 0;
   out_5851055340847724074[33] = 0;
   out_5851055340847724074[34] = 0;
   out_5851055340847724074[35] = 0;
   out_5851055340847724074[36] = 0;
   out_5851055340847724074[37] = 0;
   out_5851055340847724074[38] = 0;
   out_5851055340847724074[39] = 1;
   out_5851055340847724074[40] = 0;
   out_5851055340847724074[41] = 0;
   out_5851055340847724074[42] = 0;
   out_5851055340847724074[43] = 0;
   out_5851055340847724074[44] = 0;
   out_5851055340847724074[45] = 0;
   out_5851055340847724074[46] = 0;
   out_5851055340847724074[47] = 0;
   out_5851055340847724074[48] = 0;
   out_5851055340847724074[49] = 0;
   out_5851055340847724074[50] = 0;
   out_5851055340847724074[51] = 0;
   out_5851055340847724074[52] = 0;
   out_5851055340847724074[53] = 0;
   out_5851055340847724074[54] = 0;
   out_5851055340847724074[55] = 0;
   out_5851055340847724074[56] = 0;
   out_5851055340847724074[57] = 0;
   out_5851055340847724074[58] = 0;
   out_5851055340847724074[59] = 0;
   out_5851055340847724074[60] = 0;
   out_5851055340847724074[61] = 0;
   out_5851055340847724074[62] = 1;
   out_5851055340847724074[63] = 0;
   out_5851055340847724074[64] = 0;
   out_5851055340847724074[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4723732251547718860) {
  H(in_vec, out_4723732251547718860);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8039421302295105776) {
  err_fun(nom_x, delta_x, out_8039421302295105776);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5258012845381697229) {
  inv_err_fun(nom_x, true_x, out_5258012845381697229);
}
void live_H_mod_fun(double *state, double *out_4602111055287638084) {
  H_mod_fun(state, out_4602111055287638084);
}
void live_f_fun(double *state, double dt, double *out_2494991483937947279) {
  f_fun(state,  dt, out_2494991483937947279);
}
void live_F_fun(double *state, double dt, double *out_5242126298311218128) {
  F_fun(state,  dt, out_5242126298311218128);
}
void live_h_4(double *state, double *unused, double *out_7557171517810886780) {
  h_4(state, unused, out_7557171517810886780);
}
void live_H_4(double *state, double *unused, double *out_666163721163740906) {
  H_4(state, unused, out_666163721163740906);
}
void live_h_9(double *state, double *unused, double *out_4575917590972209973) {
  h_9(state, unused, out_4575917590972209973);
}
void live_H_9(double *state, double *unused, double *out_6621055214100706564) {
  H_9(state, unused, out_6621055214100706564);
}
void live_h_10(double *state, double *unused, double *out_2542662905733650449) {
  h_10(state, unused, out_2542662905733650449);
}
void live_H_10(double *state, double *unused, double *out_191145321231249777) {
  H_10(state, unused, out_191145321231249777);
}
void live_h_12(double *state, double *unused, double *out_5988229625246386217) {
  h_12(state, unused, out_5988229625246386217);
}
void live_H_12(double *state, double *unused, double *out_7047422098206473902) {
  H_12(state, unused, out_7047422098206473902);
}
void live_h_35(double *state, double *unused, double *out_1884394027017516911) {
  h_35(state, unused, out_1884394027017516911);
}
void live_H_35(double *state, double *unused, double *out_2700498336208866470) {
  H_35(state, unused, out_2700498336208866470);
}
void live_h_32(double *state, double *unused, double *out_4367162044804246157) {
  h_32(state, unused, out_4367162044804246157);
}
void live_H_32(double *state, double *unused, double *out_1518200901463042600) {
  H_32(state, unused, out_1518200901463042600);
}
void live_h_13(double *state, double *unused, double *out_8085451560721964132) {
  h_13(state, unused, out_8085451560721964132);
}
void live_H_13(double *state, double *unused, double *out_8479815537807308948) {
  H_13(state, unused, out_8479815537807308948);
}
void live_h_14(double *state, double *unused, double *out_4575917590972209973) {
  h_14(state, unused, out_4575917590972209973);
}
void live_H_14(double *state, double *unused, double *out_6621055214100706564) {
  H_14(state, unused, out_6621055214100706564);
}
void live_h_33(double *state, double *unused, double *out_5161320250989203859) {
  h_33(state, unused, out_5161320250989203859);
}
void live_H_33(double *state, double *unused, double *out_5851055340847724074) {
  H_33(state, unused, out_5851055340847724074);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
