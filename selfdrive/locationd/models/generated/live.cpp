#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3943162456687825246) {
   out_3943162456687825246[0] = 0;
   out_3943162456687825246[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3943162456687825246[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3943162456687825246[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3943162456687825246[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3943162456687825246[5] = -sin(in_vec[1]);
   out_3943162456687825246[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3943162456687825246[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3943162456687825246[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3943162456687825246[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3943162456687825246[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3943162456687825246[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3943162456687825246[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3943162456687825246[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3943162456687825246[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3943162456687825246[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3943162456687825246[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3943162456687825246[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2506585822566936452) {
   out_2506585822566936452[0] = delta_x[0] + nom_x[0];
   out_2506585822566936452[1] = delta_x[1] + nom_x[1];
   out_2506585822566936452[2] = delta_x[2] + nom_x[2];
   out_2506585822566936452[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2506585822566936452[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2506585822566936452[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2506585822566936452[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2506585822566936452[7] = delta_x[6] + nom_x[7];
   out_2506585822566936452[8] = delta_x[7] + nom_x[8];
   out_2506585822566936452[9] = delta_x[8] + nom_x[9];
   out_2506585822566936452[10] = delta_x[9] + nom_x[10];
   out_2506585822566936452[11] = delta_x[10] + nom_x[11];
   out_2506585822566936452[12] = delta_x[11] + nom_x[12];
   out_2506585822566936452[13] = delta_x[12] + nom_x[13];
   out_2506585822566936452[14] = delta_x[13] + nom_x[14];
   out_2506585822566936452[15] = delta_x[14] + nom_x[15];
   out_2506585822566936452[16] = delta_x[15] + nom_x[16];
   out_2506585822566936452[17] = delta_x[16] + nom_x[17];
   out_2506585822566936452[18] = delta_x[17] + nom_x[18];
   out_2506585822566936452[19] = delta_x[18] + nom_x[19];
   out_2506585822566936452[20] = delta_x[19] + nom_x[20];
   out_2506585822566936452[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_9034738354930982896) {
   out_9034738354930982896[0] = -nom_x[0] + true_x[0];
   out_9034738354930982896[1] = -nom_x[1] + true_x[1];
   out_9034738354930982896[2] = -nom_x[2] + true_x[2];
   out_9034738354930982896[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_9034738354930982896[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_9034738354930982896[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_9034738354930982896[6] = -nom_x[7] + true_x[7];
   out_9034738354930982896[7] = -nom_x[8] + true_x[8];
   out_9034738354930982896[8] = -nom_x[9] + true_x[9];
   out_9034738354930982896[9] = -nom_x[10] + true_x[10];
   out_9034738354930982896[10] = -nom_x[11] + true_x[11];
   out_9034738354930982896[11] = -nom_x[12] + true_x[12];
   out_9034738354930982896[12] = -nom_x[13] + true_x[13];
   out_9034738354930982896[13] = -nom_x[14] + true_x[14];
   out_9034738354930982896[14] = -nom_x[15] + true_x[15];
   out_9034738354930982896[15] = -nom_x[16] + true_x[16];
   out_9034738354930982896[16] = -nom_x[17] + true_x[17];
   out_9034738354930982896[17] = -nom_x[18] + true_x[18];
   out_9034738354930982896[18] = -nom_x[19] + true_x[19];
   out_9034738354930982896[19] = -nom_x[20] + true_x[20];
   out_9034738354930982896[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8322034104271522615) {
   out_8322034104271522615[0] = 1.0;
   out_8322034104271522615[1] = 0;
   out_8322034104271522615[2] = 0;
   out_8322034104271522615[3] = 0;
   out_8322034104271522615[4] = 0;
   out_8322034104271522615[5] = 0;
   out_8322034104271522615[6] = 0;
   out_8322034104271522615[7] = 0;
   out_8322034104271522615[8] = 0;
   out_8322034104271522615[9] = 0;
   out_8322034104271522615[10] = 0;
   out_8322034104271522615[11] = 0;
   out_8322034104271522615[12] = 0;
   out_8322034104271522615[13] = 0;
   out_8322034104271522615[14] = 0;
   out_8322034104271522615[15] = 0;
   out_8322034104271522615[16] = 0;
   out_8322034104271522615[17] = 0;
   out_8322034104271522615[18] = 0;
   out_8322034104271522615[19] = 0;
   out_8322034104271522615[20] = 0;
   out_8322034104271522615[21] = 0;
   out_8322034104271522615[22] = 1.0;
   out_8322034104271522615[23] = 0;
   out_8322034104271522615[24] = 0;
   out_8322034104271522615[25] = 0;
   out_8322034104271522615[26] = 0;
   out_8322034104271522615[27] = 0;
   out_8322034104271522615[28] = 0;
   out_8322034104271522615[29] = 0;
   out_8322034104271522615[30] = 0;
   out_8322034104271522615[31] = 0;
   out_8322034104271522615[32] = 0;
   out_8322034104271522615[33] = 0;
   out_8322034104271522615[34] = 0;
   out_8322034104271522615[35] = 0;
   out_8322034104271522615[36] = 0;
   out_8322034104271522615[37] = 0;
   out_8322034104271522615[38] = 0;
   out_8322034104271522615[39] = 0;
   out_8322034104271522615[40] = 0;
   out_8322034104271522615[41] = 0;
   out_8322034104271522615[42] = 0;
   out_8322034104271522615[43] = 0;
   out_8322034104271522615[44] = 1.0;
   out_8322034104271522615[45] = 0;
   out_8322034104271522615[46] = 0;
   out_8322034104271522615[47] = 0;
   out_8322034104271522615[48] = 0;
   out_8322034104271522615[49] = 0;
   out_8322034104271522615[50] = 0;
   out_8322034104271522615[51] = 0;
   out_8322034104271522615[52] = 0;
   out_8322034104271522615[53] = 0;
   out_8322034104271522615[54] = 0;
   out_8322034104271522615[55] = 0;
   out_8322034104271522615[56] = 0;
   out_8322034104271522615[57] = 0;
   out_8322034104271522615[58] = 0;
   out_8322034104271522615[59] = 0;
   out_8322034104271522615[60] = 0;
   out_8322034104271522615[61] = 0;
   out_8322034104271522615[62] = 0;
   out_8322034104271522615[63] = 0;
   out_8322034104271522615[64] = 0;
   out_8322034104271522615[65] = 0;
   out_8322034104271522615[66] = -0.5*state[4];
   out_8322034104271522615[67] = -0.5*state[5];
   out_8322034104271522615[68] = -0.5*state[6];
   out_8322034104271522615[69] = 0;
   out_8322034104271522615[70] = 0;
   out_8322034104271522615[71] = 0;
   out_8322034104271522615[72] = 0;
   out_8322034104271522615[73] = 0;
   out_8322034104271522615[74] = 0;
   out_8322034104271522615[75] = 0;
   out_8322034104271522615[76] = 0;
   out_8322034104271522615[77] = 0;
   out_8322034104271522615[78] = 0;
   out_8322034104271522615[79] = 0;
   out_8322034104271522615[80] = 0;
   out_8322034104271522615[81] = 0;
   out_8322034104271522615[82] = 0;
   out_8322034104271522615[83] = 0;
   out_8322034104271522615[84] = 0;
   out_8322034104271522615[85] = 0;
   out_8322034104271522615[86] = 0;
   out_8322034104271522615[87] = 0.5*state[3];
   out_8322034104271522615[88] = 0.5*state[6];
   out_8322034104271522615[89] = -0.5*state[5];
   out_8322034104271522615[90] = 0;
   out_8322034104271522615[91] = 0;
   out_8322034104271522615[92] = 0;
   out_8322034104271522615[93] = 0;
   out_8322034104271522615[94] = 0;
   out_8322034104271522615[95] = 0;
   out_8322034104271522615[96] = 0;
   out_8322034104271522615[97] = 0;
   out_8322034104271522615[98] = 0;
   out_8322034104271522615[99] = 0;
   out_8322034104271522615[100] = 0;
   out_8322034104271522615[101] = 0;
   out_8322034104271522615[102] = 0;
   out_8322034104271522615[103] = 0;
   out_8322034104271522615[104] = 0;
   out_8322034104271522615[105] = 0;
   out_8322034104271522615[106] = 0;
   out_8322034104271522615[107] = 0;
   out_8322034104271522615[108] = -0.5*state[6];
   out_8322034104271522615[109] = 0.5*state[3];
   out_8322034104271522615[110] = 0.5*state[4];
   out_8322034104271522615[111] = 0;
   out_8322034104271522615[112] = 0;
   out_8322034104271522615[113] = 0;
   out_8322034104271522615[114] = 0;
   out_8322034104271522615[115] = 0;
   out_8322034104271522615[116] = 0;
   out_8322034104271522615[117] = 0;
   out_8322034104271522615[118] = 0;
   out_8322034104271522615[119] = 0;
   out_8322034104271522615[120] = 0;
   out_8322034104271522615[121] = 0;
   out_8322034104271522615[122] = 0;
   out_8322034104271522615[123] = 0;
   out_8322034104271522615[124] = 0;
   out_8322034104271522615[125] = 0;
   out_8322034104271522615[126] = 0;
   out_8322034104271522615[127] = 0;
   out_8322034104271522615[128] = 0;
   out_8322034104271522615[129] = 0.5*state[5];
   out_8322034104271522615[130] = -0.5*state[4];
   out_8322034104271522615[131] = 0.5*state[3];
   out_8322034104271522615[132] = 0;
   out_8322034104271522615[133] = 0;
   out_8322034104271522615[134] = 0;
   out_8322034104271522615[135] = 0;
   out_8322034104271522615[136] = 0;
   out_8322034104271522615[137] = 0;
   out_8322034104271522615[138] = 0;
   out_8322034104271522615[139] = 0;
   out_8322034104271522615[140] = 0;
   out_8322034104271522615[141] = 0;
   out_8322034104271522615[142] = 0;
   out_8322034104271522615[143] = 0;
   out_8322034104271522615[144] = 0;
   out_8322034104271522615[145] = 0;
   out_8322034104271522615[146] = 0;
   out_8322034104271522615[147] = 0;
   out_8322034104271522615[148] = 0;
   out_8322034104271522615[149] = 0;
   out_8322034104271522615[150] = 0;
   out_8322034104271522615[151] = 0;
   out_8322034104271522615[152] = 0;
   out_8322034104271522615[153] = 1.0;
   out_8322034104271522615[154] = 0;
   out_8322034104271522615[155] = 0;
   out_8322034104271522615[156] = 0;
   out_8322034104271522615[157] = 0;
   out_8322034104271522615[158] = 0;
   out_8322034104271522615[159] = 0;
   out_8322034104271522615[160] = 0;
   out_8322034104271522615[161] = 0;
   out_8322034104271522615[162] = 0;
   out_8322034104271522615[163] = 0;
   out_8322034104271522615[164] = 0;
   out_8322034104271522615[165] = 0;
   out_8322034104271522615[166] = 0;
   out_8322034104271522615[167] = 0;
   out_8322034104271522615[168] = 0;
   out_8322034104271522615[169] = 0;
   out_8322034104271522615[170] = 0;
   out_8322034104271522615[171] = 0;
   out_8322034104271522615[172] = 0;
   out_8322034104271522615[173] = 0;
   out_8322034104271522615[174] = 0;
   out_8322034104271522615[175] = 1.0;
   out_8322034104271522615[176] = 0;
   out_8322034104271522615[177] = 0;
   out_8322034104271522615[178] = 0;
   out_8322034104271522615[179] = 0;
   out_8322034104271522615[180] = 0;
   out_8322034104271522615[181] = 0;
   out_8322034104271522615[182] = 0;
   out_8322034104271522615[183] = 0;
   out_8322034104271522615[184] = 0;
   out_8322034104271522615[185] = 0;
   out_8322034104271522615[186] = 0;
   out_8322034104271522615[187] = 0;
   out_8322034104271522615[188] = 0;
   out_8322034104271522615[189] = 0;
   out_8322034104271522615[190] = 0;
   out_8322034104271522615[191] = 0;
   out_8322034104271522615[192] = 0;
   out_8322034104271522615[193] = 0;
   out_8322034104271522615[194] = 0;
   out_8322034104271522615[195] = 0;
   out_8322034104271522615[196] = 0;
   out_8322034104271522615[197] = 1.0;
   out_8322034104271522615[198] = 0;
   out_8322034104271522615[199] = 0;
   out_8322034104271522615[200] = 0;
   out_8322034104271522615[201] = 0;
   out_8322034104271522615[202] = 0;
   out_8322034104271522615[203] = 0;
   out_8322034104271522615[204] = 0;
   out_8322034104271522615[205] = 0;
   out_8322034104271522615[206] = 0;
   out_8322034104271522615[207] = 0;
   out_8322034104271522615[208] = 0;
   out_8322034104271522615[209] = 0;
   out_8322034104271522615[210] = 0;
   out_8322034104271522615[211] = 0;
   out_8322034104271522615[212] = 0;
   out_8322034104271522615[213] = 0;
   out_8322034104271522615[214] = 0;
   out_8322034104271522615[215] = 0;
   out_8322034104271522615[216] = 0;
   out_8322034104271522615[217] = 0;
   out_8322034104271522615[218] = 0;
   out_8322034104271522615[219] = 1.0;
   out_8322034104271522615[220] = 0;
   out_8322034104271522615[221] = 0;
   out_8322034104271522615[222] = 0;
   out_8322034104271522615[223] = 0;
   out_8322034104271522615[224] = 0;
   out_8322034104271522615[225] = 0;
   out_8322034104271522615[226] = 0;
   out_8322034104271522615[227] = 0;
   out_8322034104271522615[228] = 0;
   out_8322034104271522615[229] = 0;
   out_8322034104271522615[230] = 0;
   out_8322034104271522615[231] = 0;
   out_8322034104271522615[232] = 0;
   out_8322034104271522615[233] = 0;
   out_8322034104271522615[234] = 0;
   out_8322034104271522615[235] = 0;
   out_8322034104271522615[236] = 0;
   out_8322034104271522615[237] = 0;
   out_8322034104271522615[238] = 0;
   out_8322034104271522615[239] = 0;
   out_8322034104271522615[240] = 0;
   out_8322034104271522615[241] = 1.0;
   out_8322034104271522615[242] = 0;
   out_8322034104271522615[243] = 0;
   out_8322034104271522615[244] = 0;
   out_8322034104271522615[245] = 0;
   out_8322034104271522615[246] = 0;
   out_8322034104271522615[247] = 0;
   out_8322034104271522615[248] = 0;
   out_8322034104271522615[249] = 0;
   out_8322034104271522615[250] = 0;
   out_8322034104271522615[251] = 0;
   out_8322034104271522615[252] = 0;
   out_8322034104271522615[253] = 0;
   out_8322034104271522615[254] = 0;
   out_8322034104271522615[255] = 0;
   out_8322034104271522615[256] = 0;
   out_8322034104271522615[257] = 0;
   out_8322034104271522615[258] = 0;
   out_8322034104271522615[259] = 0;
   out_8322034104271522615[260] = 0;
   out_8322034104271522615[261] = 0;
   out_8322034104271522615[262] = 0;
   out_8322034104271522615[263] = 1.0;
   out_8322034104271522615[264] = 0;
   out_8322034104271522615[265] = 0;
   out_8322034104271522615[266] = 0;
   out_8322034104271522615[267] = 0;
   out_8322034104271522615[268] = 0;
   out_8322034104271522615[269] = 0;
   out_8322034104271522615[270] = 0;
   out_8322034104271522615[271] = 0;
   out_8322034104271522615[272] = 0;
   out_8322034104271522615[273] = 0;
   out_8322034104271522615[274] = 0;
   out_8322034104271522615[275] = 0;
   out_8322034104271522615[276] = 0;
   out_8322034104271522615[277] = 0;
   out_8322034104271522615[278] = 0;
   out_8322034104271522615[279] = 0;
   out_8322034104271522615[280] = 0;
   out_8322034104271522615[281] = 0;
   out_8322034104271522615[282] = 0;
   out_8322034104271522615[283] = 0;
   out_8322034104271522615[284] = 0;
   out_8322034104271522615[285] = 1.0;
   out_8322034104271522615[286] = 0;
   out_8322034104271522615[287] = 0;
   out_8322034104271522615[288] = 0;
   out_8322034104271522615[289] = 0;
   out_8322034104271522615[290] = 0;
   out_8322034104271522615[291] = 0;
   out_8322034104271522615[292] = 0;
   out_8322034104271522615[293] = 0;
   out_8322034104271522615[294] = 0;
   out_8322034104271522615[295] = 0;
   out_8322034104271522615[296] = 0;
   out_8322034104271522615[297] = 0;
   out_8322034104271522615[298] = 0;
   out_8322034104271522615[299] = 0;
   out_8322034104271522615[300] = 0;
   out_8322034104271522615[301] = 0;
   out_8322034104271522615[302] = 0;
   out_8322034104271522615[303] = 0;
   out_8322034104271522615[304] = 0;
   out_8322034104271522615[305] = 0;
   out_8322034104271522615[306] = 0;
   out_8322034104271522615[307] = 1.0;
   out_8322034104271522615[308] = 0;
   out_8322034104271522615[309] = 0;
   out_8322034104271522615[310] = 0;
   out_8322034104271522615[311] = 0;
   out_8322034104271522615[312] = 0;
   out_8322034104271522615[313] = 0;
   out_8322034104271522615[314] = 0;
   out_8322034104271522615[315] = 0;
   out_8322034104271522615[316] = 0;
   out_8322034104271522615[317] = 0;
   out_8322034104271522615[318] = 0;
   out_8322034104271522615[319] = 0;
   out_8322034104271522615[320] = 0;
   out_8322034104271522615[321] = 0;
   out_8322034104271522615[322] = 0;
   out_8322034104271522615[323] = 0;
   out_8322034104271522615[324] = 0;
   out_8322034104271522615[325] = 0;
   out_8322034104271522615[326] = 0;
   out_8322034104271522615[327] = 0;
   out_8322034104271522615[328] = 0;
   out_8322034104271522615[329] = 1.0;
   out_8322034104271522615[330] = 0;
   out_8322034104271522615[331] = 0;
   out_8322034104271522615[332] = 0;
   out_8322034104271522615[333] = 0;
   out_8322034104271522615[334] = 0;
   out_8322034104271522615[335] = 0;
   out_8322034104271522615[336] = 0;
   out_8322034104271522615[337] = 0;
   out_8322034104271522615[338] = 0;
   out_8322034104271522615[339] = 0;
   out_8322034104271522615[340] = 0;
   out_8322034104271522615[341] = 0;
   out_8322034104271522615[342] = 0;
   out_8322034104271522615[343] = 0;
   out_8322034104271522615[344] = 0;
   out_8322034104271522615[345] = 0;
   out_8322034104271522615[346] = 0;
   out_8322034104271522615[347] = 0;
   out_8322034104271522615[348] = 0;
   out_8322034104271522615[349] = 0;
   out_8322034104271522615[350] = 0;
   out_8322034104271522615[351] = 1.0;
   out_8322034104271522615[352] = 0;
   out_8322034104271522615[353] = 0;
   out_8322034104271522615[354] = 0;
   out_8322034104271522615[355] = 0;
   out_8322034104271522615[356] = 0;
   out_8322034104271522615[357] = 0;
   out_8322034104271522615[358] = 0;
   out_8322034104271522615[359] = 0;
   out_8322034104271522615[360] = 0;
   out_8322034104271522615[361] = 0;
   out_8322034104271522615[362] = 0;
   out_8322034104271522615[363] = 0;
   out_8322034104271522615[364] = 0;
   out_8322034104271522615[365] = 0;
   out_8322034104271522615[366] = 0;
   out_8322034104271522615[367] = 0;
   out_8322034104271522615[368] = 0;
   out_8322034104271522615[369] = 0;
   out_8322034104271522615[370] = 0;
   out_8322034104271522615[371] = 0;
   out_8322034104271522615[372] = 0;
   out_8322034104271522615[373] = 1.0;
   out_8322034104271522615[374] = 0;
   out_8322034104271522615[375] = 0;
   out_8322034104271522615[376] = 0;
   out_8322034104271522615[377] = 0;
   out_8322034104271522615[378] = 0;
   out_8322034104271522615[379] = 0;
   out_8322034104271522615[380] = 0;
   out_8322034104271522615[381] = 0;
   out_8322034104271522615[382] = 0;
   out_8322034104271522615[383] = 0;
   out_8322034104271522615[384] = 0;
   out_8322034104271522615[385] = 0;
   out_8322034104271522615[386] = 0;
   out_8322034104271522615[387] = 0;
   out_8322034104271522615[388] = 0;
   out_8322034104271522615[389] = 0;
   out_8322034104271522615[390] = 0;
   out_8322034104271522615[391] = 0;
   out_8322034104271522615[392] = 0;
   out_8322034104271522615[393] = 0;
   out_8322034104271522615[394] = 0;
   out_8322034104271522615[395] = 1.0;
   out_8322034104271522615[396] = 0;
   out_8322034104271522615[397] = 0;
   out_8322034104271522615[398] = 0;
   out_8322034104271522615[399] = 0;
   out_8322034104271522615[400] = 0;
   out_8322034104271522615[401] = 0;
   out_8322034104271522615[402] = 0;
   out_8322034104271522615[403] = 0;
   out_8322034104271522615[404] = 0;
   out_8322034104271522615[405] = 0;
   out_8322034104271522615[406] = 0;
   out_8322034104271522615[407] = 0;
   out_8322034104271522615[408] = 0;
   out_8322034104271522615[409] = 0;
   out_8322034104271522615[410] = 0;
   out_8322034104271522615[411] = 0;
   out_8322034104271522615[412] = 0;
   out_8322034104271522615[413] = 0;
   out_8322034104271522615[414] = 0;
   out_8322034104271522615[415] = 0;
   out_8322034104271522615[416] = 0;
   out_8322034104271522615[417] = 1.0;
   out_8322034104271522615[418] = 0;
   out_8322034104271522615[419] = 0;
   out_8322034104271522615[420] = 0;
   out_8322034104271522615[421] = 0;
   out_8322034104271522615[422] = 0;
   out_8322034104271522615[423] = 0;
   out_8322034104271522615[424] = 0;
   out_8322034104271522615[425] = 0;
   out_8322034104271522615[426] = 0;
   out_8322034104271522615[427] = 0;
   out_8322034104271522615[428] = 0;
   out_8322034104271522615[429] = 0;
   out_8322034104271522615[430] = 0;
   out_8322034104271522615[431] = 0;
   out_8322034104271522615[432] = 0;
   out_8322034104271522615[433] = 0;
   out_8322034104271522615[434] = 0;
   out_8322034104271522615[435] = 0;
   out_8322034104271522615[436] = 0;
   out_8322034104271522615[437] = 0;
   out_8322034104271522615[438] = 0;
   out_8322034104271522615[439] = 1.0;
   out_8322034104271522615[440] = 0;
   out_8322034104271522615[441] = 0;
   out_8322034104271522615[442] = 0;
   out_8322034104271522615[443] = 0;
   out_8322034104271522615[444] = 0;
   out_8322034104271522615[445] = 0;
   out_8322034104271522615[446] = 0;
   out_8322034104271522615[447] = 0;
   out_8322034104271522615[448] = 0;
   out_8322034104271522615[449] = 0;
   out_8322034104271522615[450] = 0;
   out_8322034104271522615[451] = 0;
   out_8322034104271522615[452] = 0;
   out_8322034104271522615[453] = 0;
   out_8322034104271522615[454] = 0;
   out_8322034104271522615[455] = 0;
   out_8322034104271522615[456] = 0;
   out_8322034104271522615[457] = 0;
   out_8322034104271522615[458] = 0;
   out_8322034104271522615[459] = 0;
   out_8322034104271522615[460] = 0;
   out_8322034104271522615[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4546373434530884367) {
   out_4546373434530884367[0] = dt*state[7] + state[0];
   out_4546373434530884367[1] = dt*state[8] + state[1];
   out_4546373434530884367[2] = dt*state[9] + state[2];
   out_4546373434530884367[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4546373434530884367[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4546373434530884367[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4546373434530884367[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4546373434530884367[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4546373434530884367[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4546373434530884367[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4546373434530884367[10] = state[10];
   out_4546373434530884367[11] = state[11];
   out_4546373434530884367[12] = state[12];
   out_4546373434530884367[13] = state[13];
   out_4546373434530884367[14] = state[14];
   out_4546373434530884367[15] = state[15];
   out_4546373434530884367[16] = state[16];
   out_4546373434530884367[17] = state[17];
   out_4546373434530884367[18] = state[18];
   out_4546373434530884367[19] = state[19];
   out_4546373434530884367[20] = state[20];
   out_4546373434530884367[21] = state[21];
}
void F_fun(double *state, double dt, double *out_9082327890118699287) {
   out_9082327890118699287[0] = 1;
   out_9082327890118699287[1] = 0;
   out_9082327890118699287[2] = 0;
   out_9082327890118699287[3] = 0;
   out_9082327890118699287[4] = 0;
   out_9082327890118699287[5] = 0;
   out_9082327890118699287[6] = dt;
   out_9082327890118699287[7] = 0;
   out_9082327890118699287[8] = 0;
   out_9082327890118699287[9] = 0;
   out_9082327890118699287[10] = 0;
   out_9082327890118699287[11] = 0;
   out_9082327890118699287[12] = 0;
   out_9082327890118699287[13] = 0;
   out_9082327890118699287[14] = 0;
   out_9082327890118699287[15] = 0;
   out_9082327890118699287[16] = 0;
   out_9082327890118699287[17] = 0;
   out_9082327890118699287[18] = 0;
   out_9082327890118699287[19] = 0;
   out_9082327890118699287[20] = 0;
   out_9082327890118699287[21] = 0;
   out_9082327890118699287[22] = 1;
   out_9082327890118699287[23] = 0;
   out_9082327890118699287[24] = 0;
   out_9082327890118699287[25] = 0;
   out_9082327890118699287[26] = 0;
   out_9082327890118699287[27] = 0;
   out_9082327890118699287[28] = dt;
   out_9082327890118699287[29] = 0;
   out_9082327890118699287[30] = 0;
   out_9082327890118699287[31] = 0;
   out_9082327890118699287[32] = 0;
   out_9082327890118699287[33] = 0;
   out_9082327890118699287[34] = 0;
   out_9082327890118699287[35] = 0;
   out_9082327890118699287[36] = 0;
   out_9082327890118699287[37] = 0;
   out_9082327890118699287[38] = 0;
   out_9082327890118699287[39] = 0;
   out_9082327890118699287[40] = 0;
   out_9082327890118699287[41] = 0;
   out_9082327890118699287[42] = 0;
   out_9082327890118699287[43] = 0;
   out_9082327890118699287[44] = 1;
   out_9082327890118699287[45] = 0;
   out_9082327890118699287[46] = 0;
   out_9082327890118699287[47] = 0;
   out_9082327890118699287[48] = 0;
   out_9082327890118699287[49] = 0;
   out_9082327890118699287[50] = dt;
   out_9082327890118699287[51] = 0;
   out_9082327890118699287[52] = 0;
   out_9082327890118699287[53] = 0;
   out_9082327890118699287[54] = 0;
   out_9082327890118699287[55] = 0;
   out_9082327890118699287[56] = 0;
   out_9082327890118699287[57] = 0;
   out_9082327890118699287[58] = 0;
   out_9082327890118699287[59] = 0;
   out_9082327890118699287[60] = 0;
   out_9082327890118699287[61] = 0;
   out_9082327890118699287[62] = 0;
   out_9082327890118699287[63] = 0;
   out_9082327890118699287[64] = 0;
   out_9082327890118699287[65] = 0;
   out_9082327890118699287[66] = 1;
   out_9082327890118699287[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_9082327890118699287[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_9082327890118699287[69] = 0;
   out_9082327890118699287[70] = 0;
   out_9082327890118699287[71] = 0;
   out_9082327890118699287[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_9082327890118699287[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9082327890118699287[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9082327890118699287[75] = 0;
   out_9082327890118699287[76] = 0;
   out_9082327890118699287[77] = 0;
   out_9082327890118699287[78] = 0;
   out_9082327890118699287[79] = 0;
   out_9082327890118699287[80] = 0;
   out_9082327890118699287[81] = 0;
   out_9082327890118699287[82] = 0;
   out_9082327890118699287[83] = 0;
   out_9082327890118699287[84] = 0;
   out_9082327890118699287[85] = 0;
   out_9082327890118699287[86] = 0;
   out_9082327890118699287[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_9082327890118699287[88] = 1;
   out_9082327890118699287[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_9082327890118699287[90] = 0;
   out_9082327890118699287[91] = 0;
   out_9082327890118699287[92] = 0;
   out_9082327890118699287[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9082327890118699287[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_9082327890118699287[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9082327890118699287[96] = 0;
   out_9082327890118699287[97] = 0;
   out_9082327890118699287[98] = 0;
   out_9082327890118699287[99] = 0;
   out_9082327890118699287[100] = 0;
   out_9082327890118699287[101] = 0;
   out_9082327890118699287[102] = 0;
   out_9082327890118699287[103] = 0;
   out_9082327890118699287[104] = 0;
   out_9082327890118699287[105] = 0;
   out_9082327890118699287[106] = 0;
   out_9082327890118699287[107] = 0;
   out_9082327890118699287[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_9082327890118699287[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_9082327890118699287[110] = 1;
   out_9082327890118699287[111] = 0;
   out_9082327890118699287[112] = 0;
   out_9082327890118699287[113] = 0;
   out_9082327890118699287[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9082327890118699287[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9082327890118699287[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_9082327890118699287[117] = 0;
   out_9082327890118699287[118] = 0;
   out_9082327890118699287[119] = 0;
   out_9082327890118699287[120] = 0;
   out_9082327890118699287[121] = 0;
   out_9082327890118699287[122] = 0;
   out_9082327890118699287[123] = 0;
   out_9082327890118699287[124] = 0;
   out_9082327890118699287[125] = 0;
   out_9082327890118699287[126] = 0;
   out_9082327890118699287[127] = 0;
   out_9082327890118699287[128] = 0;
   out_9082327890118699287[129] = 0;
   out_9082327890118699287[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_9082327890118699287[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_9082327890118699287[132] = 1;
   out_9082327890118699287[133] = 0;
   out_9082327890118699287[134] = 0;
   out_9082327890118699287[135] = 0;
   out_9082327890118699287[136] = 0;
   out_9082327890118699287[137] = 0;
   out_9082327890118699287[138] = 0;
   out_9082327890118699287[139] = 0;
   out_9082327890118699287[140] = 0;
   out_9082327890118699287[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_9082327890118699287[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9082327890118699287[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9082327890118699287[144] = 0;
   out_9082327890118699287[145] = 0;
   out_9082327890118699287[146] = 0;
   out_9082327890118699287[147] = 0;
   out_9082327890118699287[148] = 0;
   out_9082327890118699287[149] = 0;
   out_9082327890118699287[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_9082327890118699287[151] = 0;
   out_9082327890118699287[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_9082327890118699287[153] = 0;
   out_9082327890118699287[154] = 1;
   out_9082327890118699287[155] = 0;
   out_9082327890118699287[156] = 0;
   out_9082327890118699287[157] = 0;
   out_9082327890118699287[158] = 0;
   out_9082327890118699287[159] = 0;
   out_9082327890118699287[160] = 0;
   out_9082327890118699287[161] = 0;
   out_9082327890118699287[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9082327890118699287[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_9082327890118699287[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9082327890118699287[165] = 0;
   out_9082327890118699287[166] = 0;
   out_9082327890118699287[167] = 0;
   out_9082327890118699287[168] = 0;
   out_9082327890118699287[169] = 0;
   out_9082327890118699287[170] = 0;
   out_9082327890118699287[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_9082327890118699287[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_9082327890118699287[173] = 0;
   out_9082327890118699287[174] = 0;
   out_9082327890118699287[175] = 0;
   out_9082327890118699287[176] = 1;
   out_9082327890118699287[177] = 0;
   out_9082327890118699287[178] = 0;
   out_9082327890118699287[179] = 0;
   out_9082327890118699287[180] = 0;
   out_9082327890118699287[181] = 0;
   out_9082327890118699287[182] = 0;
   out_9082327890118699287[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9082327890118699287[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9082327890118699287[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_9082327890118699287[186] = 0;
   out_9082327890118699287[187] = 0;
   out_9082327890118699287[188] = 0;
   out_9082327890118699287[189] = 0;
   out_9082327890118699287[190] = 0;
   out_9082327890118699287[191] = 0;
   out_9082327890118699287[192] = 0;
   out_9082327890118699287[193] = 0;
   out_9082327890118699287[194] = 0;
   out_9082327890118699287[195] = 0;
   out_9082327890118699287[196] = 0;
   out_9082327890118699287[197] = 0;
   out_9082327890118699287[198] = 1;
   out_9082327890118699287[199] = 0;
   out_9082327890118699287[200] = 0;
   out_9082327890118699287[201] = 0;
   out_9082327890118699287[202] = 0;
   out_9082327890118699287[203] = 0;
   out_9082327890118699287[204] = 0;
   out_9082327890118699287[205] = 0;
   out_9082327890118699287[206] = 0;
   out_9082327890118699287[207] = 0;
   out_9082327890118699287[208] = 0;
   out_9082327890118699287[209] = 0;
   out_9082327890118699287[210] = 0;
   out_9082327890118699287[211] = 0;
   out_9082327890118699287[212] = 0;
   out_9082327890118699287[213] = 0;
   out_9082327890118699287[214] = 0;
   out_9082327890118699287[215] = 0;
   out_9082327890118699287[216] = 0;
   out_9082327890118699287[217] = 0;
   out_9082327890118699287[218] = 0;
   out_9082327890118699287[219] = 0;
   out_9082327890118699287[220] = 1;
   out_9082327890118699287[221] = 0;
   out_9082327890118699287[222] = 0;
   out_9082327890118699287[223] = 0;
   out_9082327890118699287[224] = 0;
   out_9082327890118699287[225] = 0;
   out_9082327890118699287[226] = 0;
   out_9082327890118699287[227] = 0;
   out_9082327890118699287[228] = 0;
   out_9082327890118699287[229] = 0;
   out_9082327890118699287[230] = 0;
   out_9082327890118699287[231] = 0;
   out_9082327890118699287[232] = 0;
   out_9082327890118699287[233] = 0;
   out_9082327890118699287[234] = 0;
   out_9082327890118699287[235] = 0;
   out_9082327890118699287[236] = 0;
   out_9082327890118699287[237] = 0;
   out_9082327890118699287[238] = 0;
   out_9082327890118699287[239] = 0;
   out_9082327890118699287[240] = 0;
   out_9082327890118699287[241] = 0;
   out_9082327890118699287[242] = 1;
   out_9082327890118699287[243] = 0;
   out_9082327890118699287[244] = 0;
   out_9082327890118699287[245] = 0;
   out_9082327890118699287[246] = 0;
   out_9082327890118699287[247] = 0;
   out_9082327890118699287[248] = 0;
   out_9082327890118699287[249] = 0;
   out_9082327890118699287[250] = 0;
   out_9082327890118699287[251] = 0;
   out_9082327890118699287[252] = 0;
   out_9082327890118699287[253] = 0;
   out_9082327890118699287[254] = 0;
   out_9082327890118699287[255] = 0;
   out_9082327890118699287[256] = 0;
   out_9082327890118699287[257] = 0;
   out_9082327890118699287[258] = 0;
   out_9082327890118699287[259] = 0;
   out_9082327890118699287[260] = 0;
   out_9082327890118699287[261] = 0;
   out_9082327890118699287[262] = 0;
   out_9082327890118699287[263] = 0;
   out_9082327890118699287[264] = 1;
   out_9082327890118699287[265] = 0;
   out_9082327890118699287[266] = 0;
   out_9082327890118699287[267] = 0;
   out_9082327890118699287[268] = 0;
   out_9082327890118699287[269] = 0;
   out_9082327890118699287[270] = 0;
   out_9082327890118699287[271] = 0;
   out_9082327890118699287[272] = 0;
   out_9082327890118699287[273] = 0;
   out_9082327890118699287[274] = 0;
   out_9082327890118699287[275] = 0;
   out_9082327890118699287[276] = 0;
   out_9082327890118699287[277] = 0;
   out_9082327890118699287[278] = 0;
   out_9082327890118699287[279] = 0;
   out_9082327890118699287[280] = 0;
   out_9082327890118699287[281] = 0;
   out_9082327890118699287[282] = 0;
   out_9082327890118699287[283] = 0;
   out_9082327890118699287[284] = 0;
   out_9082327890118699287[285] = 0;
   out_9082327890118699287[286] = 1;
   out_9082327890118699287[287] = 0;
   out_9082327890118699287[288] = 0;
   out_9082327890118699287[289] = 0;
   out_9082327890118699287[290] = 0;
   out_9082327890118699287[291] = 0;
   out_9082327890118699287[292] = 0;
   out_9082327890118699287[293] = 0;
   out_9082327890118699287[294] = 0;
   out_9082327890118699287[295] = 0;
   out_9082327890118699287[296] = 0;
   out_9082327890118699287[297] = 0;
   out_9082327890118699287[298] = 0;
   out_9082327890118699287[299] = 0;
   out_9082327890118699287[300] = 0;
   out_9082327890118699287[301] = 0;
   out_9082327890118699287[302] = 0;
   out_9082327890118699287[303] = 0;
   out_9082327890118699287[304] = 0;
   out_9082327890118699287[305] = 0;
   out_9082327890118699287[306] = 0;
   out_9082327890118699287[307] = 0;
   out_9082327890118699287[308] = 1;
   out_9082327890118699287[309] = 0;
   out_9082327890118699287[310] = 0;
   out_9082327890118699287[311] = 0;
   out_9082327890118699287[312] = 0;
   out_9082327890118699287[313] = 0;
   out_9082327890118699287[314] = 0;
   out_9082327890118699287[315] = 0;
   out_9082327890118699287[316] = 0;
   out_9082327890118699287[317] = 0;
   out_9082327890118699287[318] = 0;
   out_9082327890118699287[319] = 0;
   out_9082327890118699287[320] = 0;
   out_9082327890118699287[321] = 0;
   out_9082327890118699287[322] = 0;
   out_9082327890118699287[323] = 0;
   out_9082327890118699287[324] = 0;
   out_9082327890118699287[325] = 0;
   out_9082327890118699287[326] = 0;
   out_9082327890118699287[327] = 0;
   out_9082327890118699287[328] = 0;
   out_9082327890118699287[329] = 0;
   out_9082327890118699287[330] = 1;
   out_9082327890118699287[331] = 0;
   out_9082327890118699287[332] = 0;
   out_9082327890118699287[333] = 0;
   out_9082327890118699287[334] = 0;
   out_9082327890118699287[335] = 0;
   out_9082327890118699287[336] = 0;
   out_9082327890118699287[337] = 0;
   out_9082327890118699287[338] = 0;
   out_9082327890118699287[339] = 0;
   out_9082327890118699287[340] = 0;
   out_9082327890118699287[341] = 0;
   out_9082327890118699287[342] = 0;
   out_9082327890118699287[343] = 0;
   out_9082327890118699287[344] = 0;
   out_9082327890118699287[345] = 0;
   out_9082327890118699287[346] = 0;
   out_9082327890118699287[347] = 0;
   out_9082327890118699287[348] = 0;
   out_9082327890118699287[349] = 0;
   out_9082327890118699287[350] = 0;
   out_9082327890118699287[351] = 0;
   out_9082327890118699287[352] = 1;
   out_9082327890118699287[353] = 0;
   out_9082327890118699287[354] = 0;
   out_9082327890118699287[355] = 0;
   out_9082327890118699287[356] = 0;
   out_9082327890118699287[357] = 0;
   out_9082327890118699287[358] = 0;
   out_9082327890118699287[359] = 0;
   out_9082327890118699287[360] = 0;
   out_9082327890118699287[361] = 0;
   out_9082327890118699287[362] = 0;
   out_9082327890118699287[363] = 0;
   out_9082327890118699287[364] = 0;
   out_9082327890118699287[365] = 0;
   out_9082327890118699287[366] = 0;
   out_9082327890118699287[367] = 0;
   out_9082327890118699287[368] = 0;
   out_9082327890118699287[369] = 0;
   out_9082327890118699287[370] = 0;
   out_9082327890118699287[371] = 0;
   out_9082327890118699287[372] = 0;
   out_9082327890118699287[373] = 0;
   out_9082327890118699287[374] = 1;
   out_9082327890118699287[375] = 0;
   out_9082327890118699287[376] = 0;
   out_9082327890118699287[377] = 0;
   out_9082327890118699287[378] = 0;
   out_9082327890118699287[379] = 0;
   out_9082327890118699287[380] = 0;
   out_9082327890118699287[381] = 0;
   out_9082327890118699287[382] = 0;
   out_9082327890118699287[383] = 0;
   out_9082327890118699287[384] = 0;
   out_9082327890118699287[385] = 0;
   out_9082327890118699287[386] = 0;
   out_9082327890118699287[387] = 0;
   out_9082327890118699287[388] = 0;
   out_9082327890118699287[389] = 0;
   out_9082327890118699287[390] = 0;
   out_9082327890118699287[391] = 0;
   out_9082327890118699287[392] = 0;
   out_9082327890118699287[393] = 0;
   out_9082327890118699287[394] = 0;
   out_9082327890118699287[395] = 0;
   out_9082327890118699287[396] = 1;
   out_9082327890118699287[397] = 0;
   out_9082327890118699287[398] = 0;
   out_9082327890118699287[399] = 0;
   out_9082327890118699287[400] = 0;
   out_9082327890118699287[401] = 0;
   out_9082327890118699287[402] = 0;
   out_9082327890118699287[403] = 0;
   out_9082327890118699287[404] = 0;
   out_9082327890118699287[405] = 0;
   out_9082327890118699287[406] = 0;
   out_9082327890118699287[407] = 0;
   out_9082327890118699287[408] = 0;
   out_9082327890118699287[409] = 0;
   out_9082327890118699287[410] = 0;
   out_9082327890118699287[411] = 0;
   out_9082327890118699287[412] = 0;
   out_9082327890118699287[413] = 0;
   out_9082327890118699287[414] = 0;
   out_9082327890118699287[415] = 0;
   out_9082327890118699287[416] = 0;
   out_9082327890118699287[417] = 0;
   out_9082327890118699287[418] = 1;
   out_9082327890118699287[419] = 0;
   out_9082327890118699287[420] = 0;
   out_9082327890118699287[421] = 0;
   out_9082327890118699287[422] = 0;
   out_9082327890118699287[423] = 0;
   out_9082327890118699287[424] = 0;
   out_9082327890118699287[425] = 0;
   out_9082327890118699287[426] = 0;
   out_9082327890118699287[427] = 0;
   out_9082327890118699287[428] = 0;
   out_9082327890118699287[429] = 0;
   out_9082327890118699287[430] = 0;
   out_9082327890118699287[431] = 0;
   out_9082327890118699287[432] = 0;
   out_9082327890118699287[433] = 0;
   out_9082327890118699287[434] = 0;
   out_9082327890118699287[435] = 0;
   out_9082327890118699287[436] = 0;
   out_9082327890118699287[437] = 0;
   out_9082327890118699287[438] = 0;
   out_9082327890118699287[439] = 0;
   out_9082327890118699287[440] = 1;
}
void h_4(double *state, double *unused, double *out_9102316923236691781) {
   out_9102316923236691781[0] = state[10] + state[13];
   out_9102316923236691781[1] = state[11] + state[14];
   out_9102316923236691781[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_902404093258307429) {
   out_902404093258307429[0] = 0;
   out_902404093258307429[1] = 0;
   out_902404093258307429[2] = 0;
   out_902404093258307429[3] = 0;
   out_902404093258307429[4] = 0;
   out_902404093258307429[5] = 0;
   out_902404093258307429[6] = 0;
   out_902404093258307429[7] = 0;
   out_902404093258307429[8] = 0;
   out_902404093258307429[9] = 0;
   out_902404093258307429[10] = 1;
   out_902404093258307429[11] = 0;
   out_902404093258307429[12] = 0;
   out_902404093258307429[13] = 1;
   out_902404093258307429[14] = 0;
   out_902404093258307429[15] = 0;
   out_902404093258307429[16] = 0;
   out_902404093258307429[17] = 0;
   out_902404093258307429[18] = 0;
   out_902404093258307429[19] = 0;
   out_902404093258307429[20] = 0;
   out_902404093258307429[21] = 0;
   out_902404093258307429[22] = 0;
   out_902404093258307429[23] = 0;
   out_902404093258307429[24] = 0;
   out_902404093258307429[25] = 0;
   out_902404093258307429[26] = 0;
   out_902404093258307429[27] = 0;
   out_902404093258307429[28] = 0;
   out_902404093258307429[29] = 0;
   out_902404093258307429[30] = 0;
   out_902404093258307429[31] = 0;
   out_902404093258307429[32] = 0;
   out_902404093258307429[33] = 1;
   out_902404093258307429[34] = 0;
   out_902404093258307429[35] = 0;
   out_902404093258307429[36] = 1;
   out_902404093258307429[37] = 0;
   out_902404093258307429[38] = 0;
   out_902404093258307429[39] = 0;
   out_902404093258307429[40] = 0;
   out_902404093258307429[41] = 0;
   out_902404093258307429[42] = 0;
   out_902404093258307429[43] = 0;
   out_902404093258307429[44] = 0;
   out_902404093258307429[45] = 0;
   out_902404093258307429[46] = 0;
   out_902404093258307429[47] = 0;
   out_902404093258307429[48] = 0;
   out_902404093258307429[49] = 0;
   out_902404093258307429[50] = 0;
   out_902404093258307429[51] = 0;
   out_902404093258307429[52] = 0;
   out_902404093258307429[53] = 0;
   out_902404093258307429[54] = 0;
   out_902404093258307429[55] = 0;
   out_902404093258307429[56] = 1;
   out_902404093258307429[57] = 0;
   out_902404093258307429[58] = 0;
   out_902404093258307429[59] = 1;
   out_902404093258307429[60] = 0;
   out_902404093258307429[61] = 0;
   out_902404093258307429[62] = 0;
   out_902404093258307429[63] = 0;
   out_902404093258307429[64] = 0;
   out_902404093258307429[65] = 0;
}
void h_9(double *state, double *unused, double *out_2972852324968798614) {
   out_2972852324968798614[0] = state[10];
   out_2972852324968798614[1] = state[11];
   out_2972852324968798614[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8189623028522754899) {
   out_8189623028522754899[0] = 0;
   out_8189623028522754899[1] = 0;
   out_8189623028522754899[2] = 0;
   out_8189623028522754899[3] = 0;
   out_8189623028522754899[4] = 0;
   out_8189623028522754899[5] = 0;
   out_8189623028522754899[6] = 0;
   out_8189623028522754899[7] = 0;
   out_8189623028522754899[8] = 0;
   out_8189623028522754899[9] = 0;
   out_8189623028522754899[10] = 1;
   out_8189623028522754899[11] = 0;
   out_8189623028522754899[12] = 0;
   out_8189623028522754899[13] = 0;
   out_8189623028522754899[14] = 0;
   out_8189623028522754899[15] = 0;
   out_8189623028522754899[16] = 0;
   out_8189623028522754899[17] = 0;
   out_8189623028522754899[18] = 0;
   out_8189623028522754899[19] = 0;
   out_8189623028522754899[20] = 0;
   out_8189623028522754899[21] = 0;
   out_8189623028522754899[22] = 0;
   out_8189623028522754899[23] = 0;
   out_8189623028522754899[24] = 0;
   out_8189623028522754899[25] = 0;
   out_8189623028522754899[26] = 0;
   out_8189623028522754899[27] = 0;
   out_8189623028522754899[28] = 0;
   out_8189623028522754899[29] = 0;
   out_8189623028522754899[30] = 0;
   out_8189623028522754899[31] = 0;
   out_8189623028522754899[32] = 0;
   out_8189623028522754899[33] = 1;
   out_8189623028522754899[34] = 0;
   out_8189623028522754899[35] = 0;
   out_8189623028522754899[36] = 0;
   out_8189623028522754899[37] = 0;
   out_8189623028522754899[38] = 0;
   out_8189623028522754899[39] = 0;
   out_8189623028522754899[40] = 0;
   out_8189623028522754899[41] = 0;
   out_8189623028522754899[42] = 0;
   out_8189623028522754899[43] = 0;
   out_8189623028522754899[44] = 0;
   out_8189623028522754899[45] = 0;
   out_8189623028522754899[46] = 0;
   out_8189623028522754899[47] = 0;
   out_8189623028522754899[48] = 0;
   out_8189623028522754899[49] = 0;
   out_8189623028522754899[50] = 0;
   out_8189623028522754899[51] = 0;
   out_8189623028522754899[52] = 0;
   out_8189623028522754899[53] = 0;
   out_8189623028522754899[54] = 0;
   out_8189623028522754899[55] = 0;
   out_8189623028522754899[56] = 1;
   out_8189623028522754899[57] = 0;
   out_8189623028522754899[58] = 0;
   out_8189623028522754899[59] = 0;
   out_8189623028522754899[60] = 0;
   out_8189623028522754899[61] = 0;
   out_8189623028522754899[62] = 0;
   out_8189623028522754899[63] = 0;
   out_8189623028522754899[64] = 0;
   out_8189623028522754899[65] = 0;
}
void h_10(double *state, double *unused, double *out_2507302632476207657) {
   out_2507302632476207657[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2507302632476207657[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2507302632476207657[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5412822851012783397) {
   out_5412822851012783397[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5412822851012783397[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5412822851012783397[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5412822851012783397[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5412822851012783397[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5412822851012783397[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5412822851012783397[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5412822851012783397[7] = 0;
   out_5412822851012783397[8] = 0;
   out_5412822851012783397[9] = 0;
   out_5412822851012783397[10] = 0;
   out_5412822851012783397[11] = 0;
   out_5412822851012783397[12] = 0;
   out_5412822851012783397[13] = 0;
   out_5412822851012783397[14] = 0;
   out_5412822851012783397[15] = 0;
   out_5412822851012783397[16] = 1;
   out_5412822851012783397[17] = 0;
   out_5412822851012783397[18] = 0;
   out_5412822851012783397[19] = 1;
   out_5412822851012783397[20] = 0;
   out_5412822851012783397[21] = 0;
   out_5412822851012783397[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5412822851012783397[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5412822851012783397[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5412822851012783397[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5412822851012783397[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5412822851012783397[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5412822851012783397[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5412822851012783397[29] = 0;
   out_5412822851012783397[30] = 0;
   out_5412822851012783397[31] = 0;
   out_5412822851012783397[32] = 0;
   out_5412822851012783397[33] = 0;
   out_5412822851012783397[34] = 0;
   out_5412822851012783397[35] = 0;
   out_5412822851012783397[36] = 0;
   out_5412822851012783397[37] = 0;
   out_5412822851012783397[38] = 0;
   out_5412822851012783397[39] = 1;
   out_5412822851012783397[40] = 0;
   out_5412822851012783397[41] = 0;
   out_5412822851012783397[42] = 1;
   out_5412822851012783397[43] = 0;
   out_5412822851012783397[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5412822851012783397[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5412822851012783397[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5412822851012783397[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5412822851012783397[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5412822851012783397[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5412822851012783397[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5412822851012783397[51] = 0;
   out_5412822851012783397[52] = 0;
   out_5412822851012783397[53] = 0;
   out_5412822851012783397[54] = 0;
   out_5412822851012783397[55] = 0;
   out_5412822851012783397[56] = 0;
   out_5412822851012783397[57] = 0;
   out_5412822851012783397[58] = 0;
   out_5412822851012783397[59] = 0;
   out_5412822851012783397[60] = 0;
   out_5412822851012783397[61] = 0;
   out_5412822851012783397[62] = 1;
   out_5412822851012783397[63] = 0;
   out_5412822851012783397[64] = 0;
   out_5412822851012783397[65] = 1;
}
void h_12(double *state, double *unused, double *out_4996051996219284334) {
   out_4996051996219284334[0] = state[0];
   out_4996051996219284334[1] = state[1];
   out_4996051996219284334[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5921860501290269224) {
   out_5921860501290269224[0] = 1;
   out_5921860501290269224[1] = 0;
   out_5921860501290269224[2] = 0;
   out_5921860501290269224[3] = 0;
   out_5921860501290269224[4] = 0;
   out_5921860501290269224[5] = 0;
   out_5921860501290269224[6] = 0;
   out_5921860501290269224[7] = 0;
   out_5921860501290269224[8] = 0;
   out_5921860501290269224[9] = 0;
   out_5921860501290269224[10] = 0;
   out_5921860501290269224[11] = 0;
   out_5921860501290269224[12] = 0;
   out_5921860501290269224[13] = 0;
   out_5921860501290269224[14] = 0;
   out_5921860501290269224[15] = 0;
   out_5921860501290269224[16] = 0;
   out_5921860501290269224[17] = 0;
   out_5921860501290269224[18] = 0;
   out_5921860501290269224[19] = 0;
   out_5921860501290269224[20] = 0;
   out_5921860501290269224[21] = 0;
   out_5921860501290269224[22] = 0;
   out_5921860501290269224[23] = 1;
   out_5921860501290269224[24] = 0;
   out_5921860501290269224[25] = 0;
   out_5921860501290269224[26] = 0;
   out_5921860501290269224[27] = 0;
   out_5921860501290269224[28] = 0;
   out_5921860501290269224[29] = 0;
   out_5921860501290269224[30] = 0;
   out_5921860501290269224[31] = 0;
   out_5921860501290269224[32] = 0;
   out_5921860501290269224[33] = 0;
   out_5921860501290269224[34] = 0;
   out_5921860501290269224[35] = 0;
   out_5921860501290269224[36] = 0;
   out_5921860501290269224[37] = 0;
   out_5921860501290269224[38] = 0;
   out_5921860501290269224[39] = 0;
   out_5921860501290269224[40] = 0;
   out_5921860501290269224[41] = 0;
   out_5921860501290269224[42] = 0;
   out_5921860501290269224[43] = 0;
   out_5921860501290269224[44] = 0;
   out_5921860501290269224[45] = 0;
   out_5921860501290269224[46] = 1;
   out_5921860501290269224[47] = 0;
   out_5921860501290269224[48] = 0;
   out_5921860501290269224[49] = 0;
   out_5921860501290269224[50] = 0;
   out_5921860501290269224[51] = 0;
   out_5921860501290269224[52] = 0;
   out_5921860501290269224[53] = 0;
   out_5921860501290269224[54] = 0;
   out_5921860501290269224[55] = 0;
   out_5921860501290269224[56] = 0;
   out_5921860501290269224[57] = 0;
   out_5921860501290269224[58] = 0;
   out_5921860501290269224[59] = 0;
   out_5921860501290269224[60] = 0;
   out_5921860501290269224[61] = 0;
   out_5921860501290269224[62] = 0;
   out_5921860501290269224[63] = 0;
   out_5921860501290269224[64] = 0;
   out_5921860501290269224[65] = 0;
}
void h_35(double *state, double *unused, double *out_2735354577293346544) {
   out_2735354577293346544[0] = state[7];
   out_2735354577293346544[1] = state[8];
   out_2735354577293346544[2] = state[9];
}
void H_35(double *state, double *unused, double *out_4269066150630914805) {
   out_4269066150630914805[0] = 0;
   out_4269066150630914805[1] = 0;
   out_4269066150630914805[2] = 0;
   out_4269066150630914805[3] = 0;
   out_4269066150630914805[4] = 0;
   out_4269066150630914805[5] = 0;
   out_4269066150630914805[6] = 0;
   out_4269066150630914805[7] = 1;
   out_4269066150630914805[8] = 0;
   out_4269066150630914805[9] = 0;
   out_4269066150630914805[10] = 0;
   out_4269066150630914805[11] = 0;
   out_4269066150630914805[12] = 0;
   out_4269066150630914805[13] = 0;
   out_4269066150630914805[14] = 0;
   out_4269066150630914805[15] = 0;
   out_4269066150630914805[16] = 0;
   out_4269066150630914805[17] = 0;
   out_4269066150630914805[18] = 0;
   out_4269066150630914805[19] = 0;
   out_4269066150630914805[20] = 0;
   out_4269066150630914805[21] = 0;
   out_4269066150630914805[22] = 0;
   out_4269066150630914805[23] = 0;
   out_4269066150630914805[24] = 0;
   out_4269066150630914805[25] = 0;
   out_4269066150630914805[26] = 0;
   out_4269066150630914805[27] = 0;
   out_4269066150630914805[28] = 0;
   out_4269066150630914805[29] = 0;
   out_4269066150630914805[30] = 1;
   out_4269066150630914805[31] = 0;
   out_4269066150630914805[32] = 0;
   out_4269066150630914805[33] = 0;
   out_4269066150630914805[34] = 0;
   out_4269066150630914805[35] = 0;
   out_4269066150630914805[36] = 0;
   out_4269066150630914805[37] = 0;
   out_4269066150630914805[38] = 0;
   out_4269066150630914805[39] = 0;
   out_4269066150630914805[40] = 0;
   out_4269066150630914805[41] = 0;
   out_4269066150630914805[42] = 0;
   out_4269066150630914805[43] = 0;
   out_4269066150630914805[44] = 0;
   out_4269066150630914805[45] = 0;
   out_4269066150630914805[46] = 0;
   out_4269066150630914805[47] = 0;
   out_4269066150630914805[48] = 0;
   out_4269066150630914805[49] = 0;
   out_4269066150630914805[50] = 0;
   out_4269066150630914805[51] = 0;
   out_4269066150630914805[52] = 0;
   out_4269066150630914805[53] = 1;
   out_4269066150630914805[54] = 0;
   out_4269066150630914805[55] = 0;
   out_4269066150630914805[56] = 0;
   out_4269066150630914805[57] = 0;
   out_4269066150630914805[58] = 0;
   out_4269066150630914805[59] = 0;
   out_4269066150630914805[60] = 0;
   out_4269066150630914805[61] = 0;
   out_4269066150630914805[62] = 0;
   out_4269066150630914805[63] = 0;
   out_4269066150630914805[64] = 0;
   out_4269066150630914805[65] = 0;
}
void h_32(double *state, double *unused, double *out_127744176607188500) {
   out_127744176607188500[0] = state[3];
   out_127744176607188500[1] = state[4];
   out_127744176607188500[2] = state[5];
   out_127744176607188500[3] = state[6];
}
void H_32(double *state, double *unused, double *out_814553088527746871) {
   out_814553088527746871[0] = 0;
   out_814553088527746871[1] = 0;
   out_814553088527746871[2] = 0;
   out_814553088527746871[3] = 1;
   out_814553088527746871[4] = 0;
   out_814553088527746871[5] = 0;
   out_814553088527746871[6] = 0;
   out_814553088527746871[7] = 0;
   out_814553088527746871[8] = 0;
   out_814553088527746871[9] = 0;
   out_814553088527746871[10] = 0;
   out_814553088527746871[11] = 0;
   out_814553088527746871[12] = 0;
   out_814553088527746871[13] = 0;
   out_814553088527746871[14] = 0;
   out_814553088527746871[15] = 0;
   out_814553088527746871[16] = 0;
   out_814553088527746871[17] = 0;
   out_814553088527746871[18] = 0;
   out_814553088527746871[19] = 0;
   out_814553088527746871[20] = 0;
   out_814553088527746871[21] = 0;
   out_814553088527746871[22] = 0;
   out_814553088527746871[23] = 0;
   out_814553088527746871[24] = 0;
   out_814553088527746871[25] = 0;
   out_814553088527746871[26] = 1;
   out_814553088527746871[27] = 0;
   out_814553088527746871[28] = 0;
   out_814553088527746871[29] = 0;
   out_814553088527746871[30] = 0;
   out_814553088527746871[31] = 0;
   out_814553088527746871[32] = 0;
   out_814553088527746871[33] = 0;
   out_814553088527746871[34] = 0;
   out_814553088527746871[35] = 0;
   out_814553088527746871[36] = 0;
   out_814553088527746871[37] = 0;
   out_814553088527746871[38] = 0;
   out_814553088527746871[39] = 0;
   out_814553088527746871[40] = 0;
   out_814553088527746871[41] = 0;
   out_814553088527746871[42] = 0;
   out_814553088527746871[43] = 0;
   out_814553088527746871[44] = 0;
   out_814553088527746871[45] = 0;
   out_814553088527746871[46] = 0;
   out_814553088527746871[47] = 0;
   out_814553088527746871[48] = 0;
   out_814553088527746871[49] = 1;
   out_814553088527746871[50] = 0;
   out_814553088527746871[51] = 0;
   out_814553088527746871[52] = 0;
   out_814553088527746871[53] = 0;
   out_814553088527746871[54] = 0;
   out_814553088527746871[55] = 0;
   out_814553088527746871[56] = 0;
   out_814553088527746871[57] = 0;
   out_814553088527746871[58] = 0;
   out_814553088527746871[59] = 0;
   out_814553088527746871[60] = 0;
   out_814553088527746871[61] = 0;
   out_814553088527746871[62] = 0;
   out_814553088527746871[63] = 0;
   out_814553088527746871[64] = 0;
   out_814553088527746871[65] = 0;
   out_814553088527746871[66] = 0;
   out_814553088527746871[67] = 0;
   out_814553088527746871[68] = 0;
   out_814553088527746871[69] = 0;
   out_814553088527746871[70] = 0;
   out_814553088527746871[71] = 0;
   out_814553088527746871[72] = 1;
   out_814553088527746871[73] = 0;
   out_814553088527746871[74] = 0;
   out_814553088527746871[75] = 0;
   out_814553088527746871[76] = 0;
   out_814553088527746871[77] = 0;
   out_814553088527746871[78] = 0;
   out_814553088527746871[79] = 0;
   out_814553088527746871[80] = 0;
   out_814553088527746871[81] = 0;
   out_814553088527746871[82] = 0;
   out_814553088527746871[83] = 0;
   out_814553088527746871[84] = 0;
   out_814553088527746871[85] = 0;
   out_814553088527746871[86] = 0;
   out_814553088527746871[87] = 0;
}
void h_13(double *state, double *unused, double *out_4537758503318009582) {
   out_4537758503318009582[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4537758503318009582[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4537758503318009582[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8105224385221966427) {
   out_8105224385221966427[0] = 0;
   out_8105224385221966427[1] = 0;
   out_8105224385221966427[2] = 0;
   out_8105224385221966427[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8105224385221966427[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8105224385221966427[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8105224385221966427[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8105224385221966427[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8105224385221966427[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8105224385221966427[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8105224385221966427[10] = 0;
   out_8105224385221966427[11] = 0;
   out_8105224385221966427[12] = 0;
   out_8105224385221966427[13] = 0;
   out_8105224385221966427[14] = 0;
   out_8105224385221966427[15] = 0;
   out_8105224385221966427[16] = 0;
   out_8105224385221966427[17] = 0;
   out_8105224385221966427[18] = 0;
   out_8105224385221966427[19] = 0;
   out_8105224385221966427[20] = 0;
   out_8105224385221966427[21] = 0;
   out_8105224385221966427[22] = 0;
   out_8105224385221966427[23] = 0;
   out_8105224385221966427[24] = 0;
   out_8105224385221966427[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8105224385221966427[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8105224385221966427[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8105224385221966427[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8105224385221966427[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8105224385221966427[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8105224385221966427[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8105224385221966427[32] = 0;
   out_8105224385221966427[33] = 0;
   out_8105224385221966427[34] = 0;
   out_8105224385221966427[35] = 0;
   out_8105224385221966427[36] = 0;
   out_8105224385221966427[37] = 0;
   out_8105224385221966427[38] = 0;
   out_8105224385221966427[39] = 0;
   out_8105224385221966427[40] = 0;
   out_8105224385221966427[41] = 0;
   out_8105224385221966427[42] = 0;
   out_8105224385221966427[43] = 0;
   out_8105224385221966427[44] = 0;
   out_8105224385221966427[45] = 0;
   out_8105224385221966427[46] = 0;
   out_8105224385221966427[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8105224385221966427[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8105224385221966427[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8105224385221966427[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8105224385221966427[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8105224385221966427[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8105224385221966427[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8105224385221966427[54] = 0;
   out_8105224385221966427[55] = 0;
   out_8105224385221966427[56] = 0;
   out_8105224385221966427[57] = 0;
   out_8105224385221966427[58] = 0;
   out_8105224385221966427[59] = 0;
   out_8105224385221966427[60] = 0;
   out_8105224385221966427[61] = 0;
   out_8105224385221966427[62] = 0;
   out_8105224385221966427[63] = 0;
   out_8105224385221966427[64] = 0;
   out_8105224385221966427[65] = 0;
}
void h_14(double *state, double *unused, double *out_2972852324968798614) {
   out_2972852324968798614[0] = state[10];
   out_2972852324968798614[1] = state[11];
   out_2972852324968798614[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8189623028522754899) {
   out_8189623028522754899[0] = 0;
   out_8189623028522754899[1] = 0;
   out_8189623028522754899[2] = 0;
   out_8189623028522754899[3] = 0;
   out_8189623028522754899[4] = 0;
   out_8189623028522754899[5] = 0;
   out_8189623028522754899[6] = 0;
   out_8189623028522754899[7] = 0;
   out_8189623028522754899[8] = 0;
   out_8189623028522754899[9] = 0;
   out_8189623028522754899[10] = 1;
   out_8189623028522754899[11] = 0;
   out_8189623028522754899[12] = 0;
   out_8189623028522754899[13] = 0;
   out_8189623028522754899[14] = 0;
   out_8189623028522754899[15] = 0;
   out_8189623028522754899[16] = 0;
   out_8189623028522754899[17] = 0;
   out_8189623028522754899[18] = 0;
   out_8189623028522754899[19] = 0;
   out_8189623028522754899[20] = 0;
   out_8189623028522754899[21] = 0;
   out_8189623028522754899[22] = 0;
   out_8189623028522754899[23] = 0;
   out_8189623028522754899[24] = 0;
   out_8189623028522754899[25] = 0;
   out_8189623028522754899[26] = 0;
   out_8189623028522754899[27] = 0;
   out_8189623028522754899[28] = 0;
   out_8189623028522754899[29] = 0;
   out_8189623028522754899[30] = 0;
   out_8189623028522754899[31] = 0;
   out_8189623028522754899[32] = 0;
   out_8189623028522754899[33] = 1;
   out_8189623028522754899[34] = 0;
   out_8189623028522754899[35] = 0;
   out_8189623028522754899[36] = 0;
   out_8189623028522754899[37] = 0;
   out_8189623028522754899[38] = 0;
   out_8189623028522754899[39] = 0;
   out_8189623028522754899[40] = 0;
   out_8189623028522754899[41] = 0;
   out_8189623028522754899[42] = 0;
   out_8189623028522754899[43] = 0;
   out_8189623028522754899[44] = 0;
   out_8189623028522754899[45] = 0;
   out_8189623028522754899[46] = 0;
   out_8189623028522754899[47] = 0;
   out_8189623028522754899[48] = 0;
   out_8189623028522754899[49] = 0;
   out_8189623028522754899[50] = 0;
   out_8189623028522754899[51] = 0;
   out_8189623028522754899[52] = 0;
   out_8189623028522754899[53] = 0;
   out_8189623028522754899[54] = 0;
   out_8189623028522754899[55] = 0;
   out_8189623028522754899[56] = 1;
   out_8189623028522754899[57] = 0;
   out_8189623028522754899[58] = 0;
   out_8189623028522754899[59] = 0;
   out_8189623028522754899[60] = 0;
   out_8189623028522754899[61] = 0;
   out_8189623028522754899[62] = 0;
   out_8189623028522754899[63] = 0;
   out_8189623028522754899[64] = 0;
   out_8189623028522754899[65] = 0;
}
void h_33(double *state, double *unused, double *out_3035889652456040535) {
   out_3035889652456040535[0] = state[16];
   out_3035889652456040535[1] = state[17];
   out_3035889652456040535[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7419623155269772409) {
   out_7419623155269772409[0] = 0;
   out_7419623155269772409[1] = 0;
   out_7419623155269772409[2] = 0;
   out_7419623155269772409[3] = 0;
   out_7419623155269772409[4] = 0;
   out_7419623155269772409[5] = 0;
   out_7419623155269772409[6] = 0;
   out_7419623155269772409[7] = 0;
   out_7419623155269772409[8] = 0;
   out_7419623155269772409[9] = 0;
   out_7419623155269772409[10] = 0;
   out_7419623155269772409[11] = 0;
   out_7419623155269772409[12] = 0;
   out_7419623155269772409[13] = 0;
   out_7419623155269772409[14] = 0;
   out_7419623155269772409[15] = 0;
   out_7419623155269772409[16] = 1;
   out_7419623155269772409[17] = 0;
   out_7419623155269772409[18] = 0;
   out_7419623155269772409[19] = 0;
   out_7419623155269772409[20] = 0;
   out_7419623155269772409[21] = 0;
   out_7419623155269772409[22] = 0;
   out_7419623155269772409[23] = 0;
   out_7419623155269772409[24] = 0;
   out_7419623155269772409[25] = 0;
   out_7419623155269772409[26] = 0;
   out_7419623155269772409[27] = 0;
   out_7419623155269772409[28] = 0;
   out_7419623155269772409[29] = 0;
   out_7419623155269772409[30] = 0;
   out_7419623155269772409[31] = 0;
   out_7419623155269772409[32] = 0;
   out_7419623155269772409[33] = 0;
   out_7419623155269772409[34] = 0;
   out_7419623155269772409[35] = 0;
   out_7419623155269772409[36] = 0;
   out_7419623155269772409[37] = 0;
   out_7419623155269772409[38] = 0;
   out_7419623155269772409[39] = 1;
   out_7419623155269772409[40] = 0;
   out_7419623155269772409[41] = 0;
   out_7419623155269772409[42] = 0;
   out_7419623155269772409[43] = 0;
   out_7419623155269772409[44] = 0;
   out_7419623155269772409[45] = 0;
   out_7419623155269772409[46] = 0;
   out_7419623155269772409[47] = 0;
   out_7419623155269772409[48] = 0;
   out_7419623155269772409[49] = 0;
   out_7419623155269772409[50] = 0;
   out_7419623155269772409[51] = 0;
   out_7419623155269772409[52] = 0;
   out_7419623155269772409[53] = 0;
   out_7419623155269772409[54] = 0;
   out_7419623155269772409[55] = 0;
   out_7419623155269772409[56] = 0;
   out_7419623155269772409[57] = 0;
   out_7419623155269772409[58] = 0;
   out_7419623155269772409[59] = 0;
   out_7419623155269772409[60] = 0;
   out_7419623155269772409[61] = 0;
   out_7419623155269772409[62] = 1;
   out_7419623155269772409[63] = 0;
   out_7419623155269772409[64] = 0;
   out_7419623155269772409[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3943162456687825246) {
  H(in_vec, out_3943162456687825246);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2506585822566936452) {
  err_fun(nom_x, delta_x, out_2506585822566936452);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_9034738354930982896) {
  inv_err_fun(nom_x, true_x, out_9034738354930982896);
}
void live_H_mod_fun(double *state, double *out_8322034104271522615) {
  H_mod_fun(state, out_8322034104271522615);
}
void live_f_fun(double *state, double dt, double *out_4546373434530884367) {
  f_fun(state,  dt, out_4546373434530884367);
}
void live_F_fun(double *state, double dt, double *out_9082327890118699287) {
  F_fun(state,  dt, out_9082327890118699287);
}
void live_h_4(double *state, double *unused, double *out_9102316923236691781) {
  h_4(state, unused, out_9102316923236691781);
}
void live_H_4(double *state, double *unused, double *out_902404093258307429) {
  H_4(state, unused, out_902404093258307429);
}
void live_h_9(double *state, double *unused, double *out_2972852324968798614) {
  h_9(state, unused, out_2972852324968798614);
}
void live_H_9(double *state, double *unused, double *out_8189623028522754899) {
  H_9(state, unused, out_8189623028522754899);
}
void live_h_10(double *state, double *unused, double *out_2507302632476207657) {
  h_10(state, unused, out_2507302632476207657);
}
void live_H_10(double *state, double *unused, double *out_5412822851012783397) {
  H_10(state, unused, out_5412822851012783397);
}
void live_h_12(double *state, double *unused, double *out_4996051996219284334) {
  h_12(state, unused, out_4996051996219284334);
}
void live_H_12(double *state, double *unused, double *out_5921860501290269224) {
  H_12(state, unused, out_5921860501290269224);
}
void live_h_35(double *state, double *unused, double *out_2735354577293346544) {
  h_35(state, unused, out_2735354577293346544);
}
void live_H_35(double *state, double *unused, double *out_4269066150630914805) {
  H_35(state, unused, out_4269066150630914805);
}
void live_h_32(double *state, double *unused, double *out_127744176607188500) {
  h_32(state, unused, out_127744176607188500);
}
void live_H_32(double *state, double *unused, double *out_814553088527746871) {
  H_32(state, unused, out_814553088527746871);
}
void live_h_13(double *state, double *unused, double *out_4537758503318009582) {
  h_13(state, unused, out_4537758503318009582);
}
void live_H_13(double *state, double *unused, double *out_8105224385221966427) {
  H_13(state, unused, out_8105224385221966427);
}
void live_h_14(double *state, double *unused, double *out_2972852324968798614) {
  h_14(state, unused, out_2972852324968798614);
}
void live_H_14(double *state, double *unused, double *out_8189623028522754899) {
  H_14(state, unused, out_8189623028522754899);
}
void live_h_33(double *state, double *unused, double *out_3035889652456040535) {
  h_33(state, unused, out_3035889652456040535);
}
void live_H_33(double *state, double *unused, double *out_7419623155269772409) {
  H_33(state, unused, out_7419623155269772409);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
