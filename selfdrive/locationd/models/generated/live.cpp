#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2767579373606480063) {
   out_2767579373606480063[0] = 0;
   out_2767579373606480063[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2767579373606480063[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2767579373606480063[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2767579373606480063[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2767579373606480063[5] = -sin(in_vec[1]);
   out_2767579373606480063[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2767579373606480063[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2767579373606480063[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2767579373606480063[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2767579373606480063[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2767579373606480063[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2767579373606480063[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2767579373606480063[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2767579373606480063[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2767579373606480063[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2767579373606480063[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2767579373606480063[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3425730085275654160) {
   out_3425730085275654160[0] = delta_x[0] + nom_x[0];
   out_3425730085275654160[1] = delta_x[1] + nom_x[1];
   out_3425730085275654160[2] = delta_x[2] + nom_x[2];
   out_3425730085275654160[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3425730085275654160[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3425730085275654160[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3425730085275654160[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3425730085275654160[7] = delta_x[6] + nom_x[7];
   out_3425730085275654160[8] = delta_x[7] + nom_x[8];
   out_3425730085275654160[9] = delta_x[8] + nom_x[9];
   out_3425730085275654160[10] = delta_x[9] + nom_x[10];
   out_3425730085275654160[11] = delta_x[10] + nom_x[11];
   out_3425730085275654160[12] = delta_x[11] + nom_x[12];
   out_3425730085275654160[13] = delta_x[12] + nom_x[13];
   out_3425730085275654160[14] = delta_x[13] + nom_x[14];
   out_3425730085275654160[15] = delta_x[14] + nom_x[15];
   out_3425730085275654160[16] = delta_x[15] + nom_x[16];
   out_3425730085275654160[17] = delta_x[16] + nom_x[17];
   out_3425730085275654160[18] = delta_x[17] + nom_x[18];
   out_3425730085275654160[19] = delta_x[18] + nom_x[19];
   out_3425730085275654160[20] = delta_x[19] + nom_x[20];
   out_3425730085275654160[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5958469851231347980) {
   out_5958469851231347980[0] = -nom_x[0] + true_x[0];
   out_5958469851231347980[1] = -nom_x[1] + true_x[1];
   out_5958469851231347980[2] = -nom_x[2] + true_x[2];
   out_5958469851231347980[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5958469851231347980[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5958469851231347980[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5958469851231347980[6] = -nom_x[7] + true_x[7];
   out_5958469851231347980[7] = -nom_x[8] + true_x[8];
   out_5958469851231347980[8] = -nom_x[9] + true_x[9];
   out_5958469851231347980[9] = -nom_x[10] + true_x[10];
   out_5958469851231347980[10] = -nom_x[11] + true_x[11];
   out_5958469851231347980[11] = -nom_x[12] + true_x[12];
   out_5958469851231347980[12] = -nom_x[13] + true_x[13];
   out_5958469851231347980[13] = -nom_x[14] + true_x[14];
   out_5958469851231347980[14] = -nom_x[15] + true_x[15];
   out_5958469851231347980[15] = -nom_x[16] + true_x[16];
   out_5958469851231347980[16] = -nom_x[17] + true_x[17];
   out_5958469851231347980[17] = -nom_x[18] + true_x[18];
   out_5958469851231347980[18] = -nom_x[19] + true_x[19];
   out_5958469851231347980[19] = -nom_x[20] + true_x[20];
   out_5958469851231347980[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7268934231755554651) {
   out_7268934231755554651[0] = 1.0;
   out_7268934231755554651[1] = 0;
   out_7268934231755554651[2] = 0;
   out_7268934231755554651[3] = 0;
   out_7268934231755554651[4] = 0;
   out_7268934231755554651[5] = 0;
   out_7268934231755554651[6] = 0;
   out_7268934231755554651[7] = 0;
   out_7268934231755554651[8] = 0;
   out_7268934231755554651[9] = 0;
   out_7268934231755554651[10] = 0;
   out_7268934231755554651[11] = 0;
   out_7268934231755554651[12] = 0;
   out_7268934231755554651[13] = 0;
   out_7268934231755554651[14] = 0;
   out_7268934231755554651[15] = 0;
   out_7268934231755554651[16] = 0;
   out_7268934231755554651[17] = 0;
   out_7268934231755554651[18] = 0;
   out_7268934231755554651[19] = 0;
   out_7268934231755554651[20] = 0;
   out_7268934231755554651[21] = 0;
   out_7268934231755554651[22] = 1.0;
   out_7268934231755554651[23] = 0;
   out_7268934231755554651[24] = 0;
   out_7268934231755554651[25] = 0;
   out_7268934231755554651[26] = 0;
   out_7268934231755554651[27] = 0;
   out_7268934231755554651[28] = 0;
   out_7268934231755554651[29] = 0;
   out_7268934231755554651[30] = 0;
   out_7268934231755554651[31] = 0;
   out_7268934231755554651[32] = 0;
   out_7268934231755554651[33] = 0;
   out_7268934231755554651[34] = 0;
   out_7268934231755554651[35] = 0;
   out_7268934231755554651[36] = 0;
   out_7268934231755554651[37] = 0;
   out_7268934231755554651[38] = 0;
   out_7268934231755554651[39] = 0;
   out_7268934231755554651[40] = 0;
   out_7268934231755554651[41] = 0;
   out_7268934231755554651[42] = 0;
   out_7268934231755554651[43] = 0;
   out_7268934231755554651[44] = 1.0;
   out_7268934231755554651[45] = 0;
   out_7268934231755554651[46] = 0;
   out_7268934231755554651[47] = 0;
   out_7268934231755554651[48] = 0;
   out_7268934231755554651[49] = 0;
   out_7268934231755554651[50] = 0;
   out_7268934231755554651[51] = 0;
   out_7268934231755554651[52] = 0;
   out_7268934231755554651[53] = 0;
   out_7268934231755554651[54] = 0;
   out_7268934231755554651[55] = 0;
   out_7268934231755554651[56] = 0;
   out_7268934231755554651[57] = 0;
   out_7268934231755554651[58] = 0;
   out_7268934231755554651[59] = 0;
   out_7268934231755554651[60] = 0;
   out_7268934231755554651[61] = 0;
   out_7268934231755554651[62] = 0;
   out_7268934231755554651[63] = 0;
   out_7268934231755554651[64] = 0;
   out_7268934231755554651[65] = 0;
   out_7268934231755554651[66] = -0.5*state[4];
   out_7268934231755554651[67] = -0.5*state[5];
   out_7268934231755554651[68] = -0.5*state[6];
   out_7268934231755554651[69] = 0;
   out_7268934231755554651[70] = 0;
   out_7268934231755554651[71] = 0;
   out_7268934231755554651[72] = 0;
   out_7268934231755554651[73] = 0;
   out_7268934231755554651[74] = 0;
   out_7268934231755554651[75] = 0;
   out_7268934231755554651[76] = 0;
   out_7268934231755554651[77] = 0;
   out_7268934231755554651[78] = 0;
   out_7268934231755554651[79] = 0;
   out_7268934231755554651[80] = 0;
   out_7268934231755554651[81] = 0;
   out_7268934231755554651[82] = 0;
   out_7268934231755554651[83] = 0;
   out_7268934231755554651[84] = 0;
   out_7268934231755554651[85] = 0;
   out_7268934231755554651[86] = 0;
   out_7268934231755554651[87] = 0.5*state[3];
   out_7268934231755554651[88] = 0.5*state[6];
   out_7268934231755554651[89] = -0.5*state[5];
   out_7268934231755554651[90] = 0;
   out_7268934231755554651[91] = 0;
   out_7268934231755554651[92] = 0;
   out_7268934231755554651[93] = 0;
   out_7268934231755554651[94] = 0;
   out_7268934231755554651[95] = 0;
   out_7268934231755554651[96] = 0;
   out_7268934231755554651[97] = 0;
   out_7268934231755554651[98] = 0;
   out_7268934231755554651[99] = 0;
   out_7268934231755554651[100] = 0;
   out_7268934231755554651[101] = 0;
   out_7268934231755554651[102] = 0;
   out_7268934231755554651[103] = 0;
   out_7268934231755554651[104] = 0;
   out_7268934231755554651[105] = 0;
   out_7268934231755554651[106] = 0;
   out_7268934231755554651[107] = 0;
   out_7268934231755554651[108] = -0.5*state[6];
   out_7268934231755554651[109] = 0.5*state[3];
   out_7268934231755554651[110] = 0.5*state[4];
   out_7268934231755554651[111] = 0;
   out_7268934231755554651[112] = 0;
   out_7268934231755554651[113] = 0;
   out_7268934231755554651[114] = 0;
   out_7268934231755554651[115] = 0;
   out_7268934231755554651[116] = 0;
   out_7268934231755554651[117] = 0;
   out_7268934231755554651[118] = 0;
   out_7268934231755554651[119] = 0;
   out_7268934231755554651[120] = 0;
   out_7268934231755554651[121] = 0;
   out_7268934231755554651[122] = 0;
   out_7268934231755554651[123] = 0;
   out_7268934231755554651[124] = 0;
   out_7268934231755554651[125] = 0;
   out_7268934231755554651[126] = 0;
   out_7268934231755554651[127] = 0;
   out_7268934231755554651[128] = 0;
   out_7268934231755554651[129] = 0.5*state[5];
   out_7268934231755554651[130] = -0.5*state[4];
   out_7268934231755554651[131] = 0.5*state[3];
   out_7268934231755554651[132] = 0;
   out_7268934231755554651[133] = 0;
   out_7268934231755554651[134] = 0;
   out_7268934231755554651[135] = 0;
   out_7268934231755554651[136] = 0;
   out_7268934231755554651[137] = 0;
   out_7268934231755554651[138] = 0;
   out_7268934231755554651[139] = 0;
   out_7268934231755554651[140] = 0;
   out_7268934231755554651[141] = 0;
   out_7268934231755554651[142] = 0;
   out_7268934231755554651[143] = 0;
   out_7268934231755554651[144] = 0;
   out_7268934231755554651[145] = 0;
   out_7268934231755554651[146] = 0;
   out_7268934231755554651[147] = 0;
   out_7268934231755554651[148] = 0;
   out_7268934231755554651[149] = 0;
   out_7268934231755554651[150] = 0;
   out_7268934231755554651[151] = 0;
   out_7268934231755554651[152] = 0;
   out_7268934231755554651[153] = 1.0;
   out_7268934231755554651[154] = 0;
   out_7268934231755554651[155] = 0;
   out_7268934231755554651[156] = 0;
   out_7268934231755554651[157] = 0;
   out_7268934231755554651[158] = 0;
   out_7268934231755554651[159] = 0;
   out_7268934231755554651[160] = 0;
   out_7268934231755554651[161] = 0;
   out_7268934231755554651[162] = 0;
   out_7268934231755554651[163] = 0;
   out_7268934231755554651[164] = 0;
   out_7268934231755554651[165] = 0;
   out_7268934231755554651[166] = 0;
   out_7268934231755554651[167] = 0;
   out_7268934231755554651[168] = 0;
   out_7268934231755554651[169] = 0;
   out_7268934231755554651[170] = 0;
   out_7268934231755554651[171] = 0;
   out_7268934231755554651[172] = 0;
   out_7268934231755554651[173] = 0;
   out_7268934231755554651[174] = 0;
   out_7268934231755554651[175] = 1.0;
   out_7268934231755554651[176] = 0;
   out_7268934231755554651[177] = 0;
   out_7268934231755554651[178] = 0;
   out_7268934231755554651[179] = 0;
   out_7268934231755554651[180] = 0;
   out_7268934231755554651[181] = 0;
   out_7268934231755554651[182] = 0;
   out_7268934231755554651[183] = 0;
   out_7268934231755554651[184] = 0;
   out_7268934231755554651[185] = 0;
   out_7268934231755554651[186] = 0;
   out_7268934231755554651[187] = 0;
   out_7268934231755554651[188] = 0;
   out_7268934231755554651[189] = 0;
   out_7268934231755554651[190] = 0;
   out_7268934231755554651[191] = 0;
   out_7268934231755554651[192] = 0;
   out_7268934231755554651[193] = 0;
   out_7268934231755554651[194] = 0;
   out_7268934231755554651[195] = 0;
   out_7268934231755554651[196] = 0;
   out_7268934231755554651[197] = 1.0;
   out_7268934231755554651[198] = 0;
   out_7268934231755554651[199] = 0;
   out_7268934231755554651[200] = 0;
   out_7268934231755554651[201] = 0;
   out_7268934231755554651[202] = 0;
   out_7268934231755554651[203] = 0;
   out_7268934231755554651[204] = 0;
   out_7268934231755554651[205] = 0;
   out_7268934231755554651[206] = 0;
   out_7268934231755554651[207] = 0;
   out_7268934231755554651[208] = 0;
   out_7268934231755554651[209] = 0;
   out_7268934231755554651[210] = 0;
   out_7268934231755554651[211] = 0;
   out_7268934231755554651[212] = 0;
   out_7268934231755554651[213] = 0;
   out_7268934231755554651[214] = 0;
   out_7268934231755554651[215] = 0;
   out_7268934231755554651[216] = 0;
   out_7268934231755554651[217] = 0;
   out_7268934231755554651[218] = 0;
   out_7268934231755554651[219] = 1.0;
   out_7268934231755554651[220] = 0;
   out_7268934231755554651[221] = 0;
   out_7268934231755554651[222] = 0;
   out_7268934231755554651[223] = 0;
   out_7268934231755554651[224] = 0;
   out_7268934231755554651[225] = 0;
   out_7268934231755554651[226] = 0;
   out_7268934231755554651[227] = 0;
   out_7268934231755554651[228] = 0;
   out_7268934231755554651[229] = 0;
   out_7268934231755554651[230] = 0;
   out_7268934231755554651[231] = 0;
   out_7268934231755554651[232] = 0;
   out_7268934231755554651[233] = 0;
   out_7268934231755554651[234] = 0;
   out_7268934231755554651[235] = 0;
   out_7268934231755554651[236] = 0;
   out_7268934231755554651[237] = 0;
   out_7268934231755554651[238] = 0;
   out_7268934231755554651[239] = 0;
   out_7268934231755554651[240] = 0;
   out_7268934231755554651[241] = 1.0;
   out_7268934231755554651[242] = 0;
   out_7268934231755554651[243] = 0;
   out_7268934231755554651[244] = 0;
   out_7268934231755554651[245] = 0;
   out_7268934231755554651[246] = 0;
   out_7268934231755554651[247] = 0;
   out_7268934231755554651[248] = 0;
   out_7268934231755554651[249] = 0;
   out_7268934231755554651[250] = 0;
   out_7268934231755554651[251] = 0;
   out_7268934231755554651[252] = 0;
   out_7268934231755554651[253] = 0;
   out_7268934231755554651[254] = 0;
   out_7268934231755554651[255] = 0;
   out_7268934231755554651[256] = 0;
   out_7268934231755554651[257] = 0;
   out_7268934231755554651[258] = 0;
   out_7268934231755554651[259] = 0;
   out_7268934231755554651[260] = 0;
   out_7268934231755554651[261] = 0;
   out_7268934231755554651[262] = 0;
   out_7268934231755554651[263] = 1.0;
   out_7268934231755554651[264] = 0;
   out_7268934231755554651[265] = 0;
   out_7268934231755554651[266] = 0;
   out_7268934231755554651[267] = 0;
   out_7268934231755554651[268] = 0;
   out_7268934231755554651[269] = 0;
   out_7268934231755554651[270] = 0;
   out_7268934231755554651[271] = 0;
   out_7268934231755554651[272] = 0;
   out_7268934231755554651[273] = 0;
   out_7268934231755554651[274] = 0;
   out_7268934231755554651[275] = 0;
   out_7268934231755554651[276] = 0;
   out_7268934231755554651[277] = 0;
   out_7268934231755554651[278] = 0;
   out_7268934231755554651[279] = 0;
   out_7268934231755554651[280] = 0;
   out_7268934231755554651[281] = 0;
   out_7268934231755554651[282] = 0;
   out_7268934231755554651[283] = 0;
   out_7268934231755554651[284] = 0;
   out_7268934231755554651[285] = 1.0;
   out_7268934231755554651[286] = 0;
   out_7268934231755554651[287] = 0;
   out_7268934231755554651[288] = 0;
   out_7268934231755554651[289] = 0;
   out_7268934231755554651[290] = 0;
   out_7268934231755554651[291] = 0;
   out_7268934231755554651[292] = 0;
   out_7268934231755554651[293] = 0;
   out_7268934231755554651[294] = 0;
   out_7268934231755554651[295] = 0;
   out_7268934231755554651[296] = 0;
   out_7268934231755554651[297] = 0;
   out_7268934231755554651[298] = 0;
   out_7268934231755554651[299] = 0;
   out_7268934231755554651[300] = 0;
   out_7268934231755554651[301] = 0;
   out_7268934231755554651[302] = 0;
   out_7268934231755554651[303] = 0;
   out_7268934231755554651[304] = 0;
   out_7268934231755554651[305] = 0;
   out_7268934231755554651[306] = 0;
   out_7268934231755554651[307] = 1.0;
   out_7268934231755554651[308] = 0;
   out_7268934231755554651[309] = 0;
   out_7268934231755554651[310] = 0;
   out_7268934231755554651[311] = 0;
   out_7268934231755554651[312] = 0;
   out_7268934231755554651[313] = 0;
   out_7268934231755554651[314] = 0;
   out_7268934231755554651[315] = 0;
   out_7268934231755554651[316] = 0;
   out_7268934231755554651[317] = 0;
   out_7268934231755554651[318] = 0;
   out_7268934231755554651[319] = 0;
   out_7268934231755554651[320] = 0;
   out_7268934231755554651[321] = 0;
   out_7268934231755554651[322] = 0;
   out_7268934231755554651[323] = 0;
   out_7268934231755554651[324] = 0;
   out_7268934231755554651[325] = 0;
   out_7268934231755554651[326] = 0;
   out_7268934231755554651[327] = 0;
   out_7268934231755554651[328] = 0;
   out_7268934231755554651[329] = 1.0;
   out_7268934231755554651[330] = 0;
   out_7268934231755554651[331] = 0;
   out_7268934231755554651[332] = 0;
   out_7268934231755554651[333] = 0;
   out_7268934231755554651[334] = 0;
   out_7268934231755554651[335] = 0;
   out_7268934231755554651[336] = 0;
   out_7268934231755554651[337] = 0;
   out_7268934231755554651[338] = 0;
   out_7268934231755554651[339] = 0;
   out_7268934231755554651[340] = 0;
   out_7268934231755554651[341] = 0;
   out_7268934231755554651[342] = 0;
   out_7268934231755554651[343] = 0;
   out_7268934231755554651[344] = 0;
   out_7268934231755554651[345] = 0;
   out_7268934231755554651[346] = 0;
   out_7268934231755554651[347] = 0;
   out_7268934231755554651[348] = 0;
   out_7268934231755554651[349] = 0;
   out_7268934231755554651[350] = 0;
   out_7268934231755554651[351] = 1.0;
   out_7268934231755554651[352] = 0;
   out_7268934231755554651[353] = 0;
   out_7268934231755554651[354] = 0;
   out_7268934231755554651[355] = 0;
   out_7268934231755554651[356] = 0;
   out_7268934231755554651[357] = 0;
   out_7268934231755554651[358] = 0;
   out_7268934231755554651[359] = 0;
   out_7268934231755554651[360] = 0;
   out_7268934231755554651[361] = 0;
   out_7268934231755554651[362] = 0;
   out_7268934231755554651[363] = 0;
   out_7268934231755554651[364] = 0;
   out_7268934231755554651[365] = 0;
   out_7268934231755554651[366] = 0;
   out_7268934231755554651[367] = 0;
   out_7268934231755554651[368] = 0;
   out_7268934231755554651[369] = 0;
   out_7268934231755554651[370] = 0;
   out_7268934231755554651[371] = 0;
   out_7268934231755554651[372] = 0;
   out_7268934231755554651[373] = 1.0;
   out_7268934231755554651[374] = 0;
   out_7268934231755554651[375] = 0;
   out_7268934231755554651[376] = 0;
   out_7268934231755554651[377] = 0;
   out_7268934231755554651[378] = 0;
   out_7268934231755554651[379] = 0;
   out_7268934231755554651[380] = 0;
   out_7268934231755554651[381] = 0;
   out_7268934231755554651[382] = 0;
   out_7268934231755554651[383] = 0;
   out_7268934231755554651[384] = 0;
   out_7268934231755554651[385] = 0;
   out_7268934231755554651[386] = 0;
   out_7268934231755554651[387] = 0;
   out_7268934231755554651[388] = 0;
   out_7268934231755554651[389] = 0;
   out_7268934231755554651[390] = 0;
   out_7268934231755554651[391] = 0;
   out_7268934231755554651[392] = 0;
   out_7268934231755554651[393] = 0;
   out_7268934231755554651[394] = 0;
   out_7268934231755554651[395] = 1.0;
   out_7268934231755554651[396] = 0;
   out_7268934231755554651[397] = 0;
   out_7268934231755554651[398] = 0;
   out_7268934231755554651[399] = 0;
   out_7268934231755554651[400] = 0;
   out_7268934231755554651[401] = 0;
   out_7268934231755554651[402] = 0;
   out_7268934231755554651[403] = 0;
   out_7268934231755554651[404] = 0;
   out_7268934231755554651[405] = 0;
   out_7268934231755554651[406] = 0;
   out_7268934231755554651[407] = 0;
   out_7268934231755554651[408] = 0;
   out_7268934231755554651[409] = 0;
   out_7268934231755554651[410] = 0;
   out_7268934231755554651[411] = 0;
   out_7268934231755554651[412] = 0;
   out_7268934231755554651[413] = 0;
   out_7268934231755554651[414] = 0;
   out_7268934231755554651[415] = 0;
   out_7268934231755554651[416] = 0;
   out_7268934231755554651[417] = 1.0;
   out_7268934231755554651[418] = 0;
   out_7268934231755554651[419] = 0;
   out_7268934231755554651[420] = 0;
   out_7268934231755554651[421] = 0;
   out_7268934231755554651[422] = 0;
   out_7268934231755554651[423] = 0;
   out_7268934231755554651[424] = 0;
   out_7268934231755554651[425] = 0;
   out_7268934231755554651[426] = 0;
   out_7268934231755554651[427] = 0;
   out_7268934231755554651[428] = 0;
   out_7268934231755554651[429] = 0;
   out_7268934231755554651[430] = 0;
   out_7268934231755554651[431] = 0;
   out_7268934231755554651[432] = 0;
   out_7268934231755554651[433] = 0;
   out_7268934231755554651[434] = 0;
   out_7268934231755554651[435] = 0;
   out_7268934231755554651[436] = 0;
   out_7268934231755554651[437] = 0;
   out_7268934231755554651[438] = 0;
   out_7268934231755554651[439] = 1.0;
   out_7268934231755554651[440] = 0;
   out_7268934231755554651[441] = 0;
   out_7268934231755554651[442] = 0;
   out_7268934231755554651[443] = 0;
   out_7268934231755554651[444] = 0;
   out_7268934231755554651[445] = 0;
   out_7268934231755554651[446] = 0;
   out_7268934231755554651[447] = 0;
   out_7268934231755554651[448] = 0;
   out_7268934231755554651[449] = 0;
   out_7268934231755554651[450] = 0;
   out_7268934231755554651[451] = 0;
   out_7268934231755554651[452] = 0;
   out_7268934231755554651[453] = 0;
   out_7268934231755554651[454] = 0;
   out_7268934231755554651[455] = 0;
   out_7268934231755554651[456] = 0;
   out_7268934231755554651[457] = 0;
   out_7268934231755554651[458] = 0;
   out_7268934231755554651[459] = 0;
   out_7268934231755554651[460] = 0;
   out_7268934231755554651[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4667442136943505002) {
   out_4667442136943505002[0] = dt*state[7] + state[0];
   out_4667442136943505002[1] = dt*state[8] + state[1];
   out_4667442136943505002[2] = dt*state[9] + state[2];
   out_4667442136943505002[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4667442136943505002[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4667442136943505002[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4667442136943505002[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4667442136943505002[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4667442136943505002[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4667442136943505002[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4667442136943505002[10] = state[10];
   out_4667442136943505002[11] = state[11];
   out_4667442136943505002[12] = state[12];
   out_4667442136943505002[13] = state[13];
   out_4667442136943505002[14] = state[14];
   out_4667442136943505002[15] = state[15];
   out_4667442136943505002[16] = state[16];
   out_4667442136943505002[17] = state[17];
   out_4667442136943505002[18] = state[18];
   out_4667442136943505002[19] = state[19];
   out_4667442136943505002[20] = state[20];
   out_4667442136943505002[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2298756814379534549) {
   out_2298756814379534549[0] = 1;
   out_2298756814379534549[1] = 0;
   out_2298756814379534549[2] = 0;
   out_2298756814379534549[3] = 0;
   out_2298756814379534549[4] = 0;
   out_2298756814379534549[5] = 0;
   out_2298756814379534549[6] = dt;
   out_2298756814379534549[7] = 0;
   out_2298756814379534549[8] = 0;
   out_2298756814379534549[9] = 0;
   out_2298756814379534549[10] = 0;
   out_2298756814379534549[11] = 0;
   out_2298756814379534549[12] = 0;
   out_2298756814379534549[13] = 0;
   out_2298756814379534549[14] = 0;
   out_2298756814379534549[15] = 0;
   out_2298756814379534549[16] = 0;
   out_2298756814379534549[17] = 0;
   out_2298756814379534549[18] = 0;
   out_2298756814379534549[19] = 0;
   out_2298756814379534549[20] = 0;
   out_2298756814379534549[21] = 0;
   out_2298756814379534549[22] = 1;
   out_2298756814379534549[23] = 0;
   out_2298756814379534549[24] = 0;
   out_2298756814379534549[25] = 0;
   out_2298756814379534549[26] = 0;
   out_2298756814379534549[27] = 0;
   out_2298756814379534549[28] = dt;
   out_2298756814379534549[29] = 0;
   out_2298756814379534549[30] = 0;
   out_2298756814379534549[31] = 0;
   out_2298756814379534549[32] = 0;
   out_2298756814379534549[33] = 0;
   out_2298756814379534549[34] = 0;
   out_2298756814379534549[35] = 0;
   out_2298756814379534549[36] = 0;
   out_2298756814379534549[37] = 0;
   out_2298756814379534549[38] = 0;
   out_2298756814379534549[39] = 0;
   out_2298756814379534549[40] = 0;
   out_2298756814379534549[41] = 0;
   out_2298756814379534549[42] = 0;
   out_2298756814379534549[43] = 0;
   out_2298756814379534549[44] = 1;
   out_2298756814379534549[45] = 0;
   out_2298756814379534549[46] = 0;
   out_2298756814379534549[47] = 0;
   out_2298756814379534549[48] = 0;
   out_2298756814379534549[49] = 0;
   out_2298756814379534549[50] = dt;
   out_2298756814379534549[51] = 0;
   out_2298756814379534549[52] = 0;
   out_2298756814379534549[53] = 0;
   out_2298756814379534549[54] = 0;
   out_2298756814379534549[55] = 0;
   out_2298756814379534549[56] = 0;
   out_2298756814379534549[57] = 0;
   out_2298756814379534549[58] = 0;
   out_2298756814379534549[59] = 0;
   out_2298756814379534549[60] = 0;
   out_2298756814379534549[61] = 0;
   out_2298756814379534549[62] = 0;
   out_2298756814379534549[63] = 0;
   out_2298756814379534549[64] = 0;
   out_2298756814379534549[65] = 0;
   out_2298756814379534549[66] = 1;
   out_2298756814379534549[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2298756814379534549[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2298756814379534549[69] = 0;
   out_2298756814379534549[70] = 0;
   out_2298756814379534549[71] = 0;
   out_2298756814379534549[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2298756814379534549[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2298756814379534549[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2298756814379534549[75] = 0;
   out_2298756814379534549[76] = 0;
   out_2298756814379534549[77] = 0;
   out_2298756814379534549[78] = 0;
   out_2298756814379534549[79] = 0;
   out_2298756814379534549[80] = 0;
   out_2298756814379534549[81] = 0;
   out_2298756814379534549[82] = 0;
   out_2298756814379534549[83] = 0;
   out_2298756814379534549[84] = 0;
   out_2298756814379534549[85] = 0;
   out_2298756814379534549[86] = 0;
   out_2298756814379534549[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2298756814379534549[88] = 1;
   out_2298756814379534549[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2298756814379534549[90] = 0;
   out_2298756814379534549[91] = 0;
   out_2298756814379534549[92] = 0;
   out_2298756814379534549[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2298756814379534549[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2298756814379534549[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2298756814379534549[96] = 0;
   out_2298756814379534549[97] = 0;
   out_2298756814379534549[98] = 0;
   out_2298756814379534549[99] = 0;
   out_2298756814379534549[100] = 0;
   out_2298756814379534549[101] = 0;
   out_2298756814379534549[102] = 0;
   out_2298756814379534549[103] = 0;
   out_2298756814379534549[104] = 0;
   out_2298756814379534549[105] = 0;
   out_2298756814379534549[106] = 0;
   out_2298756814379534549[107] = 0;
   out_2298756814379534549[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2298756814379534549[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2298756814379534549[110] = 1;
   out_2298756814379534549[111] = 0;
   out_2298756814379534549[112] = 0;
   out_2298756814379534549[113] = 0;
   out_2298756814379534549[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2298756814379534549[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2298756814379534549[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2298756814379534549[117] = 0;
   out_2298756814379534549[118] = 0;
   out_2298756814379534549[119] = 0;
   out_2298756814379534549[120] = 0;
   out_2298756814379534549[121] = 0;
   out_2298756814379534549[122] = 0;
   out_2298756814379534549[123] = 0;
   out_2298756814379534549[124] = 0;
   out_2298756814379534549[125] = 0;
   out_2298756814379534549[126] = 0;
   out_2298756814379534549[127] = 0;
   out_2298756814379534549[128] = 0;
   out_2298756814379534549[129] = 0;
   out_2298756814379534549[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2298756814379534549[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2298756814379534549[132] = 1;
   out_2298756814379534549[133] = 0;
   out_2298756814379534549[134] = 0;
   out_2298756814379534549[135] = 0;
   out_2298756814379534549[136] = 0;
   out_2298756814379534549[137] = 0;
   out_2298756814379534549[138] = 0;
   out_2298756814379534549[139] = 0;
   out_2298756814379534549[140] = 0;
   out_2298756814379534549[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2298756814379534549[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2298756814379534549[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2298756814379534549[144] = 0;
   out_2298756814379534549[145] = 0;
   out_2298756814379534549[146] = 0;
   out_2298756814379534549[147] = 0;
   out_2298756814379534549[148] = 0;
   out_2298756814379534549[149] = 0;
   out_2298756814379534549[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2298756814379534549[151] = 0;
   out_2298756814379534549[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2298756814379534549[153] = 0;
   out_2298756814379534549[154] = 1;
   out_2298756814379534549[155] = 0;
   out_2298756814379534549[156] = 0;
   out_2298756814379534549[157] = 0;
   out_2298756814379534549[158] = 0;
   out_2298756814379534549[159] = 0;
   out_2298756814379534549[160] = 0;
   out_2298756814379534549[161] = 0;
   out_2298756814379534549[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2298756814379534549[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2298756814379534549[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2298756814379534549[165] = 0;
   out_2298756814379534549[166] = 0;
   out_2298756814379534549[167] = 0;
   out_2298756814379534549[168] = 0;
   out_2298756814379534549[169] = 0;
   out_2298756814379534549[170] = 0;
   out_2298756814379534549[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2298756814379534549[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2298756814379534549[173] = 0;
   out_2298756814379534549[174] = 0;
   out_2298756814379534549[175] = 0;
   out_2298756814379534549[176] = 1;
   out_2298756814379534549[177] = 0;
   out_2298756814379534549[178] = 0;
   out_2298756814379534549[179] = 0;
   out_2298756814379534549[180] = 0;
   out_2298756814379534549[181] = 0;
   out_2298756814379534549[182] = 0;
   out_2298756814379534549[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2298756814379534549[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2298756814379534549[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2298756814379534549[186] = 0;
   out_2298756814379534549[187] = 0;
   out_2298756814379534549[188] = 0;
   out_2298756814379534549[189] = 0;
   out_2298756814379534549[190] = 0;
   out_2298756814379534549[191] = 0;
   out_2298756814379534549[192] = 0;
   out_2298756814379534549[193] = 0;
   out_2298756814379534549[194] = 0;
   out_2298756814379534549[195] = 0;
   out_2298756814379534549[196] = 0;
   out_2298756814379534549[197] = 0;
   out_2298756814379534549[198] = 1;
   out_2298756814379534549[199] = 0;
   out_2298756814379534549[200] = 0;
   out_2298756814379534549[201] = 0;
   out_2298756814379534549[202] = 0;
   out_2298756814379534549[203] = 0;
   out_2298756814379534549[204] = 0;
   out_2298756814379534549[205] = 0;
   out_2298756814379534549[206] = 0;
   out_2298756814379534549[207] = 0;
   out_2298756814379534549[208] = 0;
   out_2298756814379534549[209] = 0;
   out_2298756814379534549[210] = 0;
   out_2298756814379534549[211] = 0;
   out_2298756814379534549[212] = 0;
   out_2298756814379534549[213] = 0;
   out_2298756814379534549[214] = 0;
   out_2298756814379534549[215] = 0;
   out_2298756814379534549[216] = 0;
   out_2298756814379534549[217] = 0;
   out_2298756814379534549[218] = 0;
   out_2298756814379534549[219] = 0;
   out_2298756814379534549[220] = 1;
   out_2298756814379534549[221] = 0;
   out_2298756814379534549[222] = 0;
   out_2298756814379534549[223] = 0;
   out_2298756814379534549[224] = 0;
   out_2298756814379534549[225] = 0;
   out_2298756814379534549[226] = 0;
   out_2298756814379534549[227] = 0;
   out_2298756814379534549[228] = 0;
   out_2298756814379534549[229] = 0;
   out_2298756814379534549[230] = 0;
   out_2298756814379534549[231] = 0;
   out_2298756814379534549[232] = 0;
   out_2298756814379534549[233] = 0;
   out_2298756814379534549[234] = 0;
   out_2298756814379534549[235] = 0;
   out_2298756814379534549[236] = 0;
   out_2298756814379534549[237] = 0;
   out_2298756814379534549[238] = 0;
   out_2298756814379534549[239] = 0;
   out_2298756814379534549[240] = 0;
   out_2298756814379534549[241] = 0;
   out_2298756814379534549[242] = 1;
   out_2298756814379534549[243] = 0;
   out_2298756814379534549[244] = 0;
   out_2298756814379534549[245] = 0;
   out_2298756814379534549[246] = 0;
   out_2298756814379534549[247] = 0;
   out_2298756814379534549[248] = 0;
   out_2298756814379534549[249] = 0;
   out_2298756814379534549[250] = 0;
   out_2298756814379534549[251] = 0;
   out_2298756814379534549[252] = 0;
   out_2298756814379534549[253] = 0;
   out_2298756814379534549[254] = 0;
   out_2298756814379534549[255] = 0;
   out_2298756814379534549[256] = 0;
   out_2298756814379534549[257] = 0;
   out_2298756814379534549[258] = 0;
   out_2298756814379534549[259] = 0;
   out_2298756814379534549[260] = 0;
   out_2298756814379534549[261] = 0;
   out_2298756814379534549[262] = 0;
   out_2298756814379534549[263] = 0;
   out_2298756814379534549[264] = 1;
   out_2298756814379534549[265] = 0;
   out_2298756814379534549[266] = 0;
   out_2298756814379534549[267] = 0;
   out_2298756814379534549[268] = 0;
   out_2298756814379534549[269] = 0;
   out_2298756814379534549[270] = 0;
   out_2298756814379534549[271] = 0;
   out_2298756814379534549[272] = 0;
   out_2298756814379534549[273] = 0;
   out_2298756814379534549[274] = 0;
   out_2298756814379534549[275] = 0;
   out_2298756814379534549[276] = 0;
   out_2298756814379534549[277] = 0;
   out_2298756814379534549[278] = 0;
   out_2298756814379534549[279] = 0;
   out_2298756814379534549[280] = 0;
   out_2298756814379534549[281] = 0;
   out_2298756814379534549[282] = 0;
   out_2298756814379534549[283] = 0;
   out_2298756814379534549[284] = 0;
   out_2298756814379534549[285] = 0;
   out_2298756814379534549[286] = 1;
   out_2298756814379534549[287] = 0;
   out_2298756814379534549[288] = 0;
   out_2298756814379534549[289] = 0;
   out_2298756814379534549[290] = 0;
   out_2298756814379534549[291] = 0;
   out_2298756814379534549[292] = 0;
   out_2298756814379534549[293] = 0;
   out_2298756814379534549[294] = 0;
   out_2298756814379534549[295] = 0;
   out_2298756814379534549[296] = 0;
   out_2298756814379534549[297] = 0;
   out_2298756814379534549[298] = 0;
   out_2298756814379534549[299] = 0;
   out_2298756814379534549[300] = 0;
   out_2298756814379534549[301] = 0;
   out_2298756814379534549[302] = 0;
   out_2298756814379534549[303] = 0;
   out_2298756814379534549[304] = 0;
   out_2298756814379534549[305] = 0;
   out_2298756814379534549[306] = 0;
   out_2298756814379534549[307] = 0;
   out_2298756814379534549[308] = 1;
   out_2298756814379534549[309] = 0;
   out_2298756814379534549[310] = 0;
   out_2298756814379534549[311] = 0;
   out_2298756814379534549[312] = 0;
   out_2298756814379534549[313] = 0;
   out_2298756814379534549[314] = 0;
   out_2298756814379534549[315] = 0;
   out_2298756814379534549[316] = 0;
   out_2298756814379534549[317] = 0;
   out_2298756814379534549[318] = 0;
   out_2298756814379534549[319] = 0;
   out_2298756814379534549[320] = 0;
   out_2298756814379534549[321] = 0;
   out_2298756814379534549[322] = 0;
   out_2298756814379534549[323] = 0;
   out_2298756814379534549[324] = 0;
   out_2298756814379534549[325] = 0;
   out_2298756814379534549[326] = 0;
   out_2298756814379534549[327] = 0;
   out_2298756814379534549[328] = 0;
   out_2298756814379534549[329] = 0;
   out_2298756814379534549[330] = 1;
   out_2298756814379534549[331] = 0;
   out_2298756814379534549[332] = 0;
   out_2298756814379534549[333] = 0;
   out_2298756814379534549[334] = 0;
   out_2298756814379534549[335] = 0;
   out_2298756814379534549[336] = 0;
   out_2298756814379534549[337] = 0;
   out_2298756814379534549[338] = 0;
   out_2298756814379534549[339] = 0;
   out_2298756814379534549[340] = 0;
   out_2298756814379534549[341] = 0;
   out_2298756814379534549[342] = 0;
   out_2298756814379534549[343] = 0;
   out_2298756814379534549[344] = 0;
   out_2298756814379534549[345] = 0;
   out_2298756814379534549[346] = 0;
   out_2298756814379534549[347] = 0;
   out_2298756814379534549[348] = 0;
   out_2298756814379534549[349] = 0;
   out_2298756814379534549[350] = 0;
   out_2298756814379534549[351] = 0;
   out_2298756814379534549[352] = 1;
   out_2298756814379534549[353] = 0;
   out_2298756814379534549[354] = 0;
   out_2298756814379534549[355] = 0;
   out_2298756814379534549[356] = 0;
   out_2298756814379534549[357] = 0;
   out_2298756814379534549[358] = 0;
   out_2298756814379534549[359] = 0;
   out_2298756814379534549[360] = 0;
   out_2298756814379534549[361] = 0;
   out_2298756814379534549[362] = 0;
   out_2298756814379534549[363] = 0;
   out_2298756814379534549[364] = 0;
   out_2298756814379534549[365] = 0;
   out_2298756814379534549[366] = 0;
   out_2298756814379534549[367] = 0;
   out_2298756814379534549[368] = 0;
   out_2298756814379534549[369] = 0;
   out_2298756814379534549[370] = 0;
   out_2298756814379534549[371] = 0;
   out_2298756814379534549[372] = 0;
   out_2298756814379534549[373] = 0;
   out_2298756814379534549[374] = 1;
   out_2298756814379534549[375] = 0;
   out_2298756814379534549[376] = 0;
   out_2298756814379534549[377] = 0;
   out_2298756814379534549[378] = 0;
   out_2298756814379534549[379] = 0;
   out_2298756814379534549[380] = 0;
   out_2298756814379534549[381] = 0;
   out_2298756814379534549[382] = 0;
   out_2298756814379534549[383] = 0;
   out_2298756814379534549[384] = 0;
   out_2298756814379534549[385] = 0;
   out_2298756814379534549[386] = 0;
   out_2298756814379534549[387] = 0;
   out_2298756814379534549[388] = 0;
   out_2298756814379534549[389] = 0;
   out_2298756814379534549[390] = 0;
   out_2298756814379534549[391] = 0;
   out_2298756814379534549[392] = 0;
   out_2298756814379534549[393] = 0;
   out_2298756814379534549[394] = 0;
   out_2298756814379534549[395] = 0;
   out_2298756814379534549[396] = 1;
   out_2298756814379534549[397] = 0;
   out_2298756814379534549[398] = 0;
   out_2298756814379534549[399] = 0;
   out_2298756814379534549[400] = 0;
   out_2298756814379534549[401] = 0;
   out_2298756814379534549[402] = 0;
   out_2298756814379534549[403] = 0;
   out_2298756814379534549[404] = 0;
   out_2298756814379534549[405] = 0;
   out_2298756814379534549[406] = 0;
   out_2298756814379534549[407] = 0;
   out_2298756814379534549[408] = 0;
   out_2298756814379534549[409] = 0;
   out_2298756814379534549[410] = 0;
   out_2298756814379534549[411] = 0;
   out_2298756814379534549[412] = 0;
   out_2298756814379534549[413] = 0;
   out_2298756814379534549[414] = 0;
   out_2298756814379534549[415] = 0;
   out_2298756814379534549[416] = 0;
   out_2298756814379534549[417] = 0;
   out_2298756814379534549[418] = 1;
   out_2298756814379534549[419] = 0;
   out_2298756814379534549[420] = 0;
   out_2298756814379534549[421] = 0;
   out_2298756814379534549[422] = 0;
   out_2298756814379534549[423] = 0;
   out_2298756814379534549[424] = 0;
   out_2298756814379534549[425] = 0;
   out_2298756814379534549[426] = 0;
   out_2298756814379534549[427] = 0;
   out_2298756814379534549[428] = 0;
   out_2298756814379534549[429] = 0;
   out_2298756814379534549[430] = 0;
   out_2298756814379534549[431] = 0;
   out_2298756814379534549[432] = 0;
   out_2298756814379534549[433] = 0;
   out_2298756814379534549[434] = 0;
   out_2298756814379534549[435] = 0;
   out_2298756814379534549[436] = 0;
   out_2298756814379534549[437] = 0;
   out_2298756814379534549[438] = 0;
   out_2298756814379534549[439] = 0;
   out_2298756814379534549[440] = 1;
}
void h_4(double *state, double *unused, double *out_2526483283165344486) {
   out_2526483283165344486[0] = state[10] + state[13];
   out_2526483283165344486[1] = state[11] + state[14];
   out_2526483283165344486[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_725160747577384877) {
   out_725160747577384877[0] = 0;
   out_725160747577384877[1] = 0;
   out_725160747577384877[2] = 0;
   out_725160747577384877[3] = 0;
   out_725160747577384877[4] = 0;
   out_725160747577384877[5] = 0;
   out_725160747577384877[6] = 0;
   out_725160747577384877[7] = 0;
   out_725160747577384877[8] = 0;
   out_725160747577384877[9] = 0;
   out_725160747577384877[10] = 1;
   out_725160747577384877[11] = 0;
   out_725160747577384877[12] = 0;
   out_725160747577384877[13] = 1;
   out_725160747577384877[14] = 0;
   out_725160747577384877[15] = 0;
   out_725160747577384877[16] = 0;
   out_725160747577384877[17] = 0;
   out_725160747577384877[18] = 0;
   out_725160747577384877[19] = 0;
   out_725160747577384877[20] = 0;
   out_725160747577384877[21] = 0;
   out_725160747577384877[22] = 0;
   out_725160747577384877[23] = 0;
   out_725160747577384877[24] = 0;
   out_725160747577384877[25] = 0;
   out_725160747577384877[26] = 0;
   out_725160747577384877[27] = 0;
   out_725160747577384877[28] = 0;
   out_725160747577384877[29] = 0;
   out_725160747577384877[30] = 0;
   out_725160747577384877[31] = 0;
   out_725160747577384877[32] = 0;
   out_725160747577384877[33] = 1;
   out_725160747577384877[34] = 0;
   out_725160747577384877[35] = 0;
   out_725160747577384877[36] = 1;
   out_725160747577384877[37] = 0;
   out_725160747577384877[38] = 0;
   out_725160747577384877[39] = 0;
   out_725160747577384877[40] = 0;
   out_725160747577384877[41] = 0;
   out_725160747577384877[42] = 0;
   out_725160747577384877[43] = 0;
   out_725160747577384877[44] = 0;
   out_725160747577384877[45] = 0;
   out_725160747577384877[46] = 0;
   out_725160747577384877[47] = 0;
   out_725160747577384877[48] = 0;
   out_725160747577384877[49] = 0;
   out_725160747577384877[50] = 0;
   out_725160747577384877[51] = 0;
   out_725160747577384877[52] = 0;
   out_725160747577384877[53] = 0;
   out_725160747577384877[54] = 0;
   out_725160747577384877[55] = 0;
   out_725160747577384877[56] = 1;
   out_725160747577384877[57] = 0;
   out_725160747577384877[58] = 0;
   out_725160747577384877[59] = 1;
   out_725160747577384877[60] = 0;
   out_725160747577384877[61] = 0;
   out_725160747577384877[62] = 0;
   out_725160747577384877[63] = 0;
   out_725160747577384877[64] = 0;
   out_725160747577384877[65] = 0;
}
void h_9(double *state, double *unused, double *out_6980308711356010709) {
   out_6980308711356010709[0] = state[10];
   out_6980308711356010709[1] = state[11];
   out_6980308711356010709[2] = state[12];
}
void H_9(double *state, double *unused, double *out_966350394206975522) {
   out_966350394206975522[0] = 0;
   out_966350394206975522[1] = 0;
   out_966350394206975522[2] = 0;
   out_966350394206975522[3] = 0;
   out_966350394206975522[4] = 0;
   out_966350394206975522[5] = 0;
   out_966350394206975522[6] = 0;
   out_966350394206975522[7] = 0;
   out_966350394206975522[8] = 0;
   out_966350394206975522[9] = 0;
   out_966350394206975522[10] = 1;
   out_966350394206975522[11] = 0;
   out_966350394206975522[12] = 0;
   out_966350394206975522[13] = 0;
   out_966350394206975522[14] = 0;
   out_966350394206975522[15] = 0;
   out_966350394206975522[16] = 0;
   out_966350394206975522[17] = 0;
   out_966350394206975522[18] = 0;
   out_966350394206975522[19] = 0;
   out_966350394206975522[20] = 0;
   out_966350394206975522[21] = 0;
   out_966350394206975522[22] = 0;
   out_966350394206975522[23] = 0;
   out_966350394206975522[24] = 0;
   out_966350394206975522[25] = 0;
   out_966350394206975522[26] = 0;
   out_966350394206975522[27] = 0;
   out_966350394206975522[28] = 0;
   out_966350394206975522[29] = 0;
   out_966350394206975522[30] = 0;
   out_966350394206975522[31] = 0;
   out_966350394206975522[32] = 0;
   out_966350394206975522[33] = 1;
   out_966350394206975522[34] = 0;
   out_966350394206975522[35] = 0;
   out_966350394206975522[36] = 0;
   out_966350394206975522[37] = 0;
   out_966350394206975522[38] = 0;
   out_966350394206975522[39] = 0;
   out_966350394206975522[40] = 0;
   out_966350394206975522[41] = 0;
   out_966350394206975522[42] = 0;
   out_966350394206975522[43] = 0;
   out_966350394206975522[44] = 0;
   out_966350394206975522[45] = 0;
   out_966350394206975522[46] = 0;
   out_966350394206975522[47] = 0;
   out_966350394206975522[48] = 0;
   out_966350394206975522[49] = 0;
   out_966350394206975522[50] = 0;
   out_966350394206975522[51] = 0;
   out_966350394206975522[52] = 0;
   out_966350394206975522[53] = 0;
   out_966350394206975522[54] = 0;
   out_966350394206975522[55] = 0;
   out_966350394206975522[56] = 1;
   out_966350394206975522[57] = 0;
   out_966350394206975522[58] = 0;
   out_966350394206975522[59] = 0;
   out_966350394206975522[60] = 0;
   out_966350394206975522[61] = 0;
   out_966350394206975522[62] = 0;
   out_966350394206975522[63] = 0;
   out_966350394206975522[64] = 0;
   out_966350394206975522[65] = 0;
}
void h_10(double *state, double *unused, double *out_1701479979896528215) {
   out_1701479979896528215[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1701479979896528215[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1701479979896528215[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_1451979453290766408) {
   out_1451979453290766408[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1451979453290766408[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1451979453290766408[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1451979453290766408[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1451979453290766408[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1451979453290766408[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1451979453290766408[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1451979453290766408[7] = 0;
   out_1451979453290766408[8] = 0;
   out_1451979453290766408[9] = 0;
   out_1451979453290766408[10] = 0;
   out_1451979453290766408[11] = 0;
   out_1451979453290766408[12] = 0;
   out_1451979453290766408[13] = 0;
   out_1451979453290766408[14] = 0;
   out_1451979453290766408[15] = 0;
   out_1451979453290766408[16] = 1;
   out_1451979453290766408[17] = 0;
   out_1451979453290766408[18] = 0;
   out_1451979453290766408[19] = 1;
   out_1451979453290766408[20] = 0;
   out_1451979453290766408[21] = 0;
   out_1451979453290766408[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1451979453290766408[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1451979453290766408[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1451979453290766408[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1451979453290766408[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1451979453290766408[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1451979453290766408[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1451979453290766408[29] = 0;
   out_1451979453290766408[30] = 0;
   out_1451979453290766408[31] = 0;
   out_1451979453290766408[32] = 0;
   out_1451979453290766408[33] = 0;
   out_1451979453290766408[34] = 0;
   out_1451979453290766408[35] = 0;
   out_1451979453290766408[36] = 0;
   out_1451979453290766408[37] = 0;
   out_1451979453290766408[38] = 0;
   out_1451979453290766408[39] = 1;
   out_1451979453290766408[40] = 0;
   out_1451979453290766408[41] = 0;
   out_1451979453290766408[42] = 1;
   out_1451979453290766408[43] = 0;
   out_1451979453290766408[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1451979453290766408[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1451979453290766408[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1451979453290766408[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1451979453290766408[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1451979453290766408[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1451979453290766408[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1451979453290766408[51] = 0;
   out_1451979453290766408[52] = 0;
   out_1451979453290766408[53] = 0;
   out_1451979453290766408[54] = 0;
   out_1451979453290766408[55] = 0;
   out_1451979453290766408[56] = 0;
   out_1451979453290766408[57] = 0;
   out_1451979453290766408[58] = 0;
   out_1451979453290766408[59] = 0;
   out_1451979453290766408[60] = 0;
   out_1451979453290766408[61] = 0;
   out_1451979453290766408[62] = 1;
   out_1451979453290766408[63] = 0;
   out_1451979453290766408[64] = 0;
   out_1451979453290766408[65] = 1;
}
void h_12(double *state, double *unused, double *out_6365697969731689552) {
   out_6365697969731689552[0] = state[0];
   out_6365697969731689552[1] = state[1];
   out_6365697969731689552[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5744617155609346672) {
   out_5744617155609346672[0] = 1;
   out_5744617155609346672[1] = 0;
   out_5744617155609346672[2] = 0;
   out_5744617155609346672[3] = 0;
   out_5744617155609346672[4] = 0;
   out_5744617155609346672[5] = 0;
   out_5744617155609346672[6] = 0;
   out_5744617155609346672[7] = 0;
   out_5744617155609346672[8] = 0;
   out_5744617155609346672[9] = 0;
   out_5744617155609346672[10] = 0;
   out_5744617155609346672[11] = 0;
   out_5744617155609346672[12] = 0;
   out_5744617155609346672[13] = 0;
   out_5744617155609346672[14] = 0;
   out_5744617155609346672[15] = 0;
   out_5744617155609346672[16] = 0;
   out_5744617155609346672[17] = 0;
   out_5744617155609346672[18] = 0;
   out_5744617155609346672[19] = 0;
   out_5744617155609346672[20] = 0;
   out_5744617155609346672[21] = 0;
   out_5744617155609346672[22] = 0;
   out_5744617155609346672[23] = 1;
   out_5744617155609346672[24] = 0;
   out_5744617155609346672[25] = 0;
   out_5744617155609346672[26] = 0;
   out_5744617155609346672[27] = 0;
   out_5744617155609346672[28] = 0;
   out_5744617155609346672[29] = 0;
   out_5744617155609346672[30] = 0;
   out_5744617155609346672[31] = 0;
   out_5744617155609346672[32] = 0;
   out_5744617155609346672[33] = 0;
   out_5744617155609346672[34] = 0;
   out_5744617155609346672[35] = 0;
   out_5744617155609346672[36] = 0;
   out_5744617155609346672[37] = 0;
   out_5744617155609346672[38] = 0;
   out_5744617155609346672[39] = 0;
   out_5744617155609346672[40] = 0;
   out_5744617155609346672[41] = 0;
   out_5744617155609346672[42] = 0;
   out_5744617155609346672[43] = 0;
   out_5744617155609346672[44] = 0;
   out_5744617155609346672[45] = 0;
   out_5744617155609346672[46] = 1;
   out_5744617155609346672[47] = 0;
   out_5744617155609346672[48] = 0;
   out_5744617155609346672[49] = 0;
   out_5744617155609346672[50] = 0;
   out_5744617155609346672[51] = 0;
   out_5744617155609346672[52] = 0;
   out_5744617155609346672[53] = 0;
   out_5744617155609346672[54] = 0;
   out_5744617155609346672[55] = 0;
   out_5744617155609346672[56] = 0;
   out_5744617155609346672[57] = 0;
   out_5744617155609346672[58] = 0;
   out_5744617155609346672[59] = 0;
   out_5744617155609346672[60] = 0;
   out_5744617155609346672[61] = 0;
   out_5744617155609346672[62] = 0;
   out_5744617155609346672[63] = 0;
   out_5744617155609346672[64] = 0;
   out_5744617155609346672[65] = 0;
}
void h_35(double *state, double *unused, double *out_5019937516006115943) {
   out_5019937516006115943[0] = state[7];
   out_5019937516006115943[1] = state[8];
   out_5019937516006115943[2] = state[9];
}
void H_35(double *state, double *unused, double *out_4091822804949992253) {
   out_4091822804949992253[0] = 0;
   out_4091822804949992253[1] = 0;
   out_4091822804949992253[2] = 0;
   out_4091822804949992253[3] = 0;
   out_4091822804949992253[4] = 0;
   out_4091822804949992253[5] = 0;
   out_4091822804949992253[6] = 0;
   out_4091822804949992253[7] = 1;
   out_4091822804949992253[8] = 0;
   out_4091822804949992253[9] = 0;
   out_4091822804949992253[10] = 0;
   out_4091822804949992253[11] = 0;
   out_4091822804949992253[12] = 0;
   out_4091822804949992253[13] = 0;
   out_4091822804949992253[14] = 0;
   out_4091822804949992253[15] = 0;
   out_4091822804949992253[16] = 0;
   out_4091822804949992253[17] = 0;
   out_4091822804949992253[18] = 0;
   out_4091822804949992253[19] = 0;
   out_4091822804949992253[20] = 0;
   out_4091822804949992253[21] = 0;
   out_4091822804949992253[22] = 0;
   out_4091822804949992253[23] = 0;
   out_4091822804949992253[24] = 0;
   out_4091822804949992253[25] = 0;
   out_4091822804949992253[26] = 0;
   out_4091822804949992253[27] = 0;
   out_4091822804949992253[28] = 0;
   out_4091822804949992253[29] = 0;
   out_4091822804949992253[30] = 1;
   out_4091822804949992253[31] = 0;
   out_4091822804949992253[32] = 0;
   out_4091822804949992253[33] = 0;
   out_4091822804949992253[34] = 0;
   out_4091822804949992253[35] = 0;
   out_4091822804949992253[36] = 0;
   out_4091822804949992253[37] = 0;
   out_4091822804949992253[38] = 0;
   out_4091822804949992253[39] = 0;
   out_4091822804949992253[40] = 0;
   out_4091822804949992253[41] = 0;
   out_4091822804949992253[42] = 0;
   out_4091822804949992253[43] = 0;
   out_4091822804949992253[44] = 0;
   out_4091822804949992253[45] = 0;
   out_4091822804949992253[46] = 0;
   out_4091822804949992253[47] = 0;
   out_4091822804949992253[48] = 0;
   out_4091822804949992253[49] = 0;
   out_4091822804949992253[50] = 0;
   out_4091822804949992253[51] = 0;
   out_4091822804949992253[52] = 0;
   out_4091822804949992253[53] = 1;
   out_4091822804949992253[54] = 0;
   out_4091822804949992253[55] = 0;
   out_4091822804949992253[56] = 0;
   out_4091822804949992253[57] = 0;
   out_4091822804949992253[58] = 0;
   out_4091822804949992253[59] = 0;
   out_4091822804949992253[60] = 0;
   out_4091822804949992253[61] = 0;
   out_4091822804949992253[62] = 0;
   out_4091822804949992253[63] = 0;
   out_4091822804949992253[64] = 0;
   out_4091822804949992253[65] = 0;
}
void h_32(double *state, double *unused, double *out_8883764538593900957) {
   out_8883764538593900957[0] = state[3];
   out_8883764538593900957[1] = state[4];
   out_8883764538593900957[2] = state[5];
   out_8883764538593900957[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4222987589890732722) {
   out_4222987589890732722[0] = 0;
   out_4222987589890732722[1] = 0;
   out_4222987589890732722[2] = 0;
   out_4222987589890732722[3] = 1;
   out_4222987589890732722[4] = 0;
   out_4222987589890732722[5] = 0;
   out_4222987589890732722[6] = 0;
   out_4222987589890732722[7] = 0;
   out_4222987589890732722[8] = 0;
   out_4222987589890732722[9] = 0;
   out_4222987589890732722[10] = 0;
   out_4222987589890732722[11] = 0;
   out_4222987589890732722[12] = 0;
   out_4222987589890732722[13] = 0;
   out_4222987589890732722[14] = 0;
   out_4222987589890732722[15] = 0;
   out_4222987589890732722[16] = 0;
   out_4222987589890732722[17] = 0;
   out_4222987589890732722[18] = 0;
   out_4222987589890732722[19] = 0;
   out_4222987589890732722[20] = 0;
   out_4222987589890732722[21] = 0;
   out_4222987589890732722[22] = 0;
   out_4222987589890732722[23] = 0;
   out_4222987589890732722[24] = 0;
   out_4222987589890732722[25] = 0;
   out_4222987589890732722[26] = 1;
   out_4222987589890732722[27] = 0;
   out_4222987589890732722[28] = 0;
   out_4222987589890732722[29] = 0;
   out_4222987589890732722[30] = 0;
   out_4222987589890732722[31] = 0;
   out_4222987589890732722[32] = 0;
   out_4222987589890732722[33] = 0;
   out_4222987589890732722[34] = 0;
   out_4222987589890732722[35] = 0;
   out_4222987589890732722[36] = 0;
   out_4222987589890732722[37] = 0;
   out_4222987589890732722[38] = 0;
   out_4222987589890732722[39] = 0;
   out_4222987589890732722[40] = 0;
   out_4222987589890732722[41] = 0;
   out_4222987589890732722[42] = 0;
   out_4222987589890732722[43] = 0;
   out_4222987589890732722[44] = 0;
   out_4222987589890732722[45] = 0;
   out_4222987589890732722[46] = 0;
   out_4222987589890732722[47] = 0;
   out_4222987589890732722[48] = 0;
   out_4222987589890732722[49] = 1;
   out_4222987589890732722[50] = 0;
   out_4222987589890732722[51] = 0;
   out_4222987589890732722[52] = 0;
   out_4222987589890732722[53] = 0;
   out_4222987589890732722[54] = 0;
   out_4222987589890732722[55] = 0;
   out_4222987589890732722[56] = 0;
   out_4222987589890732722[57] = 0;
   out_4222987589890732722[58] = 0;
   out_4222987589890732722[59] = 0;
   out_4222987589890732722[60] = 0;
   out_4222987589890732722[61] = 0;
   out_4222987589890732722[62] = 0;
   out_4222987589890732722[63] = 0;
   out_4222987589890732722[64] = 0;
   out_4222987589890732722[65] = 0;
   out_4222987589890732722[66] = 0;
   out_4222987589890732722[67] = 0;
   out_4222987589890732722[68] = 0;
   out_4222987589890732722[69] = 0;
   out_4222987589890732722[70] = 0;
   out_4222987589890732722[71] = 0;
   out_4222987589890732722[72] = 1;
   out_4222987589890732722[73] = 0;
   out_4222987589890732722[74] = 0;
   out_4222987589890732722[75] = 0;
   out_4222987589890732722[76] = 0;
   out_4222987589890732722[77] = 0;
   out_4222987589890732722[78] = 0;
   out_4222987589890732722[79] = 0;
   out_4222987589890732722[80] = 0;
   out_4222987589890732722[81] = 0;
   out_4222987589890732722[82] = 0;
   out_4222987589890732722[83] = 0;
   out_4222987589890732722[84] = 0;
   out_4222987589890732722[85] = 0;
   out_4222987589890732722[86] = 0;
   out_4222987589890732722[87] = 0;
}
void h_13(double *state, double *unused, double *out_2134964226392743988) {
   out_2134964226392743988[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2134964226392743988[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2134964226392743988[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2099729639082030649) {
   out_2099729639082030649[0] = 0;
   out_2099729639082030649[1] = 0;
   out_2099729639082030649[2] = 0;
   out_2099729639082030649[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2099729639082030649[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2099729639082030649[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2099729639082030649[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2099729639082030649[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2099729639082030649[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2099729639082030649[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2099729639082030649[10] = 0;
   out_2099729639082030649[11] = 0;
   out_2099729639082030649[12] = 0;
   out_2099729639082030649[13] = 0;
   out_2099729639082030649[14] = 0;
   out_2099729639082030649[15] = 0;
   out_2099729639082030649[16] = 0;
   out_2099729639082030649[17] = 0;
   out_2099729639082030649[18] = 0;
   out_2099729639082030649[19] = 0;
   out_2099729639082030649[20] = 0;
   out_2099729639082030649[21] = 0;
   out_2099729639082030649[22] = 0;
   out_2099729639082030649[23] = 0;
   out_2099729639082030649[24] = 0;
   out_2099729639082030649[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2099729639082030649[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2099729639082030649[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2099729639082030649[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2099729639082030649[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2099729639082030649[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2099729639082030649[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2099729639082030649[32] = 0;
   out_2099729639082030649[33] = 0;
   out_2099729639082030649[34] = 0;
   out_2099729639082030649[35] = 0;
   out_2099729639082030649[36] = 0;
   out_2099729639082030649[37] = 0;
   out_2099729639082030649[38] = 0;
   out_2099729639082030649[39] = 0;
   out_2099729639082030649[40] = 0;
   out_2099729639082030649[41] = 0;
   out_2099729639082030649[42] = 0;
   out_2099729639082030649[43] = 0;
   out_2099729639082030649[44] = 0;
   out_2099729639082030649[45] = 0;
   out_2099729639082030649[46] = 0;
   out_2099729639082030649[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2099729639082030649[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2099729639082030649[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2099729639082030649[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2099729639082030649[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2099729639082030649[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2099729639082030649[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2099729639082030649[54] = 0;
   out_2099729639082030649[55] = 0;
   out_2099729639082030649[56] = 0;
   out_2099729639082030649[57] = 0;
   out_2099729639082030649[58] = 0;
   out_2099729639082030649[59] = 0;
   out_2099729639082030649[60] = 0;
   out_2099729639082030649[61] = 0;
   out_2099729639082030649[62] = 0;
   out_2099729639082030649[63] = 0;
   out_2099729639082030649[64] = 0;
   out_2099729639082030649[65] = 0;
}
void h_14(double *state, double *unused, double *out_6980308711356010709) {
   out_6980308711356010709[0] = state[10];
   out_6980308711356010709[1] = state[11];
   out_6980308711356010709[2] = state[12];
}
void H_14(double *state, double *unused, double *out_966350394206975522) {
   out_966350394206975522[0] = 0;
   out_966350394206975522[1] = 0;
   out_966350394206975522[2] = 0;
   out_966350394206975522[3] = 0;
   out_966350394206975522[4] = 0;
   out_966350394206975522[5] = 0;
   out_966350394206975522[6] = 0;
   out_966350394206975522[7] = 0;
   out_966350394206975522[8] = 0;
   out_966350394206975522[9] = 0;
   out_966350394206975522[10] = 1;
   out_966350394206975522[11] = 0;
   out_966350394206975522[12] = 0;
   out_966350394206975522[13] = 0;
   out_966350394206975522[14] = 0;
   out_966350394206975522[15] = 0;
   out_966350394206975522[16] = 0;
   out_966350394206975522[17] = 0;
   out_966350394206975522[18] = 0;
   out_966350394206975522[19] = 0;
   out_966350394206975522[20] = 0;
   out_966350394206975522[21] = 0;
   out_966350394206975522[22] = 0;
   out_966350394206975522[23] = 0;
   out_966350394206975522[24] = 0;
   out_966350394206975522[25] = 0;
   out_966350394206975522[26] = 0;
   out_966350394206975522[27] = 0;
   out_966350394206975522[28] = 0;
   out_966350394206975522[29] = 0;
   out_966350394206975522[30] = 0;
   out_966350394206975522[31] = 0;
   out_966350394206975522[32] = 0;
   out_966350394206975522[33] = 1;
   out_966350394206975522[34] = 0;
   out_966350394206975522[35] = 0;
   out_966350394206975522[36] = 0;
   out_966350394206975522[37] = 0;
   out_966350394206975522[38] = 0;
   out_966350394206975522[39] = 0;
   out_966350394206975522[40] = 0;
   out_966350394206975522[41] = 0;
   out_966350394206975522[42] = 0;
   out_966350394206975522[43] = 0;
   out_966350394206975522[44] = 0;
   out_966350394206975522[45] = 0;
   out_966350394206975522[46] = 0;
   out_966350394206975522[47] = 0;
   out_966350394206975522[48] = 0;
   out_966350394206975522[49] = 0;
   out_966350394206975522[50] = 0;
   out_966350394206975522[51] = 0;
   out_966350394206975522[52] = 0;
   out_966350394206975522[53] = 0;
   out_966350394206975522[54] = 0;
   out_966350394206975522[55] = 0;
   out_966350394206975522[56] = 1;
   out_966350394206975522[57] = 0;
   out_966350394206975522[58] = 0;
   out_966350394206975522[59] = 0;
   out_966350394206975522[60] = 0;
   out_966350394206975522[61] = 0;
   out_966350394206975522[62] = 0;
   out_966350394206975522[63] = 0;
   out_966350394206975522[64] = 0;
   out_966350394206975522[65] = 0;
}
void h_33(double *state, double *unused, double *out_5548510045236730810) {
   out_5548510045236730810[0] = state[16];
   out_5548510045236730810[1] = state[17];
   out_5548510045236730810[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7242379809588849857) {
   out_7242379809588849857[0] = 0;
   out_7242379809588849857[1] = 0;
   out_7242379809588849857[2] = 0;
   out_7242379809588849857[3] = 0;
   out_7242379809588849857[4] = 0;
   out_7242379809588849857[5] = 0;
   out_7242379809588849857[6] = 0;
   out_7242379809588849857[7] = 0;
   out_7242379809588849857[8] = 0;
   out_7242379809588849857[9] = 0;
   out_7242379809588849857[10] = 0;
   out_7242379809588849857[11] = 0;
   out_7242379809588849857[12] = 0;
   out_7242379809588849857[13] = 0;
   out_7242379809588849857[14] = 0;
   out_7242379809588849857[15] = 0;
   out_7242379809588849857[16] = 1;
   out_7242379809588849857[17] = 0;
   out_7242379809588849857[18] = 0;
   out_7242379809588849857[19] = 0;
   out_7242379809588849857[20] = 0;
   out_7242379809588849857[21] = 0;
   out_7242379809588849857[22] = 0;
   out_7242379809588849857[23] = 0;
   out_7242379809588849857[24] = 0;
   out_7242379809588849857[25] = 0;
   out_7242379809588849857[26] = 0;
   out_7242379809588849857[27] = 0;
   out_7242379809588849857[28] = 0;
   out_7242379809588849857[29] = 0;
   out_7242379809588849857[30] = 0;
   out_7242379809588849857[31] = 0;
   out_7242379809588849857[32] = 0;
   out_7242379809588849857[33] = 0;
   out_7242379809588849857[34] = 0;
   out_7242379809588849857[35] = 0;
   out_7242379809588849857[36] = 0;
   out_7242379809588849857[37] = 0;
   out_7242379809588849857[38] = 0;
   out_7242379809588849857[39] = 1;
   out_7242379809588849857[40] = 0;
   out_7242379809588849857[41] = 0;
   out_7242379809588849857[42] = 0;
   out_7242379809588849857[43] = 0;
   out_7242379809588849857[44] = 0;
   out_7242379809588849857[45] = 0;
   out_7242379809588849857[46] = 0;
   out_7242379809588849857[47] = 0;
   out_7242379809588849857[48] = 0;
   out_7242379809588849857[49] = 0;
   out_7242379809588849857[50] = 0;
   out_7242379809588849857[51] = 0;
   out_7242379809588849857[52] = 0;
   out_7242379809588849857[53] = 0;
   out_7242379809588849857[54] = 0;
   out_7242379809588849857[55] = 0;
   out_7242379809588849857[56] = 0;
   out_7242379809588849857[57] = 0;
   out_7242379809588849857[58] = 0;
   out_7242379809588849857[59] = 0;
   out_7242379809588849857[60] = 0;
   out_7242379809588849857[61] = 0;
   out_7242379809588849857[62] = 1;
   out_7242379809588849857[63] = 0;
   out_7242379809588849857[64] = 0;
   out_7242379809588849857[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2767579373606480063) {
  H(in_vec, out_2767579373606480063);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3425730085275654160) {
  err_fun(nom_x, delta_x, out_3425730085275654160);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5958469851231347980) {
  inv_err_fun(nom_x, true_x, out_5958469851231347980);
}
void live_H_mod_fun(double *state, double *out_7268934231755554651) {
  H_mod_fun(state, out_7268934231755554651);
}
void live_f_fun(double *state, double dt, double *out_4667442136943505002) {
  f_fun(state,  dt, out_4667442136943505002);
}
void live_F_fun(double *state, double dt, double *out_2298756814379534549) {
  F_fun(state,  dt, out_2298756814379534549);
}
void live_h_4(double *state, double *unused, double *out_2526483283165344486) {
  h_4(state, unused, out_2526483283165344486);
}
void live_H_4(double *state, double *unused, double *out_725160747577384877) {
  H_4(state, unused, out_725160747577384877);
}
void live_h_9(double *state, double *unused, double *out_6980308711356010709) {
  h_9(state, unused, out_6980308711356010709);
}
void live_H_9(double *state, double *unused, double *out_966350394206975522) {
  H_9(state, unused, out_966350394206975522);
}
void live_h_10(double *state, double *unused, double *out_1701479979896528215) {
  h_10(state, unused, out_1701479979896528215);
}
void live_H_10(double *state, double *unused, double *out_1451979453290766408) {
  H_10(state, unused, out_1451979453290766408);
}
void live_h_12(double *state, double *unused, double *out_6365697969731689552) {
  h_12(state, unused, out_6365697969731689552);
}
void live_H_12(double *state, double *unused, double *out_5744617155609346672) {
  H_12(state, unused, out_5744617155609346672);
}
void live_h_35(double *state, double *unused, double *out_5019937516006115943) {
  h_35(state, unused, out_5019937516006115943);
}
void live_H_35(double *state, double *unused, double *out_4091822804949992253) {
  H_35(state, unused, out_4091822804949992253);
}
void live_h_32(double *state, double *unused, double *out_8883764538593900957) {
  h_32(state, unused, out_8883764538593900957);
}
void live_H_32(double *state, double *unused, double *out_4222987589890732722) {
  H_32(state, unused, out_4222987589890732722);
}
void live_h_13(double *state, double *unused, double *out_2134964226392743988) {
  h_13(state, unused, out_2134964226392743988);
}
void live_H_13(double *state, double *unused, double *out_2099729639082030649) {
  H_13(state, unused, out_2099729639082030649);
}
void live_h_14(double *state, double *unused, double *out_6980308711356010709) {
  h_14(state, unused, out_6980308711356010709);
}
void live_H_14(double *state, double *unused, double *out_966350394206975522) {
  H_14(state, unused, out_966350394206975522);
}
void live_h_33(double *state, double *unused, double *out_5548510045236730810) {
  h_33(state, unused, out_5548510045236730810);
}
void live_H_33(double *state, double *unused, double *out_7242379809588849857) {
  H_33(state, unused, out_7242379809588849857);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
