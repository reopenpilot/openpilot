#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7367117284505064861) {
   out_7367117284505064861[0] = 0;
   out_7367117284505064861[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7367117284505064861[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7367117284505064861[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7367117284505064861[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7367117284505064861[5] = -sin(in_vec[1]);
   out_7367117284505064861[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7367117284505064861[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7367117284505064861[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7367117284505064861[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7367117284505064861[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7367117284505064861[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7367117284505064861[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7367117284505064861[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7367117284505064861[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7367117284505064861[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7367117284505064861[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7367117284505064861[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_502921448557626474) {
   out_502921448557626474[0] = delta_x[0] + nom_x[0];
   out_502921448557626474[1] = delta_x[1] + nom_x[1];
   out_502921448557626474[2] = delta_x[2] + nom_x[2];
   out_502921448557626474[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_502921448557626474[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_502921448557626474[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_502921448557626474[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_502921448557626474[7] = delta_x[6] + nom_x[7];
   out_502921448557626474[8] = delta_x[7] + nom_x[8];
   out_502921448557626474[9] = delta_x[8] + nom_x[9];
   out_502921448557626474[10] = delta_x[9] + nom_x[10];
   out_502921448557626474[11] = delta_x[10] + nom_x[11];
   out_502921448557626474[12] = delta_x[11] + nom_x[12];
   out_502921448557626474[13] = delta_x[12] + nom_x[13];
   out_502921448557626474[14] = delta_x[13] + nom_x[14];
   out_502921448557626474[15] = delta_x[14] + nom_x[15];
   out_502921448557626474[16] = delta_x[15] + nom_x[16];
   out_502921448557626474[17] = delta_x[16] + nom_x[17];
   out_502921448557626474[18] = delta_x[17] + nom_x[18];
   out_502921448557626474[19] = delta_x[18] + nom_x[19];
   out_502921448557626474[20] = delta_x[19] + nom_x[20];
   out_502921448557626474[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4453209638238502231) {
   out_4453209638238502231[0] = -nom_x[0] + true_x[0];
   out_4453209638238502231[1] = -nom_x[1] + true_x[1];
   out_4453209638238502231[2] = -nom_x[2] + true_x[2];
   out_4453209638238502231[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4453209638238502231[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4453209638238502231[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4453209638238502231[6] = -nom_x[7] + true_x[7];
   out_4453209638238502231[7] = -nom_x[8] + true_x[8];
   out_4453209638238502231[8] = -nom_x[9] + true_x[9];
   out_4453209638238502231[9] = -nom_x[10] + true_x[10];
   out_4453209638238502231[10] = -nom_x[11] + true_x[11];
   out_4453209638238502231[11] = -nom_x[12] + true_x[12];
   out_4453209638238502231[12] = -nom_x[13] + true_x[13];
   out_4453209638238502231[13] = -nom_x[14] + true_x[14];
   out_4453209638238502231[14] = -nom_x[15] + true_x[15];
   out_4453209638238502231[15] = -nom_x[16] + true_x[16];
   out_4453209638238502231[16] = -nom_x[17] + true_x[17];
   out_4453209638238502231[17] = -nom_x[18] + true_x[18];
   out_4453209638238502231[18] = -nom_x[19] + true_x[19];
   out_4453209638238502231[19] = -nom_x[20] + true_x[20];
   out_4453209638238502231[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6940289921718219734) {
   out_6940289921718219734[0] = 1.0;
   out_6940289921718219734[1] = 0;
   out_6940289921718219734[2] = 0;
   out_6940289921718219734[3] = 0;
   out_6940289921718219734[4] = 0;
   out_6940289921718219734[5] = 0;
   out_6940289921718219734[6] = 0;
   out_6940289921718219734[7] = 0;
   out_6940289921718219734[8] = 0;
   out_6940289921718219734[9] = 0;
   out_6940289921718219734[10] = 0;
   out_6940289921718219734[11] = 0;
   out_6940289921718219734[12] = 0;
   out_6940289921718219734[13] = 0;
   out_6940289921718219734[14] = 0;
   out_6940289921718219734[15] = 0;
   out_6940289921718219734[16] = 0;
   out_6940289921718219734[17] = 0;
   out_6940289921718219734[18] = 0;
   out_6940289921718219734[19] = 0;
   out_6940289921718219734[20] = 0;
   out_6940289921718219734[21] = 0;
   out_6940289921718219734[22] = 1.0;
   out_6940289921718219734[23] = 0;
   out_6940289921718219734[24] = 0;
   out_6940289921718219734[25] = 0;
   out_6940289921718219734[26] = 0;
   out_6940289921718219734[27] = 0;
   out_6940289921718219734[28] = 0;
   out_6940289921718219734[29] = 0;
   out_6940289921718219734[30] = 0;
   out_6940289921718219734[31] = 0;
   out_6940289921718219734[32] = 0;
   out_6940289921718219734[33] = 0;
   out_6940289921718219734[34] = 0;
   out_6940289921718219734[35] = 0;
   out_6940289921718219734[36] = 0;
   out_6940289921718219734[37] = 0;
   out_6940289921718219734[38] = 0;
   out_6940289921718219734[39] = 0;
   out_6940289921718219734[40] = 0;
   out_6940289921718219734[41] = 0;
   out_6940289921718219734[42] = 0;
   out_6940289921718219734[43] = 0;
   out_6940289921718219734[44] = 1.0;
   out_6940289921718219734[45] = 0;
   out_6940289921718219734[46] = 0;
   out_6940289921718219734[47] = 0;
   out_6940289921718219734[48] = 0;
   out_6940289921718219734[49] = 0;
   out_6940289921718219734[50] = 0;
   out_6940289921718219734[51] = 0;
   out_6940289921718219734[52] = 0;
   out_6940289921718219734[53] = 0;
   out_6940289921718219734[54] = 0;
   out_6940289921718219734[55] = 0;
   out_6940289921718219734[56] = 0;
   out_6940289921718219734[57] = 0;
   out_6940289921718219734[58] = 0;
   out_6940289921718219734[59] = 0;
   out_6940289921718219734[60] = 0;
   out_6940289921718219734[61] = 0;
   out_6940289921718219734[62] = 0;
   out_6940289921718219734[63] = 0;
   out_6940289921718219734[64] = 0;
   out_6940289921718219734[65] = 0;
   out_6940289921718219734[66] = -0.5*state[4];
   out_6940289921718219734[67] = -0.5*state[5];
   out_6940289921718219734[68] = -0.5*state[6];
   out_6940289921718219734[69] = 0;
   out_6940289921718219734[70] = 0;
   out_6940289921718219734[71] = 0;
   out_6940289921718219734[72] = 0;
   out_6940289921718219734[73] = 0;
   out_6940289921718219734[74] = 0;
   out_6940289921718219734[75] = 0;
   out_6940289921718219734[76] = 0;
   out_6940289921718219734[77] = 0;
   out_6940289921718219734[78] = 0;
   out_6940289921718219734[79] = 0;
   out_6940289921718219734[80] = 0;
   out_6940289921718219734[81] = 0;
   out_6940289921718219734[82] = 0;
   out_6940289921718219734[83] = 0;
   out_6940289921718219734[84] = 0;
   out_6940289921718219734[85] = 0;
   out_6940289921718219734[86] = 0;
   out_6940289921718219734[87] = 0.5*state[3];
   out_6940289921718219734[88] = 0.5*state[6];
   out_6940289921718219734[89] = -0.5*state[5];
   out_6940289921718219734[90] = 0;
   out_6940289921718219734[91] = 0;
   out_6940289921718219734[92] = 0;
   out_6940289921718219734[93] = 0;
   out_6940289921718219734[94] = 0;
   out_6940289921718219734[95] = 0;
   out_6940289921718219734[96] = 0;
   out_6940289921718219734[97] = 0;
   out_6940289921718219734[98] = 0;
   out_6940289921718219734[99] = 0;
   out_6940289921718219734[100] = 0;
   out_6940289921718219734[101] = 0;
   out_6940289921718219734[102] = 0;
   out_6940289921718219734[103] = 0;
   out_6940289921718219734[104] = 0;
   out_6940289921718219734[105] = 0;
   out_6940289921718219734[106] = 0;
   out_6940289921718219734[107] = 0;
   out_6940289921718219734[108] = -0.5*state[6];
   out_6940289921718219734[109] = 0.5*state[3];
   out_6940289921718219734[110] = 0.5*state[4];
   out_6940289921718219734[111] = 0;
   out_6940289921718219734[112] = 0;
   out_6940289921718219734[113] = 0;
   out_6940289921718219734[114] = 0;
   out_6940289921718219734[115] = 0;
   out_6940289921718219734[116] = 0;
   out_6940289921718219734[117] = 0;
   out_6940289921718219734[118] = 0;
   out_6940289921718219734[119] = 0;
   out_6940289921718219734[120] = 0;
   out_6940289921718219734[121] = 0;
   out_6940289921718219734[122] = 0;
   out_6940289921718219734[123] = 0;
   out_6940289921718219734[124] = 0;
   out_6940289921718219734[125] = 0;
   out_6940289921718219734[126] = 0;
   out_6940289921718219734[127] = 0;
   out_6940289921718219734[128] = 0;
   out_6940289921718219734[129] = 0.5*state[5];
   out_6940289921718219734[130] = -0.5*state[4];
   out_6940289921718219734[131] = 0.5*state[3];
   out_6940289921718219734[132] = 0;
   out_6940289921718219734[133] = 0;
   out_6940289921718219734[134] = 0;
   out_6940289921718219734[135] = 0;
   out_6940289921718219734[136] = 0;
   out_6940289921718219734[137] = 0;
   out_6940289921718219734[138] = 0;
   out_6940289921718219734[139] = 0;
   out_6940289921718219734[140] = 0;
   out_6940289921718219734[141] = 0;
   out_6940289921718219734[142] = 0;
   out_6940289921718219734[143] = 0;
   out_6940289921718219734[144] = 0;
   out_6940289921718219734[145] = 0;
   out_6940289921718219734[146] = 0;
   out_6940289921718219734[147] = 0;
   out_6940289921718219734[148] = 0;
   out_6940289921718219734[149] = 0;
   out_6940289921718219734[150] = 0;
   out_6940289921718219734[151] = 0;
   out_6940289921718219734[152] = 0;
   out_6940289921718219734[153] = 1.0;
   out_6940289921718219734[154] = 0;
   out_6940289921718219734[155] = 0;
   out_6940289921718219734[156] = 0;
   out_6940289921718219734[157] = 0;
   out_6940289921718219734[158] = 0;
   out_6940289921718219734[159] = 0;
   out_6940289921718219734[160] = 0;
   out_6940289921718219734[161] = 0;
   out_6940289921718219734[162] = 0;
   out_6940289921718219734[163] = 0;
   out_6940289921718219734[164] = 0;
   out_6940289921718219734[165] = 0;
   out_6940289921718219734[166] = 0;
   out_6940289921718219734[167] = 0;
   out_6940289921718219734[168] = 0;
   out_6940289921718219734[169] = 0;
   out_6940289921718219734[170] = 0;
   out_6940289921718219734[171] = 0;
   out_6940289921718219734[172] = 0;
   out_6940289921718219734[173] = 0;
   out_6940289921718219734[174] = 0;
   out_6940289921718219734[175] = 1.0;
   out_6940289921718219734[176] = 0;
   out_6940289921718219734[177] = 0;
   out_6940289921718219734[178] = 0;
   out_6940289921718219734[179] = 0;
   out_6940289921718219734[180] = 0;
   out_6940289921718219734[181] = 0;
   out_6940289921718219734[182] = 0;
   out_6940289921718219734[183] = 0;
   out_6940289921718219734[184] = 0;
   out_6940289921718219734[185] = 0;
   out_6940289921718219734[186] = 0;
   out_6940289921718219734[187] = 0;
   out_6940289921718219734[188] = 0;
   out_6940289921718219734[189] = 0;
   out_6940289921718219734[190] = 0;
   out_6940289921718219734[191] = 0;
   out_6940289921718219734[192] = 0;
   out_6940289921718219734[193] = 0;
   out_6940289921718219734[194] = 0;
   out_6940289921718219734[195] = 0;
   out_6940289921718219734[196] = 0;
   out_6940289921718219734[197] = 1.0;
   out_6940289921718219734[198] = 0;
   out_6940289921718219734[199] = 0;
   out_6940289921718219734[200] = 0;
   out_6940289921718219734[201] = 0;
   out_6940289921718219734[202] = 0;
   out_6940289921718219734[203] = 0;
   out_6940289921718219734[204] = 0;
   out_6940289921718219734[205] = 0;
   out_6940289921718219734[206] = 0;
   out_6940289921718219734[207] = 0;
   out_6940289921718219734[208] = 0;
   out_6940289921718219734[209] = 0;
   out_6940289921718219734[210] = 0;
   out_6940289921718219734[211] = 0;
   out_6940289921718219734[212] = 0;
   out_6940289921718219734[213] = 0;
   out_6940289921718219734[214] = 0;
   out_6940289921718219734[215] = 0;
   out_6940289921718219734[216] = 0;
   out_6940289921718219734[217] = 0;
   out_6940289921718219734[218] = 0;
   out_6940289921718219734[219] = 1.0;
   out_6940289921718219734[220] = 0;
   out_6940289921718219734[221] = 0;
   out_6940289921718219734[222] = 0;
   out_6940289921718219734[223] = 0;
   out_6940289921718219734[224] = 0;
   out_6940289921718219734[225] = 0;
   out_6940289921718219734[226] = 0;
   out_6940289921718219734[227] = 0;
   out_6940289921718219734[228] = 0;
   out_6940289921718219734[229] = 0;
   out_6940289921718219734[230] = 0;
   out_6940289921718219734[231] = 0;
   out_6940289921718219734[232] = 0;
   out_6940289921718219734[233] = 0;
   out_6940289921718219734[234] = 0;
   out_6940289921718219734[235] = 0;
   out_6940289921718219734[236] = 0;
   out_6940289921718219734[237] = 0;
   out_6940289921718219734[238] = 0;
   out_6940289921718219734[239] = 0;
   out_6940289921718219734[240] = 0;
   out_6940289921718219734[241] = 1.0;
   out_6940289921718219734[242] = 0;
   out_6940289921718219734[243] = 0;
   out_6940289921718219734[244] = 0;
   out_6940289921718219734[245] = 0;
   out_6940289921718219734[246] = 0;
   out_6940289921718219734[247] = 0;
   out_6940289921718219734[248] = 0;
   out_6940289921718219734[249] = 0;
   out_6940289921718219734[250] = 0;
   out_6940289921718219734[251] = 0;
   out_6940289921718219734[252] = 0;
   out_6940289921718219734[253] = 0;
   out_6940289921718219734[254] = 0;
   out_6940289921718219734[255] = 0;
   out_6940289921718219734[256] = 0;
   out_6940289921718219734[257] = 0;
   out_6940289921718219734[258] = 0;
   out_6940289921718219734[259] = 0;
   out_6940289921718219734[260] = 0;
   out_6940289921718219734[261] = 0;
   out_6940289921718219734[262] = 0;
   out_6940289921718219734[263] = 1.0;
   out_6940289921718219734[264] = 0;
   out_6940289921718219734[265] = 0;
   out_6940289921718219734[266] = 0;
   out_6940289921718219734[267] = 0;
   out_6940289921718219734[268] = 0;
   out_6940289921718219734[269] = 0;
   out_6940289921718219734[270] = 0;
   out_6940289921718219734[271] = 0;
   out_6940289921718219734[272] = 0;
   out_6940289921718219734[273] = 0;
   out_6940289921718219734[274] = 0;
   out_6940289921718219734[275] = 0;
   out_6940289921718219734[276] = 0;
   out_6940289921718219734[277] = 0;
   out_6940289921718219734[278] = 0;
   out_6940289921718219734[279] = 0;
   out_6940289921718219734[280] = 0;
   out_6940289921718219734[281] = 0;
   out_6940289921718219734[282] = 0;
   out_6940289921718219734[283] = 0;
   out_6940289921718219734[284] = 0;
   out_6940289921718219734[285] = 1.0;
   out_6940289921718219734[286] = 0;
   out_6940289921718219734[287] = 0;
   out_6940289921718219734[288] = 0;
   out_6940289921718219734[289] = 0;
   out_6940289921718219734[290] = 0;
   out_6940289921718219734[291] = 0;
   out_6940289921718219734[292] = 0;
   out_6940289921718219734[293] = 0;
   out_6940289921718219734[294] = 0;
   out_6940289921718219734[295] = 0;
   out_6940289921718219734[296] = 0;
   out_6940289921718219734[297] = 0;
   out_6940289921718219734[298] = 0;
   out_6940289921718219734[299] = 0;
   out_6940289921718219734[300] = 0;
   out_6940289921718219734[301] = 0;
   out_6940289921718219734[302] = 0;
   out_6940289921718219734[303] = 0;
   out_6940289921718219734[304] = 0;
   out_6940289921718219734[305] = 0;
   out_6940289921718219734[306] = 0;
   out_6940289921718219734[307] = 1.0;
   out_6940289921718219734[308] = 0;
   out_6940289921718219734[309] = 0;
   out_6940289921718219734[310] = 0;
   out_6940289921718219734[311] = 0;
   out_6940289921718219734[312] = 0;
   out_6940289921718219734[313] = 0;
   out_6940289921718219734[314] = 0;
   out_6940289921718219734[315] = 0;
   out_6940289921718219734[316] = 0;
   out_6940289921718219734[317] = 0;
   out_6940289921718219734[318] = 0;
   out_6940289921718219734[319] = 0;
   out_6940289921718219734[320] = 0;
   out_6940289921718219734[321] = 0;
   out_6940289921718219734[322] = 0;
   out_6940289921718219734[323] = 0;
   out_6940289921718219734[324] = 0;
   out_6940289921718219734[325] = 0;
   out_6940289921718219734[326] = 0;
   out_6940289921718219734[327] = 0;
   out_6940289921718219734[328] = 0;
   out_6940289921718219734[329] = 1.0;
   out_6940289921718219734[330] = 0;
   out_6940289921718219734[331] = 0;
   out_6940289921718219734[332] = 0;
   out_6940289921718219734[333] = 0;
   out_6940289921718219734[334] = 0;
   out_6940289921718219734[335] = 0;
   out_6940289921718219734[336] = 0;
   out_6940289921718219734[337] = 0;
   out_6940289921718219734[338] = 0;
   out_6940289921718219734[339] = 0;
   out_6940289921718219734[340] = 0;
   out_6940289921718219734[341] = 0;
   out_6940289921718219734[342] = 0;
   out_6940289921718219734[343] = 0;
   out_6940289921718219734[344] = 0;
   out_6940289921718219734[345] = 0;
   out_6940289921718219734[346] = 0;
   out_6940289921718219734[347] = 0;
   out_6940289921718219734[348] = 0;
   out_6940289921718219734[349] = 0;
   out_6940289921718219734[350] = 0;
   out_6940289921718219734[351] = 1.0;
   out_6940289921718219734[352] = 0;
   out_6940289921718219734[353] = 0;
   out_6940289921718219734[354] = 0;
   out_6940289921718219734[355] = 0;
   out_6940289921718219734[356] = 0;
   out_6940289921718219734[357] = 0;
   out_6940289921718219734[358] = 0;
   out_6940289921718219734[359] = 0;
   out_6940289921718219734[360] = 0;
   out_6940289921718219734[361] = 0;
   out_6940289921718219734[362] = 0;
   out_6940289921718219734[363] = 0;
   out_6940289921718219734[364] = 0;
   out_6940289921718219734[365] = 0;
   out_6940289921718219734[366] = 0;
   out_6940289921718219734[367] = 0;
   out_6940289921718219734[368] = 0;
   out_6940289921718219734[369] = 0;
   out_6940289921718219734[370] = 0;
   out_6940289921718219734[371] = 0;
   out_6940289921718219734[372] = 0;
   out_6940289921718219734[373] = 1.0;
   out_6940289921718219734[374] = 0;
   out_6940289921718219734[375] = 0;
   out_6940289921718219734[376] = 0;
   out_6940289921718219734[377] = 0;
   out_6940289921718219734[378] = 0;
   out_6940289921718219734[379] = 0;
   out_6940289921718219734[380] = 0;
   out_6940289921718219734[381] = 0;
   out_6940289921718219734[382] = 0;
   out_6940289921718219734[383] = 0;
   out_6940289921718219734[384] = 0;
   out_6940289921718219734[385] = 0;
   out_6940289921718219734[386] = 0;
   out_6940289921718219734[387] = 0;
   out_6940289921718219734[388] = 0;
   out_6940289921718219734[389] = 0;
   out_6940289921718219734[390] = 0;
   out_6940289921718219734[391] = 0;
   out_6940289921718219734[392] = 0;
   out_6940289921718219734[393] = 0;
   out_6940289921718219734[394] = 0;
   out_6940289921718219734[395] = 1.0;
   out_6940289921718219734[396] = 0;
   out_6940289921718219734[397] = 0;
   out_6940289921718219734[398] = 0;
   out_6940289921718219734[399] = 0;
   out_6940289921718219734[400] = 0;
   out_6940289921718219734[401] = 0;
   out_6940289921718219734[402] = 0;
   out_6940289921718219734[403] = 0;
   out_6940289921718219734[404] = 0;
   out_6940289921718219734[405] = 0;
   out_6940289921718219734[406] = 0;
   out_6940289921718219734[407] = 0;
   out_6940289921718219734[408] = 0;
   out_6940289921718219734[409] = 0;
   out_6940289921718219734[410] = 0;
   out_6940289921718219734[411] = 0;
   out_6940289921718219734[412] = 0;
   out_6940289921718219734[413] = 0;
   out_6940289921718219734[414] = 0;
   out_6940289921718219734[415] = 0;
   out_6940289921718219734[416] = 0;
   out_6940289921718219734[417] = 1.0;
   out_6940289921718219734[418] = 0;
   out_6940289921718219734[419] = 0;
   out_6940289921718219734[420] = 0;
   out_6940289921718219734[421] = 0;
   out_6940289921718219734[422] = 0;
   out_6940289921718219734[423] = 0;
   out_6940289921718219734[424] = 0;
   out_6940289921718219734[425] = 0;
   out_6940289921718219734[426] = 0;
   out_6940289921718219734[427] = 0;
   out_6940289921718219734[428] = 0;
   out_6940289921718219734[429] = 0;
   out_6940289921718219734[430] = 0;
   out_6940289921718219734[431] = 0;
   out_6940289921718219734[432] = 0;
   out_6940289921718219734[433] = 0;
   out_6940289921718219734[434] = 0;
   out_6940289921718219734[435] = 0;
   out_6940289921718219734[436] = 0;
   out_6940289921718219734[437] = 0;
   out_6940289921718219734[438] = 0;
   out_6940289921718219734[439] = 1.0;
   out_6940289921718219734[440] = 0;
   out_6940289921718219734[441] = 0;
   out_6940289921718219734[442] = 0;
   out_6940289921718219734[443] = 0;
   out_6940289921718219734[444] = 0;
   out_6940289921718219734[445] = 0;
   out_6940289921718219734[446] = 0;
   out_6940289921718219734[447] = 0;
   out_6940289921718219734[448] = 0;
   out_6940289921718219734[449] = 0;
   out_6940289921718219734[450] = 0;
   out_6940289921718219734[451] = 0;
   out_6940289921718219734[452] = 0;
   out_6940289921718219734[453] = 0;
   out_6940289921718219734[454] = 0;
   out_6940289921718219734[455] = 0;
   out_6940289921718219734[456] = 0;
   out_6940289921718219734[457] = 0;
   out_6940289921718219734[458] = 0;
   out_6940289921718219734[459] = 0;
   out_6940289921718219734[460] = 0;
   out_6940289921718219734[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2876716850604714813) {
   out_2876716850604714813[0] = dt*state[7] + state[0];
   out_2876716850604714813[1] = dt*state[8] + state[1];
   out_2876716850604714813[2] = dt*state[9] + state[2];
   out_2876716850604714813[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2876716850604714813[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2876716850604714813[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2876716850604714813[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2876716850604714813[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2876716850604714813[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2876716850604714813[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2876716850604714813[10] = state[10];
   out_2876716850604714813[11] = state[11];
   out_2876716850604714813[12] = state[12];
   out_2876716850604714813[13] = state[13];
   out_2876716850604714813[14] = state[14];
   out_2876716850604714813[15] = state[15];
   out_2876716850604714813[16] = state[16];
   out_2876716850604714813[17] = state[17];
   out_2876716850604714813[18] = state[18];
   out_2876716850604714813[19] = state[19];
   out_2876716850604714813[20] = state[20];
   out_2876716850604714813[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7992546097860965363) {
   out_7992546097860965363[0] = 1;
   out_7992546097860965363[1] = 0;
   out_7992546097860965363[2] = 0;
   out_7992546097860965363[3] = 0;
   out_7992546097860965363[4] = 0;
   out_7992546097860965363[5] = 0;
   out_7992546097860965363[6] = dt;
   out_7992546097860965363[7] = 0;
   out_7992546097860965363[8] = 0;
   out_7992546097860965363[9] = 0;
   out_7992546097860965363[10] = 0;
   out_7992546097860965363[11] = 0;
   out_7992546097860965363[12] = 0;
   out_7992546097860965363[13] = 0;
   out_7992546097860965363[14] = 0;
   out_7992546097860965363[15] = 0;
   out_7992546097860965363[16] = 0;
   out_7992546097860965363[17] = 0;
   out_7992546097860965363[18] = 0;
   out_7992546097860965363[19] = 0;
   out_7992546097860965363[20] = 0;
   out_7992546097860965363[21] = 0;
   out_7992546097860965363[22] = 1;
   out_7992546097860965363[23] = 0;
   out_7992546097860965363[24] = 0;
   out_7992546097860965363[25] = 0;
   out_7992546097860965363[26] = 0;
   out_7992546097860965363[27] = 0;
   out_7992546097860965363[28] = dt;
   out_7992546097860965363[29] = 0;
   out_7992546097860965363[30] = 0;
   out_7992546097860965363[31] = 0;
   out_7992546097860965363[32] = 0;
   out_7992546097860965363[33] = 0;
   out_7992546097860965363[34] = 0;
   out_7992546097860965363[35] = 0;
   out_7992546097860965363[36] = 0;
   out_7992546097860965363[37] = 0;
   out_7992546097860965363[38] = 0;
   out_7992546097860965363[39] = 0;
   out_7992546097860965363[40] = 0;
   out_7992546097860965363[41] = 0;
   out_7992546097860965363[42] = 0;
   out_7992546097860965363[43] = 0;
   out_7992546097860965363[44] = 1;
   out_7992546097860965363[45] = 0;
   out_7992546097860965363[46] = 0;
   out_7992546097860965363[47] = 0;
   out_7992546097860965363[48] = 0;
   out_7992546097860965363[49] = 0;
   out_7992546097860965363[50] = dt;
   out_7992546097860965363[51] = 0;
   out_7992546097860965363[52] = 0;
   out_7992546097860965363[53] = 0;
   out_7992546097860965363[54] = 0;
   out_7992546097860965363[55] = 0;
   out_7992546097860965363[56] = 0;
   out_7992546097860965363[57] = 0;
   out_7992546097860965363[58] = 0;
   out_7992546097860965363[59] = 0;
   out_7992546097860965363[60] = 0;
   out_7992546097860965363[61] = 0;
   out_7992546097860965363[62] = 0;
   out_7992546097860965363[63] = 0;
   out_7992546097860965363[64] = 0;
   out_7992546097860965363[65] = 0;
   out_7992546097860965363[66] = 1;
   out_7992546097860965363[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7992546097860965363[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7992546097860965363[69] = 0;
   out_7992546097860965363[70] = 0;
   out_7992546097860965363[71] = 0;
   out_7992546097860965363[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7992546097860965363[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7992546097860965363[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7992546097860965363[75] = 0;
   out_7992546097860965363[76] = 0;
   out_7992546097860965363[77] = 0;
   out_7992546097860965363[78] = 0;
   out_7992546097860965363[79] = 0;
   out_7992546097860965363[80] = 0;
   out_7992546097860965363[81] = 0;
   out_7992546097860965363[82] = 0;
   out_7992546097860965363[83] = 0;
   out_7992546097860965363[84] = 0;
   out_7992546097860965363[85] = 0;
   out_7992546097860965363[86] = 0;
   out_7992546097860965363[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7992546097860965363[88] = 1;
   out_7992546097860965363[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7992546097860965363[90] = 0;
   out_7992546097860965363[91] = 0;
   out_7992546097860965363[92] = 0;
   out_7992546097860965363[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7992546097860965363[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7992546097860965363[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7992546097860965363[96] = 0;
   out_7992546097860965363[97] = 0;
   out_7992546097860965363[98] = 0;
   out_7992546097860965363[99] = 0;
   out_7992546097860965363[100] = 0;
   out_7992546097860965363[101] = 0;
   out_7992546097860965363[102] = 0;
   out_7992546097860965363[103] = 0;
   out_7992546097860965363[104] = 0;
   out_7992546097860965363[105] = 0;
   out_7992546097860965363[106] = 0;
   out_7992546097860965363[107] = 0;
   out_7992546097860965363[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7992546097860965363[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7992546097860965363[110] = 1;
   out_7992546097860965363[111] = 0;
   out_7992546097860965363[112] = 0;
   out_7992546097860965363[113] = 0;
   out_7992546097860965363[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7992546097860965363[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7992546097860965363[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7992546097860965363[117] = 0;
   out_7992546097860965363[118] = 0;
   out_7992546097860965363[119] = 0;
   out_7992546097860965363[120] = 0;
   out_7992546097860965363[121] = 0;
   out_7992546097860965363[122] = 0;
   out_7992546097860965363[123] = 0;
   out_7992546097860965363[124] = 0;
   out_7992546097860965363[125] = 0;
   out_7992546097860965363[126] = 0;
   out_7992546097860965363[127] = 0;
   out_7992546097860965363[128] = 0;
   out_7992546097860965363[129] = 0;
   out_7992546097860965363[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7992546097860965363[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7992546097860965363[132] = 1;
   out_7992546097860965363[133] = 0;
   out_7992546097860965363[134] = 0;
   out_7992546097860965363[135] = 0;
   out_7992546097860965363[136] = 0;
   out_7992546097860965363[137] = 0;
   out_7992546097860965363[138] = 0;
   out_7992546097860965363[139] = 0;
   out_7992546097860965363[140] = 0;
   out_7992546097860965363[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7992546097860965363[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7992546097860965363[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7992546097860965363[144] = 0;
   out_7992546097860965363[145] = 0;
   out_7992546097860965363[146] = 0;
   out_7992546097860965363[147] = 0;
   out_7992546097860965363[148] = 0;
   out_7992546097860965363[149] = 0;
   out_7992546097860965363[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7992546097860965363[151] = 0;
   out_7992546097860965363[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7992546097860965363[153] = 0;
   out_7992546097860965363[154] = 1;
   out_7992546097860965363[155] = 0;
   out_7992546097860965363[156] = 0;
   out_7992546097860965363[157] = 0;
   out_7992546097860965363[158] = 0;
   out_7992546097860965363[159] = 0;
   out_7992546097860965363[160] = 0;
   out_7992546097860965363[161] = 0;
   out_7992546097860965363[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7992546097860965363[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7992546097860965363[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7992546097860965363[165] = 0;
   out_7992546097860965363[166] = 0;
   out_7992546097860965363[167] = 0;
   out_7992546097860965363[168] = 0;
   out_7992546097860965363[169] = 0;
   out_7992546097860965363[170] = 0;
   out_7992546097860965363[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7992546097860965363[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7992546097860965363[173] = 0;
   out_7992546097860965363[174] = 0;
   out_7992546097860965363[175] = 0;
   out_7992546097860965363[176] = 1;
   out_7992546097860965363[177] = 0;
   out_7992546097860965363[178] = 0;
   out_7992546097860965363[179] = 0;
   out_7992546097860965363[180] = 0;
   out_7992546097860965363[181] = 0;
   out_7992546097860965363[182] = 0;
   out_7992546097860965363[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7992546097860965363[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7992546097860965363[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7992546097860965363[186] = 0;
   out_7992546097860965363[187] = 0;
   out_7992546097860965363[188] = 0;
   out_7992546097860965363[189] = 0;
   out_7992546097860965363[190] = 0;
   out_7992546097860965363[191] = 0;
   out_7992546097860965363[192] = 0;
   out_7992546097860965363[193] = 0;
   out_7992546097860965363[194] = 0;
   out_7992546097860965363[195] = 0;
   out_7992546097860965363[196] = 0;
   out_7992546097860965363[197] = 0;
   out_7992546097860965363[198] = 1;
   out_7992546097860965363[199] = 0;
   out_7992546097860965363[200] = 0;
   out_7992546097860965363[201] = 0;
   out_7992546097860965363[202] = 0;
   out_7992546097860965363[203] = 0;
   out_7992546097860965363[204] = 0;
   out_7992546097860965363[205] = 0;
   out_7992546097860965363[206] = 0;
   out_7992546097860965363[207] = 0;
   out_7992546097860965363[208] = 0;
   out_7992546097860965363[209] = 0;
   out_7992546097860965363[210] = 0;
   out_7992546097860965363[211] = 0;
   out_7992546097860965363[212] = 0;
   out_7992546097860965363[213] = 0;
   out_7992546097860965363[214] = 0;
   out_7992546097860965363[215] = 0;
   out_7992546097860965363[216] = 0;
   out_7992546097860965363[217] = 0;
   out_7992546097860965363[218] = 0;
   out_7992546097860965363[219] = 0;
   out_7992546097860965363[220] = 1;
   out_7992546097860965363[221] = 0;
   out_7992546097860965363[222] = 0;
   out_7992546097860965363[223] = 0;
   out_7992546097860965363[224] = 0;
   out_7992546097860965363[225] = 0;
   out_7992546097860965363[226] = 0;
   out_7992546097860965363[227] = 0;
   out_7992546097860965363[228] = 0;
   out_7992546097860965363[229] = 0;
   out_7992546097860965363[230] = 0;
   out_7992546097860965363[231] = 0;
   out_7992546097860965363[232] = 0;
   out_7992546097860965363[233] = 0;
   out_7992546097860965363[234] = 0;
   out_7992546097860965363[235] = 0;
   out_7992546097860965363[236] = 0;
   out_7992546097860965363[237] = 0;
   out_7992546097860965363[238] = 0;
   out_7992546097860965363[239] = 0;
   out_7992546097860965363[240] = 0;
   out_7992546097860965363[241] = 0;
   out_7992546097860965363[242] = 1;
   out_7992546097860965363[243] = 0;
   out_7992546097860965363[244] = 0;
   out_7992546097860965363[245] = 0;
   out_7992546097860965363[246] = 0;
   out_7992546097860965363[247] = 0;
   out_7992546097860965363[248] = 0;
   out_7992546097860965363[249] = 0;
   out_7992546097860965363[250] = 0;
   out_7992546097860965363[251] = 0;
   out_7992546097860965363[252] = 0;
   out_7992546097860965363[253] = 0;
   out_7992546097860965363[254] = 0;
   out_7992546097860965363[255] = 0;
   out_7992546097860965363[256] = 0;
   out_7992546097860965363[257] = 0;
   out_7992546097860965363[258] = 0;
   out_7992546097860965363[259] = 0;
   out_7992546097860965363[260] = 0;
   out_7992546097860965363[261] = 0;
   out_7992546097860965363[262] = 0;
   out_7992546097860965363[263] = 0;
   out_7992546097860965363[264] = 1;
   out_7992546097860965363[265] = 0;
   out_7992546097860965363[266] = 0;
   out_7992546097860965363[267] = 0;
   out_7992546097860965363[268] = 0;
   out_7992546097860965363[269] = 0;
   out_7992546097860965363[270] = 0;
   out_7992546097860965363[271] = 0;
   out_7992546097860965363[272] = 0;
   out_7992546097860965363[273] = 0;
   out_7992546097860965363[274] = 0;
   out_7992546097860965363[275] = 0;
   out_7992546097860965363[276] = 0;
   out_7992546097860965363[277] = 0;
   out_7992546097860965363[278] = 0;
   out_7992546097860965363[279] = 0;
   out_7992546097860965363[280] = 0;
   out_7992546097860965363[281] = 0;
   out_7992546097860965363[282] = 0;
   out_7992546097860965363[283] = 0;
   out_7992546097860965363[284] = 0;
   out_7992546097860965363[285] = 0;
   out_7992546097860965363[286] = 1;
   out_7992546097860965363[287] = 0;
   out_7992546097860965363[288] = 0;
   out_7992546097860965363[289] = 0;
   out_7992546097860965363[290] = 0;
   out_7992546097860965363[291] = 0;
   out_7992546097860965363[292] = 0;
   out_7992546097860965363[293] = 0;
   out_7992546097860965363[294] = 0;
   out_7992546097860965363[295] = 0;
   out_7992546097860965363[296] = 0;
   out_7992546097860965363[297] = 0;
   out_7992546097860965363[298] = 0;
   out_7992546097860965363[299] = 0;
   out_7992546097860965363[300] = 0;
   out_7992546097860965363[301] = 0;
   out_7992546097860965363[302] = 0;
   out_7992546097860965363[303] = 0;
   out_7992546097860965363[304] = 0;
   out_7992546097860965363[305] = 0;
   out_7992546097860965363[306] = 0;
   out_7992546097860965363[307] = 0;
   out_7992546097860965363[308] = 1;
   out_7992546097860965363[309] = 0;
   out_7992546097860965363[310] = 0;
   out_7992546097860965363[311] = 0;
   out_7992546097860965363[312] = 0;
   out_7992546097860965363[313] = 0;
   out_7992546097860965363[314] = 0;
   out_7992546097860965363[315] = 0;
   out_7992546097860965363[316] = 0;
   out_7992546097860965363[317] = 0;
   out_7992546097860965363[318] = 0;
   out_7992546097860965363[319] = 0;
   out_7992546097860965363[320] = 0;
   out_7992546097860965363[321] = 0;
   out_7992546097860965363[322] = 0;
   out_7992546097860965363[323] = 0;
   out_7992546097860965363[324] = 0;
   out_7992546097860965363[325] = 0;
   out_7992546097860965363[326] = 0;
   out_7992546097860965363[327] = 0;
   out_7992546097860965363[328] = 0;
   out_7992546097860965363[329] = 0;
   out_7992546097860965363[330] = 1;
   out_7992546097860965363[331] = 0;
   out_7992546097860965363[332] = 0;
   out_7992546097860965363[333] = 0;
   out_7992546097860965363[334] = 0;
   out_7992546097860965363[335] = 0;
   out_7992546097860965363[336] = 0;
   out_7992546097860965363[337] = 0;
   out_7992546097860965363[338] = 0;
   out_7992546097860965363[339] = 0;
   out_7992546097860965363[340] = 0;
   out_7992546097860965363[341] = 0;
   out_7992546097860965363[342] = 0;
   out_7992546097860965363[343] = 0;
   out_7992546097860965363[344] = 0;
   out_7992546097860965363[345] = 0;
   out_7992546097860965363[346] = 0;
   out_7992546097860965363[347] = 0;
   out_7992546097860965363[348] = 0;
   out_7992546097860965363[349] = 0;
   out_7992546097860965363[350] = 0;
   out_7992546097860965363[351] = 0;
   out_7992546097860965363[352] = 1;
   out_7992546097860965363[353] = 0;
   out_7992546097860965363[354] = 0;
   out_7992546097860965363[355] = 0;
   out_7992546097860965363[356] = 0;
   out_7992546097860965363[357] = 0;
   out_7992546097860965363[358] = 0;
   out_7992546097860965363[359] = 0;
   out_7992546097860965363[360] = 0;
   out_7992546097860965363[361] = 0;
   out_7992546097860965363[362] = 0;
   out_7992546097860965363[363] = 0;
   out_7992546097860965363[364] = 0;
   out_7992546097860965363[365] = 0;
   out_7992546097860965363[366] = 0;
   out_7992546097860965363[367] = 0;
   out_7992546097860965363[368] = 0;
   out_7992546097860965363[369] = 0;
   out_7992546097860965363[370] = 0;
   out_7992546097860965363[371] = 0;
   out_7992546097860965363[372] = 0;
   out_7992546097860965363[373] = 0;
   out_7992546097860965363[374] = 1;
   out_7992546097860965363[375] = 0;
   out_7992546097860965363[376] = 0;
   out_7992546097860965363[377] = 0;
   out_7992546097860965363[378] = 0;
   out_7992546097860965363[379] = 0;
   out_7992546097860965363[380] = 0;
   out_7992546097860965363[381] = 0;
   out_7992546097860965363[382] = 0;
   out_7992546097860965363[383] = 0;
   out_7992546097860965363[384] = 0;
   out_7992546097860965363[385] = 0;
   out_7992546097860965363[386] = 0;
   out_7992546097860965363[387] = 0;
   out_7992546097860965363[388] = 0;
   out_7992546097860965363[389] = 0;
   out_7992546097860965363[390] = 0;
   out_7992546097860965363[391] = 0;
   out_7992546097860965363[392] = 0;
   out_7992546097860965363[393] = 0;
   out_7992546097860965363[394] = 0;
   out_7992546097860965363[395] = 0;
   out_7992546097860965363[396] = 1;
   out_7992546097860965363[397] = 0;
   out_7992546097860965363[398] = 0;
   out_7992546097860965363[399] = 0;
   out_7992546097860965363[400] = 0;
   out_7992546097860965363[401] = 0;
   out_7992546097860965363[402] = 0;
   out_7992546097860965363[403] = 0;
   out_7992546097860965363[404] = 0;
   out_7992546097860965363[405] = 0;
   out_7992546097860965363[406] = 0;
   out_7992546097860965363[407] = 0;
   out_7992546097860965363[408] = 0;
   out_7992546097860965363[409] = 0;
   out_7992546097860965363[410] = 0;
   out_7992546097860965363[411] = 0;
   out_7992546097860965363[412] = 0;
   out_7992546097860965363[413] = 0;
   out_7992546097860965363[414] = 0;
   out_7992546097860965363[415] = 0;
   out_7992546097860965363[416] = 0;
   out_7992546097860965363[417] = 0;
   out_7992546097860965363[418] = 1;
   out_7992546097860965363[419] = 0;
   out_7992546097860965363[420] = 0;
   out_7992546097860965363[421] = 0;
   out_7992546097860965363[422] = 0;
   out_7992546097860965363[423] = 0;
   out_7992546097860965363[424] = 0;
   out_7992546097860965363[425] = 0;
   out_7992546097860965363[426] = 0;
   out_7992546097860965363[427] = 0;
   out_7992546097860965363[428] = 0;
   out_7992546097860965363[429] = 0;
   out_7992546097860965363[430] = 0;
   out_7992546097860965363[431] = 0;
   out_7992546097860965363[432] = 0;
   out_7992546097860965363[433] = 0;
   out_7992546097860965363[434] = 0;
   out_7992546097860965363[435] = 0;
   out_7992546097860965363[436] = 0;
   out_7992546097860965363[437] = 0;
   out_7992546097860965363[438] = 0;
   out_7992546097860965363[439] = 0;
   out_7992546097860965363[440] = 1;
}
void h_4(double *state, double *unused, double *out_7712970165784462444) {
   out_7712970165784462444[0] = state[10] + state[13];
   out_7712970165784462444[1] = state[11] + state[14];
   out_7712970165784462444[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3962647126780710318) {
   out_3962647126780710318[0] = 0;
   out_3962647126780710318[1] = 0;
   out_3962647126780710318[2] = 0;
   out_3962647126780710318[3] = 0;
   out_3962647126780710318[4] = 0;
   out_3962647126780710318[5] = 0;
   out_3962647126780710318[6] = 0;
   out_3962647126780710318[7] = 0;
   out_3962647126780710318[8] = 0;
   out_3962647126780710318[9] = 0;
   out_3962647126780710318[10] = 1;
   out_3962647126780710318[11] = 0;
   out_3962647126780710318[12] = 0;
   out_3962647126780710318[13] = 1;
   out_3962647126780710318[14] = 0;
   out_3962647126780710318[15] = 0;
   out_3962647126780710318[16] = 0;
   out_3962647126780710318[17] = 0;
   out_3962647126780710318[18] = 0;
   out_3962647126780710318[19] = 0;
   out_3962647126780710318[20] = 0;
   out_3962647126780710318[21] = 0;
   out_3962647126780710318[22] = 0;
   out_3962647126780710318[23] = 0;
   out_3962647126780710318[24] = 0;
   out_3962647126780710318[25] = 0;
   out_3962647126780710318[26] = 0;
   out_3962647126780710318[27] = 0;
   out_3962647126780710318[28] = 0;
   out_3962647126780710318[29] = 0;
   out_3962647126780710318[30] = 0;
   out_3962647126780710318[31] = 0;
   out_3962647126780710318[32] = 0;
   out_3962647126780710318[33] = 1;
   out_3962647126780710318[34] = 0;
   out_3962647126780710318[35] = 0;
   out_3962647126780710318[36] = 1;
   out_3962647126780710318[37] = 0;
   out_3962647126780710318[38] = 0;
   out_3962647126780710318[39] = 0;
   out_3962647126780710318[40] = 0;
   out_3962647126780710318[41] = 0;
   out_3962647126780710318[42] = 0;
   out_3962647126780710318[43] = 0;
   out_3962647126780710318[44] = 0;
   out_3962647126780710318[45] = 0;
   out_3962647126780710318[46] = 0;
   out_3962647126780710318[47] = 0;
   out_3962647126780710318[48] = 0;
   out_3962647126780710318[49] = 0;
   out_3962647126780710318[50] = 0;
   out_3962647126780710318[51] = 0;
   out_3962647126780710318[52] = 0;
   out_3962647126780710318[53] = 0;
   out_3962647126780710318[54] = 0;
   out_3962647126780710318[55] = 0;
   out_3962647126780710318[56] = 1;
   out_3962647126780710318[57] = 0;
   out_3962647126780710318[58] = 0;
   out_3962647126780710318[59] = 1;
   out_3962647126780710318[60] = 0;
   out_3962647126780710318[61] = 0;
   out_3962647126780710318[62] = 0;
   out_3962647126780710318[63] = 0;
   out_3962647126780710318[64] = 0;
   out_3962647126780710318[65] = 0;
}
void h_9(double *state, double *unused, double *out_8428986639409696140) {
   out_8428986639409696140[0] = state[10];
   out_8428986639409696140[1] = state[11];
   out_8428986639409696140[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7196878011664393828) {
   out_7196878011664393828[0] = 0;
   out_7196878011664393828[1] = 0;
   out_7196878011664393828[2] = 0;
   out_7196878011664393828[3] = 0;
   out_7196878011664393828[4] = 0;
   out_7196878011664393828[5] = 0;
   out_7196878011664393828[6] = 0;
   out_7196878011664393828[7] = 0;
   out_7196878011664393828[8] = 0;
   out_7196878011664393828[9] = 0;
   out_7196878011664393828[10] = 1;
   out_7196878011664393828[11] = 0;
   out_7196878011664393828[12] = 0;
   out_7196878011664393828[13] = 0;
   out_7196878011664393828[14] = 0;
   out_7196878011664393828[15] = 0;
   out_7196878011664393828[16] = 0;
   out_7196878011664393828[17] = 0;
   out_7196878011664393828[18] = 0;
   out_7196878011664393828[19] = 0;
   out_7196878011664393828[20] = 0;
   out_7196878011664393828[21] = 0;
   out_7196878011664393828[22] = 0;
   out_7196878011664393828[23] = 0;
   out_7196878011664393828[24] = 0;
   out_7196878011664393828[25] = 0;
   out_7196878011664393828[26] = 0;
   out_7196878011664393828[27] = 0;
   out_7196878011664393828[28] = 0;
   out_7196878011664393828[29] = 0;
   out_7196878011664393828[30] = 0;
   out_7196878011664393828[31] = 0;
   out_7196878011664393828[32] = 0;
   out_7196878011664393828[33] = 1;
   out_7196878011664393828[34] = 0;
   out_7196878011664393828[35] = 0;
   out_7196878011664393828[36] = 0;
   out_7196878011664393828[37] = 0;
   out_7196878011664393828[38] = 0;
   out_7196878011664393828[39] = 0;
   out_7196878011664393828[40] = 0;
   out_7196878011664393828[41] = 0;
   out_7196878011664393828[42] = 0;
   out_7196878011664393828[43] = 0;
   out_7196878011664393828[44] = 0;
   out_7196878011664393828[45] = 0;
   out_7196878011664393828[46] = 0;
   out_7196878011664393828[47] = 0;
   out_7196878011664393828[48] = 0;
   out_7196878011664393828[49] = 0;
   out_7196878011664393828[50] = 0;
   out_7196878011664393828[51] = 0;
   out_7196878011664393828[52] = 0;
   out_7196878011664393828[53] = 0;
   out_7196878011664393828[54] = 0;
   out_7196878011664393828[55] = 0;
   out_7196878011664393828[56] = 1;
   out_7196878011664393828[57] = 0;
   out_7196878011664393828[58] = 0;
   out_7196878011664393828[59] = 0;
   out_7196878011664393828[60] = 0;
   out_7196878011664393828[61] = 0;
   out_7196878011664393828[62] = 0;
   out_7196878011664393828[63] = 0;
   out_7196878011664393828[64] = 0;
   out_7196878011664393828[65] = 0;
}
void h_10(double *state, double *unused, double *out_7256650791036594495) {
   out_7256650791036594495[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7256650791036594495[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7256650791036594495[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5168720280121578420) {
   out_5168720280121578420[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5168720280121578420[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5168720280121578420[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5168720280121578420[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5168720280121578420[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5168720280121578420[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5168720280121578420[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5168720280121578420[7] = 0;
   out_5168720280121578420[8] = 0;
   out_5168720280121578420[9] = 0;
   out_5168720280121578420[10] = 0;
   out_5168720280121578420[11] = 0;
   out_5168720280121578420[12] = 0;
   out_5168720280121578420[13] = 0;
   out_5168720280121578420[14] = 0;
   out_5168720280121578420[15] = 0;
   out_5168720280121578420[16] = 1;
   out_5168720280121578420[17] = 0;
   out_5168720280121578420[18] = 0;
   out_5168720280121578420[19] = 1;
   out_5168720280121578420[20] = 0;
   out_5168720280121578420[21] = 0;
   out_5168720280121578420[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5168720280121578420[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5168720280121578420[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5168720280121578420[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5168720280121578420[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5168720280121578420[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5168720280121578420[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5168720280121578420[29] = 0;
   out_5168720280121578420[30] = 0;
   out_5168720280121578420[31] = 0;
   out_5168720280121578420[32] = 0;
   out_5168720280121578420[33] = 0;
   out_5168720280121578420[34] = 0;
   out_5168720280121578420[35] = 0;
   out_5168720280121578420[36] = 0;
   out_5168720280121578420[37] = 0;
   out_5168720280121578420[38] = 0;
   out_5168720280121578420[39] = 1;
   out_5168720280121578420[40] = 0;
   out_5168720280121578420[41] = 0;
   out_5168720280121578420[42] = 1;
   out_5168720280121578420[43] = 0;
   out_5168720280121578420[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5168720280121578420[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5168720280121578420[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5168720280121578420[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5168720280121578420[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5168720280121578420[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5168720280121578420[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5168720280121578420[51] = 0;
   out_5168720280121578420[52] = 0;
   out_5168720280121578420[53] = 0;
   out_5168720280121578420[54] = 0;
   out_5168720280121578420[55] = 0;
   out_5168720280121578420[56] = 0;
   out_5168720280121578420[57] = 0;
   out_5168720280121578420[58] = 0;
   out_5168720280121578420[59] = 0;
   out_5168720280121578420[60] = 0;
   out_5168720280121578420[61] = 0;
   out_5168720280121578420[62] = 1;
   out_5168720280121578420[63] = 0;
   out_5168720280121578420[64] = 0;
   out_5168720280121578420[65] = 1;
}
void h_12(double *state, double *unused, double *out_8211853248447486169) {
   out_8211853248447486169[0] = state[0];
   out_8211853248447486169[1] = state[1];
   out_8211853248447486169[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8982103534812672113) {
   out_8982103534812672113[0] = 1;
   out_8982103534812672113[1] = 0;
   out_8982103534812672113[2] = 0;
   out_8982103534812672113[3] = 0;
   out_8982103534812672113[4] = 0;
   out_8982103534812672113[5] = 0;
   out_8982103534812672113[6] = 0;
   out_8982103534812672113[7] = 0;
   out_8982103534812672113[8] = 0;
   out_8982103534812672113[9] = 0;
   out_8982103534812672113[10] = 0;
   out_8982103534812672113[11] = 0;
   out_8982103534812672113[12] = 0;
   out_8982103534812672113[13] = 0;
   out_8982103534812672113[14] = 0;
   out_8982103534812672113[15] = 0;
   out_8982103534812672113[16] = 0;
   out_8982103534812672113[17] = 0;
   out_8982103534812672113[18] = 0;
   out_8982103534812672113[19] = 0;
   out_8982103534812672113[20] = 0;
   out_8982103534812672113[21] = 0;
   out_8982103534812672113[22] = 0;
   out_8982103534812672113[23] = 1;
   out_8982103534812672113[24] = 0;
   out_8982103534812672113[25] = 0;
   out_8982103534812672113[26] = 0;
   out_8982103534812672113[27] = 0;
   out_8982103534812672113[28] = 0;
   out_8982103534812672113[29] = 0;
   out_8982103534812672113[30] = 0;
   out_8982103534812672113[31] = 0;
   out_8982103534812672113[32] = 0;
   out_8982103534812672113[33] = 0;
   out_8982103534812672113[34] = 0;
   out_8982103534812672113[35] = 0;
   out_8982103534812672113[36] = 0;
   out_8982103534812672113[37] = 0;
   out_8982103534812672113[38] = 0;
   out_8982103534812672113[39] = 0;
   out_8982103534812672113[40] = 0;
   out_8982103534812672113[41] = 0;
   out_8982103534812672113[42] = 0;
   out_8982103534812672113[43] = 0;
   out_8982103534812672113[44] = 0;
   out_8982103534812672113[45] = 0;
   out_8982103534812672113[46] = 1;
   out_8982103534812672113[47] = 0;
   out_8982103534812672113[48] = 0;
   out_8982103534812672113[49] = 0;
   out_8982103534812672113[50] = 0;
   out_8982103534812672113[51] = 0;
   out_8982103534812672113[52] = 0;
   out_8982103534812672113[53] = 0;
   out_8982103534812672113[54] = 0;
   out_8982103534812672113[55] = 0;
   out_8982103534812672113[56] = 0;
   out_8982103534812672113[57] = 0;
   out_8982103534812672113[58] = 0;
   out_8982103534812672113[59] = 0;
   out_8982103534812672113[60] = 0;
   out_8982103534812672113[61] = 0;
   out_8982103534812672113[62] = 0;
   out_8982103534812672113[63] = 0;
   out_8982103534812672113[64] = 0;
   out_8982103534812672113[65] = 0;
}
void h_35(double *state, double *unused, double *out_6773605908668314541) {
   out_6773605908668314541[0] = state[7];
   out_6773605908668314541[1] = state[8];
   out_6773605908668314541[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6719077506571865794) {
   out_6719077506571865794[0] = 0;
   out_6719077506571865794[1] = 0;
   out_6719077506571865794[2] = 0;
   out_6719077506571865794[3] = 0;
   out_6719077506571865794[4] = 0;
   out_6719077506571865794[5] = 0;
   out_6719077506571865794[6] = 0;
   out_6719077506571865794[7] = 1;
   out_6719077506571865794[8] = 0;
   out_6719077506571865794[9] = 0;
   out_6719077506571865794[10] = 0;
   out_6719077506571865794[11] = 0;
   out_6719077506571865794[12] = 0;
   out_6719077506571865794[13] = 0;
   out_6719077506571865794[14] = 0;
   out_6719077506571865794[15] = 0;
   out_6719077506571865794[16] = 0;
   out_6719077506571865794[17] = 0;
   out_6719077506571865794[18] = 0;
   out_6719077506571865794[19] = 0;
   out_6719077506571865794[20] = 0;
   out_6719077506571865794[21] = 0;
   out_6719077506571865794[22] = 0;
   out_6719077506571865794[23] = 0;
   out_6719077506571865794[24] = 0;
   out_6719077506571865794[25] = 0;
   out_6719077506571865794[26] = 0;
   out_6719077506571865794[27] = 0;
   out_6719077506571865794[28] = 0;
   out_6719077506571865794[29] = 0;
   out_6719077506571865794[30] = 1;
   out_6719077506571865794[31] = 0;
   out_6719077506571865794[32] = 0;
   out_6719077506571865794[33] = 0;
   out_6719077506571865794[34] = 0;
   out_6719077506571865794[35] = 0;
   out_6719077506571865794[36] = 0;
   out_6719077506571865794[37] = 0;
   out_6719077506571865794[38] = 0;
   out_6719077506571865794[39] = 0;
   out_6719077506571865794[40] = 0;
   out_6719077506571865794[41] = 0;
   out_6719077506571865794[42] = 0;
   out_6719077506571865794[43] = 0;
   out_6719077506571865794[44] = 0;
   out_6719077506571865794[45] = 0;
   out_6719077506571865794[46] = 0;
   out_6719077506571865794[47] = 0;
   out_6719077506571865794[48] = 0;
   out_6719077506571865794[49] = 0;
   out_6719077506571865794[50] = 0;
   out_6719077506571865794[51] = 0;
   out_6719077506571865794[52] = 0;
   out_6719077506571865794[53] = 1;
   out_6719077506571865794[54] = 0;
   out_6719077506571865794[55] = 0;
   out_6719077506571865794[56] = 0;
   out_6719077506571865794[57] = 0;
   out_6719077506571865794[58] = 0;
   out_6719077506571865794[59] = 0;
   out_6719077506571865794[60] = 0;
   out_6719077506571865794[61] = 0;
   out_6719077506571865794[62] = 0;
   out_6719077506571865794[63] = 0;
   out_6719077506571865794[64] = 0;
   out_6719077506571865794[65] = 0;
}
void h_32(double *state, double *unused, double *out_2286003110432992137) {
   out_2286003110432992137[0] = state[3];
   out_2286003110432992137[1] = state[4];
   out_2286003110432992137[2] = state[5];
   out_2286003110432992137[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3110609946481408624) {
   out_3110609946481408624[0] = 0;
   out_3110609946481408624[1] = 0;
   out_3110609946481408624[2] = 0;
   out_3110609946481408624[3] = 1;
   out_3110609946481408624[4] = 0;
   out_3110609946481408624[5] = 0;
   out_3110609946481408624[6] = 0;
   out_3110609946481408624[7] = 0;
   out_3110609946481408624[8] = 0;
   out_3110609946481408624[9] = 0;
   out_3110609946481408624[10] = 0;
   out_3110609946481408624[11] = 0;
   out_3110609946481408624[12] = 0;
   out_3110609946481408624[13] = 0;
   out_3110609946481408624[14] = 0;
   out_3110609946481408624[15] = 0;
   out_3110609946481408624[16] = 0;
   out_3110609946481408624[17] = 0;
   out_3110609946481408624[18] = 0;
   out_3110609946481408624[19] = 0;
   out_3110609946481408624[20] = 0;
   out_3110609946481408624[21] = 0;
   out_3110609946481408624[22] = 0;
   out_3110609946481408624[23] = 0;
   out_3110609946481408624[24] = 0;
   out_3110609946481408624[25] = 0;
   out_3110609946481408624[26] = 1;
   out_3110609946481408624[27] = 0;
   out_3110609946481408624[28] = 0;
   out_3110609946481408624[29] = 0;
   out_3110609946481408624[30] = 0;
   out_3110609946481408624[31] = 0;
   out_3110609946481408624[32] = 0;
   out_3110609946481408624[33] = 0;
   out_3110609946481408624[34] = 0;
   out_3110609946481408624[35] = 0;
   out_3110609946481408624[36] = 0;
   out_3110609946481408624[37] = 0;
   out_3110609946481408624[38] = 0;
   out_3110609946481408624[39] = 0;
   out_3110609946481408624[40] = 0;
   out_3110609946481408624[41] = 0;
   out_3110609946481408624[42] = 0;
   out_3110609946481408624[43] = 0;
   out_3110609946481408624[44] = 0;
   out_3110609946481408624[45] = 0;
   out_3110609946481408624[46] = 0;
   out_3110609946481408624[47] = 0;
   out_3110609946481408624[48] = 0;
   out_3110609946481408624[49] = 1;
   out_3110609946481408624[50] = 0;
   out_3110609946481408624[51] = 0;
   out_3110609946481408624[52] = 0;
   out_3110609946481408624[53] = 0;
   out_3110609946481408624[54] = 0;
   out_3110609946481408624[55] = 0;
   out_3110609946481408624[56] = 0;
   out_3110609946481408624[57] = 0;
   out_3110609946481408624[58] = 0;
   out_3110609946481408624[59] = 0;
   out_3110609946481408624[60] = 0;
   out_3110609946481408624[61] = 0;
   out_3110609946481408624[62] = 0;
   out_3110609946481408624[63] = 0;
   out_3110609946481408624[64] = 0;
   out_3110609946481408624[65] = 0;
   out_3110609946481408624[66] = 0;
   out_3110609946481408624[67] = 0;
   out_3110609946481408624[68] = 0;
   out_3110609946481408624[69] = 0;
   out_3110609946481408624[70] = 0;
   out_3110609946481408624[71] = 0;
   out_3110609946481408624[72] = 1;
   out_3110609946481408624[73] = 0;
   out_3110609946481408624[74] = 0;
   out_3110609946481408624[75] = 0;
   out_3110609946481408624[76] = 0;
   out_3110609946481408624[77] = 0;
   out_3110609946481408624[78] = 0;
   out_3110609946481408624[79] = 0;
   out_3110609946481408624[80] = 0;
   out_3110609946481408624[81] = 0;
   out_3110609946481408624[82] = 0;
   out_3110609946481408624[83] = 0;
   out_3110609946481408624[84] = 0;
   out_3110609946481408624[85] = 0;
   out_3110609946481408624[86] = 0;
   out_3110609946481408624[87] = 0;
}
void h_13(double *state, double *unused, double *out_2589634369594373455) {
   out_2589634369594373455[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2589634369594373455[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2589634369594373455[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7807567257818160542) {
   out_7807567257818160542[0] = 0;
   out_7807567257818160542[1] = 0;
   out_7807567257818160542[2] = 0;
   out_7807567257818160542[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7807567257818160542[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7807567257818160542[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7807567257818160542[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7807567257818160542[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7807567257818160542[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7807567257818160542[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7807567257818160542[10] = 0;
   out_7807567257818160542[11] = 0;
   out_7807567257818160542[12] = 0;
   out_7807567257818160542[13] = 0;
   out_7807567257818160542[14] = 0;
   out_7807567257818160542[15] = 0;
   out_7807567257818160542[16] = 0;
   out_7807567257818160542[17] = 0;
   out_7807567257818160542[18] = 0;
   out_7807567257818160542[19] = 0;
   out_7807567257818160542[20] = 0;
   out_7807567257818160542[21] = 0;
   out_7807567257818160542[22] = 0;
   out_7807567257818160542[23] = 0;
   out_7807567257818160542[24] = 0;
   out_7807567257818160542[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7807567257818160542[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7807567257818160542[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7807567257818160542[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7807567257818160542[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7807567257818160542[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7807567257818160542[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7807567257818160542[32] = 0;
   out_7807567257818160542[33] = 0;
   out_7807567257818160542[34] = 0;
   out_7807567257818160542[35] = 0;
   out_7807567257818160542[36] = 0;
   out_7807567257818160542[37] = 0;
   out_7807567257818160542[38] = 0;
   out_7807567257818160542[39] = 0;
   out_7807567257818160542[40] = 0;
   out_7807567257818160542[41] = 0;
   out_7807567257818160542[42] = 0;
   out_7807567257818160542[43] = 0;
   out_7807567257818160542[44] = 0;
   out_7807567257818160542[45] = 0;
   out_7807567257818160542[46] = 0;
   out_7807567257818160542[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7807567257818160542[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7807567257818160542[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7807567257818160542[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7807567257818160542[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7807567257818160542[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7807567257818160542[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7807567257818160542[54] = 0;
   out_7807567257818160542[55] = 0;
   out_7807567257818160542[56] = 0;
   out_7807567257818160542[57] = 0;
   out_7807567257818160542[58] = 0;
   out_7807567257818160542[59] = 0;
   out_7807567257818160542[60] = 0;
   out_7807567257818160542[61] = 0;
   out_7807567257818160542[62] = 0;
   out_7807567257818160542[63] = 0;
   out_7807567257818160542[64] = 0;
   out_7807567257818160542[65] = 0;
}
void h_14(double *state, double *unused, double *out_8428986639409696140) {
   out_8428986639409696140[0] = state[10];
   out_8428986639409696140[1] = state[11];
   out_8428986639409696140[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7196878011664393828) {
   out_7196878011664393828[0] = 0;
   out_7196878011664393828[1] = 0;
   out_7196878011664393828[2] = 0;
   out_7196878011664393828[3] = 0;
   out_7196878011664393828[4] = 0;
   out_7196878011664393828[5] = 0;
   out_7196878011664393828[6] = 0;
   out_7196878011664393828[7] = 0;
   out_7196878011664393828[8] = 0;
   out_7196878011664393828[9] = 0;
   out_7196878011664393828[10] = 1;
   out_7196878011664393828[11] = 0;
   out_7196878011664393828[12] = 0;
   out_7196878011664393828[13] = 0;
   out_7196878011664393828[14] = 0;
   out_7196878011664393828[15] = 0;
   out_7196878011664393828[16] = 0;
   out_7196878011664393828[17] = 0;
   out_7196878011664393828[18] = 0;
   out_7196878011664393828[19] = 0;
   out_7196878011664393828[20] = 0;
   out_7196878011664393828[21] = 0;
   out_7196878011664393828[22] = 0;
   out_7196878011664393828[23] = 0;
   out_7196878011664393828[24] = 0;
   out_7196878011664393828[25] = 0;
   out_7196878011664393828[26] = 0;
   out_7196878011664393828[27] = 0;
   out_7196878011664393828[28] = 0;
   out_7196878011664393828[29] = 0;
   out_7196878011664393828[30] = 0;
   out_7196878011664393828[31] = 0;
   out_7196878011664393828[32] = 0;
   out_7196878011664393828[33] = 1;
   out_7196878011664393828[34] = 0;
   out_7196878011664393828[35] = 0;
   out_7196878011664393828[36] = 0;
   out_7196878011664393828[37] = 0;
   out_7196878011664393828[38] = 0;
   out_7196878011664393828[39] = 0;
   out_7196878011664393828[40] = 0;
   out_7196878011664393828[41] = 0;
   out_7196878011664393828[42] = 0;
   out_7196878011664393828[43] = 0;
   out_7196878011664393828[44] = 0;
   out_7196878011664393828[45] = 0;
   out_7196878011664393828[46] = 0;
   out_7196878011664393828[47] = 0;
   out_7196878011664393828[48] = 0;
   out_7196878011664393828[49] = 0;
   out_7196878011664393828[50] = 0;
   out_7196878011664393828[51] = 0;
   out_7196878011664393828[52] = 0;
   out_7196878011664393828[53] = 0;
   out_7196878011664393828[54] = 0;
   out_7196878011664393828[55] = 0;
   out_7196878011664393828[56] = 1;
   out_7196878011664393828[57] = 0;
   out_7196878011664393828[58] = 0;
   out_7196878011664393828[59] = 0;
   out_7196878011664393828[60] = 0;
   out_7196878011664393828[61] = 0;
   out_7196878011664393828[62] = 0;
   out_7196878011664393828[63] = 0;
   out_7196878011664393828[64] = 0;
   out_7196878011664393828[65] = 0;
}
void h_33(double *state, double *unused, double *out_7186442194017979512) {
   out_7186442194017979512[0] = state[16];
   out_7186442194017979512[1] = state[17];
   out_7186442194017979512[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3568520501933008190) {
   out_3568520501933008190[0] = 0;
   out_3568520501933008190[1] = 0;
   out_3568520501933008190[2] = 0;
   out_3568520501933008190[3] = 0;
   out_3568520501933008190[4] = 0;
   out_3568520501933008190[5] = 0;
   out_3568520501933008190[6] = 0;
   out_3568520501933008190[7] = 0;
   out_3568520501933008190[8] = 0;
   out_3568520501933008190[9] = 0;
   out_3568520501933008190[10] = 0;
   out_3568520501933008190[11] = 0;
   out_3568520501933008190[12] = 0;
   out_3568520501933008190[13] = 0;
   out_3568520501933008190[14] = 0;
   out_3568520501933008190[15] = 0;
   out_3568520501933008190[16] = 1;
   out_3568520501933008190[17] = 0;
   out_3568520501933008190[18] = 0;
   out_3568520501933008190[19] = 0;
   out_3568520501933008190[20] = 0;
   out_3568520501933008190[21] = 0;
   out_3568520501933008190[22] = 0;
   out_3568520501933008190[23] = 0;
   out_3568520501933008190[24] = 0;
   out_3568520501933008190[25] = 0;
   out_3568520501933008190[26] = 0;
   out_3568520501933008190[27] = 0;
   out_3568520501933008190[28] = 0;
   out_3568520501933008190[29] = 0;
   out_3568520501933008190[30] = 0;
   out_3568520501933008190[31] = 0;
   out_3568520501933008190[32] = 0;
   out_3568520501933008190[33] = 0;
   out_3568520501933008190[34] = 0;
   out_3568520501933008190[35] = 0;
   out_3568520501933008190[36] = 0;
   out_3568520501933008190[37] = 0;
   out_3568520501933008190[38] = 0;
   out_3568520501933008190[39] = 1;
   out_3568520501933008190[40] = 0;
   out_3568520501933008190[41] = 0;
   out_3568520501933008190[42] = 0;
   out_3568520501933008190[43] = 0;
   out_3568520501933008190[44] = 0;
   out_3568520501933008190[45] = 0;
   out_3568520501933008190[46] = 0;
   out_3568520501933008190[47] = 0;
   out_3568520501933008190[48] = 0;
   out_3568520501933008190[49] = 0;
   out_3568520501933008190[50] = 0;
   out_3568520501933008190[51] = 0;
   out_3568520501933008190[52] = 0;
   out_3568520501933008190[53] = 0;
   out_3568520501933008190[54] = 0;
   out_3568520501933008190[55] = 0;
   out_3568520501933008190[56] = 0;
   out_3568520501933008190[57] = 0;
   out_3568520501933008190[58] = 0;
   out_3568520501933008190[59] = 0;
   out_3568520501933008190[60] = 0;
   out_3568520501933008190[61] = 0;
   out_3568520501933008190[62] = 1;
   out_3568520501933008190[63] = 0;
   out_3568520501933008190[64] = 0;
   out_3568520501933008190[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7367117284505064861) {
  H(in_vec, out_7367117284505064861);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_502921448557626474) {
  err_fun(nom_x, delta_x, out_502921448557626474);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4453209638238502231) {
  inv_err_fun(nom_x, true_x, out_4453209638238502231);
}
void live_H_mod_fun(double *state, double *out_6940289921718219734) {
  H_mod_fun(state, out_6940289921718219734);
}
void live_f_fun(double *state, double dt, double *out_2876716850604714813) {
  f_fun(state,  dt, out_2876716850604714813);
}
void live_F_fun(double *state, double dt, double *out_7992546097860965363) {
  F_fun(state,  dt, out_7992546097860965363);
}
void live_h_4(double *state, double *unused, double *out_7712970165784462444) {
  h_4(state, unused, out_7712970165784462444);
}
void live_H_4(double *state, double *unused, double *out_3962647126780710318) {
  H_4(state, unused, out_3962647126780710318);
}
void live_h_9(double *state, double *unused, double *out_8428986639409696140) {
  h_9(state, unused, out_8428986639409696140);
}
void live_H_9(double *state, double *unused, double *out_7196878011664393828) {
  H_9(state, unused, out_7196878011664393828);
}
void live_h_10(double *state, double *unused, double *out_7256650791036594495) {
  h_10(state, unused, out_7256650791036594495);
}
void live_H_10(double *state, double *unused, double *out_5168720280121578420) {
  H_10(state, unused, out_5168720280121578420);
}
void live_h_12(double *state, double *unused, double *out_8211853248447486169) {
  h_12(state, unused, out_8211853248447486169);
}
void live_H_12(double *state, double *unused, double *out_8982103534812672113) {
  H_12(state, unused, out_8982103534812672113);
}
void live_h_35(double *state, double *unused, double *out_6773605908668314541) {
  h_35(state, unused, out_6773605908668314541);
}
void live_H_35(double *state, double *unused, double *out_6719077506571865794) {
  H_35(state, unused, out_6719077506571865794);
}
void live_h_32(double *state, double *unused, double *out_2286003110432992137) {
  h_32(state, unused, out_2286003110432992137);
}
void live_H_32(double *state, double *unused, double *out_3110609946481408624) {
  H_32(state, unused, out_3110609946481408624);
}
void live_h_13(double *state, double *unused, double *out_2589634369594373455) {
  h_13(state, unused, out_2589634369594373455);
}
void live_H_13(double *state, double *unused, double *out_7807567257818160542) {
  H_13(state, unused, out_7807567257818160542);
}
void live_h_14(double *state, double *unused, double *out_8428986639409696140) {
  h_14(state, unused, out_8428986639409696140);
}
void live_H_14(double *state, double *unused, double *out_7196878011664393828) {
  H_14(state, unused, out_7196878011664393828);
}
void live_h_33(double *state, double *unused, double *out_7186442194017979512) {
  h_33(state, unused, out_7186442194017979512);
}
void live_H_33(double *state, double *unused, double *out_3568520501933008190) {
  H_33(state, unused, out_3568520501933008190);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
