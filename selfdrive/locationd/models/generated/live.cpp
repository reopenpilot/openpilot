#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8180120912825541323) {
   out_8180120912825541323[0] = 0;
   out_8180120912825541323[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8180120912825541323[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8180120912825541323[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8180120912825541323[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8180120912825541323[5] = -sin(in_vec[1]);
   out_8180120912825541323[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8180120912825541323[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8180120912825541323[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8180120912825541323[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8180120912825541323[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8180120912825541323[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8180120912825541323[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8180120912825541323[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8180120912825541323[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8180120912825541323[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8180120912825541323[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8180120912825541323[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2235730839387788341) {
   out_2235730839387788341[0] = delta_x[0] + nom_x[0];
   out_2235730839387788341[1] = delta_x[1] + nom_x[1];
   out_2235730839387788341[2] = delta_x[2] + nom_x[2];
   out_2235730839387788341[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2235730839387788341[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2235730839387788341[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2235730839387788341[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2235730839387788341[7] = delta_x[6] + nom_x[7];
   out_2235730839387788341[8] = delta_x[7] + nom_x[8];
   out_2235730839387788341[9] = delta_x[8] + nom_x[9];
   out_2235730839387788341[10] = delta_x[9] + nom_x[10];
   out_2235730839387788341[11] = delta_x[10] + nom_x[11];
   out_2235730839387788341[12] = delta_x[11] + nom_x[12];
   out_2235730839387788341[13] = delta_x[12] + nom_x[13];
   out_2235730839387788341[14] = delta_x[13] + nom_x[14];
   out_2235730839387788341[15] = delta_x[14] + nom_x[15];
   out_2235730839387788341[16] = delta_x[15] + nom_x[16];
   out_2235730839387788341[17] = delta_x[16] + nom_x[17];
   out_2235730839387788341[18] = delta_x[17] + nom_x[18];
   out_2235730839387788341[19] = delta_x[18] + nom_x[19];
   out_2235730839387788341[20] = delta_x[19] + nom_x[20];
   out_2235730839387788341[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_326261295306740191) {
   out_326261295306740191[0] = -nom_x[0] + true_x[0];
   out_326261295306740191[1] = -nom_x[1] + true_x[1];
   out_326261295306740191[2] = -nom_x[2] + true_x[2];
   out_326261295306740191[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_326261295306740191[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_326261295306740191[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_326261295306740191[6] = -nom_x[7] + true_x[7];
   out_326261295306740191[7] = -nom_x[8] + true_x[8];
   out_326261295306740191[8] = -nom_x[9] + true_x[9];
   out_326261295306740191[9] = -nom_x[10] + true_x[10];
   out_326261295306740191[10] = -nom_x[11] + true_x[11];
   out_326261295306740191[11] = -nom_x[12] + true_x[12];
   out_326261295306740191[12] = -nom_x[13] + true_x[13];
   out_326261295306740191[13] = -nom_x[14] + true_x[14];
   out_326261295306740191[14] = -nom_x[15] + true_x[15];
   out_326261295306740191[15] = -nom_x[16] + true_x[16];
   out_326261295306740191[16] = -nom_x[17] + true_x[17];
   out_326261295306740191[17] = -nom_x[18] + true_x[18];
   out_326261295306740191[18] = -nom_x[19] + true_x[19];
   out_326261295306740191[19] = -nom_x[20] + true_x[20];
   out_326261295306740191[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6929195951705016412) {
   out_6929195951705016412[0] = 1.0;
   out_6929195951705016412[1] = 0;
   out_6929195951705016412[2] = 0;
   out_6929195951705016412[3] = 0;
   out_6929195951705016412[4] = 0;
   out_6929195951705016412[5] = 0;
   out_6929195951705016412[6] = 0;
   out_6929195951705016412[7] = 0;
   out_6929195951705016412[8] = 0;
   out_6929195951705016412[9] = 0;
   out_6929195951705016412[10] = 0;
   out_6929195951705016412[11] = 0;
   out_6929195951705016412[12] = 0;
   out_6929195951705016412[13] = 0;
   out_6929195951705016412[14] = 0;
   out_6929195951705016412[15] = 0;
   out_6929195951705016412[16] = 0;
   out_6929195951705016412[17] = 0;
   out_6929195951705016412[18] = 0;
   out_6929195951705016412[19] = 0;
   out_6929195951705016412[20] = 0;
   out_6929195951705016412[21] = 0;
   out_6929195951705016412[22] = 1.0;
   out_6929195951705016412[23] = 0;
   out_6929195951705016412[24] = 0;
   out_6929195951705016412[25] = 0;
   out_6929195951705016412[26] = 0;
   out_6929195951705016412[27] = 0;
   out_6929195951705016412[28] = 0;
   out_6929195951705016412[29] = 0;
   out_6929195951705016412[30] = 0;
   out_6929195951705016412[31] = 0;
   out_6929195951705016412[32] = 0;
   out_6929195951705016412[33] = 0;
   out_6929195951705016412[34] = 0;
   out_6929195951705016412[35] = 0;
   out_6929195951705016412[36] = 0;
   out_6929195951705016412[37] = 0;
   out_6929195951705016412[38] = 0;
   out_6929195951705016412[39] = 0;
   out_6929195951705016412[40] = 0;
   out_6929195951705016412[41] = 0;
   out_6929195951705016412[42] = 0;
   out_6929195951705016412[43] = 0;
   out_6929195951705016412[44] = 1.0;
   out_6929195951705016412[45] = 0;
   out_6929195951705016412[46] = 0;
   out_6929195951705016412[47] = 0;
   out_6929195951705016412[48] = 0;
   out_6929195951705016412[49] = 0;
   out_6929195951705016412[50] = 0;
   out_6929195951705016412[51] = 0;
   out_6929195951705016412[52] = 0;
   out_6929195951705016412[53] = 0;
   out_6929195951705016412[54] = 0;
   out_6929195951705016412[55] = 0;
   out_6929195951705016412[56] = 0;
   out_6929195951705016412[57] = 0;
   out_6929195951705016412[58] = 0;
   out_6929195951705016412[59] = 0;
   out_6929195951705016412[60] = 0;
   out_6929195951705016412[61] = 0;
   out_6929195951705016412[62] = 0;
   out_6929195951705016412[63] = 0;
   out_6929195951705016412[64] = 0;
   out_6929195951705016412[65] = 0;
   out_6929195951705016412[66] = -0.5*state[4];
   out_6929195951705016412[67] = -0.5*state[5];
   out_6929195951705016412[68] = -0.5*state[6];
   out_6929195951705016412[69] = 0;
   out_6929195951705016412[70] = 0;
   out_6929195951705016412[71] = 0;
   out_6929195951705016412[72] = 0;
   out_6929195951705016412[73] = 0;
   out_6929195951705016412[74] = 0;
   out_6929195951705016412[75] = 0;
   out_6929195951705016412[76] = 0;
   out_6929195951705016412[77] = 0;
   out_6929195951705016412[78] = 0;
   out_6929195951705016412[79] = 0;
   out_6929195951705016412[80] = 0;
   out_6929195951705016412[81] = 0;
   out_6929195951705016412[82] = 0;
   out_6929195951705016412[83] = 0;
   out_6929195951705016412[84] = 0;
   out_6929195951705016412[85] = 0;
   out_6929195951705016412[86] = 0;
   out_6929195951705016412[87] = 0.5*state[3];
   out_6929195951705016412[88] = 0.5*state[6];
   out_6929195951705016412[89] = -0.5*state[5];
   out_6929195951705016412[90] = 0;
   out_6929195951705016412[91] = 0;
   out_6929195951705016412[92] = 0;
   out_6929195951705016412[93] = 0;
   out_6929195951705016412[94] = 0;
   out_6929195951705016412[95] = 0;
   out_6929195951705016412[96] = 0;
   out_6929195951705016412[97] = 0;
   out_6929195951705016412[98] = 0;
   out_6929195951705016412[99] = 0;
   out_6929195951705016412[100] = 0;
   out_6929195951705016412[101] = 0;
   out_6929195951705016412[102] = 0;
   out_6929195951705016412[103] = 0;
   out_6929195951705016412[104] = 0;
   out_6929195951705016412[105] = 0;
   out_6929195951705016412[106] = 0;
   out_6929195951705016412[107] = 0;
   out_6929195951705016412[108] = -0.5*state[6];
   out_6929195951705016412[109] = 0.5*state[3];
   out_6929195951705016412[110] = 0.5*state[4];
   out_6929195951705016412[111] = 0;
   out_6929195951705016412[112] = 0;
   out_6929195951705016412[113] = 0;
   out_6929195951705016412[114] = 0;
   out_6929195951705016412[115] = 0;
   out_6929195951705016412[116] = 0;
   out_6929195951705016412[117] = 0;
   out_6929195951705016412[118] = 0;
   out_6929195951705016412[119] = 0;
   out_6929195951705016412[120] = 0;
   out_6929195951705016412[121] = 0;
   out_6929195951705016412[122] = 0;
   out_6929195951705016412[123] = 0;
   out_6929195951705016412[124] = 0;
   out_6929195951705016412[125] = 0;
   out_6929195951705016412[126] = 0;
   out_6929195951705016412[127] = 0;
   out_6929195951705016412[128] = 0;
   out_6929195951705016412[129] = 0.5*state[5];
   out_6929195951705016412[130] = -0.5*state[4];
   out_6929195951705016412[131] = 0.5*state[3];
   out_6929195951705016412[132] = 0;
   out_6929195951705016412[133] = 0;
   out_6929195951705016412[134] = 0;
   out_6929195951705016412[135] = 0;
   out_6929195951705016412[136] = 0;
   out_6929195951705016412[137] = 0;
   out_6929195951705016412[138] = 0;
   out_6929195951705016412[139] = 0;
   out_6929195951705016412[140] = 0;
   out_6929195951705016412[141] = 0;
   out_6929195951705016412[142] = 0;
   out_6929195951705016412[143] = 0;
   out_6929195951705016412[144] = 0;
   out_6929195951705016412[145] = 0;
   out_6929195951705016412[146] = 0;
   out_6929195951705016412[147] = 0;
   out_6929195951705016412[148] = 0;
   out_6929195951705016412[149] = 0;
   out_6929195951705016412[150] = 0;
   out_6929195951705016412[151] = 0;
   out_6929195951705016412[152] = 0;
   out_6929195951705016412[153] = 1.0;
   out_6929195951705016412[154] = 0;
   out_6929195951705016412[155] = 0;
   out_6929195951705016412[156] = 0;
   out_6929195951705016412[157] = 0;
   out_6929195951705016412[158] = 0;
   out_6929195951705016412[159] = 0;
   out_6929195951705016412[160] = 0;
   out_6929195951705016412[161] = 0;
   out_6929195951705016412[162] = 0;
   out_6929195951705016412[163] = 0;
   out_6929195951705016412[164] = 0;
   out_6929195951705016412[165] = 0;
   out_6929195951705016412[166] = 0;
   out_6929195951705016412[167] = 0;
   out_6929195951705016412[168] = 0;
   out_6929195951705016412[169] = 0;
   out_6929195951705016412[170] = 0;
   out_6929195951705016412[171] = 0;
   out_6929195951705016412[172] = 0;
   out_6929195951705016412[173] = 0;
   out_6929195951705016412[174] = 0;
   out_6929195951705016412[175] = 1.0;
   out_6929195951705016412[176] = 0;
   out_6929195951705016412[177] = 0;
   out_6929195951705016412[178] = 0;
   out_6929195951705016412[179] = 0;
   out_6929195951705016412[180] = 0;
   out_6929195951705016412[181] = 0;
   out_6929195951705016412[182] = 0;
   out_6929195951705016412[183] = 0;
   out_6929195951705016412[184] = 0;
   out_6929195951705016412[185] = 0;
   out_6929195951705016412[186] = 0;
   out_6929195951705016412[187] = 0;
   out_6929195951705016412[188] = 0;
   out_6929195951705016412[189] = 0;
   out_6929195951705016412[190] = 0;
   out_6929195951705016412[191] = 0;
   out_6929195951705016412[192] = 0;
   out_6929195951705016412[193] = 0;
   out_6929195951705016412[194] = 0;
   out_6929195951705016412[195] = 0;
   out_6929195951705016412[196] = 0;
   out_6929195951705016412[197] = 1.0;
   out_6929195951705016412[198] = 0;
   out_6929195951705016412[199] = 0;
   out_6929195951705016412[200] = 0;
   out_6929195951705016412[201] = 0;
   out_6929195951705016412[202] = 0;
   out_6929195951705016412[203] = 0;
   out_6929195951705016412[204] = 0;
   out_6929195951705016412[205] = 0;
   out_6929195951705016412[206] = 0;
   out_6929195951705016412[207] = 0;
   out_6929195951705016412[208] = 0;
   out_6929195951705016412[209] = 0;
   out_6929195951705016412[210] = 0;
   out_6929195951705016412[211] = 0;
   out_6929195951705016412[212] = 0;
   out_6929195951705016412[213] = 0;
   out_6929195951705016412[214] = 0;
   out_6929195951705016412[215] = 0;
   out_6929195951705016412[216] = 0;
   out_6929195951705016412[217] = 0;
   out_6929195951705016412[218] = 0;
   out_6929195951705016412[219] = 1.0;
   out_6929195951705016412[220] = 0;
   out_6929195951705016412[221] = 0;
   out_6929195951705016412[222] = 0;
   out_6929195951705016412[223] = 0;
   out_6929195951705016412[224] = 0;
   out_6929195951705016412[225] = 0;
   out_6929195951705016412[226] = 0;
   out_6929195951705016412[227] = 0;
   out_6929195951705016412[228] = 0;
   out_6929195951705016412[229] = 0;
   out_6929195951705016412[230] = 0;
   out_6929195951705016412[231] = 0;
   out_6929195951705016412[232] = 0;
   out_6929195951705016412[233] = 0;
   out_6929195951705016412[234] = 0;
   out_6929195951705016412[235] = 0;
   out_6929195951705016412[236] = 0;
   out_6929195951705016412[237] = 0;
   out_6929195951705016412[238] = 0;
   out_6929195951705016412[239] = 0;
   out_6929195951705016412[240] = 0;
   out_6929195951705016412[241] = 1.0;
   out_6929195951705016412[242] = 0;
   out_6929195951705016412[243] = 0;
   out_6929195951705016412[244] = 0;
   out_6929195951705016412[245] = 0;
   out_6929195951705016412[246] = 0;
   out_6929195951705016412[247] = 0;
   out_6929195951705016412[248] = 0;
   out_6929195951705016412[249] = 0;
   out_6929195951705016412[250] = 0;
   out_6929195951705016412[251] = 0;
   out_6929195951705016412[252] = 0;
   out_6929195951705016412[253] = 0;
   out_6929195951705016412[254] = 0;
   out_6929195951705016412[255] = 0;
   out_6929195951705016412[256] = 0;
   out_6929195951705016412[257] = 0;
   out_6929195951705016412[258] = 0;
   out_6929195951705016412[259] = 0;
   out_6929195951705016412[260] = 0;
   out_6929195951705016412[261] = 0;
   out_6929195951705016412[262] = 0;
   out_6929195951705016412[263] = 1.0;
   out_6929195951705016412[264] = 0;
   out_6929195951705016412[265] = 0;
   out_6929195951705016412[266] = 0;
   out_6929195951705016412[267] = 0;
   out_6929195951705016412[268] = 0;
   out_6929195951705016412[269] = 0;
   out_6929195951705016412[270] = 0;
   out_6929195951705016412[271] = 0;
   out_6929195951705016412[272] = 0;
   out_6929195951705016412[273] = 0;
   out_6929195951705016412[274] = 0;
   out_6929195951705016412[275] = 0;
   out_6929195951705016412[276] = 0;
   out_6929195951705016412[277] = 0;
   out_6929195951705016412[278] = 0;
   out_6929195951705016412[279] = 0;
   out_6929195951705016412[280] = 0;
   out_6929195951705016412[281] = 0;
   out_6929195951705016412[282] = 0;
   out_6929195951705016412[283] = 0;
   out_6929195951705016412[284] = 0;
   out_6929195951705016412[285] = 1.0;
   out_6929195951705016412[286] = 0;
   out_6929195951705016412[287] = 0;
   out_6929195951705016412[288] = 0;
   out_6929195951705016412[289] = 0;
   out_6929195951705016412[290] = 0;
   out_6929195951705016412[291] = 0;
   out_6929195951705016412[292] = 0;
   out_6929195951705016412[293] = 0;
   out_6929195951705016412[294] = 0;
   out_6929195951705016412[295] = 0;
   out_6929195951705016412[296] = 0;
   out_6929195951705016412[297] = 0;
   out_6929195951705016412[298] = 0;
   out_6929195951705016412[299] = 0;
   out_6929195951705016412[300] = 0;
   out_6929195951705016412[301] = 0;
   out_6929195951705016412[302] = 0;
   out_6929195951705016412[303] = 0;
   out_6929195951705016412[304] = 0;
   out_6929195951705016412[305] = 0;
   out_6929195951705016412[306] = 0;
   out_6929195951705016412[307] = 1.0;
   out_6929195951705016412[308] = 0;
   out_6929195951705016412[309] = 0;
   out_6929195951705016412[310] = 0;
   out_6929195951705016412[311] = 0;
   out_6929195951705016412[312] = 0;
   out_6929195951705016412[313] = 0;
   out_6929195951705016412[314] = 0;
   out_6929195951705016412[315] = 0;
   out_6929195951705016412[316] = 0;
   out_6929195951705016412[317] = 0;
   out_6929195951705016412[318] = 0;
   out_6929195951705016412[319] = 0;
   out_6929195951705016412[320] = 0;
   out_6929195951705016412[321] = 0;
   out_6929195951705016412[322] = 0;
   out_6929195951705016412[323] = 0;
   out_6929195951705016412[324] = 0;
   out_6929195951705016412[325] = 0;
   out_6929195951705016412[326] = 0;
   out_6929195951705016412[327] = 0;
   out_6929195951705016412[328] = 0;
   out_6929195951705016412[329] = 1.0;
   out_6929195951705016412[330] = 0;
   out_6929195951705016412[331] = 0;
   out_6929195951705016412[332] = 0;
   out_6929195951705016412[333] = 0;
   out_6929195951705016412[334] = 0;
   out_6929195951705016412[335] = 0;
   out_6929195951705016412[336] = 0;
   out_6929195951705016412[337] = 0;
   out_6929195951705016412[338] = 0;
   out_6929195951705016412[339] = 0;
   out_6929195951705016412[340] = 0;
   out_6929195951705016412[341] = 0;
   out_6929195951705016412[342] = 0;
   out_6929195951705016412[343] = 0;
   out_6929195951705016412[344] = 0;
   out_6929195951705016412[345] = 0;
   out_6929195951705016412[346] = 0;
   out_6929195951705016412[347] = 0;
   out_6929195951705016412[348] = 0;
   out_6929195951705016412[349] = 0;
   out_6929195951705016412[350] = 0;
   out_6929195951705016412[351] = 1.0;
   out_6929195951705016412[352] = 0;
   out_6929195951705016412[353] = 0;
   out_6929195951705016412[354] = 0;
   out_6929195951705016412[355] = 0;
   out_6929195951705016412[356] = 0;
   out_6929195951705016412[357] = 0;
   out_6929195951705016412[358] = 0;
   out_6929195951705016412[359] = 0;
   out_6929195951705016412[360] = 0;
   out_6929195951705016412[361] = 0;
   out_6929195951705016412[362] = 0;
   out_6929195951705016412[363] = 0;
   out_6929195951705016412[364] = 0;
   out_6929195951705016412[365] = 0;
   out_6929195951705016412[366] = 0;
   out_6929195951705016412[367] = 0;
   out_6929195951705016412[368] = 0;
   out_6929195951705016412[369] = 0;
   out_6929195951705016412[370] = 0;
   out_6929195951705016412[371] = 0;
   out_6929195951705016412[372] = 0;
   out_6929195951705016412[373] = 1.0;
   out_6929195951705016412[374] = 0;
   out_6929195951705016412[375] = 0;
   out_6929195951705016412[376] = 0;
   out_6929195951705016412[377] = 0;
   out_6929195951705016412[378] = 0;
   out_6929195951705016412[379] = 0;
   out_6929195951705016412[380] = 0;
   out_6929195951705016412[381] = 0;
   out_6929195951705016412[382] = 0;
   out_6929195951705016412[383] = 0;
   out_6929195951705016412[384] = 0;
   out_6929195951705016412[385] = 0;
   out_6929195951705016412[386] = 0;
   out_6929195951705016412[387] = 0;
   out_6929195951705016412[388] = 0;
   out_6929195951705016412[389] = 0;
   out_6929195951705016412[390] = 0;
   out_6929195951705016412[391] = 0;
   out_6929195951705016412[392] = 0;
   out_6929195951705016412[393] = 0;
   out_6929195951705016412[394] = 0;
   out_6929195951705016412[395] = 1.0;
   out_6929195951705016412[396] = 0;
   out_6929195951705016412[397] = 0;
   out_6929195951705016412[398] = 0;
   out_6929195951705016412[399] = 0;
   out_6929195951705016412[400] = 0;
   out_6929195951705016412[401] = 0;
   out_6929195951705016412[402] = 0;
   out_6929195951705016412[403] = 0;
   out_6929195951705016412[404] = 0;
   out_6929195951705016412[405] = 0;
   out_6929195951705016412[406] = 0;
   out_6929195951705016412[407] = 0;
   out_6929195951705016412[408] = 0;
   out_6929195951705016412[409] = 0;
   out_6929195951705016412[410] = 0;
   out_6929195951705016412[411] = 0;
   out_6929195951705016412[412] = 0;
   out_6929195951705016412[413] = 0;
   out_6929195951705016412[414] = 0;
   out_6929195951705016412[415] = 0;
   out_6929195951705016412[416] = 0;
   out_6929195951705016412[417] = 1.0;
   out_6929195951705016412[418] = 0;
   out_6929195951705016412[419] = 0;
   out_6929195951705016412[420] = 0;
   out_6929195951705016412[421] = 0;
   out_6929195951705016412[422] = 0;
   out_6929195951705016412[423] = 0;
   out_6929195951705016412[424] = 0;
   out_6929195951705016412[425] = 0;
   out_6929195951705016412[426] = 0;
   out_6929195951705016412[427] = 0;
   out_6929195951705016412[428] = 0;
   out_6929195951705016412[429] = 0;
   out_6929195951705016412[430] = 0;
   out_6929195951705016412[431] = 0;
   out_6929195951705016412[432] = 0;
   out_6929195951705016412[433] = 0;
   out_6929195951705016412[434] = 0;
   out_6929195951705016412[435] = 0;
   out_6929195951705016412[436] = 0;
   out_6929195951705016412[437] = 0;
   out_6929195951705016412[438] = 0;
   out_6929195951705016412[439] = 1.0;
   out_6929195951705016412[440] = 0;
   out_6929195951705016412[441] = 0;
   out_6929195951705016412[442] = 0;
   out_6929195951705016412[443] = 0;
   out_6929195951705016412[444] = 0;
   out_6929195951705016412[445] = 0;
   out_6929195951705016412[446] = 0;
   out_6929195951705016412[447] = 0;
   out_6929195951705016412[448] = 0;
   out_6929195951705016412[449] = 0;
   out_6929195951705016412[450] = 0;
   out_6929195951705016412[451] = 0;
   out_6929195951705016412[452] = 0;
   out_6929195951705016412[453] = 0;
   out_6929195951705016412[454] = 0;
   out_6929195951705016412[455] = 0;
   out_6929195951705016412[456] = 0;
   out_6929195951705016412[457] = 0;
   out_6929195951705016412[458] = 0;
   out_6929195951705016412[459] = 0;
   out_6929195951705016412[460] = 0;
   out_6929195951705016412[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6351759004151022937) {
   out_6351759004151022937[0] = dt*state[7] + state[0];
   out_6351759004151022937[1] = dt*state[8] + state[1];
   out_6351759004151022937[2] = dt*state[9] + state[2];
   out_6351759004151022937[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6351759004151022937[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6351759004151022937[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6351759004151022937[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6351759004151022937[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6351759004151022937[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6351759004151022937[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6351759004151022937[10] = state[10];
   out_6351759004151022937[11] = state[11];
   out_6351759004151022937[12] = state[12];
   out_6351759004151022937[13] = state[13];
   out_6351759004151022937[14] = state[14];
   out_6351759004151022937[15] = state[15];
   out_6351759004151022937[16] = state[16];
   out_6351759004151022937[17] = state[17];
   out_6351759004151022937[18] = state[18];
   out_6351759004151022937[19] = state[19];
   out_6351759004151022937[20] = state[20];
   out_6351759004151022937[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5502934450495567892) {
   out_5502934450495567892[0] = 1;
   out_5502934450495567892[1] = 0;
   out_5502934450495567892[2] = 0;
   out_5502934450495567892[3] = 0;
   out_5502934450495567892[4] = 0;
   out_5502934450495567892[5] = 0;
   out_5502934450495567892[6] = dt;
   out_5502934450495567892[7] = 0;
   out_5502934450495567892[8] = 0;
   out_5502934450495567892[9] = 0;
   out_5502934450495567892[10] = 0;
   out_5502934450495567892[11] = 0;
   out_5502934450495567892[12] = 0;
   out_5502934450495567892[13] = 0;
   out_5502934450495567892[14] = 0;
   out_5502934450495567892[15] = 0;
   out_5502934450495567892[16] = 0;
   out_5502934450495567892[17] = 0;
   out_5502934450495567892[18] = 0;
   out_5502934450495567892[19] = 0;
   out_5502934450495567892[20] = 0;
   out_5502934450495567892[21] = 0;
   out_5502934450495567892[22] = 1;
   out_5502934450495567892[23] = 0;
   out_5502934450495567892[24] = 0;
   out_5502934450495567892[25] = 0;
   out_5502934450495567892[26] = 0;
   out_5502934450495567892[27] = 0;
   out_5502934450495567892[28] = dt;
   out_5502934450495567892[29] = 0;
   out_5502934450495567892[30] = 0;
   out_5502934450495567892[31] = 0;
   out_5502934450495567892[32] = 0;
   out_5502934450495567892[33] = 0;
   out_5502934450495567892[34] = 0;
   out_5502934450495567892[35] = 0;
   out_5502934450495567892[36] = 0;
   out_5502934450495567892[37] = 0;
   out_5502934450495567892[38] = 0;
   out_5502934450495567892[39] = 0;
   out_5502934450495567892[40] = 0;
   out_5502934450495567892[41] = 0;
   out_5502934450495567892[42] = 0;
   out_5502934450495567892[43] = 0;
   out_5502934450495567892[44] = 1;
   out_5502934450495567892[45] = 0;
   out_5502934450495567892[46] = 0;
   out_5502934450495567892[47] = 0;
   out_5502934450495567892[48] = 0;
   out_5502934450495567892[49] = 0;
   out_5502934450495567892[50] = dt;
   out_5502934450495567892[51] = 0;
   out_5502934450495567892[52] = 0;
   out_5502934450495567892[53] = 0;
   out_5502934450495567892[54] = 0;
   out_5502934450495567892[55] = 0;
   out_5502934450495567892[56] = 0;
   out_5502934450495567892[57] = 0;
   out_5502934450495567892[58] = 0;
   out_5502934450495567892[59] = 0;
   out_5502934450495567892[60] = 0;
   out_5502934450495567892[61] = 0;
   out_5502934450495567892[62] = 0;
   out_5502934450495567892[63] = 0;
   out_5502934450495567892[64] = 0;
   out_5502934450495567892[65] = 0;
   out_5502934450495567892[66] = 1;
   out_5502934450495567892[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5502934450495567892[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5502934450495567892[69] = 0;
   out_5502934450495567892[70] = 0;
   out_5502934450495567892[71] = 0;
   out_5502934450495567892[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5502934450495567892[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5502934450495567892[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5502934450495567892[75] = 0;
   out_5502934450495567892[76] = 0;
   out_5502934450495567892[77] = 0;
   out_5502934450495567892[78] = 0;
   out_5502934450495567892[79] = 0;
   out_5502934450495567892[80] = 0;
   out_5502934450495567892[81] = 0;
   out_5502934450495567892[82] = 0;
   out_5502934450495567892[83] = 0;
   out_5502934450495567892[84] = 0;
   out_5502934450495567892[85] = 0;
   out_5502934450495567892[86] = 0;
   out_5502934450495567892[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5502934450495567892[88] = 1;
   out_5502934450495567892[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5502934450495567892[90] = 0;
   out_5502934450495567892[91] = 0;
   out_5502934450495567892[92] = 0;
   out_5502934450495567892[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5502934450495567892[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5502934450495567892[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5502934450495567892[96] = 0;
   out_5502934450495567892[97] = 0;
   out_5502934450495567892[98] = 0;
   out_5502934450495567892[99] = 0;
   out_5502934450495567892[100] = 0;
   out_5502934450495567892[101] = 0;
   out_5502934450495567892[102] = 0;
   out_5502934450495567892[103] = 0;
   out_5502934450495567892[104] = 0;
   out_5502934450495567892[105] = 0;
   out_5502934450495567892[106] = 0;
   out_5502934450495567892[107] = 0;
   out_5502934450495567892[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5502934450495567892[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5502934450495567892[110] = 1;
   out_5502934450495567892[111] = 0;
   out_5502934450495567892[112] = 0;
   out_5502934450495567892[113] = 0;
   out_5502934450495567892[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5502934450495567892[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5502934450495567892[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5502934450495567892[117] = 0;
   out_5502934450495567892[118] = 0;
   out_5502934450495567892[119] = 0;
   out_5502934450495567892[120] = 0;
   out_5502934450495567892[121] = 0;
   out_5502934450495567892[122] = 0;
   out_5502934450495567892[123] = 0;
   out_5502934450495567892[124] = 0;
   out_5502934450495567892[125] = 0;
   out_5502934450495567892[126] = 0;
   out_5502934450495567892[127] = 0;
   out_5502934450495567892[128] = 0;
   out_5502934450495567892[129] = 0;
   out_5502934450495567892[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5502934450495567892[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5502934450495567892[132] = 1;
   out_5502934450495567892[133] = 0;
   out_5502934450495567892[134] = 0;
   out_5502934450495567892[135] = 0;
   out_5502934450495567892[136] = 0;
   out_5502934450495567892[137] = 0;
   out_5502934450495567892[138] = 0;
   out_5502934450495567892[139] = 0;
   out_5502934450495567892[140] = 0;
   out_5502934450495567892[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5502934450495567892[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5502934450495567892[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5502934450495567892[144] = 0;
   out_5502934450495567892[145] = 0;
   out_5502934450495567892[146] = 0;
   out_5502934450495567892[147] = 0;
   out_5502934450495567892[148] = 0;
   out_5502934450495567892[149] = 0;
   out_5502934450495567892[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5502934450495567892[151] = 0;
   out_5502934450495567892[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5502934450495567892[153] = 0;
   out_5502934450495567892[154] = 1;
   out_5502934450495567892[155] = 0;
   out_5502934450495567892[156] = 0;
   out_5502934450495567892[157] = 0;
   out_5502934450495567892[158] = 0;
   out_5502934450495567892[159] = 0;
   out_5502934450495567892[160] = 0;
   out_5502934450495567892[161] = 0;
   out_5502934450495567892[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5502934450495567892[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5502934450495567892[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5502934450495567892[165] = 0;
   out_5502934450495567892[166] = 0;
   out_5502934450495567892[167] = 0;
   out_5502934450495567892[168] = 0;
   out_5502934450495567892[169] = 0;
   out_5502934450495567892[170] = 0;
   out_5502934450495567892[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5502934450495567892[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5502934450495567892[173] = 0;
   out_5502934450495567892[174] = 0;
   out_5502934450495567892[175] = 0;
   out_5502934450495567892[176] = 1;
   out_5502934450495567892[177] = 0;
   out_5502934450495567892[178] = 0;
   out_5502934450495567892[179] = 0;
   out_5502934450495567892[180] = 0;
   out_5502934450495567892[181] = 0;
   out_5502934450495567892[182] = 0;
   out_5502934450495567892[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5502934450495567892[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5502934450495567892[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5502934450495567892[186] = 0;
   out_5502934450495567892[187] = 0;
   out_5502934450495567892[188] = 0;
   out_5502934450495567892[189] = 0;
   out_5502934450495567892[190] = 0;
   out_5502934450495567892[191] = 0;
   out_5502934450495567892[192] = 0;
   out_5502934450495567892[193] = 0;
   out_5502934450495567892[194] = 0;
   out_5502934450495567892[195] = 0;
   out_5502934450495567892[196] = 0;
   out_5502934450495567892[197] = 0;
   out_5502934450495567892[198] = 1;
   out_5502934450495567892[199] = 0;
   out_5502934450495567892[200] = 0;
   out_5502934450495567892[201] = 0;
   out_5502934450495567892[202] = 0;
   out_5502934450495567892[203] = 0;
   out_5502934450495567892[204] = 0;
   out_5502934450495567892[205] = 0;
   out_5502934450495567892[206] = 0;
   out_5502934450495567892[207] = 0;
   out_5502934450495567892[208] = 0;
   out_5502934450495567892[209] = 0;
   out_5502934450495567892[210] = 0;
   out_5502934450495567892[211] = 0;
   out_5502934450495567892[212] = 0;
   out_5502934450495567892[213] = 0;
   out_5502934450495567892[214] = 0;
   out_5502934450495567892[215] = 0;
   out_5502934450495567892[216] = 0;
   out_5502934450495567892[217] = 0;
   out_5502934450495567892[218] = 0;
   out_5502934450495567892[219] = 0;
   out_5502934450495567892[220] = 1;
   out_5502934450495567892[221] = 0;
   out_5502934450495567892[222] = 0;
   out_5502934450495567892[223] = 0;
   out_5502934450495567892[224] = 0;
   out_5502934450495567892[225] = 0;
   out_5502934450495567892[226] = 0;
   out_5502934450495567892[227] = 0;
   out_5502934450495567892[228] = 0;
   out_5502934450495567892[229] = 0;
   out_5502934450495567892[230] = 0;
   out_5502934450495567892[231] = 0;
   out_5502934450495567892[232] = 0;
   out_5502934450495567892[233] = 0;
   out_5502934450495567892[234] = 0;
   out_5502934450495567892[235] = 0;
   out_5502934450495567892[236] = 0;
   out_5502934450495567892[237] = 0;
   out_5502934450495567892[238] = 0;
   out_5502934450495567892[239] = 0;
   out_5502934450495567892[240] = 0;
   out_5502934450495567892[241] = 0;
   out_5502934450495567892[242] = 1;
   out_5502934450495567892[243] = 0;
   out_5502934450495567892[244] = 0;
   out_5502934450495567892[245] = 0;
   out_5502934450495567892[246] = 0;
   out_5502934450495567892[247] = 0;
   out_5502934450495567892[248] = 0;
   out_5502934450495567892[249] = 0;
   out_5502934450495567892[250] = 0;
   out_5502934450495567892[251] = 0;
   out_5502934450495567892[252] = 0;
   out_5502934450495567892[253] = 0;
   out_5502934450495567892[254] = 0;
   out_5502934450495567892[255] = 0;
   out_5502934450495567892[256] = 0;
   out_5502934450495567892[257] = 0;
   out_5502934450495567892[258] = 0;
   out_5502934450495567892[259] = 0;
   out_5502934450495567892[260] = 0;
   out_5502934450495567892[261] = 0;
   out_5502934450495567892[262] = 0;
   out_5502934450495567892[263] = 0;
   out_5502934450495567892[264] = 1;
   out_5502934450495567892[265] = 0;
   out_5502934450495567892[266] = 0;
   out_5502934450495567892[267] = 0;
   out_5502934450495567892[268] = 0;
   out_5502934450495567892[269] = 0;
   out_5502934450495567892[270] = 0;
   out_5502934450495567892[271] = 0;
   out_5502934450495567892[272] = 0;
   out_5502934450495567892[273] = 0;
   out_5502934450495567892[274] = 0;
   out_5502934450495567892[275] = 0;
   out_5502934450495567892[276] = 0;
   out_5502934450495567892[277] = 0;
   out_5502934450495567892[278] = 0;
   out_5502934450495567892[279] = 0;
   out_5502934450495567892[280] = 0;
   out_5502934450495567892[281] = 0;
   out_5502934450495567892[282] = 0;
   out_5502934450495567892[283] = 0;
   out_5502934450495567892[284] = 0;
   out_5502934450495567892[285] = 0;
   out_5502934450495567892[286] = 1;
   out_5502934450495567892[287] = 0;
   out_5502934450495567892[288] = 0;
   out_5502934450495567892[289] = 0;
   out_5502934450495567892[290] = 0;
   out_5502934450495567892[291] = 0;
   out_5502934450495567892[292] = 0;
   out_5502934450495567892[293] = 0;
   out_5502934450495567892[294] = 0;
   out_5502934450495567892[295] = 0;
   out_5502934450495567892[296] = 0;
   out_5502934450495567892[297] = 0;
   out_5502934450495567892[298] = 0;
   out_5502934450495567892[299] = 0;
   out_5502934450495567892[300] = 0;
   out_5502934450495567892[301] = 0;
   out_5502934450495567892[302] = 0;
   out_5502934450495567892[303] = 0;
   out_5502934450495567892[304] = 0;
   out_5502934450495567892[305] = 0;
   out_5502934450495567892[306] = 0;
   out_5502934450495567892[307] = 0;
   out_5502934450495567892[308] = 1;
   out_5502934450495567892[309] = 0;
   out_5502934450495567892[310] = 0;
   out_5502934450495567892[311] = 0;
   out_5502934450495567892[312] = 0;
   out_5502934450495567892[313] = 0;
   out_5502934450495567892[314] = 0;
   out_5502934450495567892[315] = 0;
   out_5502934450495567892[316] = 0;
   out_5502934450495567892[317] = 0;
   out_5502934450495567892[318] = 0;
   out_5502934450495567892[319] = 0;
   out_5502934450495567892[320] = 0;
   out_5502934450495567892[321] = 0;
   out_5502934450495567892[322] = 0;
   out_5502934450495567892[323] = 0;
   out_5502934450495567892[324] = 0;
   out_5502934450495567892[325] = 0;
   out_5502934450495567892[326] = 0;
   out_5502934450495567892[327] = 0;
   out_5502934450495567892[328] = 0;
   out_5502934450495567892[329] = 0;
   out_5502934450495567892[330] = 1;
   out_5502934450495567892[331] = 0;
   out_5502934450495567892[332] = 0;
   out_5502934450495567892[333] = 0;
   out_5502934450495567892[334] = 0;
   out_5502934450495567892[335] = 0;
   out_5502934450495567892[336] = 0;
   out_5502934450495567892[337] = 0;
   out_5502934450495567892[338] = 0;
   out_5502934450495567892[339] = 0;
   out_5502934450495567892[340] = 0;
   out_5502934450495567892[341] = 0;
   out_5502934450495567892[342] = 0;
   out_5502934450495567892[343] = 0;
   out_5502934450495567892[344] = 0;
   out_5502934450495567892[345] = 0;
   out_5502934450495567892[346] = 0;
   out_5502934450495567892[347] = 0;
   out_5502934450495567892[348] = 0;
   out_5502934450495567892[349] = 0;
   out_5502934450495567892[350] = 0;
   out_5502934450495567892[351] = 0;
   out_5502934450495567892[352] = 1;
   out_5502934450495567892[353] = 0;
   out_5502934450495567892[354] = 0;
   out_5502934450495567892[355] = 0;
   out_5502934450495567892[356] = 0;
   out_5502934450495567892[357] = 0;
   out_5502934450495567892[358] = 0;
   out_5502934450495567892[359] = 0;
   out_5502934450495567892[360] = 0;
   out_5502934450495567892[361] = 0;
   out_5502934450495567892[362] = 0;
   out_5502934450495567892[363] = 0;
   out_5502934450495567892[364] = 0;
   out_5502934450495567892[365] = 0;
   out_5502934450495567892[366] = 0;
   out_5502934450495567892[367] = 0;
   out_5502934450495567892[368] = 0;
   out_5502934450495567892[369] = 0;
   out_5502934450495567892[370] = 0;
   out_5502934450495567892[371] = 0;
   out_5502934450495567892[372] = 0;
   out_5502934450495567892[373] = 0;
   out_5502934450495567892[374] = 1;
   out_5502934450495567892[375] = 0;
   out_5502934450495567892[376] = 0;
   out_5502934450495567892[377] = 0;
   out_5502934450495567892[378] = 0;
   out_5502934450495567892[379] = 0;
   out_5502934450495567892[380] = 0;
   out_5502934450495567892[381] = 0;
   out_5502934450495567892[382] = 0;
   out_5502934450495567892[383] = 0;
   out_5502934450495567892[384] = 0;
   out_5502934450495567892[385] = 0;
   out_5502934450495567892[386] = 0;
   out_5502934450495567892[387] = 0;
   out_5502934450495567892[388] = 0;
   out_5502934450495567892[389] = 0;
   out_5502934450495567892[390] = 0;
   out_5502934450495567892[391] = 0;
   out_5502934450495567892[392] = 0;
   out_5502934450495567892[393] = 0;
   out_5502934450495567892[394] = 0;
   out_5502934450495567892[395] = 0;
   out_5502934450495567892[396] = 1;
   out_5502934450495567892[397] = 0;
   out_5502934450495567892[398] = 0;
   out_5502934450495567892[399] = 0;
   out_5502934450495567892[400] = 0;
   out_5502934450495567892[401] = 0;
   out_5502934450495567892[402] = 0;
   out_5502934450495567892[403] = 0;
   out_5502934450495567892[404] = 0;
   out_5502934450495567892[405] = 0;
   out_5502934450495567892[406] = 0;
   out_5502934450495567892[407] = 0;
   out_5502934450495567892[408] = 0;
   out_5502934450495567892[409] = 0;
   out_5502934450495567892[410] = 0;
   out_5502934450495567892[411] = 0;
   out_5502934450495567892[412] = 0;
   out_5502934450495567892[413] = 0;
   out_5502934450495567892[414] = 0;
   out_5502934450495567892[415] = 0;
   out_5502934450495567892[416] = 0;
   out_5502934450495567892[417] = 0;
   out_5502934450495567892[418] = 1;
   out_5502934450495567892[419] = 0;
   out_5502934450495567892[420] = 0;
   out_5502934450495567892[421] = 0;
   out_5502934450495567892[422] = 0;
   out_5502934450495567892[423] = 0;
   out_5502934450495567892[424] = 0;
   out_5502934450495567892[425] = 0;
   out_5502934450495567892[426] = 0;
   out_5502934450495567892[427] = 0;
   out_5502934450495567892[428] = 0;
   out_5502934450495567892[429] = 0;
   out_5502934450495567892[430] = 0;
   out_5502934450495567892[431] = 0;
   out_5502934450495567892[432] = 0;
   out_5502934450495567892[433] = 0;
   out_5502934450495567892[434] = 0;
   out_5502934450495567892[435] = 0;
   out_5502934450495567892[436] = 0;
   out_5502934450495567892[437] = 0;
   out_5502934450495567892[438] = 0;
   out_5502934450495567892[439] = 0;
   out_5502934450495567892[440] = 1;
}
void h_4(double *state, double *unused, double *out_4717029163149753550) {
   out_4717029163149753550[0] = state[10] + state[13];
   out_4717029163149753550[1] = state[11] + state[14];
   out_4717029163149753550[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5389543225214088268) {
   out_5389543225214088268[0] = 0;
   out_5389543225214088268[1] = 0;
   out_5389543225214088268[2] = 0;
   out_5389543225214088268[3] = 0;
   out_5389543225214088268[4] = 0;
   out_5389543225214088268[5] = 0;
   out_5389543225214088268[6] = 0;
   out_5389543225214088268[7] = 0;
   out_5389543225214088268[8] = 0;
   out_5389543225214088268[9] = 0;
   out_5389543225214088268[10] = 1;
   out_5389543225214088268[11] = 0;
   out_5389543225214088268[12] = 0;
   out_5389543225214088268[13] = 1;
   out_5389543225214088268[14] = 0;
   out_5389543225214088268[15] = 0;
   out_5389543225214088268[16] = 0;
   out_5389543225214088268[17] = 0;
   out_5389543225214088268[18] = 0;
   out_5389543225214088268[19] = 0;
   out_5389543225214088268[20] = 0;
   out_5389543225214088268[21] = 0;
   out_5389543225214088268[22] = 0;
   out_5389543225214088268[23] = 0;
   out_5389543225214088268[24] = 0;
   out_5389543225214088268[25] = 0;
   out_5389543225214088268[26] = 0;
   out_5389543225214088268[27] = 0;
   out_5389543225214088268[28] = 0;
   out_5389543225214088268[29] = 0;
   out_5389543225214088268[30] = 0;
   out_5389543225214088268[31] = 0;
   out_5389543225214088268[32] = 0;
   out_5389543225214088268[33] = 1;
   out_5389543225214088268[34] = 0;
   out_5389543225214088268[35] = 0;
   out_5389543225214088268[36] = 1;
   out_5389543225214088268[37] = 0;
   out_5389543225214088268[38] = 0;
   out_5389543225214088268[39] = 0;
   out_5389543225214088268[40] = 0;
   out_5389543225214088268[41] = 0;
   out_5389543225214088268[42] = 0;
   out_5389543225214088268[43] = 0;
   out_5389543225214088268[44] = 0;
   out_5389543225214088268[45] = 0;
   out_5389543225214088268[46] = 0;
   out_5389543225214088268[47] = 0;
   out_5389543225214088268[48] = 0;
   out_5389543225214088268[49] = 0;
   out_5389543225214088268[50] = 0;
   out_5389543225214088268[51] = 0;
   out_5389543225214088268[52] = 0;
   out_5389543225214088268[53] = 0;
   out_5389543225214088268[54] = 0;
   out_5389543225214088268[55] = 0;
   out_5389543225214088268[56] = 1;
   out_5389543225214088268[57] = 0;
   out_5389543225214088268[58] = 0;
   out_5389543225214088268[59] = 1;
   out_5389543225214088268[60] = 0;
   out_5389543225214088268[61] = 0;
   out_5389543225214088268[62] = 0;
   out_5389543225214088268[63] = 0;
   out_5389543225214088268[64] = 0;
   out_5389543225214088268[65] = 0;
}
void h_9(double *state, double *unused, double *out_4046528061737671226) {
   out_4046528061737671226[0] = state[10];
   out_4046528061737671226[1] = state[11];
   out_4046528061737671226[2] = state[12];
}
void H_9(double *state, double *unused, double *out_5769981913231015878) {
   out_5769981913231015878[0] = 0;
   out_5769981913231015878[1] = 0;
   out_5769981913231015878[2] = 0;
   out_5769981913231015878[3] = 0;
   out_5769981913231015878[4] = 0;
   out_5769981913231015878[5] = 0;
   out_5769981913231015878[6] = 0;
   out_5769981913231015878[7] = 0;
   out_5769981913231015878[8] = 0;
   out_5769981913231015878[9] = 0;
   out_5769981913231015878[10] = 1;
   out_5769981913231015878[11] = 0;
   out_5769981913231015878[12] = 0;
   out_5769981913231015878[13] = 0;
   out_5769981913231015878[14] = 0;
   out_5769981913231015878[15] = 0;
   out_5769981913231015878[16] = 0;
   out_5769981913231015878[17] = 0;
   out_5769981913231015878[18] = 0;
   out_5769981913231015878[19] = 0;
   out_5769981913231015878[20] = 0;
   out_5769981913231015878[21] = 0;
   out_5769981913231015878[22] = 0;
   out_5769981913231015878[23] = 0;
   out_5769981913231015878[24] = 0;
   out_5769981913231015878[25] = 0;
   out_5769981913231015878[26] = 0;
   out_5769981913231015878[27] = 0;
   out_5769981913231015878[28] = 0;
   out_5769981913231015878[29] = 0;
   out_5769981913231015878[30] = 0;
   out_5769981913231015878[31] = 0;
   out_5769981913231015878[32] = 0;
   out_5769981913231015878[33] = 1;
   out_5769981913231015878[34] = 0;
   out_5769981913231015878[35] = 0;
   out_5769981913231015878[36] = 0;
   out_5769981913231015878[37] = 0;
   out_5769981913231015878[38] = 0;
   out_5769981913231015878[39] = 0;
   out_5769981913231015878[40] = 0;
   out_5769981913231015878[41] = 0;
   out_5769981913231015878[42] = 0;
   out_5769981913231015878[43] = 0;
   out_5769981913231015878[44] = 0;
   out_5769981913231015878[45] = 0;
   out_5769981913231015878[46] = 0;
   out_5769981913231015878[47] = 0;
   out_5769981913231015878[48] = 0;
   out_5769981913231015878[49] = 0;
   out_5769981913231015878[50] = 0;
   out_5769981913231015878[51] = 0;
   out_5769981913231015878[52] = 0;
   out_5769981913231015878[53] = 0;
   out_5769981913231015878[54] = 0;
   out_5769981913231015878[55] = 0;
   out_5769981913231015878[56] = 1;
   out_5769981913231015878[57] = 0;
   out_5769981913231015878[58] = 0;
   out_5769981913231015878[59] = 0;
   out_5769981913231015878[60] = 0;
   out_5769981913231015878[61] = 0;
   out_5769981913231015878[62] = 0;
   out_5769981913231015878[63] = 0;
   out_5769981913231015878[64] = 0;
   out_5769981913231015878[65] = 0;
}
void h_10(double *state, double *unused, double *out_2766968380519037456) {
   out_2766968380519037456[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2766968380519037456[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2766968380519037456[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5999283407405275549) {
   out_5999283407405275549[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5999283407405275549[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5999283407405275549[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5999283407405275549[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5999283407405275549[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5999283407405275549[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5999283407405275549[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5999283407405275549[7] = 0;
   out_5999283407405275549[8] = 0;
   out_5999283407405275549[9] = 0;
   out_5999283407405275549[10] = 0;
   out_5999283407405275549[11] = 0;
   out_5999283407405275549[12] = 0;
   out_5999283407405275549[13] = 0;
   out_5999283407405275549[14] = 0;
   out_5999283407405275549[15] = 0;
   out_5999283407405275549[16] = 1;
   out_5999283407405275549[17] = 0;
   out_5999283407405275549[18] = 0;
   out_5999283407405275549[19] = 1;
   out_5999283407405275549[20] = 0;
   out_5999283407405275549[21] = 0;
   out_5999283407405275549[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5999283407405275549[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5999283407405275549[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5999283407405275549[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5999283407405275549[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5999283407405275549[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5999283407405275549[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5999283407405275549[29] = 0;
   out_5999283407405275549[30] = 0;
   out_5999283407405275549[31] = 0;
   out_5999283407405275549[32] = 0;
   out_5999283407405275549[33] = 0;
   out_5999283407405275549[34] = 0;
   out_5999283407405275549[35] = 0;
   out_5999283407405275549[36] = 0;
   out_5999283407405275549[37] = 0;
   out_5999283407405275549[38] = 0;
   out_5999283407405275549[39] = 1;
   out_5999283407405275549[40] = 0;
   out_5999283407405275549[41] = 0;
   out_5999283407405275549[42] = 1;
   out_5999283407405275549[43] = 0;
   out_5999283407405275549[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5999283407405275549[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5999283407405275549[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5999283407405275549[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5999283407405275549[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5999283407405275549[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5999283407405275549[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5999283407405275549[51] = 0;
   out_5999283407405275549[52] = 0;
   out_5999283407405275549[53] = 0;
   out_5999283407405275549[54] = 0;
   out_5999283407405275549[55] = 0;
   out_5999283407405275549[56] = 0;
   out_5999283407405275549[57] = 0;
   out_5999283407405275549[58] = 0;
   out_5999283407405275549[59] = 0;
   out_5999283407405275549[60] = 0;
   out_5999283407405275549[61] = 0;
   out_5999283407405275549[62] = 1;
   out_5999283407405275549[63] = 0;
   out_5999283407405275549[64] = 0;
   out_5999283407405275549[65] = 1;
}
void h_12(double *state, double *unused, double *out_5957037225820983386) {
   out_5957037225820983386[0] = state[0];
   out_5957037225820983386[1] = state[1];
   out_5957037225820983386[2] = state[2];
}
void H_12(double *state, double *unused, double *out_991715151828644728) {
   out_991715151828644728[0] = 1;
   out_991715151828644728[1] = 0;
   out_991715151828644728[2] = 0;
   out_991715151828644728[3] = 0;
   out_991715151828644728[4] = 0;
   out_991715151828644728[5] = 0;
   out_991715151828644728[6] = 0;
   out_991715151828644728[7] = 0;
   out_991715151828644728[8] = 0;
   out_991715151828644728[9] = 0;
   out_991715151828644728[10] = 0;
   out_991715151828644728[11] = 0;
   out_991715151828644728[12] = 0;
   out_991715151828644728[13] = 0;
   out_991715151828644728[14] = 0;
   out_991715151828644728[15] = 0;
   out_991715151828644728[16] = 0;
   out_991715151828644728[17] = 0;
   out_991715151828644728[18] = 0;
   out_991715151828644728[19] = 0;
   out_991715151828644728[20] = 0;
   out_991715151828644728[21] = 0;
   out_991715151828644728[22] = 0;
   out_991715151828644728[23] = 1;
   out_991715151828644728[24] = 0;
   out_991715151828644728[25] = 0;
   out_991715151828644728[26] = 0;
   out_991715151828644728[27] = 0;
   out_991715151828644728[28] = 0;
   out_991715151828644728[29] = 0;
   out_991715151828644728[30] = 0;
   out_991715151828644728[31] = 0;
   out_991715151828644728[32] = 0;
   out_991715151828644728[33] = 0;
   out_991715151828644728[34] = 0;
   out_991715151828644728[35] = 0;
   out_991715151828644728[36] = 0;
   out_991715151828644728[37] = 0;
   out_991715151828644728[38] = 0;
   out_991715151828644728[39] = 0;
   out_991715151828644728[40] = 0;
   out_991715151828644728[41] = 0;
   out_991715151828644728[42] = 0;
   out_991715151828644728[43] = 0;
   out_991715151828644728[44] = 0;
   out_991715151828644728[45] = 0;
   out_991715151828644728[46] = 1;
   out_991715151828644728[47] = 0;
   out_991715151828644728[48] = 0;
   out_991715151828644728[49] = 0;
   out_991715151828644728[50] = 0;
   out_991715151828644728[51] = 0;
   out_991715151828644728[52] = 0;
   out_991715151828644728[53] = 0;
   out_991715151828644728[54] = 0;
   out_991715151828644728[55] = 0;
   out_991715151828644728[56] = 0;
   out_991715151828644728[57] = 0;
   out_991715151828644728[58] = 0;
   out_991715151828644728[59] = 0;
   out_991715151828644728[60] = 0;
   out_991715151828644728[61] = 0;
   out_991715151828644728[62] = 0;
   out_991715151828644728[63] = 0;
   out_991715151828644728[64] = 0;
   out_991715151828644728[65] = 0;
}
void h_35(double *state, double *unused, double *out_214788844796679554) {
   out_214788844796679554[0] = state[7];
   out_214788844796679554[1] = state[8];
   out_214788844796679554[2] = state[9];
}
void H_35(double *state, double *unused, double *out_5292181408138487844) {
   out_5292181408138487844[0] = 0;
   out_5292181408138487844[1] = 0;
   out_5292181408138487844[2] = 0;
   out_5292181408138487844[3] = 0;
   out_5292181408138487844[4] = 0;
   out_5292181408138487844[5] = 0;
   out_5292181408138487844[6] = 0;
   out_5292181408138487844[7] = 1;
   out_5292181408138487844[8] = 0;
   out_5292181408138487844[9] = 0;
   out_5292181408138487844[10] = 0;
   out_5292181408138487844[11] = 0;
   out_5292181408138487844[12] = 0;
   out_5292181408138487844[13] = 0;
   out_5292181408138487844[14] = 0;
   out_5292181408138487844[15] = 0;
   out_5292181408138487844[16] = 0;
   out_5292181408138487844[17] = 0;
   out_5292181408138487844[18] = 0;
   out_5292181408138487844[19] = 0;
   out_5292181408138487844[20] = 0;
   out_5292181408138487844[21] = 0;
   out_5292181408138487844[22] = 0;
   out_5292181408138487844[23] = 0;
   out_5292181408138487844[24] = 0;
   out_5292181408138487844[25] = 0;
   out_5292181408138487844[26] = 0;
   out_5292181408138487844[27] = 0;
   out_5292181408138487844[28] = 0;
   out_5292181408138487844[29] = 0;
   out_5292181408138487844[30] = 1;
   out_5292181408138487844[31] = 0;
   out_5292181408138487844[32] = 0;
   out_5292181408138487844[33] = 0;
   out_5292181408138487844[34] = 0;
   out_5292181408138487844[35] = 0;
   out_5292181408138487844[36] = 0;
   out_5292181408138487844[37] = 0;
   out_5292181408138487844[38] = 0;
   out_5292181408138487844[39] = 0;
   out_5292181408138487844[40] = 0;
   out_5292181408138487844[41] = 0;
   out_5292181408138487844[42] = 0;
   out_5292181408138487844[43] = 0;
   out_5292181408138487844[44] = 0;
   out_5292181408138487844[45] = 0;
   out_5292181408138487844[46] = 0;
   out_5292181408138487844[47] = 0;
   out_5292181408138487844[48] = 0;
   out_5292181408138487844[49] = 0;
   out_5292181408138487844[50] = 0;
   out_5292181408138487844[51] = 0;
   out_5292181408138487844[52] = 0;
   out_5292181408138487844[53] = 1;
   out_5292181408138487844[54] = 0;
   out_5292181408138487844[55] = 0;
   out_5292181408138487844[56] = 0;
   out_5292181408138487844[57] = 0;
   out_5292181408138487844[58] = 0;
   out_5292181408138487844[59] = 0;
   out_5292181408138487844[60] = 0;
   out_5292181408138487844[61] = 0;
   out_5292181408138487844[62] = 0;
   out_5292181408138487844[63] = 0;
   out_5292181408138487844[64] = 0;
   out_5292181408138487844[65] = 0;
}
void h_32(double *state, double *unused, double *out_3380641476992712791) {
   out_3380641476992712791[0] = state[3];
   out_3380641476992712791[1] = state[4];
   out_3380641476992712791[2] = state[5];
   out_3380641476992712791[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8887370067527436113) {
   out_8887370067527436113[0] = 0;
   out_8887370067527436113[1] = 0;
   out_8887370067527436113[2] = 0;
   out_8887370067527436113[3] = 1;
   out_8887370067527436113[4] = 0;
   out_8887370067527436113[5] = 0;
   out_8887370067527436113[6] = 0;
   out_8887370067527436113[7] = 0;
   out_8887370067527436113[8] = 0;
   out_8887370067527436113[9] = 0;
   out_8887370067527436113[10] = 0;
   out_8887370067527436113[11] = 0;
   out_8887370067527436113[12] = 0;
   out_8887370067527436113[13] = 0;
   out_8887370067527436113[14] = 0;
   out_8887370067527436113[15] = 0;
   out_8887370067527436113[16] = 0;
   out_8887370067527436113[17] = 0;
   out_8887370067527436113[18] = 0;
   out_8887370067527436113[19] = 0;
   out_8887370067527436113[20] = 0;
   out_8887370067527436113[21] = 0;
   out_8887370067527436113[22] = 0;
   out_8887370067527436113[23] = 0;
   out_8887370067527436113[24] = 0;
   out_8887370067527436113[25] = 0;
   out_8887370067527436113[26] = 1;
   out_8887370067527436113[27] = 0;
   out_8887370067527436113[28] = 0;
   out_8887370067527436113[29] = 0;
   out_8887370067527436113[30] = 0;
   out_8887370067527436113[31] = 0;
   out_8887370067527436113[32] = 0;
   out_8887370067527436113[33] = 0;
   out_8887370067527436113[34] = 0;
   out_8887370067527436113[35] = 0;
   out_8887370067527436113[36] = 0;
   out_8887370067527436113[37] = 0;
   out_8887370067527436113[38] = 0;
   out_8887370067527436113[39] = 0;
   out_8887370067527436113[40] = 0;
   out_8887370067527436113[41] = 0;
   out_8887370067527436113[42] = 0;
   out_8887370067527436113[43] = 0;
   out_8887370067527436113[44] = 0;
   out_8887370067527436113[45] = 0;
   out_8887370067527436113[46] = 0;
   out_8887370067527436113[47] = 0;
   out_8887370067527436113[48] = 0;
   out_8887370067527436113[49] = 1;
   out_8887370067527436113[50] = 0;
   out_8887370067527436113[51] = 0;
   out_8887370067527436113[52] = 0;
   out_8887370067527436113[53] = 0;
   out_8887370067527436113[54] = 0;
   out_8887370067527436113[55] = 0;
   out_8887370067527436113[56] = 0;
   out_8887370067527436113[57] = 0;
   out_8887370067527436113[58] = 0;
   out_8887370067527436113[59] = 0;
   out_8887370067527436113[60] = 0;
   out_8887370067527436113[61] = 0;
   out_8887370067527436113[62] = 0;
   out_8887370067527436113[63] = 0;
   out_8887370067527436113[64] = 0;
   out_8887370067527436113[65] = 0;
   out_8887370067527436113[66] = 0;
   out_8887370067527436113[67] = 0;
   out_8887370067527436113[68] = 0;
   out_8887370067527436113[69] = 0;
   out_8887370067527436113[70] = 0;
   out_8887370067527436113[71] = 0;
   out_8887370067527436113[72] = 1;
   out_8887370067527436113[73] = 0;
   out_8887370067527436113[74] = 0;
   out_8887370067527436113[75] = 0;
   out_8887370067527436113[76] = 0;
   out_8887370067527436113[77] = 0;
   out_8887370067527436113[78] = 0;
   out_8887370067527436113[79] = 0;
   out_8887370067527436113[80] = 0;
   out_8887370067527436113[81] = 0;
   out_8887370067527436113[82] = 0;
   out_8887370067527436113[83] = 0;
   out_8887370067527436113[84] = 0;
   out_8887370067527436113[85] = 0;
   out_8887370067527436113[86] = 0;
   out_8887370067527436113[87] = 0;
}
void h_13(double *state, double *unused, double *out_6498926561649141984) {
   out_6498926561649141984[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6498926561649141984[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6498926561649141984[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6226855880410704586) {
   out_6226855880410704586[0] = 0;
   out_6226855880410704586[1] = 0;
   out_6226855880410704586[2] = 0;
   out_6226855880410704586[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6226855880410704586[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6226855880410704586[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6226855880410704586[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6226855880410704586[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6226855880410704586[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6226855880410704586[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6226855880410704586[10] = 0;
   out_6226855880410704586[11] = 0;
   out_6226855880410704586[12] = 0;
   out_6226855880410704586[13] = 0;
   out_6226855880410704586[14] = 0;
   out_6226855880410704586[15] = 0;
   out_6226855880410704586[16] = 0;
   out_6226855880410704586[17] = 0;
   out_6226855880410704586[18] = 0;
   out_6226855880410704586[19] = 0;
   out_6226855880410704586[20] = 0;
   out_6226855880410704586[21] = 0;
   out_6226855880410704586[22] = 0;
   out_6226855880410704586[23] = 0;
   out_6226855880410704586[24] = 0;
   out_6226855880410704586[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6226855880410704586[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6226855880410704586[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6226855880410704586[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6226855880410704586[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6226855880410704586[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6226855880410704586[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6226855880410704586[32] = 0;
   out_6226855880410704586[33] = 0;
   out_6226855880410704586[34] = 0;
   out_6226855880410704586[35] = 0;
   out_6226855880410704586[36] = 0;
   out_6226855880410704586[37] = 0;
   out_6226855880410704586[38] = 0;
   out_6226855880410704586[39] = 0;
   out_6226855880410704586[40] = 0;
   out_6226855880410704586[41] = 0;
   out_6226855880410704586[42] = 0;
   out_6226855880410704586[43] = 0;
   out_6226855880410704586[44] = 0;
   out_6226855880410704586[45] = 0;
   out_6226855880410704586[46] = 0;
   out_6226855880410704586[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6226855880410704586[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6226855880410704586[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6226855880410704586[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6226855880410704586[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6226855880410704586[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6226855880410704586[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6226855880410704586[54] = 0;
   out_6226855880410704586[55] = 0;
   out_6226855880410704586[56] = 0;
   out_6226855880410704586[57] = 0;
   out_6226855880410704586[58] = 0;
   out_6226855880410704586[59] = 0;
   out_6226855880410704586[60] = 0;
   out_6226855880410704586[61] = 0;
   out_6226855880410704586[62] = 0;
   out_6226855880410704586[63] = 0;
   out_6226855880410704586[64] = 0;
   out_6226855880410704586[65] = 0;
}
void h_14(double *state, double *unused, double *out_4046528061737671226) {
   out_4046528061737671226[0] = state[10];
   out_4046528061737671226[1] = state[11];
   out_4046528061737671226[2] = state[12];
}
void H_14(double *state, double *unused, double *out_5769981913231015878) {
   out_5769981913231015878[0] = 0;
   out_5769981913231015878[1] = 0;
   out_5769981913231015878[2] = 0;
   out_5769981913231015878[3] = 0;
   out_5769981913231015878[4] = 0;
   out_5769981913231015878[5] = 0;
   out_5769981913231015878[6] = 0;
   out_5769981913231015878[7] = 0;
   out_5769981913231015878[8] = 0;
   out_5769981913231015878[9] = 0;
   out_5769981913231015878[10] = 1;
   out_5769981913231015878[11] = 0;
   out_5769981913231015878[12] = 0;
   out_5769981913231015878[13] = 0;
   out_5769981913231015878[14] = 0;
   out_5769981913231015878[15] = 0;
   out_5769981913231015878[16] = 0;
   out_5769981913231015878[17] = 0;
   out_5769981913231015878[18] = 0;
   out_5769981913231015878[19] = 0;
   out_5769981913231015878[20] = 0;
   out_5769981913231015878[21] = 0;
   out_5769981913231015878[22] = 0;
   out_5769981913231015878[23] = 0;
   out_5769981913231015878[24] = 0;
   out_5769981913231015878[25] = 0;
   out_5769981913231015878[26] = 0;
   out_5769981913231015878[27] = 0;
   out_5769981913231015878[28] = 0;
   out_5769981913231015878[29] = 0;
   out_5769981913231015878[30] = 0;
   out_5769981913231015878[31] = 0;
   out_5769981913231015878[32] = 0;
   out_5769981913231015878[33] = 1;
   out_5769981913231015878[34] = 0;
   out_5769981913231015878[35] = 0;
   out_5769981913231015878[36] = 0;
   out_5769981913231015878[37] = 0;
   out_5769981913231015878[38] = 0;
   out_5769981913231015878[39] = 0;
   out_5769981913231015878[40] = 0;
   out_5769981913231015878[41] = 0;
   out_5769981913231015878[42] = 0;
   out_5769981913231015878[43] = 0;
   out_5769981913231015878[44] = 0;
   out_5769981913231015878[45] = 0;
   out_5769981913231015878[46] = 0;
   out_5769981913231015878[47] = 0;
   out_5769981913231015878[48] = 0;
   out_5769981913231015878[49] = 0;
   out_5769981913231015878[50] = 0;
   out_5769981913231015878[51] = 0;
   out_5769981913231015878[52] = 0;
   out_5769981913231015878[53] = 0;
   out_5769981913231015878[54] = 0;
   out_5769981913231015878[55] = 0;
   out_5769981913231015878[56] = 1;
   out_5769981913231015878[57] = 0;
   out_5769981913231015878[58] = 0;
   out_5769981913231015878[59] = 0;
   out_5769981913231015878[60] = 0;
   out_5769981913231015878[61] = 0;
   out_5769981913231015878[62] = 0;
   out_5769981913231015878[63] = 0;
   out_5769981913231015878[64] = 0;
   out_5769981913231015878[65] = 0;
}
void h_33(double *state, double *unused, double *out_3771926408767014460) {
   out_3771926408767014460[0] = state[16];
   out_3771926408767014460[1] = state[17];
   out_3771926408767014460[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4904404885135226585) {
   out_4904404885135226585[0] = 0;
   out_4904404885135226585[1] = 0;
   out_4904404885135226585[2] = 0;
   out_4904404885135226585[3] = 0;
   out_4904404885135226585[4] = 0;
   out_4904404885135226585[5] = 0;
   out_4904404885135226585[6] = 0;
   out_4904404885135226585[7] = 0;
   out_4904404885135226585[8] = 0;
   out_4904404885135226585[9] = 0;
   out_4904404885135226585[10] = 0;
   out_4904404885135226585[11] = 0;
   out_4904404885135226585[12] = 0;
   out_4904404885135226585[13] = 0;
   out_4904404885135226585[14] = 0;
   out_4904404885135226585[15] = 0;
   out_4904404885135226585[16] = 1;
   out_4904404885135226585[17] = 0;
   out_4904404885135226585[18] = 0;
   out_4904404885135226585[19] = 0;
   out_4904404885135226585[20] = 0;
   out_4904404885135226585[21] = 0;
   out_4904404885135226585[22] = 0;
   out_4904404885135226585[23] = 0;
   out_4904404885135226585[24] = 0;
   out_4904404885135226585[25] = 0;
   out_4904404885135226585[26] = 0;
   out_4904404885135226585[27] = 0;
   out_4904404885135226585[28] = 0;
   out_4904404885135226585[29] = 0;
   out_4904404885135226585[30] = 0;
   out_4904404885135226585[31] = 0;
   out_4904404885135226585[32] = 0;
   out_4904404885135226585[33] = 0;
   out_4904404885135226585[34] = 0;
   out_4904404885135226585[35] = 0;
   out_4904404885135226585[36] = 0;
   out_4904404885135226585[37] = 0;
   out_4904404885135226585[38] = 0;
   out_4904404885135226585[39] = 1;
   out_4904404885135226585[40] = 0;
   out_4904404885135226585[41] = 0;
   out_4904404885135226585[42] = 0;
   out_4904404885135226585[43] = 0;
   out_4904404885135226585[44] = 0;
   out_4904404885135226585[45] = 0;
   out_4904404885135226585[46] = 0;
   out_4904404885135226585[47] = 0;
   out_4904404885135226585[48] = 0;
   out_4904404885135226585[49] = 0;
   out_4904404885135226585[50] = 0;
   out_4904404885135226585[51] = 0;
   out_4904404885135226585[52] = 0;
   out_4904404885135226585[53] = 0;
   out_4904404885135226585[54] = 0;
   out_4904404885135226585[55] = 0;
   out_4904404885135226585[56] = 0;
   out_4904404885135226585[57] = 0;
   out_4904404885135226585[58] = 0;
   out_4904404885135226585[59] = 0;
   out_4904404885135226585[60] = 0;
   out_4904404885135226585[61] = 0;
   out_4904404885135226585[62] = 1;
   out_4904404885135226585[63] = 0;
   out_4904404885135226585[64] = 0;
   out_4904404885135226585[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8180120912825541323) {
  H(in_vec, out_8180120912825541323);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2235730839387788341) {
  err_fun(nom_x, delta_x, out_2235730839387788341);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_326261295306740191) {
  inv_err_fun(nom_x, true_x, out_326261295306740191);
}
void live_H_mod_fun(double *state, double *out_6929195951705016412) {
  H_mod_fun(state, out_6929195951705016412);
}
void live_f_fun(double *state, double dt, double *out_6351759004151022937) {
  f_fun(state,  dt, out_6351759004151022937);
}
void live_F_fun(double *state, double dt, double *out_5502934450495567892) {
  F_fun(state,  dt, out_5502934450495567892);
}
void live_h_4(double *state, double *unused, double *out_4717029163149753550) {
  h_4(state, unused, out_4717029163149753550);
}
void live_H_4(double *state, double *unused, double *out_5389543225214088268) {
  H_4(state, unused, out_5389543225214088268);
}
void live_h_9(double *state, double *unused, double *out_4046528061737671226) {
  h_9(state, unused, out_4046528061737671226);
}
void live_H_9(double *state, double *unused, double *out_5769981913231015878) {
  H_9(state, unused, out_5769981913231015878);
}
void live_h_10(double *state, double *unused, double *out_2766968380519037456) {
  h_10(state, unused, out_2766968380519037456);
}
void live_H_10(double *state, double *unused, double *out_5999283407405275549) {
  H_10(state, unused, out_5999283407405275549);
}
void live_h_12(double *state, double *unused, double *out_5957037225820983386) {
  h_12(state, unused, out_5957037225820983386);
}
void live_H_12(double *state, double *unused, double *out_991715151828644728) {
  H_12(state, unused, out_991715151828644728);
}
void live_h_35(double *state, double *unused, double *out_214788844796679554) {
  h_35(state, unused, out_214788844796679554);
}
void live_H_35(double *state, double *unused, double *out_5292181408138487844) {
  H_35(state, unused, out_5292181408138487844);
}
void live_h_32(double *state, double *unused, double *out_3380641476992712791) {
  h_32(state, unused, out_3380641476992712791);
}
void live_H_32(double *state, double *unused, double *out_8887370067527436113) {
  H_32(state, unused, out_8887370067527436113);
}
void live_h_13(double *state, double *unused, double *out_6498926561649141984) {
  h_13(state, unused, out_6498926561649141984);
}
void live_H_13(double *state, double *unused, double *out_6226855880410704586) {
  H_13(state, unused, out_6226855880410704586);
}
void live_h_14(double *state, double *unused, double *out_4046528061737671226) {
  h_14(state, unused, out_4046528061737671226);
}
void live_H_14(double *state, double *unused, double *out_5769981913231015878) {
  H_14(state, unused, out_5769981913231015878);
}
void live_h_33(double *state, double *unused, double *out_3771926408767014460) {
  h_33(state, unused, out_3771926408767014460);
}
void live_H_33(double *state, double *unused, double *out_4904404885135226585) {
  H_33(state, unused, out_4904404885135226585);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
