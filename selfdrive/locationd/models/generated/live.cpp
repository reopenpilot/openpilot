#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7348161231676323022) {
   out_7348161231676323022[0] = 0;
   out_7348161231676323022[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7348161231676323022[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7348161231676323022[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7348161231676323022[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7348161231676323022[5] = -sin(in_vec[1]);
   out_7348161231676323022[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7348161231676323022[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7348161231676323022[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7348161231676323022[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7348161231676323022[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7348161231676323022[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7348161231676323022[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7348161231676323022[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7348161231676323022[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7348161231676323022[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7348161231676323022[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7348161231676323022[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3514761385177869280) {
   out_3514761385177869280[0] = delta_x[0] + nom_x[0];
   out_3514761385177869280[1] = delta_x[1] + nom_x[1];
   out_3514761385177869280[2] = delta_x[2] + nom_x[2];
   out_3514761385177869280[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3514761385177869280[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3514761385177869280[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3514761385177869280[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3514761385177869280[7] = delta_x[6] + nom_x[7];
   out_3514761385177869280[8] = delta_x[7] + nom_x[8];
   out_3514761385177869280[9] = delta_x[8] + nom_x[9];
   out_3514761385177869280[10] = delta_x[9] + nom_x[10];
   out_3514761385177869280[11] = delta_x[10] + nom_x[11];
   out_3514761385177869280[12] = delta_x[11] + nom_x[12];
   out_3514761385177869280[13] = delta_x[12] + nom_x[13];
   out_3514761385177869280[14] = delta_x[13] + nom_x[14];
   out_3514761385177869280[15] = delta_x[14] + nom_x[15];
   out_3514761385177869280[16] = delta_x[15] + nom_x[16];
   out_3514761385177869280[17] = delta_x[16] + nom_x[17];
   out_3514761385177869280[18] = delta_x[17] + nom_x[18];
   out_3514761385177869280[19] = delta_x[18] + nom_x[19];
   out_3514761385177869280[20] = delta_x[19] + nom_x[20];
   out_3514761385177869280[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6989424054645819575) {
   out_6989424054645819575[0] = -nom_x[0] + true_x[0];
   out_6989424054645819575[1] = -nom_x[1] + true_x[1];
   out_6989424054645819575[2] = -nom_x[2] + true_x[2];
   out_6989424054645819575[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6989424054645819575[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6989424054645819575[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6989424054645819575[6] = -nom_x[7] + true_x[7];
   out_6989424054645819575[7] = -nom_x[8] + true_x[8];
   out_6989424054645819575[8] = -nom_x[9] + true_x[9];
   out_6989424054645819575[9] = -nom_x[10] + true_x[10];
   out_6989424054645819575[10] = -nom_x[11] + true_x[11];
   out_6989424054645819575[11] = -nom_x[12] + true_x[12];
   out_6989424054645819575[12] = -nom_x[13] + true_x[13];
   out_6989424054645819575[13] = -nom_x[14] + true_x[14];
   out_6989424054645819575[14] = -nom_x[15] + true_x[15];
   out_6989424054645819575[15] = -nom_x[16] + true_x[16];
   out_6989424054645819575[16] = -nom_x[17] + true_x[17];
   out_6989424054645819575[17] = -nom_x[18] + true_x[18];
   out_6989424054645819575[18] = -nom_x[19] + true_x[19];
   out_6989424054645819575[19] = -nom_x[20] + true_x[20];
   out_6989424054645819575[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7058086579004359708) {
   out_7058086579004359708[0] = 1.0;
   out_7058086579004359708[1] = 0;
   out_7058086579004359708[2] = 0;
   out_7058086579004359708[3] = 0;
   out_7058086579004359708[4] = 0;
   out_7058086579004359708[5] = 0;
   out_7058086579004359708[6] = 0;
   out_7058086579004359708[7] = 0;
   out_7058086579004359708[8] = 0;
   out_7058086579004359708[9] = 0;
   out_7058086579004359708[10] = 0;
   out_7058086579004359708[11] = 0;
   out_7058086579004359708[12] = 0;
   out_7058086579004359708[13] = 0;
   out_7058086579004359708[14] = 0;
   out_7058086579004359708[15] = 0;
   out_7058086579004359708[16] = 0;
   out_7058086579004359708[17] = 0;
   out_7058086579004359708[18] = 0;
   out_7058086579004359708[19] = 0;
   out_7058086579004359708[20] = 0;
   out_7058086579004359708[21] = 0;
   out_7058086579004359708[22] = 1.0;
   out_7058086579004359708[23] = 0;
   out_7058086579004359708[24] = 0;
   out_7058086579004359708[25] = 0;
   out_7058086579004359708[26] = 0;
   out_7058086579004359708[27] = 0;
   out_7058086579004359708[28] = 0;
   out_7058086579004359708[29] = 0;
   out_7058086579004359708[30] = 0;
   out_7058086579004359708[31] = 0;
   out_7058086579004359708[32] = 0;
   out_7058086579004359708[33] = 0;
   out_7058086579004359708[34] = 0;
   out_7058086579004359708[35] = 0;
   out_7058086579004359708[36] = 0;
   out_7058086579004359708[37] = 0;
   out_7058086579004359708[38] = 0;
   out_7058086579004359708[39] = 0;
   out_7058086579004359708[40] = 0;
   out_7058086579004359708[41] = 0;
   out_7058086579004359708[42] = 0;
   out_7058086579004359708[43] = 0;
   out_7058086579004359708[44] = 1.0;
   out_7058086579004359708[45] = 0;
   out_7058086579004359708[46] = 0;
   out_7058086579004359708[47] = 0;
   out_7058086579004359708[48] = 0;
   out_7058086579004359708[49] = 0;
   out_7058086579004359708[50] = 0;
   out_7058086579004359708[51] = 0;
   out_7058086579004359708[52] = 0;
   out_7058086579004359708[53] = 0;
   out_7058086579004359708[54] = 0;
   out_7058086579004359708[55] = 0;
   out_7058086579004359708[56] = 0;
   out_7058086579004359708[57] = 0;
   out_7058086579004359708[58] = 0;
   out_7058086579004359708[59] = 0;
   out_7058086579004359708[60] = 0;
   out_7058086579004359708[61] = 0;
   out_7058086579004359708[62] = 0;
   out_7058086579004359708[63] = 0;
   out_7058086579004359708[64] = 0;
   out_7058086579004359708[65] = 0;
   out_7058086579004359708[66] = -0.5*state[4];
   out_7058086579004359708[67] = -0.5*state[5];
   out_7058086579004359708[68] = -0.5*state[6];
   out_7058086579004359708[69] = 0;
   out_7058086579004359708[70] = 0;
   out_7058086579004359708[71] = 0;
   out_7058086579004359708[72] = 0;
   out_7058086579004359708[73] = 0;
   out_7058086579004359708[74] = 0;
   out_7058086579004359708[75] = 0;
   out_7058086579004359708[76] = 0;
   out_7058086579004359708[77] = 0;
   out_7058086579004359708[78] = 0;
   out_7058086579004359708[79] = 0;
   out_7058086579004359708[80] = 0;
   out_7058086579004359708[81] = 0;
   out_7058086579004359708[82] = 0;
   out_7058086579004359708[83] = 0;
   out_7058086579004359708[84] = 0;
   out_7058086579004359708[85] = 0;
   out_7058086579004359708[86] = 0;
   out_7058086579004359708[87] = 0.5*state[3];
   out_7058086579004359708[88] = 0.5*state[6];
   out_7058086579004359708[89] = -0.5*state[5];
   out_7058086579004359708[90] = 0;
   out_7058086579004359708[91] = 0;
   out_7058086579004359708[92] = 0;
   out_7058086579004359708[93] = 0;
   out_7058086579004359708[94] = 0;
   out_7058086579004359708[95] = 0;
   out_7058086579004359708[96] = 0;
   out_7058086579004359708[97] = 0;
   out_7058086579004359708[98] = 0;
   out_7058086579004359708[99] = 0;
   out_7058086579004359708[100] = 0;
   out_7058086579004359708[101] = 0;
   out_7058086579004359708[102] = 0;
   out_7058086579004359708[103] = 0;
   out_7058086579004359708[104] = 0;
   out_7058086579004359708[105] = 0;
   out_7058086579004359708[106] = 0;
   out_7058086579004359708[107] = 0;
   out_7058086579004359708[108] = -0.5*state[6];
   out_7058086579004359708[109] = 0.5*state[3];
   out_7058086579004359708[110] = 0.5*state[4];
   out_7058086579004359708[111] = 0;
   out_7058086579004359708[112] = 0;
   out_7058086579004359708[113] = 0;
   out_7058086579004359708[114] = 0;
   out_7058086579004359708[115] = 0;
   out_7058086579004359708[116] = 0;
   out_7058086579004359708[117] = 0;
   out_7058086579004359708[118] = 0;
   out_7058086579004359708[119] = 0;
   out_7058086579004359708[120] = 0;
   out_7058086579004359708[121] = 0;
   out_7058086579004359708[122] = 0;
   out_7058086579004359708[123] = 0;
   out_7058086579004359708[124] = 0;
   out_7058086579004359708[125] = 0;
   out_7058086579004359708[126] = 0;
   out_7058086579004359708[127] = 0;
   out_7058086579004359708[128] = 0;
   out_7058086579004359708[129] = 0.5*state[5];
   out_7058086579004359708[130] = -0.5*state[4];
   out_7058086579004359708[131] = 0.5*state[3];
   out_7058086579004359708[132] = 0;
   out_7058086579004359708[133] = 0;
   out_7058086579004359708[134] = 0;
   out_7058086579004359708[135] = 0;
   out_7058086579004359708[136] = 0;
   out_7058086579004359708[137] = 0;
   out_7058086579004359708[138] = 0;
   out_7058086579004359708[139] = 0;
   out_7058086579004359708[140] = 0;
   out_7058086579004359708[141] = 0;
   out_7058086579004359708[142] = 0;
   out_7058086579004359708[143] = 0;
   out_7058086579004359708[144] = 0;
   out_7058086579004359708[145] = 0;
   out_7058086579004359708[146] = 0;
   out_7058086579004359708[147] = 0;
   out_7058086579004359708[148] = 0;
   out_7058086579004359708[149] = 0;
   out_7058086579004359708[150] = 0;
   out_7058086579004359708[151] = 0;
   out_7058086579004359708[152] = 0;
   out_7058086579004359708[153] = 1.0;
   out_7058086579004359708[154] = 0;
   out_7058086579004359708[155] = 0;
   out_7058086579004359708[156] = 0;
   out_7058086579004359708[157] = 0;
   out_7058086579004359708[158] = 0;
   out_7058086579004359708[159] = 0;
   out_7058086579004359708[160] = 0;
   out_7058086579004359708[161] = 0;
   out_7058086579004359708[162] = 0;
   out_7058086579004359708[163] = 0;
   out_7058086579004359708[164] = 0;
   out_7058086579004359708[165] = 0;
   out_7058086579004359708[166] = 0;
   out_7058086579004359708[167] = 0;
   out_7058086579004359708[168] = 0;
   out_7058086579004359708[169] = 0;
   out_7058086579004359708[170] = 0;
   out_7058086579004359708[171] = 0;
   out_7058086579004359708[172] = 0;
   out_7058086579004359708[173] = 0;
   out_7058086579004359708[174] = 0;
   out_7058086579004359708[175] = 1.0;
   out_7058086579004359708[176] = 0;
   out_7058086579004359708[177] = 0;
   out_7058086579004359708[178] = 0;
   out_7058086579004359708[179] = 0;
   out_7058086579004359708[180] = 0;
   out_7058086579004359708[181] = 0;
   out_7058086579004359708[182] = 0;
   out_7058086579004359708[183] = 0;
   out_7058086579004359708[184] = 0;
   out_7058086579004359708[185] = 0;
   out_7058086579004359708[186] = 0;
   out_7058086579004359708[187] = 0;
   out_7058086579004359708[188] = 0;
   out_7058086579004359708[189] = 0;
   out_7058086579004359708[190] = 0;
   out_7058086579004359708[191] = 0;
   out_7058086579004359708[192] = 0;
   out_7058086579004359708[193] = 0;
   out_7058086579004359708[194] = 0;
   out_7058086579004359708[195] = 0;
   out_7058086579004359708[196] = 0;
   out_7058086579004359708[197] = 1.0;
   out_7058086579004359708[198] = 0;
   out_7058086579004359708[199] = 0;
   out_7058086579004359708[200] = 0;
   out_7058086579004359708[201] = 0;
   out_7058086579004359708[202] = 0;
   out_7058086579004359708[203] = 0;
   out_7058086579004359708[204] = 0;
   out_7058086579004359708[205] = 0;
   out_7058086579004359708[206] = 0;
   out_7058086579004359708[207] = 0;
   out_7058086579004359708[208] = 0;
   out_7058086579004359708[209] = 0;
   out_7058086579004359708[210] = 0;
   out_7058086579004359708[211] = 0;
   out_7058086579004359708[212] = 0;
   out_7058086579004359708[213] = 0;
   out_7058086579004359708[214] = 0;
   out_7058086579004359708[215] = 0;
   out_7058086579004359708[216] = 0;
   out_7058086579004359708[217] = 0;
   out_7058086579004359708[218] = 0;
   out_7058086579004359708[219] = 1.0;
   out_7058086579004359708[220] = 0;
   out_7058086579004359708[221] = 0;
   out_7058086579004359708[222] = 0;
   out_7058086579004359708[223] = 0;
   out_7058086579004359708[224] = 0;
   out_7058086579004359708[225] = 0;
   out_7058086579004359708[226] = 0;
   out_7058086579004359708[227] = 0;
   out_7058086579004359708[228] = 0;
   out_7058086579004359708[229] = 0;
   out_7058086579004359708[230] = 0;
   out_7058086579004359708[231] = 0;
   out_7058086579004359708[232] = 0;
   out_7058086579004359708[233] = 0;
   out_7058086579004359708[234] = 0;
   out_7058086579004359708[235] = 0;
   out_7058086579004359708[236] = 0;
   out_7058086579004359708[237] = 0;
   out_7058086579004359708[238] = 0;
   out_7058086579004359708[239] = 0;
   out_7058086579004359708[240] = 0;
   out_7058086579004359708[241] = 1.0;
   out_7058086579004359708[242] = 0;
   out_7058086579004359708[243] = 0;
   out_7058086579004359708[244] = 0;
   out_7058086579004359708[245] = 0;
   out_7058086579004359708[246] = 0;
   out_7058086579004359708[247] = 0;
   out_7058086579004359708[248] = 0;
   out_7058086579004359708[249] = 0;
   out_7058086579004359708[250] = 0;
   out_7058086579004359708[251] = 0;
   out_7058086579004359708[252] = 0;
   out_7058086579004359708[253] = 0;
   out_7058086579004359708[254] = 0;
   out_7058086579004359708[255] = 0;
   out_7058086579004359708[256] = 0;
   out_7058086579004359708[257] = 0;
   out_7058086579004359708[258] = 0;
   out_7058086579004359708[259] = 0;
   out_7058086579004359708[260] = 0;
   out_7058086579004359708[261] = 0;
   out_7058086579004359708[262] = 0;
   out_7058086579004359708[263] = 1.0;
   out_7058086579004359708[264] = 0;
   out_7058086579004359708[265] = 0;
   out_7058086579004359708[266] = 0;
   out_7058086579004359708[267] = 0;
   out_7058086579004359708[268] = 0;
   out_7058086579004359708[269] = 0;
   out_7058086579004359708[270] = 0;
   out_7058086579004359708[271] = 0;
   out_7058086579004359708[272] = 0;
   out_7058086579004359708[273] = 0;
   out_7058086579004359708[274] = 0;
   out_7058086579004359708[275] = 0;
   out_7058086579004359708[276] = 0;
   out_7058086579004359708[277] = 0;
   out_7058086579004359708[278] = 0;
   out_7058086579004359708[279] = 0;
   out_7058086579004359708[280] = 0;
   out_7058086579004359708[281] = 0;
   out_7058086579004359708[282] = 0;
   out_7058086579004359708[283] = 0;
   out_7058086579004359708[284] = 0;
   out_7058086579004359708[285] = 1.0;
   out_7058086579004359708[286] = 0;
   out_7058086579004359708[287] = 0;
   out_7058086579004359708[288] = 0;
   out_7058086579004359708[289] = 0;
   out_7058086579004359708[290] = 0;
   out_7058086579004359708[291] = 0;
   out_7058086579004359708[292] = 0;
   out_7058086579004359708[293] = 0;
   out_7058086579004359708[294] = 0;
   out_7058086579004359708[295] = 0;
   out_7058086579004359708[296] = 0;
   out_7058086579004359708[297] = 0;
   out_7058086579004359708[298] = 0;
   out_7058086579004359708[299] = 0;
   out_7058086579004359708[300] = 0;
   out_7058086579004359708[301] = 0;
   out_7058086579004359708[302] = 0;
   out_7058086579004359708[303] = 0;
   out_7058086579004359708[304] = 0;
   out_7058086579004359708[305] = 0;
   out_7058086579004359708[306] = 0;
   out_7058086579004359708[307] = 1.0;
   out_7058086579004359708[308] = 0;
   out_7058086579004359708[309] = 0;
   out_7058086579004359708[310] = 0;
   out_7058086579004359708[311] = 0;
   out_7058086579004359708[312] = 0;
   out_7058086579004359708[313] = 0;
   out_7058086579004359708[314] = 0;
   out_7058086579004359708[315] = 0;
   out_7058086579004359708[316] = 0;
   out_7058086579004359708[317] = 0;
   out_7058086579004359708[318] = 0;
   out_7058086579004359708[319] = 0;
   out_7058086579004359708[320] = 0;
   out_7058086579004359708[321] = 0;
   out_7058086579004359708[322] = 0;
   out_7058086579004359708[323] = 0;
   out_7058086579004359708[324] = 0;
   out_7058086579004359708[325] = 0;
   out_7058086579004359708[326] = 0;
   out_7058086579004359708[327] = 0;
   out_7058086579004359708[328] = 0;
   out_7058086579004359708[329] = 1.0;
   out_7058086579004359708[330] = 0;
   out_7058086579004359708[331] = 0;
   out_7058086579004359708[332] = 0;
   out_7058086579004359708[333] = 0;
   out_7058086579004359708[334] = 0;
   out_7058086579004359708[335] = 0;
   out_7058086579004359708[336] = 0;
   out_7058086579004359708[337] = 0;
   out_7058086579004359708[338] = 0;
   out_7058086579004359708[339] = 0;
   out_7058086579004359708[340] = 0;
   out_7058086579004359708[341] = 0;
   out_7058086579004359708[342] = 0;
   out_7058086579004359708[343] = 0;
   out_7058086579004359708[344] = 0;
   out_7058086579004359708[345] = 0;
   out_7058086579004359708[346] = 0;
   out_7058086579004359708[347] = 0;
   out_7058086579004359708[348] = 0;
   out_7058086579004359708[349] = 0;
   out_7058086579004359708[350] = 0;
   out_7058086579004359708[351] = 1.0;
   out_7058086579004359708[352] = 0;
   out_7058086579004359708[353] = 0;
   out_7058086579004359708[354] = 0;
   out_7058086579004359708[355] = 0;
   out_7058086579004359708[356] = 0;
   out_7058086579004359708[357] = 0;
   out_7058086579004359708[358] = 0;
   out_7058086579004359708[359] = 0;
   out_7058086579004359708[360] = 0;
   out_7058086579004359708[361] = 0;
   out_7058086579004359708[362] = 0;
   out_7058086579004359708[363] = 0;
   out_7058086579004359708[364] = 0;
   out_7058086579004359708[365] = 0;
   out_7058086579004359708[366] = 0;
   out_7058086579004359708[367] = 0;
   out_7058086579004359708[368] = 0;
   out_7058086579004359708[369] = 0;
   out_7058086579004359708[370] = 0;
   out_7058086579004359708[371] = 0;
   out_7058086579004359708[372] = 0;
   out_7058086579004359708[373] = 1.0;
   out_7058086579004359708[374] = 0;
   out_7058086579004359708[375] = 0;
   out_7058086579004359708[376] = 0;
   out_7058086579004359708[377] = 0;
   out_7058086579004359708[378] = 0;
   out_7058086579004359708[379] = 0;
   out_7058086579004359708[380] = 0;
   out_7058086579004359708[381] = 0;
   out_7058086579004359708[382] = 0;
   out_7058086579004359708[383] = 0;
   out_7058086579004359708[384] = 0;
   out_7058086579004359708[385] = 0;
   out_7058086579004359708[386] = 0;
   out_7058086579004359708[387] = 0;
   out_7058086579004359708[388] = 0;
   out_7058086579004359708[389] = 0;
   out_7058086579004359708[390] = 0;
   out_7058086579004359708[391] = 0;
   out_7058086579004359708[392] = 0;
   out_7058086579004359708[393] = 0;
   out_7058086579004359708[394] = 0;
   out_7058086579004359708[395] = 1.0;
   out_7058086579004359708[396] = 0;
   out_7058086579004359708[397] = 0;
   out_7058086579004359708[398] = 0;
   out_7058086579004359708[399] = 0;
   out_7058086579004359708[400] = 0;
   out_7058086579004359708[401] = 0;
   out_7058086579004359708[402] = 0;
   out_7058086579004359708[403] = 0;
   out_7058086579004359708[404] = 0;
   out_7058086579004359708[405] = 0;
   out_7058086579004359708[406] = 0;
   out_7058086579004359708[407] = 0;
   out_7058086579004359708[408] = 0;
   out_7058086579004359708[409] = 0;
   out_7058086579004359708[410] = 0;
   out_7058086579004359708[411] = 0;
   out_7058086579004359708[412] = 0;
   out_7058086579004359708[413] = 0;
   out_7058086579004359708[414] = 0;
   out_7058086579004359708[415] = 0;
   out_7058086579004359708[416] = 0;
   out_7058086579004359708[417] = 1.0;
   out_7058086579004359708[418] = 0;
   out_7058086579004359708[419] = 0;
   out_7058086579004359708[420] = 0;
   out_7058086579004359708[421] = 0;
   out_7058086579004359708[422] = 0;
   out_7058086579004359708[423] = 0;
   out_7058086579004359708[424] = 0;
   out_7058086579004359708[425] = 0;
   out_7058086579004359708[426] = 0;
   out_7058086579004359708[427] = 0;
   out_7058086579004359708[428] = 0;
   out_7058086579004359708[429] = 0;
   out_7058086579004359708[430] = 0;
   out_7058086579004359708[431] = 0;
   out_7058086579004359708[432] = 0;
   out_7058086579004359708[433] = 0;
   out_7058086579004359708[434] = 0;
   out_7058086579004359708[435] = 0;
   out_7058086579004359708[436] = 0;
   out_7058086579004359708[437] = 0;
   out_7058086579004359708[438] = 0;
   out_7058086579004359708[439] = 1.0;
   out_7058086579004359708[440] = 0;
   out_7058086579004359708[441] = 0;
   out_7058086579004359708[442] = 0;
   out_7058086579004359708[443] = 0;
   out_7058086579004359708[444] = 0;
   out_7058086579004359708[445] = 0;
   out_7058086579004359708[446] = 0;
   out_7058086579004359708[447] = 0;
   out_7058086579004359708[448] = 0;
   out_7058086579004359708[449] = 0;
   out_7058086579004359708[450] = 0;
   out_7058086579004359708[451] = 0;
   out_7058086579004359708[452] = 0;
   out_7058086579004359708[453] = 0;
   out_7058086579004359708[454] = 0;
   out_7058086579004359708[455] = 0;
   out_7058086579004359708[456] = 0;
   out_7058086579004359708[457] = 0;
   out_7058086579004359708[458] = 0;
   out_7058086579004359708[459] = 0;
   out_7058086579004359708[460] = 0;
   out_7058086579004359708[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_317221309957908809) {
   out_317221309957908809[0] = dt*state[7] + state[0];
   out_317221309957908809[1] = dt*state[8] + state[1];
   out_317221309957908809[2] = dt*state[9] + state[2];
   out_317221309957908809[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_317221309957908809[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_317221309957908809[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_317221309957908809[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_317221309957908809[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_317221309957908809[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_317221309957908809[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_317221309957908809[10] = state[10];
   out_317221309957908809[11] = state[11];
   out_317221309957908809[12] = state[12];
   out_317221309957908809[13] = state[13];
   out_317221309957908809[14] = state[14];
   out_317221309957908809[15] = state[15];
   out_317221309957908809[16] = state[16];
   out_317221309957908809[17] = state[17];
   out_317221309957908809[18] = state[18];
   out_317221309957908809[19] = state[19];
   out_317221309957908809[20] = state[20];
   out_317221309957908809[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1805483189459299481) {
   out_1805483189459299481[0] = 1;
   out_1805483189459299481[1] = 0;
   out_1805483189459299481[2] = 0;
   out_1805483189459299481[3] = 0;
   out_1805483189459299481[4] = 0;
   out_1805483189459299481[5] = 0;
   out_1805483189459299481[6] = dt;
   out_1805483189459299481[7] = 0;
   out_1805483189459299481[8] = 0;
   out_1805483189459299481[9] = 0;
   out_1805483189459299481[10] = 0;
   out_1805483189459299481[11] = 0;
   out_1805483189459299481[12] = 0;
   out_1805483189459299481[13] = 0;
   out_1805483189459299481[14] = 0;
   out_1805483189459299481[15] = 0;
   out_1805483189459299481[16] = 0;
   out_1805483189459299481[17] = 0;
   out_1805483189459299481[18] = 0;
   out_1805483189459299481[19] = 0;
   out_1805483189459299481[20] = 0;
   out_1805483189459299481[21] = 0;
   out_1805483189459299481[22] = 1;
   out_1805483189459299481[23] = 0;
   out_1805483189459299481[24] = 0;
   out_1805483189459299481[25] = 0;
   out_1805483189459299481[26] = 0;
   out_1805483189459299481[27] = 0;
   out_1805483189459299481[28] = dt;
   out_1805483189459299481[29] = 0;
   out_1805483189459299481[30] = 0;
   out_1805483189459299481[31] = 0;
   out_1805483189459299481[32] = 0;
   out_1805483189459299481[33] = 0;
   out_1805483189459299481[34] = 0;
   out_1805483189459299481[35] = 0;
   out_1805483189459299481[36] = 0;
   out_1805483189459299481[37] = 0;
   out_1805483189459299481[38] = 0;
   out_1805483189459299481[39] = 0;
   out_1805483189459299481[40] = 0;
   out_1805483189459299481[41] = 0;
   out_1805483189459299481[42] = 0;
   out_1805483189459299481[43] = 0;
   out_1805483189459299481[44] = 1;
   out_1805483189459299481[45] = 0;
   out_1805483189459299481[46] = 0;
   out_1805483189459299481[47] = 0;
   out_1805483189459299481[48] = 0;
   out_1805483189459299481[49] = 0;
   out_1805483189459299481[50] = dt;
   out_1805483189459299481[51] = 0;
   out_1805483189459299481[52] = 0;
   out_1805483189459299481[53] = 0;
   out_1805483189459299481[54] = 0;
   out_1805483189459299481[55] = 0;
   out_1805483189459299481[56] = 0;
   out_1805483189459299481[57] = 0;
   out_1805483189459299481[58] = 0;
   out_1805483189459299481[59] = 0;
   out_1805483189459299481[60] = 0;
   out_1805483189459299481[61] = 0;
   out_1805483189459299481[62] = 0;
   out_1805483189459299481[63] = 0;
   out_1805483189459299481[64] = 0;
   out_1805483189459299481[65] = 0;
   out_1805483189459299481[66] = 1;
   out_1805483189459299481[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1805483189459299481[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1805483189459299481[69] = 0;
   out_1805483189459299481[70] = 0;
   out_1805483189459299481[71] = 0;
   out_1805483189459299481[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1805483189459299481[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1805483189459299481[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1805483189459299481[75] = 0;
   out_1805483189459299481[76] = 0;
   out_1805483189459299481[77] = 0;
   out_1805483189459299481[78] = 0;
   out_1805483189459299481[79] = 0;
   out_1805483189459299481[80] = 0;
   out_1805483189459299481[81] = 0;
   out_1805483189459299481[82] = 0;
   out_1805483189459299481[83] = 0;
   out_1805483189459299481[84] = 0;
   out_1805483189459299481[85] = 0;
   out_1805483189459299481[86] = 0;
   out_1805483189459299481[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1805483189459299481[88] = 1;
   out_1805483189459299481[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1805483189459299481[90] = 0;
   out_1805483189459299481[91] = 0;
   out_1805483189459299481[92] = 0;
   out_1805483189459299481[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1805483189459299481[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1805483189459299481[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1805483189459299481[96] = 0;
   out_1805483189459299481[97] = 0;
   out_1805483189459299481[98] = 0;
   out_1805483189459299481[99] = 0;
   out_1805483189459299481[100] = 0;
   out_1805483189459299481[101] = 0;
   out_1805483189459299481[102] = 0;
   out_1805483189459299481[103] = 0;
   out_1805483189459299481[104] = 0;
   out_1805483189459299481[105] = 0;
   out_1805483189459299481[106] = 0;
   out_1805483189459299481[107] = 0;
   out_1805483189459299481[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1805483189459299481[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1805483189459299481[110] = 1;
   out_1805483189459299481[111] = 0;
   out_1805483189459299481[112] = 0;
   out_1805483189459299481[113] = 0;
   out_1805483189459299481[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1805483189459299481[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1805483189459299481[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1805483189459299481[117] = 0;
   out_1805483189459299481[118] = 0;
   out_1805483189459299481[119] = 0;
   out_1805483189459299481[120] = 0;
   out_1805483189459299481[121] = 0;
   out_1805483189459299481[122] = 0;
   out_1805483189459299481[123] = 0;
   out_1805483189459299481[124] = 0;
   out_1805483189459299481[125] = 0;
   out_1805483189459299481[126] = 0;
   out_1805483189459299481[127] = 0;
   out_1805483189459299481[128] = 0;
   out_1805483189459299481[129] = 0;
   out_1805483189459299481[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1805483189459299481[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1805483189459299481[132] = 1;
   out_1805483189459299481[133] = 0;
   out_1805483189459299481[134] = 0;
   out_1805483189459299481[135] = 0;
   out_1805483189459299481[136] = 0;
   out_1805483189459299481[137] = 0;
   out_1805483189459299481[138] = 0;
   out_1805483189459299481[139] = 0;
   out_1805483189459299481[140] = 0;
   out_1805483189459299481[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1805483189459299481[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1805483189459299481[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1805483189459299481[144] = 0;
   out_1805483189459299481[145] = 0;
   out_1805483189459299481[146] = 0;
   out_1805483189459299481[147] = 0;
   out_1805483189459299481[148] = 0;
   out_1805483189459299481[149] = 0;
   out_1805483189459299481[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1805483189459299481[151] = 0;
   out_1805483189459299481[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1805483189459299481[153] = 0;
   out_1805483189459299481[154] = 1;
   out_1805483189459299481[155] = 0;
   out_1805483189459299481[156] = 0;
   out_1805483189459299481[157] = 0;
   out_1805483189459299481[158] = 0;
   out_1805483189459299481[159] = 0;
   out_1805483189459299481[160] = 0;
   out_1805483189459299481[161] = 0;
   out_1805483189459299481[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1805483189459299481[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1805483189459299481[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1805483189459299481[165] = 0;
   out_1805483189459299481[166] = 0;
   out_1805483189459299481[167] = 0;
   out_1805483189459299481[168] = 0;
   out_1805483189459299481[169] = 0;
   out_1805483189459299481[170] = 0;
   out_1805483189459299481[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1805483189459299481[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1805483189459299481[173] = 0;
   out_1805483189459299481[174] = 0;
   out_1805483189459299481[175] = 0;
   out_1805483189459299481[176] = 1;
   out_1805483189459299481[177] = 0;
   out_1805483189459299481[178] = 0;
   out_1805483189459299481[179] = 0;
   out_1805483189459299481[180] = 0;
   out_1805483189459299481[181] = 0;
   out_1805483189459299481[182] = 0;
   out_1805483189459299481[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1805483189459299481[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1805483189459299481[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1805483189459299481[186] = 0;
   out_1805483189459299481[187] = 0;
   out_1805483189459299481[188] = 0;
   out_1805483189459299481[189] = 0;
   out_1805483189459299481[190] = 0;
   out_1805483189459299481[191] = 0;
   out_1805483189459299481[192] = 0;
   out_1805483189459299481[193] = 0;
   out_1805483189459299481[194] = 0;
   out_1805483189459299481[195] = 0;
   out_1805483189459299481[196] = 0;
   out_1805483189459299481[197] = 0;
   out_1805483189459299481[198] = 1;
   out_1805483189459299481[199] = 0;
   out_1805483189459299481[200] = 0;
   out_1805483189459299481[201] = 0;
   out_1805483189459299481[202] = 0;
   out_1805483189459299481[203] = 0;
   out_1805483189459299481[204] = 0;
   out_1805483189459299481[205] = 0;
   out_1805483189459299481[206] = 0;
   out_1805483189459299481[207] = 0;
   out_1805483189459299481[208] = 0;
   out_1805483189459299481[209] = 0;
   out_1805483189459299481[210] = 0;
   out_1805483189459299481[211] = 0;
   out_1805483189459299481[212] = 0;
   out_1805483189459299481[213] = 0;
   out_1805483189459299481[214] = 0;
   out_1805483189459299481[215] = 0;
   out_1805483189459299481[216] = 0;
   out_1805483189459299481[217] = 0;
   out_1805483189459299481[218] = 0;
   out_1805483189459299481[219] = 0;
   out_1805483189459299481[220] = 1;
   out_1805483189459299481[221] = 0;
   out_1805483189459299481[222] = 0;
   out_1805483189459299481[223] = 0;
   out_1805483189459299481[224] = 0;
   out_1805483189459299481[225] = 0;
   out_1805483189459299481[226] = 0;
   out_1805483189459299481[227] = 0;
   out_1805483189459299481[228] = 0;
   out_1805483189459299481[229] = 0;
   out_1805483189459299481[230] = 0;
   out_1805483189459299481[231] = 0;
   out_1805483189459299481[232] = 0;
   out_1805483189459299481[233] = 0;
   out_1805483189459299481[234] = 0;
   out_1805483189459299481[235] = 0;
   out_1805483189459299481[236] = 0;
   out_1805483189459299481[237] = 0;
   out_1805483189459299481[238] = 0;
   out_1805483189459299481[239] = 0;
   out_1805483189459299481[240] = 0;
   out_1805483189459299481[241] = 0;
   out_1805483189459299481[242] = 1;
   out_1805483189459299481[243] = 0;
   out_1805483189459299481[244] = 0;
   out_1805483189459299481[245] = 0;
   out_1805483189459299481[246] = 0;
   out_1805483189459299481[247] = 0;
   out_1805483189459299481[248] = 0;
   out_1805483189459299481[249] = 0;
   out_1805483189459299481[250] = 0;
   out_1805483189459299481[251] = 0;
   out_1805483189459299481[252] = 0;
   out_1805483189459299481[253] = 0;
   out_1805483189459299481[254] = 0;
   out_1805483189459299481[255] = 0;
   out_1805483189459299481[256] = 0;
   out_1805483189459299481[257] = 0;
   out_1805483189459299481[258] = 0;
   out_1805483189459299481[259] = 0;
   out_1805483189459299481[260] = 0;
   out_1805483189459299481[261] = 0;
   out_1805483189459299481[262] = 0;
   out_1805483189459299481[263] = 0;
   out_1805483189459299481[264] = 1;
   out_1805483189459299481[265] = 0;
   out_1805483189459299481[266] = 0;
   out_1805483189459299481[267] = 0;
   out_1805483189459299481[268] = 0;
   out_1805483189459299481[269] = 0;
   out_1805483189459299481[270] = 0;
   out_1805483189459299481[271] = 0;
   out_1805483189459299481[272] = 0;
   out_1805483189459299481[273] = 0;
   out_1805483189459299481[274] = 0;
   out_1805483189459299481[275] = 0;
   out_1805483189459299481[276] = 0;
   out_1805483189459299481[277] = 0;
   out_1805483189459299481[278] = 0;
   out_1805483189459299481[279] = 0;
   out_1805483189459299481[280] = 0;
   out_1805483189459299481[281] = 0;
   out_1805483189459299481[282] = 0;
   out_1805483189459299481[283] = 0;
   out_1805483189459299481[284] = 0;
   out_1805483189459299481[285] = 0;
   out_1805483189459299481[286] = 1;
   out_1805483189459299481[287] = 0;
   out_1805483189459299481[288] = 0;
   out_1805483189459299481[289] = 0;
   out_1805483189459299481[290] = 0;
   out_1805483189459299481[291] = 0;
   out_1805483189459299481[292] = 0;
   out_1805483189459299481[293] = 0;
   out_1805483189459299481[294] = 0;
   out_1805483189459299481[295] = 0;
   out_1805483189459299481[296] = 0;
   out_1805483189459299481[297] = 0;
   out_1805483189459299481[298] = 0;
   out_1805483189459299481[299] = 0;
   out_1805483189459299481[300] = 0;
   out_1805483189459299481[301] = 0;
   out_1805483189459299481[302] = 0;
   out_1805483189459299481[303] = 0;
   out_1805483189459299481[304] = 0;
   out_1805483189459299481[305] = 0;
   out_1805483189459299481[306] = 0;
   out_1805483189459299481[307] = 0;
   out_1805483189459299481[308] = 1;
   out_1805483189459299481[309] = 0;
   out_1805483189459299481[310] = 0;
   out_1805483189459299481[311] = 0;
   out_1805483189459299481[312] = 0;
   out_1805483189459299481[313] = 0;
   out_1805483189459299481[314] = 0;
   out_1805483189459299481[315] = 0;
   out_1805483189459299481[316] = 0;
   out_1805483189459299481[317] = 0;
   out_1805483189459299481[318] = 0;
   out_1805483189459299481[319] = 0;
   out_1805483189459299481[320] = 0;
   out_1805483189459299481[321] = 0;
   out_1805483189459299481[322] = 0;
   out_1805483189459299481[323] = 0;
   out_1805483189459299481[324] = 0;
   out_1805483189459299481[325] = 0;
   out_1805483189459299481[326] = 0;
   out_1805483189459299481[327] = 0;
   out_1805483189459299481[328] = 0;
   out_1805483189459299481[329] = 0;
   out_1805483189459299481[330] = 1;
   out_1805483189459299481[331] = 0;
   out_1805483189459299481[332] = 0;
   out_1805483189459299481[333] = 0;
   out_1805483189459299481[334] = 0;
   out_1805483189459299481[335] = 0;
   out_1805483189459299481[336] = 0;
   out_1805483189459299481[337] = 0;
   out_1805483189459299481[338] = 0;
   out_1805483189459299481[339] = 0;
   out_1805483189459299481[340] = 0;
   out_1805483189459299481[341] = 0;
   out_1805483189459299481[342] = 0;
   out_1805483189459299481[343] = 0;
   out_1805483189459299481[344] = 0;
   out_1805483189459299481[345] = 0;
   out_1805483189459299481[346] = 0;
   out_1805483189459299481[347] = 0;
   out_1805483189459299481[348] = 0;
   out_1805483189459299481[349] = 0;
   out_1805483189459299481[350] = 0;
   out_1805483189459299481[351] = 0;
   out_1805483189459299481[352] = 1;
   out_1805483189459299481[353] = 0;
   out_1805483189459299481[354] = 0;
   out_1805483189459299481[355] = 0;
   out_1805483189459299481[356] = 0;
   out_1805483189459299481[357] = 0;
   out_1805483189459299481[358] = 0;
   out_1805483189459299481[359] = 0;
   out_1805483189459299481[360] = 0;
   out_1805483189459299481[361] = 0;
   out_1805483189459299481[362] = 0;
   out_1805483189459299481[363] = 0;
   out_1805483189459299481[364] = 0;
   out_1805483189459299481[365] = 0;
   out_1805483189459299481[366] = 0;
   out_1805483189459299481[367] = 0;
   out_1805483189459299481[368] = 0;
   out_1805483189459299481[369] = 0;
   out_1805483189459299481[370] = 0;
   out_1805483189459299481[371] = 0;
   out_1805483189459299481[372] = 0;
   out_1805483189459299481[373] = 0;
   out_1805483189459299481[374] = 1;
   out_1805483189459299481[375] = 0;
   out_1805483189459299481[376] = 0;
   out_1805483189459299481[377] = 0;
   out_1805483189459299481[378] = 0;
   out_1805483189459299481[379] = 0;
   out_1805483189459299481[380] = 0;
   out_1805483189459299481[381] = 0;
   out_1805483189459299481[382] = 0;
   out_1805483189459299481[383] = 0;
   out_1805483189459299481[384] = 0;
   out_1805483189459299481[385] = 0;
   out_1805483189459299481[386] = 0;
   out_1805483189459299481[387] = 0;
   out_1805483189459299481[388] = 0;
   out_1805483189459299481[389] = 0;
   out_1805483189459299481[390] = 0;
   out_1805483189459299481[391] = 0;
   out_1805483189459299481[392] = 0;
   out_1805483189459299481[393] = 0;
   out_1805483189459299481[394] = 0;
   out_1805483189459299481[395] = 0;
   out_1805483189459299481[396] = 1;
   out_1805483189459299481[397] = 0;
   out_1805483189459299481[398] = 0;
   out_1805483189459299481[399] = 0;
   out_1805483189459299481[400] = 0;
   out_1805483189459299481[401] = 0;
   out_1805483189459299481[402] = 0;
   out_1805483189459299481[403] = 0;
   out_1805483189459299481[404] = 0;
   out_1805483189459299481[405] = 0;
   out_1805483189459299481[406] = 0;
   out_1805483189459299481[407] = 0;
   out_1805483189459299481[408] = 0;
   out_1805483189459299481[409] = 0;
   out_1805483189459299481[410] = 0;
   out_1805483189459299481[411] = 0;
   out_1805483189459299481[412] = 0;
   out_1805483189459299481[413] = 0;
   out_1805483189459299481[414] = 0;
   out_1805483189459299481[415] = 0;
   out_1805483189459299481[416] = 0;
   out_1805483189459299481[417] = 0;
   out_1805483189459299481[418] = 1;
   out_1805483189459299481[419] = 0;
   out_1805483189459299481[420] = 0;
   out_1805483189459299481[421] = 0;
   out_1805483189459299481[422] = 0;
   out_1805483189459299481[423] = 0;
   out_1805483189459299481[424] = 0;
   out_1805483189459299481[425] = 0;
   out_1805483189459299481[426] = 0;
   out_1805483189459299481[427] = 0;
   out_1805483189459299481[428] = 0;
   out_1805483189459299481[429] = 0;
   out_1805483189459299481[430] = 0;
   out_1805483189459299481[431] = 0;
   out_1805483189459299481[432] = 0;
   out_1805483189459299481[433] = 0;
   out_1805483189459299481[434] = 0;
   out_1805483189459299481[435] = 0;
   out_1805483189459299481[436] = 0;
   out_1805483189459299481[437] = 0;
   out_1805483189459299481[438] = 0;
   out_1805483189459299481[439] = 0;
   out_1805483189459299481[440] = 1;
}
void h_4(double *state, double *unused, double *out_5345287883162353815) {
   out_5345287883162353815[0] = state[10] + state[13];
   out_5345287883162353815[1] = state[11] + state[14];
   out_5345287883162353815[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_64432294755520683) {
   out_64432294755520683[0] = 0;
   out_64432294755520683[1] = 0;
   out_64432294755520683[2] = 0;
   out_64432294755520683[3] = 0;
   out_64432294755520683[4] = 0;
   out_64432294755520683[5] = 0;
   out_64432294755520683[6] = 0;
   out_64432294755520683[7] = 0;
   out_64432294755520683[8] = 0;
   out_64432294755520683[9] = 0;
   out_64432294755520683[10] = 1;
   out_64432294755520683[11] = 0;
   out_64432294755520683[12] = 0;
   out_64432294755520683[13] = 1;
   out_64432294755520683[14] = 0;
   out_64432294755520683[15] = 0;
   out_64432294755520683[16] = 0;
   out_64432294755520683[17] = 0;
   out_64432294755520683[18] = 0;
   out_64432294755520683[19] = 0;
   out_64432294755520683[20] = 0;
   out_64432294755520683[21] = 0;
   out_64432294755520683[22] = 0;
   out_64432294755520683[23] = 0;
   out_64432294755520683[24] = 0;
   out_64432294755520683[25] = 0;
   out_64432294755520683[26] = 0;
   out_64432294755520683[27] = 0;
   out_64432294755520683[28] = 0;
   out_64432294755520683[29] = 0;
   out_64432294755520683[30] = 0;
   out_64432294755520683[31] = 0;
   out_64432294755520683[32] = 0;
   out_64432294755520683[33] = 1;
   out_64432294755520683[34] = 0;
   out_64432294755520683[35] = 0;
   out_64432294755520683[36] = 1;
   out_64432294755520683[37] = 0;
   out_64432294755520683[38] = 0;
   out_64432294755520683[39] = 0;
   out_64432294755520683[40] = 0;
   out_64432294755520683[41] = 0;
   out_64432294755520683[42] = 0;
   out_64432294755520683[43] = 0;
   out_64432294755520683[44] = 0;
   out_64432294755520683[45] = 0;
   out_64432294755520683[46] = 0;
   out_64432294755520683[47] = 0;
   out_64432294755520683[48] = 0;
   out_64432294755520683[49] = 0;
   out_64432294755520683[50] = 0;
   out_64432294755520683[51] = 0;
   out_64432294755520683[52] = 0;
   out_64432294755520683[53] = 0;
   out_64432294755520683[54] = 0;
   out_64432294755520683[55] = 0;
   out_64432294755520683[56] = 1;
   out_64432294755520683[57] = 0;
   out_64432294755520683[58] = 0;
   out_64432294755520683[59] = 1;
   out_64432294755520683[60] = 0;
   out_64432294755520683[61] = 0;
   out_64432294755520683[62] = 0;
   out_64432294755520683[63] = 0;
   out_64432294755520683[64] = 0;
   out_64432294755520683[65] = 0;
}
void h_9(double *state, double *unused, double *out_962282062680152287) {
   out_962282062680152287[0] = state[10];
   out_962282062680152287[1] = state[11];
   out_962282062680152287[2] = state[12];
}
void H_9(double *state, double *unused, double *out_305621941385111328) {
   out_305621941385111328[0] = 0;
   out_305621941385111328[1] = 0;
   out_305621941385111328[2] = 0;
   out_305621941385111328[3] = 0;
   out_305621941385111328[4] = 0;
   out_305621941385111328[5] = 0;
   out_305621941385111328[6] = 0;
   out_305621941385111328[7] = 0;
   out_305621941385111328[8] = 0;
   out_305621941385111328[9] = 0;
   out_305621941385111328[10] = 1;
   out_305621941385111328[11] = 0;
   out_305621941385111328[12] = 0;
   out_305621941385111328[13] = 0;
   out_305621941385111328[14] = 0;
   out_305621941385111328[15] = 0;
   out_305621941385111328[16] = 0;
   out_305621941385111328[17] = 0;
   out_305621941385111328[18] = 0;
   out_305621941385111328[19] = 0;
   out_305621941385111328[20] = 0;
   out_305621941385111328[21] = 0;
   out_305621941385111328[22] = 0;
   out_305621941385111328[23] = 0;
   out_305621941385111328[24] = 0;
   out_305621941385111328[25] = 0;
   out_305621941385111328[26] = 0;
   out_305621941385111328[27] = 0;
   out_305621941385111328[28] = 0;
   out_305621941385111328[29] = 0;
   out_305621941385111328[30] = 0;
   out_305621941385111328[31] = 0;
   out_305621941385111328[32] = 0;
   out_305621941385111328[33] = 1;
   out_305621941385111328[34] = 0;
   out_305621941385111328[35] = 0;
   out_305621941385111328[36] = 0;
   out_305621941385111328[37] = 0;
   out_305621941385111328[38] = 0;
   out_305621941385111328[39] = 0;
   out_305621941385111328[40] = 0;
   out_305621941385111328[41] = 0;
   out_305621941385111328[42] = 0;
   out_305621941385111328[43] = 0;
   out_305621941385111328[44] = 0;
   out_305621941385111328[45] = 0;
   out_305621941385111328[46] = 0;
   out_305621941385111328[47] = 0;
   out_305621941385111328[48] = 0;
   out_305621941385111328[49] = 0;
   out_305621941385111328[50] = 0;
   out_305621941385111328[51] = 0;
   out_305621941385111328[52] = 0;
   out_305621941385111328[53] = 0;
   out_305621941385111328[54] = 0;
   out_305621941385111328[55] = 0;
   out_305621941385111328[56] = 1;
   out_305621941385111328[57] = 0;
   out_305621941385111328[58] = 0;
   out_305621941385111328[59] = 0;
   out_305621941385111328[60] = 0;
   out_305621941385111328[61] = 0;
   out_305621941385111328[62] = 0;
   out_305621941385111328[63] = 0;
   out_305621941385111328[64] = 0;
   out_305621941385111328[65] = 0;
}
void h_10(double *state, double *unused, double *out_7208629002103434345) {
   out_7208629002103434345[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7208629002103434345[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7208629002103434345[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5295792703852274162) {
   out_5295792703852274162[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5295792703852274162[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5295792703852274162[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5295792703852274162[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5295792703852274162[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5295792703852274162[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5295792703852274162[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5295792703852274162[7] = 0;
   out_5295792703852274162[8] = 0;
   out_5295792703852274162[9] = 0;
   out_5295792703852274162[10] = 0;
   out_5295792703852274162[11] = 0;
   out_5295792703852274162[12] = 0;
   out_5295792703852274162[13] = 0;
   out_5295792703852274162[14] = 0;
   out_5295792703852274162[15] = 0;
   out_5295792703852274162[16] = 1;
   out_5295792703852274162[17] = 0;
   out_5295792703852274162[18] = 0;
   out_5295792703852274162[19] = 1;
   out_5295792703852274162[20] = 0;
   out_5295792703852274162[21] = 0;
   out_5295792703852274162[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5295792703852274162[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5295792703852274162[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5295792703852274162[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5295792703852274162[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5295792703852274162[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5295792703852274162[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5295792703852274162[29] = 0;
   out_5295792703852274162[30] = 0;
   out_5295792703852274162[31] = 0;
   out_5295792703852274162[32] = 0;
   out_5295792703852274162[33] = 0;
   out_5295792703852274162[34] = 0;
   out_5295792703852274162[35] = 0;
   out_5295792703852274162[36] = 0;
   out_5295792703852274162[37] = 0;
   out_5295792703852274162[38] = 0;
   out_5295792703852274162[39] = 1;
   out_5295792703852274162[40] = 0;
   out_5295792703852274162[41] = 0;
   out_5295792703852274162[42] = 1;
   out_5295792703852274162[43] = 0;
   out_5295792703852274162[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5295792703852274162[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5295792703852274162[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5295792703852274162[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5295792703852274162[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5295792703852274162[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5295792703852274162[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5295792703852274162[51] = 0;
   out_5295792703852274162[52] = 0;
   out_5295792703852274162[53] = 0;
   out_5295792703852274162[54] = 0;
   out_5295792703852274162[55] = 0;
   out_5295792703852274162[56] = 0;
   out_5295792703852274162[57] = 0;
   out_5295792703852274162[58] = 0;
   out_5295792703852274162[59] = 0;
   out_5295792703852274162[60] = 0;
   out_5295792703852274162[61] = 0;
   out_5295792703852274162[62] = 1;
   out_5295792703852274162[63] = 0;
   out_5295792703852274162[64] = 0;
   out_5295792703852274162[65] = 1;
}
void h_12(double *state, double *unused, double *out_3100640762477255547) {
   out_3100640762477255547[0] = state[0];
   out_3100640762477255547[1] = state[1];
   out_3100640762477255547[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5083888702787482478) {
   out_5083888702787482478[0] = 1;
   out_5083888702787482478[1] = 0;
   out_5083888702787482478[2] = 0;
   out_5083888702787482478[3] = 0;
   out_5083888702787482478[4] = 0;
   out_5083888702787482478[5] = 0;
   out_5083888702787482478[6] = 0;
   out_5083888702787482478[7] = 0;
   out_5083888702787482478[8] = 0;
   out_5083888702787482478[9] = 0;
   out_5083888702787482478[10] = 0;
   out_5083888702787482478[11] = 0;
   out_5083888702787482478[12] = 0;
   out_5083888702787482478[13] = 0;
   out_5083888702787482478[14] = 0;
   out_5083888702787482478[15] = 0;
   out_5083888702787482478[16] = 0;
   out_5083888702787482478[17] = 0;
   out_5083888702787482478[18] = 0;
   out_5083888702787482478[19] = 0;
   out_5083888702787482478[20] = 0;
   out_5083888702787482478[21] = 0;
   out_5083888702787482478[22] = 0;
   out_5083888702787482478[23] = 1;
   out_5083888702787482478[24] = 0;
   out_5083888702787482478[25] = 0;
   out_5083888702787482478[26] = 0;
   out_5083888702787482478[27] = 0;
   out_5083888702787482478[28] = 0;
   out_5083888702787482478[29] = 0;
   out_5083888702787482478[30] = 0;
   out_5083888702787482478[31] = 0;
   out_5083888702787482478[32] = 0;
   out_5083888702787482478[33] = 0;
   out_5083888702787482478[34] = 0;
   out_5083888702787482478[35] = 0;
   out_5083888702787482478[36] = 0;
   out_5083888702787482478[37] = 0;
   out_5083888702787482478[38] = 0;
   out_5083888702787482478[39] = 0;
   out_5083888702787482478[40] = 0;
   out_5083888702787482478[41] = 0;
   out_5083888702787482478[42] = 0;
   out_5083888702787482478[43] = 0;
   out_5083888702787482478[44] = 0;
   out_5083888702787482478[45] = 0;
   out_5083888702787482478[46] = 1;
   out_5083888702787482478[47] = 0;
   out_5083888702787482478[48] = 0;
   out_5083888702787482478[49] = 0;
   out_5083888702787482478[50] = 0;
   out_5083888702787482478[51] = 0;
   out_5083888702787482478[52] = 0;
   out_5083888702787482478[53] = 0;
   out_5083888702787482478[54] = 0;
   out_5083888702787482478[55] = 0;
   out_5083888702787482478[56] = 0;
   out_5083888702787482478[57] = 0;
   out_5083888702787482478[58] = 0;
   out_5083888702787482478[59] = 0;
   out_5083888702787482478[60] = 0;
   out_5083888702787482478[61] = 0;
   out_5083888702787482478[62] = 0;
   out_5083888702787482478[63] = 0;
   out_5083888702787482478[64] = 0;
   out_5083888702787482478[65] = 0;
}
void h_35(double *state, double *unused, double *out_5960904059274196640) {
   out_5960904059274196640[0] = state[7];
   out_5960904059274196640[1] = state[8];
   out_5960904059274196640[2] = state[9];
}
void H_35(double *state, double *unused, double *out_3431094352128128059) {
   out_3431094352128128059[0] = 0;
   out_3431094352128128059[1] = 0;
   out_3431094352128128059[2] = 0;
   out_3431094352128128059[3] = 0;
   out_3431094352128128059[4] = 0;
   out_3431094352128128059[5] = 0;
   out_3431094352128128059[6] = 0;
   out_3431094352128128059[7] = 1;
   out_3431094352128128059[8] = 0;
   out_3431094352128128059[9] = 0;
   out_3431094352128128059[10] = 0;
   out_3431094352128128059[11] = 0;
   out_3431094352128128059[12] = 0;
   out_3431094352128128059[13] = 0;
   out_3431094352128128059[14] = 0;
   out_3431094352128128059[15] = 0;
   out_3431094352128128059[16] = 0;
   out_3431094352128128059[17] = 0;
   out_3431094352128128059[18] = 0;
   out_3431094352128128059[19] = 0;
   out_3431094352128128059[20] = 0;
   out_3431094352128128059[21] = 0;
   out_3431094352128128059[22] = 0;
   out_3431094352128128059[23] = 0;
   out_3431094352128128059[24] = 0;
   out_3431094352128128059[25] = 0;
   out_3431094352128128059[26] = 0;
   out_3431094352128128059[27] = 0;
   out_3431094352128128059[28] = 0;
   out_3431094352128128059[29] = 0;
   out_3431094352128128059[30] = 1;
   out_3431094352128128059[31] = 0;
   out_3431094352128128059[32] = 0;
   out_3431094352128128059[33] = 0;
   out_3431094352128128059[34] = 0;
   out_3431094352128128059[35] = 0;
   out_3431094352128128059[36] = 0;
   out_3431094352128128059[37] = 0;
   out_3431094352128128059[38] = 0;
   out_3431094352128128059[39] = 0;
   out_3431094352128128059[40] = 0;
   out_3431094352128128059[41] = 0;
   out_3431094352128128059[42] = 0;
   out_3431094352128128059[43] = 0;
   out_3431094352128128059[44] = 0;
   out_3431094352128128059[45] = 0;
   out_3431094352128128059[46] = 0;
   out_3431094352128128059[47] = 0;
   out_3431094352128128059[48] = 0;
   out_3431094352128128059[49] = 0;
   out_3431094352128128059[50] = 0;
   out_3431094352128128059[51] = 0;
   out_3431094352128128059[52] = 0;
   out_3431094352128128059[53] = 1;
   out_3431094352128128059[54] = 0;
   out_3431094352128128059[55] = 0;
   out_3431094352128128059[56] = 0;
   out_3431094352128128059[57] = 0;
   out_3431094352128128059[58] = 0;
   out_3431094352128128059[59] = 0;
   out_3431094352128128059[60] = 0;
   out_3431094352128128059[61] = 0;
   out_3431094352128128059[62] = 0;
   out_3431094352128128059[63] = 0;
   out_3431094352128128059[64] = 0;
   out_3431094352128128059[65] = 0;
}
void h_32(double *state, double *unused, double *out_399077247054625143) {
   out_399077247054625143[0] = state[3];
   out_399077247054625143[1] = state[4];
   out_399077247054625143[2] = state[5];
   out_399077247054625143[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3483770151565988297) {
   out_3483770151565988297[0] = 0;
   out_3483770151565988297[1] = 0;
   out_3483770151565988297[2] = 0;
   out_3483770151565988297[3] = 1;
   out_3483770151565988297[4] = 0;
   out_3483770151565988297[5] = 0;
   out_3483770151565988297[6] = 0;
   out_3483770151565988297[7] = 0;
   out_3483770151565988297[8] = 0;
   out_3483770151565988297[9] = 0;
   out_3483770151565988297[10] = 0;
   out_3483770151565988297[11] = 0;
   out_3483770151565988297[12] = 0;
   out_3483770151565988297[13] = 0;
   out_3483770151565988297[14] = 0;
   out_3483770151565988297[15] = 0;
   out_3483770151565988297[16] = 0;
   out_3483770151565988297[17] = 0;
   out_3483770151565988297[18] = 0;
   out_3483770151565988297[19] = 0;
   out_3483770151565988297[20] = 0;
   out_3483770151565988297[21] = 0;
   out_3483770151565988297[22] = 0;
   out_3483770151565988297[23] = 0;
   out_3483770151565988297[24] = 0;
   out_3483770151565988297[25] = 0;
   out_3483770151565988297[26] = 1;
   out_3483770151565988297[27] = 0;
   out_3483770151565988297[28] = 0;
   out_3483770151565988297[29] = 0;
   out_3483770151565988297[30] = 0;
   out_3483770151565988297[31] = 0;
   out_3483770151565988297[32] = 0;
   out_3483770151565988297[33] = 0;
   out_3483770151565988297[34] = 0;
   out_3483770151565988297[35] = 0;
   out_3483770151565988297[36] = 0;
   out_3483770151565988297[37] = 0;
   out_3483770151565988297[38] = 0;
   out_3483770151565988297[39] = 0;
   out_3483770151565988297[40] = 0;
   out_3483770151565988297[41] = 0;
   out_3483770151565988297[42] = 0;
   out_3483770151565988297[43] = 0;
   out_3483770151565988297[44] = 0;
   out_3483770151565988297[45] = 0;
   out_3483770151565988297[46] = 0;
   out_3483770151565988297[47] = 0;
   out_3483770151565988297[48] = 0;
   out_3483770151565988297[49] = 1;
   out_3483770151565988297[50] = 0;
   out_3483770151565988297[51] = 0;
   out_3483770151565988297[52] = 0;
   out_3483770151565988297[53] = 0;
   out_3483770151565988297[54] = 0;
   out_3483770151565988297[55] = 0;
   out_3483770151565988297[56] = 0;
   out_3483770151565988297[57] = 0;
   out_3483770151565988297[58] = 0;
   out_3483770151565988297[59] = 0;
   out_3483770151565988297[60] = 0;
   out_3483770151565988297[61] = 0;
   out_3483770151565988297[62] = 0;
   out_3483770151565988297[63] = 0;
   out_3483770151565988297[64] = 0;
   out_3483770151565988297[65] = 0;
   out_3483770151565988297[66] = 0;
   out_3483770151565988297[67] = 0;
   out_3483770151565988297[68] = 0;
   out_3483770151565988297[69] = 0;
   out_3483770151565988297[70] = 0;
   out_3483770151565988297[71] = 0;
   out_3483770151565988297[72] = 1;
   out_3483770151565988297[73] = 0;
   out_3483770151565988297[74] = 0;
   out_3483770151565988297[75] = 0;
   out_3483770151565988297[76] = 0;
   out_3483770151565988297[77] = 0;
   out_3483770151565988297[78] = 0;
   out_3483770151565988297[79] = 0;
   out_3483770151565988297[80] = 0;
   out_3483770151565988297[81] = 0;
   out_3483770151565988297[82] = 0;
   out_3483770151565988297[83] = 0;
   out_3483770151565988297[84] = 0;
   out_3483770151565988297[85] = 0;
   out_3483770151565988297[86] = 0;
   out_3483770151565988297[87] = 0;
}
void h_13(double *state, double *unused, double *out_1766360362991308823) {
   out_1766360362991308823[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1766360362991308823[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1766360362991308823[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_3077121015373356563) {
   out_3077121015373356563[0] = 0;
   out_3077121015373356563[1] = 0;
   out_3077121015373356563[2] = 0;
   out_3077121015373356563[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3077121015373356563[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3077121015373356563[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_3077121015373356563[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3077121015373356563[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_3077121015373356563[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_3077121015373356563[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_3077121015373356563[10] = 0;
   out_3077121015373356563[11] = 0;
   out_3077121015373356563[12] = 0;
   out_3077121015373356563[13] = 0;
   out_3077121015373356563[14] = 0;
   out_3077121015373356563[15] = 0;
   out_3077121015373356563[16] = 0;
   out_3077121015373356563[17] = 0;
   out_3077121015373356563[18] = 0;
   out_3077121015373356563[19] = 0;
   out_3077121015373356563[20] = 0;
   out_3077121015373356563[21] = 0;
   out_3077121015373356563[22] = 0;
   out_3077121015373356563[23] = 0;
   out_3077121015373356563[24] = 0;
   out_3077121015373356563[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3077121015373356563[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3077121015373356563[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3077121015373356563[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_3077121015373356563[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_3077121015373356563[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_3077121015373356563[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_3077121015373356563[32] = 0;
   out_3077121015373356563[33] = 0;
   out_3077121015373356563[34] = 0;
   out_3077121015373356563[35] = 0;
   out_3077121015373356563[36] = 0;
   out_3077121015373356563[37] = 0;
   out_3077121015373356563[38] = 0;
   out_3077121015373356563[39] = 0;
   out_3077121015373356563[40] = 0;
   out_3077121015373356563[41] = 0;
   out_3077121015373356563[42] = 0;
   out_3077121015373356563[43] = 0;
   out_3077121015373356563[44] = 0;
   out_3077121015373356563[45] = 0;
   out_3077121015373356563[46] = 0;
   out_3077121015373356563[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3077121015373356563[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_3077121015373356563[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3077121015373356563[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3077121015373356563[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_3077121015373356563[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_3077121015373356563[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_3077121015373356563[54] = 0;
   out_3077121015373356563[55] = 0;
   out_3077121015373356563[56] = 0;
   out_3077121015373356563[57] = 0;
   out_3077121015373356563[58] = 0;
   out_3077121015373356563[59] = 0;
   out_3077121015373356563[60] = 0;
   out_3077121015373356563[61] = 0;
   out_3077121015373356563[62] = 0;
   out_3077121015373356563[63] = 0;
   out_3077121015373356563[64] = 0;
   out_3077121015373356563[65] = 0;
}
void h_14(double *state, double *unused, double *out_962282062680152287) {
   out_962282062680152287[0] = state[10];
   out_962282062680152287[1] = state[11];
   out_962282062680152287[2] = state[12];
}
void H_14(double *state, double *unused, double *out_305621941385111328) {
   out_305621941385111328[0] = 0;
   out_305621941385111328[1] = 0;
   out_305621941385111328[2] = 0;
   out_305621941385111328[3] = 0;
   out_305621941385111328[4] = 0;
   out_305621941385111328[5] = 0;
   out_305621941385111328[6] = 0;
   out_305621941385111328[7] = 0;
   out_305621941385111328[8] = 0;
   out_305621941385111328[9] = 0;
   out_305621941385111328[10] = 1;
   out_305621941385111328[11] = 0;
   out_305621941385111328[12] = 0;
   out_305621941385111328[13] = 0;
   out_305621941385111328[14] = 0;
   out_305621941385111328[15] = 0;
   out_305621941385111328[16] = 0;
   out_305621941385111328[17] = 0;
   out_305621941385111328[18] = 0;
   out_305621941385111328[19] = 0;
   out_305621941385111328[20] = 0;
   out_305621941385111328[21] = 0;
   out_305621941385111328[22] = 0;
   out_305621941385111328[23] = 0;
   out_305621941385111328[24] = 0;
   out_305621941385111328[25] = 0;
   out_305621941385111328[26] = 0;
   out_305621941385111328[27] = 0;
   out_305621941385111328[28] = 0;
   out_305621941385111328[29] = 0;
   out_305621941385111328[30] = 0;
   out_305621941385111328[31] = 0;
   out_305621941385111328[32] = 0;
   out_305621941385111328[33] = 1;
   out_305621941385111328[34] = 0;
   out_305621941385111328[35] = 0;
   out_305621941385111328[36] = 0;
   out_305621941385111328[37] = 0;
   out_305621941385111328[38] = 0;
   out_305621941385111328[39] = 0;
   out_305621941385111328[40] = 0;
   out_305621941385111328[41] = 0;
   out_305621941385111328[42] = 0;
   out_305621941385111328[43] = 0;
   out_305621941385111328[44] = 0;
   out_305621941385111328[45] = 0;
   out_305621941385111328[46] = 0;
   out_305621941385111328[47] = 0;
   out_305621941385111328[48] = 0;
   out_305621941385111328[49] = 0;
   out_305621941385111328[50] = 0;
   out_305621941385111328[51] = 0;
   out_305621941385111328[52] = 0;
   out_305621941385111328[53] = 0;
   out_305621941385111328[54] = 0;
   out_305621941385111328[55] = 0;
   out_305621941385111328[56] = 1;
   out_305621941385111328[57] = 0;
   out_305621941385111328[58] = 0;
   out_305621941385111328[59] = 0;
   out_305621941385111328[60] = 0;
   out_305621941385111328[61] = 0;
   out_305621941385111328[62] = 0;
   out_305621941385111328[63] = 0;
   out_305621941385111328[64] = 0;
   out_305621941385111328[65] = 0;
}
void h_33(double *state, double *unused, double *out_8101535004934603320) {
   out_8101535004934603320[0] = state[16];
   out_8101535004934603320[1] = state[17];
   out_8101535004934603320[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6581651356766985663) {
   out_6581651356766985663[0] = 0;
   out_6581651356766985663[1] = 0;
   out_6581651356766985663[2] = 0;
   out_6581651356766985663[3] = 0;
   out_6581651356766985663[4] = 0;
   out_6581651356766985663[5] = 0;
   out_6581651356766985663[6] = 0;
   out_6581651356766985663[7] = 0;
   out_6581651356766985663[8] = 0;
   out_6581651356766985663[9] = 0;
   out_6581651356766985663[10] = 0;
   out_6581651356766985663[11] = 0;
   out_6581651356766985663[12] = 0;
   out_6581651356766985663[13] = 0;
   out_6581651356766985663[14] = 0;
   out_6581651356766985663[15] = 0;
   out_6581651356766985663[16] = 1;
   out_6581651356766985663[17] = 0;
   out_6581651356766985663[18] = 0;
   out_6581651356766985663[19] = 0;
   out_6581651356766985663[20] = 0;
   out_6581651356766985663[21] = 0;
   out_6581651356766985663[22] = 0;
   out_6581651356766985663[23] = 0;
   out_6581651356766985663[24] = 0;
   out_6581651356766985663[25] = 0;
   out_6581651356766985663[26] = 0;
   out_6581651356766985663[27] = 0;
   out_6581651356766985663[28] = 0;
   out_6581651356766985663[29] = 0;
   out_6581651356766985663[30] = 0;
   out_6581651356766985663[31] = 0;
   out_6581651356766985663[32] = 0;
   out_6581651356766985663[33] = 0;
   out_6581651356766985663[34] = 0;
   out_6581651356766985663[35] = 0;
   out_6581651356766985663[36] = 0;
   out_6581651356766985663[37] = 0;
   out_6581651356766985663[38] = 0;
   out_6581651356766985663[39] = 1;
   out_6581651356766985663[40] = 0;
   out_6581651356766985663[41] = 0;
   out_6581651356766985663[42] = 0;
   out_6581651356766985663[43] = 0;
   out_6581651356766985663[44] = 0;
   out_6581651356766985663[45] = 0;
   out_6581651356766985663[46] = 0;
   out_6581651356766985663[47] = 0;
   out_6581651356766985663[48] = 0;
   out_6581651356766985663[49] = 0;
   out_6581651356766985663[50] = 0;
   out_6581651356766985663[51] = 0;
   out_6581651356766985663[52] = 0;
   out_6581651356766985663[53] = 0;
   out_6581651356766985663[54] = 0;
   out_6581651356766985663[55] = 0;
   out_6581651356766985663[56] = 0;
   out_6581651356766985663[57] = 0;
   out_6581651356766985663[58] = 0;
   out_6581651356766985663[59] = 0;
   out_6581651356766985663[60] = 0;
   out_6581651356766985663[61] = 0;
   out_6581651356766985663[62] = 1;
   out_6581651356766985663[63] = 0;
   out_6581651356766985663[64] = 0;
   out_6581651356766985663[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7348161231676323022) {
  H(in_vec, out_7348161231676323022);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3514761385177869280) {
  err_fun(nom_x, delta_x, out_3514761385177869280);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6989424054645819575) {
  inv_err_fun(nom_x, true_x, out_6989424054645819575);
}
void live_H_mod_fun(double *state, double *out_7058086579004359708) {
  H_mod_fun(state, out_7058086579004359708);
}
void live_f_fun(double *state, double dt, double *out_317221309957908809) {
  f_fun(state,  dt, out_317221309957908809);
}
void live_F_fun(double *state, double dt, double *out_1805483189459299481) {
  F_fun(state,  dt, out_1805483189459299481);
}
void live_h_4(double *state, double *unused, double *out_5345287883162353815) {
  h_4(state, unused, out_5345287883162353815);
}
void live_H_4(double *state, double *unused, double *out_64432294755520683) {
  H_4(state, unused, out_64432294755520683);
}
void live_h_9(double *state, double *unused, double *out_962282062680152287) {
  h_9(state, unused, out_962282062680152287);
}
void live_H_9(double *state, double *unused, double *out_305621941385111328) {
  H_9(state, unused, out_305621941385111328);
}
void live_h_10(double *state, double *unused, double *out_7208629002103434345) {
  h_10(state, unused, out_7208629002103434345);
}
void live_H_10(double *state, double *unused, double *out_5295792703852274162) {
  H_10(state, unused, out_5295792703852274162);
}
void live_h_12(double *state, double *unused, double *out_3100640762477255547) {
  h_12(state, unused, out_3100640762477255547);
}
void live_H_12(double *state, double *unused, double *out_5083888702787482478) {
  H_12(state, unused, out_5083888702787482478);
}
void live_h_35(double *state, double *unused, double *out_5960904059274196640) {
  h_35(state, unused, out_5960904059274196640);
}
void live_H_35(double *state, double *unused, double *out_3431094352128128059) {
  H_35(state, unused, out_3431094352128128059);
}
void live_h_32(double *state, double *unused, double *out_399077247054625143) {
  h_32(state, unused, out_399077247054625143);
}
void live_H_32(double *state, double *unused, double *out_3483770151565988297) {
  H_32(state, unused, out_3483770151565988297);
}
void live_h_13(double *state, double *unused, double *out_1766360362991308823) {
  h_13(state, unused, out_1766360362991308823);
}
void live_H_13(double *state, double *unused, double *out_3077121015373356563) {
  H_13(state, unused, out_3077121015373356563);
}
void live_h_14(double *state, double *unused, double *out_962282062680152287) {
  h_14(state, unused, out_962282062680152287);
}
void live_H_14(double *state, double *unused, double *out_305621941385111328) {
  H_14(state, unused, out_305621941385111328);
}
void live_h_33(double *state, double *unused, double *out_8101535004934603320) {
  h_33(state, unused, out_8101535004934603320);
}
void live_H_33(double *state, double *unused, double *out_6581651356766985663) {
  H_33(state, unused, out_6581651356766985663);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
