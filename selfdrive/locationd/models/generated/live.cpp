#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4693309722997385379) {
   out_4693309722997385379[0] = 0;
   out_4693309722997385379[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4693309722997385379[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4693309722997385379[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4693309722997385379[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4693309722997385379[5] = -sin(in_vec[1]);
   out_4693309722997385379[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4693309722997385379[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4693309722997385379[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4693309722997385379[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4693309722997385379[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4693309722997385379[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4693309722997385379[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4693309722997385379[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4693309722997385379[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4693309722997385379[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4693309722997385379[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4693309722997385379[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3625667551731442467) {
   out_3625667551731442467[0] = delta_x[0] + nom_x[0];
   out_3625667551731442467[1] = delta_x[1] + nom_x[1];
   out_3625667551731442467[2] = delta_x[2] + nom_x[2];
   out_3625667551731442467[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3625667551731442467[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3625667551731442467[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3625667551731442467[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3625667551731442467[7] = delta_x[6] + nom_x[7];
   out_3625667551731442467[8] = delta_x[7] + nom_x[8];
   out_3625667551731442467[9] = delta_x[8] + nom_x[9];
   out_3625667551731442467[10] = delta_x[9] + nom_x[10];
   out_3625667551731442467[11] = delta_x[10] + nom_x[11];
   out_3625667551731442467[12] = delta_x[11] + nom_x[12];
   out_3625667551731442467[13] = delta_x[12] + nom_x[13];
   out_3625667551731442467[14] = delta_x[13] + nom_x[14];
   out_3625667551731442467[15] = delta_x[14] + nom_x[15];
   out_3625667551731442467[16] = delta_x[15] + nom_x[16];
   out_3625667551731442467[17] = delta_x[16] + nom_x[17];
   out_3625667551731442467[18] = delta_x[17] + nom_x[18];
   out_3625667551731442467[19] = delta_x[18] + nom_x[19];
   out_3625667551731442467[20] = delta_x[19] + nom_x[20];
   out_3625667551731442467[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1397906555224212298) {
   out_1397906555224212298[0] = -nom_x[0] + true_x[0];
   out_1397906555224212298[1] = -nom_x[1] + true_x[1];
   out_1397906555224212298[2] = -nom_x[2] + true_x[2];
   out_1397906555224212298[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1397906555224212298[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1397906555224212298[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1397906555224212298[6] = -nom_x[7] + true_x[7];
   out_1397906555224212298[7] = -nom_x[8] + true_x[8];
   out_1397906555224212298[8] = -nom_x[9] + true_x[9];
   out_1397906555224212298[9] = -nom_x[10] + true_x[10];
   out_1397906555224212298[10] = -nom_x[11] + true_x[11];
   out_1397906555224212298[11] = -nom_x[12] + true_x[12];
   out_1397906555224212298[12] = -nom_x[13] + true_x[13];
   out_1397906555224212298[13] = -nom_x[14] + true_x[14];
   out_1397906555224212298[14] = -nom_x[15] + true_x[15];
   out_1397906555224212298[15] = -nom_x[16] + true_x[16];
   out_1397906555224212298[16] = -nom_x[17] + true_x[17];
   out_1397906555224212298[17] = -nom_x[18] + true_x[18];
   out_1397906555224212298[18] = -nom_x[19] + true_x[19];
   out_1397906555224212298[19] = -nom_x[20] + true_x[20];
   out_1397906555224212298[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5175308474310760537) {
   out_5175308474310760537[0] = 1.0;
   out_5175308474310760537[1] = 0;
   out_5175308474310760537[2] = 0;
   out_5175308474310760537[3] = 0;
   out_5175308474310760537[4] = 0;
   out_5175308474310760537[5] = 0;
   out_5175308474310760537[6] = 0;
   out_5175308474310760537[7] = 0;
   out_5175308474310760537[8] = 0;
   out_5175308474310760537[9] = 0;
   out_5175308474310760537[10] = 0;
   out_5175308474310760537[11] = 0;
   out_5175308474310760537[12] = 0;
   out_5175308474310760537[13] = 0;
   out_5175308474310760537[14] = 0;
   out_5175308474310760537[15] = 0;
   out_5175308474310760537[16] = 0;
   out_5175308474310760537[17] = 0;
   out_5175308474310760537[18] = 0;
   out_5175308474310760537[19] = 0;
   out_5175308474310760537[20] = 0;
   out_5175308474310760537[21] = 0;
   out_5175308474310760537[22] = 1.0;
   out_5175308474310760537[23] = 0;
   out_5175308474310760537[24] = 0;
   out_5175308474310760537[25] = 0;
   out_5175308474310760537[26] = 0;
   out_5175308474310760537[27] = 0;
   out_5175308474310760537[28] = 0;
   out_5175308474310760537[29] = 0;
   out_5175308474310760537[30] = 0;
   out_5175308474310760537[31] = 0;
   out_5175308474310760537[32] = 0;
   out_5175308474310760537[33] = 0;
   out_5175308474310760537[34] = 0;
   out_5175308474310760537[35] = 0;
   out_5175308474310760537[36] = 0;
   out_5175308474310760537[37] = 0;
   out_5175308474310760537[38] = 0;
   out_5175308474310760537[39] = 0;
   out_5175308474310760537[40] = 0;
   out_5175308474310760537[41] = 0;
   out_5175308474310760537[42] = 0;
   out_5175308474310760537[43] = 0;
   out_5175308474310760537[44] = 1.0;
   out_5175308474310760537[45] = 0;
   out_5175308474310760537[46] = 0;
   out_5175308474310760537[47] = 0;
   out_5175308474310760537[48] = 0;
   out_5175308474310760537[49] = 0;
   out_5175308474310760537[50] = 0;
   out_5175308474310760537[51] = 0;
   out_5175308474310760537[52] = 0;
   out_5175308474310760537[53] = 0;
   out_5175308474310760537[54] = 0;
   out_5175308474310760537[55] = 0;
   out_5175308474310760537[56] = 0;
   out_5175308474310760537[57] = 0;
   out_5175308474310760537[58] = 0;
   out_5175308474310760537[59] = 0;
   out_5175308474310760537[60] = 0;
   out_5175308474310760537[61] = 0;
   out_5175308474310760537[62] = 0;
   out_5175308474310760537[63] = 0;
   out_5175308474310760537[64] = 0;
   out_5175308474310760537[65] = 0;
   out_5175308474310760537[66] = -0.5*state[4];
   out_5175308474310760537[67] = -0.5*state[5];
   out_5175308474310760537[68] = -0.5*state[6];
   out_5175308474310760537[69] = 0;
   out_5175308474310760537[70] = 0;
   out_5175308474310760537[71] = 0;
   out_5175308474310760537[72] = 0;
   out_5175308474310760537[73] = 0;
   out_5175308474310760537[74] = 0;
   out_5175308474310760537[75] = 0;
   out_5175308474310760537[76] = 0;
   out_5175308474310760537[77] = 0;
   out_5175308474310760537[78] = 0;
   out_5175308474310760537[79] = 0;
   out_5175308474310760537[80] = 0;
   out_5175308474310760537[81] = 0;
   out_5175308474310760537[82] = 0;
   out_5175308474310760537[83] = 0;
   out_5175308474310760537[84] = 0;
   out_5175308474310760537[85] = 0;
   out_5175308474310760537[86] = 0;
   out_5175308474310760537[87] = 0.5*state[3];
   out_5175308474310760537[88] = 0.5*state[6];
   out_5175308474310760537[89] = -0.5*state[5];
   out_5175308474310760537[90] = 0;
   out_5175308474310760537[91] = 0;
   out_5175308474310760537[92] = 0;
   out_5175308474310760537[93] = 0;
   out_5175308474310760537[94] = 0;
   out_5175308474310760537[95] = 0;
   out_5175308474310760537[96] = 0;
   out_5175308474310760537[97] = 0;
   out_5175308474310760537[98] = 0;
   out_5175308474310760537[99] = 0;
   out_5175308474310760537[100] = 0;
   out_5175308474310760537[101] = 0;
   out_5175308474310760537[102] = 0;
   out_5175308474310760537[103] = 0;
   out_5175308474310760537[104] = 0;
   out_5175308474310760537[105] = 0;
   out_5175308474310760537[106] = 0;
   out_5175308474310760537[107] = 0;
   out_5175308474310760537[108] = -0.5*state[6];
   out_5175308474310760537[109] = 0.5*state[3];
   out_5175308474310760537[110] = 0.5*state[4];
   out_5175308474310760537[111] = 0;
   out_5175308474310760537[112] = 0;
   out_5175308474310760537[113] = 0;
   out_5175308474310760537[114] = 0;
   out_5175308474310760537[115] = 0;
   out_5175308474310760537[116] = 0;
   out_5175308474310760537[117] = 0;
   out_5175308474310760537[118] = 0;
   out_5175308474310760537[119] = 0;
   out_5175308474310760537[120] = 0;
   out_5175308474310760537[121] = 0;
   out_5175308474310760537[122] = 0;
   out_5175308474310760537[123] = 0;
   out_5175308474310760537[124] = 0;
   out_5175308474310760537[125] = 0;
   out_5175308474310760537[126] = 0;
   out_5175308474310760537[127] = 0;
   out_5175308474310760537[128] = 0;
   out_5175308474310760537[129] = 0.5*state[5];
   out_5175308474310760537[130] = -0.5*state[4];
   out_5175308474310760537[131] = 0.5*state[3];
   out_5175308474310760537[132] = 0;
   out_5175308474310760537[133] = 0;
   out_5175308474310760537[134] = 0;
   out_5175308474310760537[135] = 0;
   out_5175308474310760537[136] = 0;
   out_5175308474310760537[137] = 0;
   out_5175308474310760537[138] = 0;
   out_5175308474310760537[139] = 0;
   out_5175308474310760537[140] = 0;
   out_5175308474310760537[141] = 0;
   out_5175308474310760537[142] = 0;
   out_5175308474310760537[143] = 0;
   out_5175308474310760537[144] = 0;
   out_5175308474310760537[145] = 0;
   out_5175308474310760537[146] = 0;
   out_5175308474310760537[147] = 0;
   out_5175308474310760537[148] = 0;
   out_5175308474310760537[149] = 0;
   out_5175308474310760537[150] = 0;
   out_5175308474310760537[151] = 0;
   out_5175308474310760537[152] = 0;
   out_5175308474310760537[153] = 1.0;
   out_5175308474310760537[154] = 0;
   out_5175308474310760537[155] = 0;
   out_5175308474310760537[156] = 0;
   out_5175308474310760537[157] = 0;
   out_5175308474310760537[158] = 0;
   out_5175308474310760537[159] = 0;
   out_5175308474310760537[160] = 0;
   out_5175308474310760537[161] = 0;
   out_5175308474310760537[162] = 0;
   out_5175308474310760537[163] = 0;
   out_5175308474310760537[164] = 0;
   out_5175308474310760537[165] = 0;
   out_5175308474310760537[166] = 0;
   out_5175308474310760537[167] = 0;
   out_5175308474310760537[168] = 0;
   out_5175308474310760537[169] = 0;
   out_5175308474310760537[170] = 0;
   out_5175308474310760537[171] = 0;
   out_5175308474310760537[172] = 0;
   out_5175308474310760537[173] = 0;
   out_5175308474310760537[174] = 0;
   out_5175308474310760537[175] = 1.0;
   out_5175308474310760537[176] = 0;
   out_5175308474310760537[177] = 0;
   out_5175308474310760537[178] = 0;
   out_5175308474310760537[179] = 0;
   out_5175308474310760537[180] = 0;
   out_5175308474310760537[181] = 0;
   out_5175308474310760537[182] = 0;
   out_5175308474310760537[183] = 0;
   out_5175308474310760537[184] = 0;
   out_5175308474310760537[185] = 0;
   out_5175308474310760537[186] = 0;
   out_5175308474310760537[187] = 0;
   out_5175308474310760537[188] = 0;
   out_5175308474310760537[189] = 0;
   out_5175308474310760537[190] = 0;
   out_5175308474310760537[191] = 0;
   out_5175308474310760537[192] = 0;
   out_5175308474310760537[193] = 0;
   out_5175308474310760537[194] = 0;
   out_5175308474310760537[195] = 0;
   out_5175308474310760537[196] = 0;
   out_5175308474310760537[197] = 1.0;
   out_5175308474310760537[198] = 0;
   out_5175308474310760537[199] = 0;
   out_5175308474310760537[200] = 0;
   out_5175308474310760537[201] = 0;
   out_5175308474310760537[202] = 0;
   out_5175308474310760537[203] = 0;
   out_5175308474310760537[204] = 0;
   out_5175308474310760537[205] = 0;
   out_5175308474310760537[206] = 0;
   out_5175308474310760537[207] = 0;
   out_5175308474310760537[208] = 0;
   out_5175308474310760537[209] = 0;
   out_5175308474310760537[210] = 0;
   out_5175308474310760537[211] = 0;
   out_5175308474310760537[212] = 0;
   out_5175308474310760537[213] = 0;
   out_5175308474310760537[214] = 0;
   out_5175308474310760537[215] = 0;
   out_5175308474310760537[216] = 0;
   out_5175308474310760537[217] = 0;
   out_5175308474310760537[218] = 0;
   out_5175308474310760537[219] = 1.0;
   out_5175308474310760537[220] = 0;
   out_5175308474310760537[221] = 0;
   out_5175308474310760537[222] = 0;
   out_5175308474310760537[223] = 0;
   out_5175308474310760537[224] = 0;
   out_5175308474310760537[225] = 0;
   out_5175308474310760537[226] = 0;
   out_5175308474310760537[227] = 0;
   out_5175308474310760537[228] = 0;
   out_5175308474310760537[229] = 0;
   out_5175308474310760537[230] = 0;
   out_5175308474310760537[231] = 0;
   out_5175308474310760537[232] = 0;
   out_5175308474310760537[233] = 0;
   out_5175308474310760537[234] = 0;
   out_5175308474310760537[235] = 0;
   out_5175308474310760537[236] = 0;
   out_5175308474310760537[237] = 0;
   out_5175308474310760537[238] = 0;
   out_5175308474310760537[239] = 0;
   out_5175308474310760537[240] = 0;
   out_5175308474310760537[241] = 1.0;
   out_5175308474310760537[242] = 0;
   out_5175308474310760537[243] = 0;
   out_5175308474310760537[244] = 0;
   out_5175308474310760537[245] = 0;
   out_5175308474310760537[246] = 0;
   out_5175308474310760537[247] = 0;
   out_5175308474310760537[248] = 0;
   out_5175308474310760537[249] = 0;
   out_5175308474310760537[250] = 0;
   out_5175308474310760537[251] = 0;
   out_5175308474310760537[252] = 0;
   out_5175308474310760537[253] = 0;
   out_5175308474310760537[254] = 0;
   out_5175308474310760537[255] = 0;
   out_5175308474310760537[256] = 0;
   out_5175308474310760537[257] = 0;
   out_5175308474310760537[258] = 0;
   out_5175308474310760537[259] = 0;
   out_5175308474310760537[260] = 0;
   out_5175308474310760537[261] = 0;
   out_5175308474310760537[262] = 0;
   out_5175308474310760537[263] = 1.0;
   out_5175308474310760537[264] = 0;
   out_5175308474310760537[265] = 0;
   out_5175308474310760537[266] = 0;
   out_5175308474310760537[267] = 0;
   out_5175308474310760537[268] = 0;
   out_5175308474310760537[269] = 0;
   out_5175308474310760537[270] = 0;
   out_5175308474310760537[271] = 0;
   out_5175308474310760537[272] = 0;
   out_5175308474310760537[273] = 0;
   out_5175308474310760537[274] = 0;
   out_5175308474310760537[275] = 0;
   out_5175308474310760537[276] = 0;
   out_5175308474310760537[277] = 0;
   out_5175308474310760537[278] = 0;
   out_5175308474310760537[279] = 0;
   out_5175308474310760537[280] = 0;
   out_5175308474310760537[281] = 0;
   out_5175308474310760537[282] = 0;
   out_5175308474310760537[283] = 0;
   out_5175308474310760537[284] = 0;
   out_5175308474310760537[285] = 1.0;
   out_5175308474310760537[286] = 0;
   out_5175308474310760537[287] = 0;
   out_5175308474310760537[288] = 0;
   out_5175308474310760537[289] = 0;
   out_5175308474310760537[290] = 0;
   out_5175308474310760537[291] = 0;
   out_5175308474310760537[292] = 0;
   out_5175308474310760537[293] = 0;
   out_5175308474310760537[294] = 0;
   out_5175308474310760537[295] = 0;
   out_5175308474310760537[296] = 0;
   out_5175308474310760537[297] = 0;
   out_5175308474310760537[298] = 0;
   out_5175308474310760537[299] = 0;
   out_5175308474310760537[300] = 0;
   out_5175308474310760537[301] = 0;
   out_5175308474310760537[302] = 0;
   out_5175308474310760537[303] = 0;
   out_5175308474310760537[304] = 0;
   out_5175308474310760537[305] = 0;
   out_5175308474310760537[306] = 0;
   out_5175308474310760537[307] = 1.0;
   out_5175308474310760537[308] = 0;
   out_5175308474310760537[309] = 0;
   out_5175308474310760537[310] = 0;
   out_5175308474310760537[311] = 0;
   out_5175308474310760537[312] = 0;
   out_5175308474310760537[313] = 0;
   out_5175308474310760537[314] = 0;
   out_5175308474310760537[315] = 0;
   out_5175308474310760537[316] = 0;
   out_5175308474310760537[317] = 0;
   out_5175308474310760537[318] = 0;
   out_5175308474310760537[319] = 0;
   out_5175308474310760537[320] = 0;
   out_5175308474310760537[321] = 0;
   out_5175308474310760537[322] = 0;
   out_5175308474310760537[323] = 0;
   out_5175308474310760537[324] = 0;
   out_5175308474310760537[325] = 0;
   out_5175308474310760537[326] = 0;
   out_5175308474310760537[327] = 0;
   out_5175308474310760537[328] = 0;
   out_5175308474310760537[329] = 1.0;
   out_5175308474310760537[330] = 0;
   out_5175308474310760537[331] = 0;
   out_5175308474310760537[332] = 0;
   out_5175308474310760537[333] = 0;
   out_5175308474310760537[334] = 0;
   out_5175308474310760537[335] = 0;
   out_5175308474310760537[336] = 0;
   out_5175308474310760537[337] = 0;
   out_5175308474310760537[338] = 0;
   out_5175308474310760537[339] = 0;
   out_5175308474310760537[340] = 0;
   out_5175308474310760537[341] = 0;
   out_5175308474310760537[342] = 0;
   out_5175308474310760537[343] = 0;
   out_5175308474310760537[344] = 0;
   out_5175308474310760537[345] = 0;
   out_5175308474310760537[346] = 0;
   out_5175308474310760537[347] = 0;
   out_5175308474310760537[348] = 0;
   out_5175308474310760537[349] = 0;
   out_5175308474310760537[350] = 0;
   out_5175308474310760537[351] = 1.0;
   out_5175308474310760537[352] = 0;
   out_5175308474310760537[353] = 0;
   out_5175308474310760537[354] = 0;
   out_5175308474310760537[355] = 0;
   out_5175308474310760537[356] = 0;
   out_5175308474310760537[357] = 0;
   out_5175308474310760537[358] = 0;
   out_5175308474310760537[359] = 0;
   out_5175308474310760537[360] = 0;
   out_5175308474310760537[361] = 0;
   out_5175308474310760537[362] = 0;
   out_5175308474310760537[363] = 0;
   out_5175308474310760537[364] = 0;
   out_5175308474310760537[365] = 0;
   out_5175308474310760537[366] = 0;
   out_5175308474310760537[367] = 0;
   out_5175308474310760537[368] = 0;
   out_5175308474310760537[369] = 0;
   out_5175308474310760537[370] = 0;
   out_5175308474310760537[371] = 0;
   out_5175308474310760537[372] = 0;
   out_5175308474310760537[373] = 1.0;
   out_5175308474310760537[374] = 0;
   out_5175308474310760537[375] = 0;
   out_5175308474310760537[376] = 0;
   out_5175308474310760537[377] = 0;
   out_5175308474310760537[378] = 0;
   out_5175308474310760537[379] = 0;
   out_5175308474310760537[380] = 0;
   out_5175308474310760537[381] = 0;
   out_5175308474310760537[382] = 0;
   out_5175308474310760537[383] = 0;
   out_5175308474310760537[384] = 0;
   out_5175308474310760537[385] = 0;
   out_5175308474310760537[386] = 0;
   out_5175308474310760537[387] = 0;
   out_5175308474310760537[388] = 0;
   out_5175308474310760537[389] = 0;
   out_5175308474310760537[390] = 0;
   out_5175308474310760537[391] = 0;
   out_5175308474310760537[392] = 0;
   out_5175308474310760537[393] = 0;
   out_5175308474310760537[394] = 0;
   out_5175308474310760537[395] = 1.0;
   out_5175308474310760537[396] = 0;
   out_5175308474310760537[397] = 0;
   out_5175308474310760537[398] = 0;
   out_5175308474310760537[399] = 0;
   out_5175308474310760537[400] = 0;
   out_5175308474310760537[401] = 0;
   out_5175308474310760537[402] = 0;
   out_5175308474310760537[403] = 0;
   out_5175308474310760537[404] = 0;
   out_5175308474310760537[405] = 0;
   out_5175308474310760537[406] = 0;
   out_5175308474310760537[407] = 0;
   out_5175308474310760537[408] = 0;
   out_5175308474310760537[409] = 0;
   out_5175308474310760537[410] = 0;
   out_5175308474310760537[411] = 0;
   out_5175308474310760537[412] = 0;
   out_5175308474310760537[413] = 0;
   out_5175308474310760537[414] = 0;
   out_5175308474310760537[415] = 0;
   out_5175308474310760537[416] = 0;
   out_5175308474310760537[417] = 1.0;
   out_5175308474310760537[418] = 0;
   out_5175308474310760537[419] = 0;
   out_5175308474310760537[420] = 0;
   out_5175308474310760537[421] = 0;
   out_5175308474310760537[422] = 0;
   out_5175308474310760537[423] = 0;
   out_5175308474310760537[424] = 0;
   out_5175308474310760537[425] = 0;
   out_5175308474310760537[426] = 0;
   out_5175308474310760537[427] = 0;
   out_5175308474310760537[428] = 0;
   out_5175308474310760537[429] = 0;
   out_5175308474310760537[430] = 0;
   out_5175308474310760537[431] = 0;
   out_5175308474310760537[432] = 0;
   out_5175308474310760537[433] = 0;
   out_5175308474310760537[434] = 0;
   out_5175308474310760537[435] = 0;
   out_5175308474310760537[436] = 0;
   out_5175308474310760537[437] = 0;
   out_5175308474310760537[438] = 0;
   out_5175308474310760537[439] = 1.0;
   out_5175308474310760537[440] = 0;
   out_5175308474310760537[441] = 0;
   out_5175308474310760537[442] = 0;
   out_5175308474310760537[443] = 0;
   out_5175308474310760537[444] = 0;
   out_5175308474310760537[445] = 0;
   out_5175308474310760537[446] = 0;
   out_5175308474310760537[447] = 0;
   out_5175308474310760537[448] = 0;
   out_5175308474310760537[449] = 0;
   out_5175308474310760537[450] = 0;
   out_5175308474310760537[451] = 0;
   out_5175308474310760537[452] = 0;
   out_5175308474310760537[453] = 0;
   out_5175308474310760537[454] = 0;
   out_5175308474310760537[455] = 0;
   out_5175308474310760537[456] = 0;
   out_5175308474310760537[457] = 0;
   out_5175308474310760537[458] = 0;
   out_5175308474310760537[459] = 0;
   out_5175308474310760537[460] = 0;
   out_5175308474310760537[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_209499706770349871) {
   out_209499706770349871[0] = dt*state[7] + state[0];
   out_209499706770349871[1] = dt*state[8] + state[1];
   out_209499706770349871[2] = dt*state[9] + state[2];
   out_209499706770349871[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_209499706770349871[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_209499706770349871[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_209499706770349871[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_209499706770349871[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_209499706770349871[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_209499706770349871[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_209499706770349871[10] = state[10];
   out_209499706770349871[11] = state[11];
   out_209499706770349871[12] = state[12];
   out_209499706770349871[13] = state[13];
   out_209499706770349871[14] = state[14];
   out_209499706770349871[15] = state[15];
   out_209499706770349871[16] = state[16];
   out_209499706770349871[17] = state[17];
   out_209499706770349871[18] = state[18];
   out_209499706770349871[19] = state[19];
   out_209499706770349871[20] = state[20];
   out_209499706770349871[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7267359054831337648) {
   out_7267359054831337648[0] = 1;
   out_7267359054831337648[1] = 0;
   out_7267359054831337648[2] = 0;
   out_7267359054831337648[3] = 0;
   out_7267359054831337648[4] = 0;
   out_7267359054831337648[5] = 0;
   out_7267359054831337648[6] = dt;
   out_7267359054831337648[7] = 0;
   out_7267359054831337648[8] = 0;
   out_7267359054831337648[9] = 0;
   out_7267359054831337648[10] = 0;
   out_7267359054831337648[11] = 0;
   out_7267359054831337648[12] = 0;
   out_7267359054831337648[13] = 0;
   out_7267359054831337648[14] = 0;
   out_7267359054831337648[15] = 0;
   out_7267359054831337648[16] = 0;
   out_7267359054831337648[17] = 0;
   out_7267359054831337648[18] = 0;
   out_7267359054831337648[19] = 0;
   out_7267359054831337648[20] = 0;
   out_7267359054831337648[21] = 0;
   out_7267359054831337648[22] = 1;
   out_7267359054831337648[23] = 0;
   out_7267359054831337648[24] = 0;
   out_7267359054831337648[25] = 0;
   out_7267359054831337648[26] = 0;
   out_7267359054831337648[27] = 0;
   out_7267359054831337648[28] = dt;
   out_7267359054831337648[29] = 0;
   out_7267359054831337648[30] = 0;
   out_7267359054831337648[31] = 0;
   out_7267359054831337648[32] = 0;
   out_7267359054831337648[33] = 0;
   out_7267359054831337648[34] = 0;
   out_7267359054831337648[35] = 0;
   out_7267359054831337648[36] = 0;
   out_7267359054831337648[37] = 0;
   out_7267359054831337648[38] = 0;
   out_7267359054831337648[39] = 0;
   out_7267359054831337648[40] = 0;
   out_7267359054831337648[41] = 0;
   out_7267359054831337648[42] = 0;
   out_7267359054831337648[43] = 0;
   out_7267359054831337648[44] = 1;
   out_7267359054831337648[45] = 0;
   out_7267359054831337648[46] = 0;
   out_7267359054831337648[47] = 0;
   out_7267359054831337648[48] = 0;
   out_7267359054831337648[49] = 0;
   out_7267359054831337648[50] = dt;
   out_7267359054831337648[51] = 0;
   out_7267359054831337648[52] = 0;
   out_7267359054831337648[53] = 0;
   out_7267359054831337648[54] = 0;
   out_7267359054831337648[55] = 0;
   out_7267359054831337648[56] = 0;
   out_7267359054831337648[57] = 0;
   out_7267359054831337648[58] = 0;
   out_7267359054831337648[59] = 0;
   out_7267359054831337648[60] = 0;
   out_7267359054831337648[61] = 0;
   out_7267359054831337648[62] = 0;
   out_7267359054831337648[63] = 0;
   out_7267359054831337648[64] = 0;
   out_7267359054831337648[65] = 0;
   out_7267359054831337648[66] = 1;
   out_7267359054831337648[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7267359054831337648[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7267359054831337648[69] = 0;
   out_7267359054831337648[70] = 0;
   out_7267359054831337648[71] = 0;
   out_7267359054831337648[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7267359054831337648[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7267359054831337648[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7267359054831337648[75] = 0;
   out_7267359054831337648[76] = 0;
   out_7267359054831337648[77] = 0;
   out_7267359054831337648[78] = 0;
   out_7267359054831337648[79] = 0;
   out_7267359054831337648[80] = 0;
   out_7267359054831337648[81] = 0;
   out_7267359054831337648[82] = 0;
   out_7267359054831337648[83] = 0;
   out_7267359054831337648[84] = 0;
   out_7267359054831337648[85] = 0;
   out_7267359054831337648[86] = 0;
   out_7267359054831337648[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7267359054831337648[88] = 1;
   out_7267359054831337648[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7267359054831337648[90] = 0;
   out_7267359054831337648[91] = 0;
   out_7267359054831337648[92] = 0;
   out_7267359054831337648[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7267359054831337648[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7267359054831337648[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7267359054831337648[96] = 0;
   out_7267359054831337648[97] = 0;
   out_7267359054831337648[98] = 0;
   out_7267359054831337648[99] = 0;
   out_7267359054831337648[100] = 0;
   out_7267359054831337648[101] = 0;
   out_7267359054831337648[102] = 0;
   out_7267359054831337648[103] = 0;
   out_7267359054831337648[104] = 0;
   out_7267359054831337648[105] = 0;
   out_7267359054831337648[106] = 0;
   out_7267359054831337648[107] = 0;
   out_7267359054831337648[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7267359054831337648[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7267359054831337648[110] = 1;
   out_7267359054831337648[111] = 0;
   out_7267359054831337648[112] = 0;
   out_7267359054831337648[113] = 0;
   out_7267359054831337648[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7267359054831337648[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7267359054831337648[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7267359054831337648[117] = 0;
   out_7267359054831337648[118] = 0;
   out_7267359054831337648[119] = 0;
   out_7267359054831337648[120] = 0;
   out_7267359054831337648[121] = 0;
   out_7267359054831337648[122] = 0;
   out_7267359054831337648[123] = 0;
   out_7267359054831337648[124] = 0;
   out_7267359054831337648[125] = 0;
   out_7267359054831337648[126] = 0;
   out_7267359054831337648[127] = 0;
   out_7267359054831337648[128] = 0;
   out_7267359054831337648[129] = 0;
   out_7267359054831337648[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7267359054831337648[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7267359054831337648[132] = 1;
   out_7267359054831337648[133] = 0;
   out_7267359054831337648[134] = 0;
   out_7267359054831337648[135] = 0;
   out_7267359054831337648[136] = 0;
   out_7267359054831337648[137] = 0;
   out_7267359054831337648[138] = 0;
   out_7267359054831337648[139] = 0;
   out_7267359054831337648[140] = 0;
   out_7267359054831337648[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7267359054831337648[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7267359054831337648[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7267359054831337648[144] = 0;
   out_7267359054831337648[145] = 0;
   out_7267359054831337648[146] = 0;
   out_7267359054831337648[147] = 0;
   out_7267359054831337648[148] = 0;
   out_7267359054831337648[149] = 0;
   out_7267359054831337648[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7267359054831337648[151] = 0;
   out_7267359054831337648[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7267359054831337648[153] = 0;
   out_7267359054831337648[154] = 1;
   out_7267359054831337648[155] = 0;
   out_7267359054831337648[156] = 0;
   out_7267359054831337648[157] = 0;
   out_7267359054831337648[158] = 0;
   out_7267359054831337648[159] = 0;
   out_7267359054831337648[160] = 0;
   out_7267359054831337648[161] = 0;
   out_7267359054831337648[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7267359054831337648[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7267359054831337648[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7267359054831337648[165] = 0;
   out_7267359054831337648[166] = 0;
   out_7267359054831337648[167] = 0;
   out_7267359054831337648[168] = 0;
   out_7267359054831337648[169] = 0;
   out_7267359054831337648[170] = 0;
   out_7267359054831337648[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7267359054831337648[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7267359054831337648[173] = 0;
   out_7267359054831337648[174] = 0;
   out_7267359054831337648[175] = 0;
   out_7267359054831337648[176] = 1;
   out_7267359054831337648[177] = 0;
   out_7267359054831337648[178] = 0;
   out_7267359054831337648[179] = 0;
   out_7267359054831337648[180] = 0;
   out_7267359054831337648[181] = 0;
   out_7267359054831337648[182] = 0;
   out_7267359054831337648[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7267359054831337648[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7267359054831337648[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7267359054831337648[186] = 0;
   out_7267359054831337648[187] = 0;
   out_7267359054831337648[188] = 0;
   out_7267359054831337648[189] = 0;
   out_7267359054831337648[190] = 0;
   out_7267359054831337648[191] = 0;
   out_7267359054831337648[192] = 0;
   out_7267359054831337648[193] = 0;
   out_7267359054831337648[194] = 0;
   out_7267359054831337648[195] = 0;
   out_7267359054831337648[196] = 0;
   out_7267359054831337648[197] = 0;
   out_7267359054831337648[198] = 1;
   out_7267359054831337648[199] = 0;
   out_7267359054831337648[200] = 0;
   out_7267359054831337648[201] = 0;
   out_7267359054831337648[202] = 0;
   out_7267359054831337648[203] = 0;
   out_7267359054831337648[204] = 0;
   out_7267359054831337648[205] = 0;
   out_7267359054831337648[206] = 0;
   out_7267359054831337648[207] = 0;
   out_7267359054831337648[208] = 0;
   out_7267359054831337648[209] = 0;
   out_7267359054831337648[210] = 0;
   out_7267359054831337648[211] = 0;
   out_7267359054831337648[212] = 0;
   out_7267359054831337648[213] = 0;
   out_7267359054831337648[214] = 0;
   out_7267359054831337648[215] = 0;
   out_7267359054831337648[216] = 0;
   out_7267359054831337648[217] = 0;
   out_7267359054831337648[218] = 0;
   out_7267359054831337648[219] = 0;
   out_7267359054831337648[220] = 1;
   out_7267359054831337648[221] = 0;
   out_7267359054831337648[222] = 0;
   out_7267359054831337648[223] = 0;
   out_7267359054831337648[224] = 0;
   out_7267359054831337648[225] = 0;
   out_7267359054831337648[226] = 0;
   out_7267359054831337648[227] = 0;
   out_7267359054831337648[228] = 0;
   out_7267359054831337648[229] = 0;
   out_7267359054831337648[230] = 0;
   out_7267359054831337648[231] = 0;
   out_7267359054831337648[232] = 0;
   out_7267359054831337648[233] = 0;
   out_7267359054831337648[234] = 0;
   out_7267359054831337648[235] = 0;
   out_7267359054831337648[236] = 0;
   out_7267359054831337648[237] = 0;
   out_7267359054831337648[238] = 0;
   out_7267359054831337648[239] = 0;
   out_7267359054831337648[240] = 0;
   out_7267359054831337648[241] = 0;
   out_7267359054831337648[242] = 1;
   out_7267359054831337648[243] = 0;
   out_7267359054831337648[244] = 0;
   out_7267359054831337648[245] = 0;
   out_7267359054831337648[246] = 0;
   out_7267359054831337648[247] = 0;
   out_7267359054831337648[248] = 0;
   out_7267359054831337648[249] = 0;
   out_7267359054831337648[250] = 0;
   out_7267359054831337648[251] = 0;
   out_7267359054831337648[252] = 0;
   out_7267359054831337648[253] = 0;
   out_7267359054831337648[254] = 0;
   out_7267359054831337648[255] = 0;
   out_7267359054831337648[256] = 0;
   out_7267359054831337648[257] = 0;
   out_7267359054831337648[258] = 0;
   out_7267359054831337648[259] = 0;
   out_7267359054831337648[260] = 0;
   out_7267359054831337648[261] = 0;
   out_7267359054831337648[262] = 0;
   out_7267359054831337648[263] = 0;
   out_7267359054831337648[264] = 1;
   out_7267359054831337648[265] = 0;
   out_7267359054831337648[266] = 0;
   out_7267359054831337648[267] = 0;
   out_7267359054831337648[268] = 0;
   out_7267359054831337648[269] = 0;
   out_7267359054831337648[270] = 0;
   out_7267359054831337648[271] = 0;
   out_7267359054831337648[272] = 0;
   out_7267359054831337648[273] = 0;
   out_7267359054831337648[274] = 0;
   out_7267359054831337648[275] = 0;
   out_7267359054831337648[276] = 0;
   out_7267359054831337648[277] = 0;
   out_7267359054831337648[278] = 0;
   out_7267359054831337648[279] = 0;
   out_7267359054831337648[280] = 0;
   out_7267359054831337648[281] = 0;
   out_7267359054831337648[282] = 0;
   out_7267359054831337648[283] = 0;
   out_7267359054831337648[284] = 0;
   out_7267359054831337648[285] = 0;
   out_7267359054831337648[286] = 1;
   out_7267359054831337648[287] = 0;
   out_7267359054831337648[288] = 0;
   out_7267359054831337648[289] = 0;
   out_7267359054831337648[290] = 0;
   out_7267359054831337648[291] = 0;
   out_7267359054831337648[292] = 0;
   out_7267359054831337648[293] = 0;
   out_7267359054831337648[294] = 0;
   out_7267359054831337648[295] = 0;
   out_7267359054831337648[296] = 0;
   out_7267359054831337648[297] = 0;
   out_7267359054831337648[298] = 0;
   out_7267359054831337648[299] = 0;
   out_7267359054831337648[300] = 0;
   out_7267359054831337648[301] = 0;
   out_7267359054831337648[302] = 0;
   out_7267359054831337648[303] = 0;
   out_7267359054831337648[304] = 0;
   out_7267359054831337648[305] = 0;
   out_7267359054831337648[306] = 0;
   out_7267359054831337648[307] = 0;
   out_7267359054831337648[308] = 1;
   out_7267359054831337648[309] = 0;
   out_7267359054831337648[310] = 0;
   out_7267359054831337648[311] = 0;
   out_7267359054831337648[312] = 0;
   out_7267359054831337648[313] = 0;
   out_7267359054831337648[314] = 0;
   out_7267359054831337648[315] = 0;
   out_7267359054831337648[316] = 0;
   out_7267359054831337648[317] = 0;
   out_7267359054831337648[318] = 0;
   out_7267359054831337648[319] = 0;
   out_7267359054831337648[320] = 0;
   out_7267359054831337648[321] = 0;
   out_7267359054831337648[322] = 0;
   out_7267359054831337648[323] = 0;
   out_7267359054831337648[324] = 0;
   out_7267359054831337648[325] = 0;
   out_7267359054831337648[326] = 0;
   out_7267359054831337648[327] = 0;
   out_7267359054831337648[328] = 0;
   out_7267359054831337648[329] = 0;
   out_7267359054831337648[330] = 1;
   out_7267359054831337648[331] = 0;
   out_7267359054831337648[332] = 0;
   out_7267359054831337648[333] = 0;
   out_7267359054831337648[334] = 0;
   out_7267359054831337648[335] = 0;
   out_7267359054831337648[336] = 0;
   out_7267359054831337648[337] = 0;
   out_7267359054831337648[338] = 0;
   out_7267359054831337648[339] = 0;
   out_7267359054831337648[340] = 0;
   out_7267359054831337648[341] = 0;
   out_7267359054831337648[342] = 0;
   out_7267359054831337648[343] = 0;
   out_7267359054831337648[344] = 0;
   out_7267359054831337648[345] = 0;
   out_7267359054831337648[346] = 0;
   out_7267359054831337648[347] = 0;
   out_7267359054831337648[348] = 0;
   out_7267359054831337648[349] = 0;
   out_7267359054831337648[350] = 0;
   out_7267359054831337648[351] = 0;
   out_7267359054831337648[352] = 1;
   out_7267359054831337648[353] = 0;
   out_7267359054831337648[354] = 0;
   out_7267359054831337648[355] = 0;
   out_7267359054831337648[356] = 0;
   out_7267359054831337648[357] = 0;
   out_7267359054831337648[358] = 0;
   out_7267359054831337648[359] = 0;
   out_7267359054831337648[360] = 0;
   out_7267359054831337648[361] = 0;
   out_7267359054831337648[362] = 0;
   out_7267359054831337648[363] = 0;
   out_7267359054831337648[364] = 0;
   out_7267359054831337648[365] = 0;
   out_7267359054831337648[366] = 0;
   out_7267359054831337648[367] = 0;
   out_7267359054831337648[368] = 0;
   out_7267359054831337648[369] = 0;
   out_7267359054831337648[370] = 0;
   out_7267359054831337648[371] = 0;
   out_7267359054831337648[372] = 0;
   out_7267359054831337648[373] = 0;
   out_7267359054831337648[374] = 1;
   out_7267359054831337648[375] = 0;
   out_7267359054831337648[376] = 0;
   out_7267359054831337648[377] = 0;
   out_7267359054831337648[378] = 0;
   out_7267359054831337648[379] = 0;
   out_7267359054831337648[380] = 0;
   out_7267359054831337648[381] = 0;
   out_7267359054831337648[382] = 0;
   out_7267359054831337648[383] = 0;
   out_7267359054831337648[384] = 0;
   out_7267359054831337648[385] = 0;
   out_7267359054831337648[386] = 0;
   out_7267359054831337648[387] = 0;
   out_7267359054831337648[388] = 0;
   out_7267359054831337648[389] = 0;
   out_7267359054831337648[390] = 0;
   out_7267359054831337648[391] = 0;
   out_7267359054831337648[392] = 0;
   out_7267359054831337648[393] = 0;
   out_7267359054831337648[394] = 0;
   out_7267359054831337648[395] = 0;
   out_7267359054831337648[396] = 1;
   out_7267359054831337648[397] = 0;
   out_7267359054831337648[398] = 0;
   out_7267359054831337648[399] = 0;
   out_7267359054831337648[400] = 0;
   out_7267359054831337648[401] = 0;
   out_7267359054831337648[402] = 0;
   out_7267359054831337648[403] = 0;
   out_7267359054831337648[404] = 0;
   out_7267359054831337648[405] = 0;
   out_7267359054831337648[406] = 0;
   out_7267359054831337648[407] = 0;
   out_7267359054831337648[408] = 0;
   out_7267359054831337648[409] = 0;
   out_7267359054831337648[410] = 0;
   out_7267359054831337648[411] = 0;
   out_7267359054831337648[412] = 0;
   out_7267359054831337648[413] = 0;
   out_7267359054831337648[414] = 0;
   out_7267359054831337648[415] = 0;
   out_7267359054831337648[416] = 0;
   out_7267359054831337648[417] = 0;
   out_7267359054831337648[418] = 1;
   out_7267359054831337648[419] = 0;
   out_7267359054831337648[420] = 0;
   out_7267359054831337648[421] = 0;
   out_7267359054831337648[422] = 0;
   out_7267359054831337648[423] = 0;
   out_7267359054831337648[424] = 0;
   out_7267359054831337648[425] = 0;
   out_7267359054831337648[426] = 0;
   out_7267359054831337648[427] = 0;
   out_7267359054831337648[428] = 0;
   out_7267359054831337648[429] = 0;
   out_7267359054831337648[430] = 0;
   out_7267359054831337648[431] = 0;
   out_7267359054831337648[432] = 0;
   out_7267359054831337648[433] = 0;
   out_7267359054831337648[434] = 0;
   out_7267359054831337648[435] = 0;
   out_7267359054831337648[436] = 0;
   out_7267359054831337648[437] = 0;
   out_7267359054831337648[438] = 0;
   out_7267359054831337648[439] = 0;
   out_7267359054831337648[440] = 1;
}
void h_4(double *state, double *unused, double *out_5086780364148756313) {
   out_5086780364148756313[0] = state[10] + state[13];
   out_5086780364148756313[1] = state[11] + state[14];
   out_5086780364148756313[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5425852758767582607) {
   out_5425852758767582607[0] = 0;
   out_5425852758767582607[1] = 0;
   out_5425852758767582607[2] = 0;
   out_5425852758767582607[3] = 0;
   out_5425852758767582607[4] = 0;
   out_5425852758767582607[5] = 0;
   out_5425852758767582607[6] = 0;
   out_5425852758767582607[7] = 0;
   out_5425852758767582607[8] = 0;
   out_5425852758767582607[9] = 0;
   out_5425852758767582607[10] = 1;
   out_5425852758767582607[11] = 0;
   out_5425852758767582607[12] = 0;
   out_5425852758767582607[13] = 1;
   out_5425852758767582607[14] = 0;
   out_5425852758767582607[15] = 0;
   out_5425852758767582607[16] = 0;
   out_5425852758767582607[17] = 0;
   out_5425852758767582607[18] = 0;
   out_5425852758767582607[19] = 0;
   out_5425852758767582607[20] = 0;
   out_5425852758767582607[21] = 0;
   out_5425852758767582607[22] = 0;
   out_5425852758767582607[23] = 0;
   out_5425852758767582607[24] = 0;
   out_5425852758767582607[25] = 0;
   out_5425852758767582607[26] = 0;
   out_5425852758767582607[27] = 0;
   out_5425852758767582607[28] = 0;
   out_5425852758767582607[29] = 0;
   out_5425852758767582607[30] = 0;
   out_5425852758767582607[31] = 0;
   out_5425852758767582607[32] = 0;
   out_5425852758767582607[33] = 1;
   out_5425852758767582607[34] = 0;
   out_5425852758767582607[35] = 0;
   out_5425852758767582607[36] = 1;
   out_5425852758767582607[37] = 0;
   out_5425852758767582607[38] = 0;
   out_5425852758767582607[39] = 0;
   out_5425852758767582607[40] = 0;
   out_5425852758767582607[41] = 0;
   out_5425852758767582607[42] = 0;
   out_5425852758767582607[43] = 0;
   out_5425852758767582607[44] = 0;
   out_5425852758767582607[45] = 0;
   out_5425852758767582607[46] = 0;
   out_5425852758767582607[47] = 0;
   out_5425852758767582607[48] = 0;
   out_5425852758767582607[49] = 0;
   out_5425852758767582607[50] = 0;
   out_5425852758767582607[51] = 0;
   out_5425852758767582607[52] = 0;
   out_5425852758767582607[53] = 0;
   out_5425852758767582607[54] = 0;
   out_5425852758767582607[55] = 0;
   out_5425852758767582607[56] = 1;
   out_5425852758767582607[57] = 0;
   out_5425852758767582607[58] = 0;
   out_5425852758767582607[59] = 1;
   out_5425852758767582607[60] = 0;
   out_5425852758767582607[61] = 0;
   out_5425852758767582607[62] = 0;
   out_5425852758767582607[63] = 0;
   out_5425852758767582607[64] = 0;
   out_5425852758767582607[65] = 0;
}
void h_9(double *state, double *unused, double *out_6928945807093641406) {
   out_6928945807093641406[0] = state[10];
   out_6928945807093641406[1] = state[11];
   out_6928945807093641406[2] = state[12];
}
void H_9(double *state, double *unused, double *out_5667042405397173252) {
   out_5667042405397173252[0] = 0;
   out_5667042405397173252[1] = 0;
   out_5667042405397173252[2] = 0;
   out_5667042405397173252[3] = 0;
   out_5667042405397173252[4] = 0;
   out_5667042405397173252[5] = 0;
   out_5667042405397173252[6] = 0;
   out_5667042405397173252[7] = 0;
   out_5667042405397173252[8] = 0;
   out_5667042405397173252[9] = 0;
   out_5667042405397173252[10] = 1;
   out_5667042405397173252[11] = 0;
   out_5667042405397173252[12] = 0;
   out_5667042405397173252[13] = 0;
   out_5667042405397173252[14] = 0;
   out_5667042405397173252[15] = 0;
   out_5667042405397173252[16] = 0;
   out_5667042405397173252[17] = 0;
   out_5667042405397173252[18] = 0;
   out_5667042405397173252[19] = 0;
   out_5667042405397173252[20] = 0;
   out_5667042405397173252[21] = 0;
   out_5667042405397173252[22] = 0;
   out_5667042405397173252[23] = 0;
   out_5667042405397173252[24] = 0;
   out_5667042405397173252[25] = 0;
   out_5667042405397173252[26] = 0;
   out_5667042405397173252[27] = 0;
   out_5667042405397173252[28] = 0;
   out_5667042405397173252[29] = 0;
   out_5667042405397173252[30] = 0;
   out_5667042405397173252[31] = 0;
   out_5667042405397173252[32] = 0;
   out_5667042405397173252[33] = 1;
   out_5667042405397173252[34] = 0;
   out_5667042405397173252[35] = 0;
   out_5667042405397173252[36] = 0;
   out_5667042405397173252[37] = 0;
   out_5667042405397173252[38] = 0;
   out_5667042405397173252[39] = 0;
   out_5667042405397173252[40] = 0;
   out_5667042405397173252[41] = 0;
   out_5667042405397173252[42] = 0;
   out_5667042405397173252[43] = 0;
   out_5667042405397173252[44] = 0;
   out_5667042405397173252[45] = 0;
   out_5667042405397173252[46] = 0;
   out_5667042405397173252[47] = 0;
   out_5667042405397173252[48] = 0;
   out_5667042405397173252[49] = 0;
   out_5667042405397173252[50] = 0;
   out_5667042405397173252[51] = 0;
   out_5667042405397173252[52] = 0;
   out_5667042405397173252[53] = 0;
   out_5667042405397173252[54] = 0;
   out_5667042405397173252[55] = 0;
   out_5667042405397173252[56] = 1;
   out_5667042405397173252[57] = 0;
   out_5667042405397173252[58] = 0;
   out_5667042405397173252[59] = 0;
   out_5667042405397173252[60] = 0;
   out_5667042405397173252[61] = 0;
   out_5667042405397173252[62] = 0;
   out_5667042405397173252[63] = 0;
   out_5667042405397173252[64] = 0;
   out_5667042405397173252[65] = 0;
}
void h_10(double *state, double *unused, double *out_5903315036155764538) {
   out_5903315036155764538[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5903315036155764538[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5903315036155764538[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4679210779229393512) {
   out_4679210779229393512[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4679210779229393512[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4679210779229393512[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4679210779229393512[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4679210779229393512[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4679210779229393512[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4679210779229393512[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4679210779229393512[7] = 0;
   out_4679210779229393512[8] = 0;
   out_4679210779229393512[9] = 0;
   out_4679210779229393512[10] = 0;
   out_4679210779229393512[11] = 0;
   out_4679210779229393512[12] = 0;
   out_4679210779229393512[13] = 0;
   out_4679210779229393512[14] = 0;
   out_4679210779229393512[15] = 0;
   out_4679210779229393512[16] = 1;
   out_4679210779229393512[17] = 0;
   out_4679210779229393512[18] = 0;
   out_4679210779229393512[19] = 1;
   out_4679210779229393512[20] = 0;
   out_4679210779229393512[21] = 0;
   out_4679210779229393512[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4679210779229393512[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4679210779229393512[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4679210779229393512[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4679210779229393512[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4679210779229393512[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4679210779229393512[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4679210779229393512[29] = 0;
   out_4679210779229393512[30] = 0;
   out_4679210779229393512[31] = 0;
   out_4679210779229393512[32] = 0;
   out_4679210779229393512[33] = 0;
   out_4679210779229393512[34] = 0;
   out_4679210779229393512[35] = 0;
   out_4679210779229393512[36] = 0;
   out_4679210779229393512[37] = 0;
   out_4679210779229393512[38] = 0;
   out_4679210779229393512[39] = 1;
   out_4679210779229393512[40] = 0;
   out_4679210779229393512[41] = 0;
   out_4679210779229393512[42] = 1;
   out_4679210779229393512[43] = 0;
   out_4679210779229393512[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4679210779229393512[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4679210779229393512[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4679210779229393512[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4679210779229393512[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4679210779229393512[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4679210779229393512[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4679210779229393512[51] = 0;
   out_4679210779229393512[52] = 0;
   out_4679210779229393512[53] = 0;
   out_4679210779229393512[54] = 0;
   out_4679210779229393512[55] = 0;
   out_4679210779229393512[56] = 0;
   out_4679210779229393512[57] = 0;
   out_4679210779229393512[58] = 0;
   out_4679210779229393512[59] = 0;
   out_4679210779229393512[60] = 0;
   out_4679210779229393512[61] = 0;
   out_4679210779229393512[62] = 1;
   out_4679210779229393512[63] = 0;
   out_4679210779229393512[64] = 0;
   out_4679210779229393512[65] = 1;
}
void h_12(double *state, double *unused, double *out_8473880927125658690) {
   out_8473880927125658690[0] = state[0];
   out_8473880927125658690[1] = state[1];
   out_8473880927125658690[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6046951783815176274) {
   out_6046951783815176274[0] = 1;
   out_6046951783815176274[1] = 0;
   out_6046951783815176274[2] = 0;
   out_6046951783815176274[3] = 0;
   out_6046951783815176274[4] = 0;
   out_6046951783815176274[5] = 0;
   out_6046951783815176274[6] = 0;
   out_6046951783815176274[7] = 0;
   out_6046951783815176274[8] = 0;
   out_6046951783815176274[9] = 0;
   out_6046951783815176274[10] = 0;
   out_6046951783815176274[11] = 0;
   out_6046951783815176274[12] = 0;
   out_6046951783815176274[13] = 0;
   out_6046951783815176274[14] = 0;
   out_6046951783815176274[15] = 0;
   out_6046951783815176274[16] = 0;
   out_6046951783815176274[17] = 0;
   out_6046951783815176274[18] = 0;
   out_6046951783815176274[19] = 0;
   out_6046951783815176274[20] = 0;
   out_6046951783815176274[21] = 0;
   out_6046951783815176274[22] = 0;
   out_6046951783815176274[23] = 1;
   out_6046951783815176274[24] = 0;
   out_6046951783815176274[25] = 0;
   out_6046951783815176274[26] = 0;
   out_6046951783815176274[27] = 0;
   out_6046951783815176274[28] = 0;
   out_6046951783815176274[29] = 0;
   out_6046951783815176274[30] = 0;
   out_6046951783815176274[31] = 0;
   out_6046951783815176274[32] = 0;
   out_6046951783815176274[33] = 0;
   out_6046951783815176274[34] = 0;
   out_6046951783815176274[35] = 0;
   out_6046951783815176274[36] = 0;
   out_6046951783815176274[37] = 0;
   out_6046951783815176274[38] = 0;
   out_6046951783815176274[39] = 0;
   out_6046951783815176274[40] = 0;
   out_6046951783815176274[41] = 0;
   out_6046951783815176274[42] = 0;
   out_6046951783815176274[43] = 0;
   out_6046951783815176274[44] = 0;
   out_6046951783815176274[45] = 0;
   out_6046951783815176274[46] = 1;
   out_6046951783815176274[47] = 0;
   out_6046951783815176274[48] = 0;
   out_6046951783815176274[49] = 0;
   out_6046951783815176274[50] = 0;
   out_6046951783815176274[51] = 0;
   out_6046951783815176274[52] = 0;
   out_6046951783815176274[53] = 0;
   out_6046951783815176274[54] = 0;
   out_6046951783815176274[55] = 0;
   out_6046951783815176274[56] = 0;
   out_6046951783815176274[57] = 0;
   out_6046951783815176274[58] = 0;
   out_6046951783815176274[59] = 0;
   out_6046951783815176274[60] = 0;
   out_6046951783815176274[61] = 0;
   out_6046951783815176274[62] = 0;
   out_6046951783815176274[63] = 0;
   out_6046951783815176274[64] = 0;
   out_6046951783815176274[65] = 0;
}
void h_35(double *state, double *unused, double *out_3661109890776334232) {
   out_3661109890776334232[0] = state[7];
   out_3661109890776334232[1] = state[8];
   out_3661109890776334232[2] = state[9];
}
void H_35(double *state, double *unused, double *out_8792514816140189983) {
   out_8792514816140189983[0] = 0;
   out_8792514816140189983[1] = 0;
   out_8792514816140189983[2] = 0;
   out_8792514816140189983[3] = 0;
   out_8792514816140189983[4] = 0;
   out_8792514816140189983[5] = 0;
   out_8792514816140189983[6] = 0;
   out_8792514816140189983[7] = 1;
   out_8792514816140189983[8] = 0;
   out_8792514816140189983[9] = 0;
   out_8792514816140189983[10] = 0;
   out_8792514816140189983[11] = 0;
   out_8792514816140189983[12] = 0;
   out_8792514816140189983[13] = 0;
   out_8792514816140189983[14] = 0;
   out_8792514816140189983[15] = 0;
   out_8792514816140189983[16] = 0;
   out_8792514816140189983[17] = 0;
   out_8792514816140189983[18] = 0;
   out_8792514816140189983[19] = 0;
   out_8792514816140189983[20] = 0;
   out_8792514816140189983[21] = 0;
   out_8792514816140189983[22] = 0;
   out_8792514816140189983[23] = 0;
   out_8792514816140189983[24] = 0;
   out_8792514816140189983[25] = 0;
   out_8792514816140189983[26] = 0;
   out_8792514816140189983[27] = 0;
   out_8792514816140189983[28] = 0;
   out_8792514816140189983[29] = 0;
   out_8792514816140189983[30] = 1;
   out_8792514816140189983[31] = 0;
   out_8792514816140189983[32] = 0;
   out_8792514816140189983[33] = 0;
   out_8792514816140189983[34] = 0;
   out_8792514816140189983[35] = 0;
   out_8792514816140189983[36] = 0;
   out_8792514816140189983[37] = 0;
   out_8792514816140189983[38] = 0;
   out_8792514816140189983[39] = 0;
   out_8792514816140189983[40] = 0;
   out_8792514816140189983[41] = 0;
   out_8792514816140189983[42] = 0;
   out_8792514816140189983[43] = 0;
   out_8792514816140189983[44] = 0;
   out_8792514816140189983[45] = 0;
   out_8792514816140189983[46] = 0;
   out_8792514816140189983[47] = 0;
   out_8792514816140189983[48] = 0;
   out_8792514816140189983[49] = 0;
   out_8792514816140189983[50] = 0;
   out_8792514816140189983[51] = 0;
   out_8792514816140189983[52] = 0;
   out_8792514816140189983[53] = 1;
   out_8792514816140189983[54] = 0;
   out_8792514816140189983[55] = 0;
   out_8792514816140189983[56] = 0;
   out_8792514816140189983[57] = 0;
   out_8792514816140189983[58] = 0;
   out_8792514816140189983[59] = 0;
   out_8792514816140189983[60] = 0;
   out_8792514816140189983[61] = 0;
   out_8792514816140189983[62] = 0;
   out_8792514816140189983[63] = 0;
   out_8792514816140189983[64] = 0;
   out_8792514816140189983[65] = 0;
}
void h_32(double *state, double *unused, double *out_187274835460619307) {
   out_187274835460619307[0] = state[3];
   out_187274835460619307[1] = state[4];
   out_187274835460619307[2] = state[5];
   out_187274835460619307[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4451510040407083095) {
   out_4451510040407083095[0] = 0;
   out_4451510040407083095[1] = 0;
   out_4451510040407083095[2] = 0;
   out_4451510040407083095[3] = 1;
   out_4451510040407083095[4] = 0;
   out_4451510040407083095[5] = 0;
   out_4451510040407083095[6] = 0;
   out_4451510040407083095[7] = 0;
   out_4451510040407083095[8] = 0;
   out_4451510040407083095[9] = 0;
   out_4451510040407083095[10] = 0;
   out_4451510040407083095[11] = 0;
   out_4451510040407083095[12] = 0;
   out_4451510040407083095[13] = 0;
   out_4451510040407083095[14] = 0;
   out_4451510040407083095[15] = 0;
   out_4451510040407083095[16] = 0;
   out_4451510040407083095[17] = 0;
   out_4451510040407083095[18] = 0;
   out_4451510040407083095[19] = 0;
   out_4451510040407083095[20] = 0;
   out_4451510040407083095[21] = 0;
   out_4451510040407083095[22] = 0;
   out_4451510040407083095[23] = 0;
   out_4451510040407083095[24] = 0;
   out_4451510040407083095[25] = 0;
   out_4451510040407083095[26] = 1;
   out_4451510040407083095[27] = 0;
   out_4451510040407083095[28] = 0;
   out_4451510040407083095[29] = 0;
   out_4451510040407083095[30] = 0;
   out_4451510040407083095[31] = 0;
   out_4451510040407083095[32] = 0;
   out_4451510040407083095[33] = 0;
   out_4451510040407083095[34] = 0;
   out_4451510040407083095[35] = 0;
   out_4451510040407083095[36] = 0;
   out_4451510040407083095[37] = 0;
   out_4451510040407083095[38] = 0;
   out_4451510040407083095[39] = 0;
   out_4451510040407083095[40] = 0;
   out_4451510040407083095[41] = 0;
   out_4451510040407083095[42] = 0;
   out_4451510040407083095[43] = 0;
   out_4451510040407083095[44] = 0;
   out_4451510040407083095[45] = 0;
   out_4451510040407083095[46] = 0;
   out_4451510040407083095[47] = 0;
   out_4451510040407083095[48] = 0;
   out_4451510040407083095[49] = 1;
   out_4451510040407083095[50] = 0;
   out_4451510040407083095[51] = 0;
   out_4451510040407083095[52] = 0;
   out_4451510040407083095[53] = 0;
   out_4451510040407083095[54] = 0;
   out_4451510040407083095[55] = 0;
   out_4451510040407083095[56] = 0;
   out_4451510040407083095[57] = 0;
   out_4451510040407083095[58] = 0;
   out_4451510040407083095[59] = 0;
   out_4451510040407083095[60] = 0;
   out_4451510040407083095[61] = 0;
   out_4451510040407083095[62] = 0;
   out_4451510040407083095[63] = 0;
   out_4451510040407083095[64] = 0;
   out_4451510040407083095[65] = 0;
   out_4451510040407083095[66] = 0;
   out_4451510040407083095[67] = 0;
   out_4451510040407083095[68] = 0;
   out_4451510040407083095[69] = 0;
   out_4451510040407083095[70] = 0;
   out_4451510040407083095[71] = 0;
   out_4451510040407083095[72] = 1;
   out_4451510040407083095[73] = 0;
   out_4451510040407083095[74] = 0;
   out_4451510040407083095[75] = 0;
   out_4451510040407083095[76] = 0;
   out_4451510040407083095[77] = 0;
   out_4451510040407083095[78] = 0;
   out_4451510040407083095[79] = 0;
   out_4451510040407083095[80] = 0;
   out_4451510040407083095[81] = 0;
   out_4451510040407083095[82] = 0;
   out_4451510040407083095[83] = 0;
   out_4451510040407083095[84] = 0;
   out_4451510040407083095[85] = 0;
   out_4451510040407083095[86] = 0;
   out_4451510040407083095[87] = 0;
}
void h_13(double *state, double *unused, double *out_196597214096291953) {
   out_196597214096291953[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_196597214096291953[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_196597214096291953[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8992770197322762486) {
   out_8992770197322762486[0] = 0;
   out_8992770197322762486[1] = 0;
   out_8992770197322762486[2] = 0;
   out_8992770197322762486[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8992770197322762486[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8992770197322762486[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8992770197322762486[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8992770197322762486[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8992770197322762486[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8992770197322762486[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8992770197322762486[10] = 0;
   out_8992770197322762486[11] = 0;
   out_8992770197322762486[12] = 0;
   out_8992770197322762486[13] = 0;
   out_8992770197322762486[14] = 0;
   out_8992770197322762486[15] = 0;
   out_8992770197322762486[16] = 0;
   out_8992770197322762486[17] = 0;
   out_8992770197322762486[18] = 0;
   out_8992770197322762486[19] = 0;
   out_8992770197322762486[20] = 0;
   out_8992770197322762486[21] = 0;
   out_8992770197322762486[22] = 0;
   out_8992770197322762486[23] = 0;
   out_8992770197322762486[24] = 0;
   out_8992770197322762486[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8992770197322762486[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8992770197322762486[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8992770197322762486[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8992770197322762486[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8992770197322762486[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8992770197322762486[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8992770197322762486[32] = 0;
   out_8992770197322762486[33] = 0;
   out_8992770197322762486[34] = 0;
   out_8992770197322762486[35] = 0;
   out_8992770197322762486[36] = 0;
   out_8992770197322762486[37] = 0;
   out_8992770197322762486[38] = 0;
   out_8992770197322762486[39] = 0;
   out_8992770197322762486[40] = 0;
   out_8992770197322762486[41] = 0;
   out_8992770197322762486[42] = 0;
   out_8992770197322762486[43] = 0;
   out_8992770197322762486[44] = 0;
   out_8992770197322762486[45] = 0;
   out_8992770197322762486[46] = 0;
   out_8992770197322762486[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8992770197322762486[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8992770197322762486[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8992770197322762486[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8992770197322762486[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8992770197322762486[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8992770197322762486[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8992770197322762486[54] = 0;
   out_8992770197322762486[55] = 0;
   out_8992770197322762486[56] = 0;
   out_8992770197322762486[57] = 0;
   out_8992770197322762486[58] = 0;
   out_8992770197322762486[59] = 0;
   out_8992770197322762486[60] = 0;
   out_8992770197322762486[61] = 0;
   out_8992770197322762486[62] = 0;
   out_8992770197322762486[63] = 0;
   out_8992770197322762486[64] = 0;
   out_8992770197322762486[65] = 0;
}
void h_14(double *state, double *unused, double *out_6928945807093641406) {
   out_6928945807093641406[0] = state[10];
   out_6928945807093641406[1] = state[11];
   out_6928945807093641406[2] = state[12];
}
void H_14(double *state, double *unused, double *out_5667042405397173252) {
   out_5667042405397173252[0] = 0;
   out_5667042405397173252[1] = 0;
   out_5667042405397173252[2] = 0;
   out_5667042405397173252[3] = 0;
   out_5667042405397173252[4] = 0;
   out_5667042405397173252[5] = 0;
   out_5667042405397173252[6] = 0;
   out_5667042405397173252[7] = 0;
   out_5667042405397173252[8] = 0;
   out_5667042405397173252[9] = 0;
   out_5667042405397173252[10] = 1;
   out_5667042405397173252[11] = 0;
   out_5667042405397173252[12] = 0;
   out_5667042405397173252[13] = 0;
   out_5667042405397173252[14] = 0;
   out_5667042405397173252[15] = 0;
   out_5667042405397173252[16] = 0;
   out_5667042405397173252[17] = 0;
   out_5667042405397173252[18] = 0;
   out_5667042405397173252[19] = 0;
   out_5667042405397173252[20] = 0;
   out_5667042405397173252[21] = 0;
   out_5667042405397173252[22] = 0;
   out_5667042405397173252[23] = 0;
   out_5667042405397173252[24] = 0;
   out_5667042405397173252[25] = 0;
   out_5667042405397173252[26] = 0;
   out_5667042405397173252[27] = 0;
   out_5667042405397173252[28] = 0;
   out_5667042405397173252[29] = 0;
   out_5667042405397173252[30] = 0;
   out_5667042405397173252[31] = 0;
   out_5667042405397173252[32] = 0;
   out_5667042405397173252[33] = 1;
   out_5667042405397173252[34] = 0;
   out_5667042405397173252[35] = 0;
   out_5667042405397173252[36] = 0;
   out_5667042405397173252[37] = 0;
   out_5667042405397173252[38] = 0;
   out_5667042405397173252[39] = 0;
   out_5667042405397173252[40] = 0;
   out_5667042405397173252[41] = 0;
   out_5667042405397173252[42] = 0;
   out_5667042405397173252[43] = 0;
   out_5667042405397173252[44] = 0;
   out_5667042405397173252[45] = 0;
   out_5667042405397173252[46] = 0;
   out_5667042405397173252[47] = 0;
   out_5667042405397173252[48] = 0;
   out_5667042405397173252[49] = 0;
   out_5667042405397173252[50] = 0;
   out_5667042405397173252[51] = 0;
   out_5667042405397173252[52] = 0;
   out_5667042405397173252[53] = 0;
   out_5667042405397173252[54] = 0;
   out_5667042405397173252[55] = 0;
   out_5667042405397173252[56] = 1;
   out_5667042405397173252[57] = 0;
   out_5667042405397173252[58] = 0;
   out_5667042405397173252[59] = 0;
   out_5667042405397173252[60] = 0;
   out_5667042405397173252[61] = 0;
   out_5667042405397173252[62] = 0;
   out_5667042405397173252[63] = 0;
   out_5667042405397173252[64] = 0;
   out_5667042405397173252[65] = 0;
}
void h_33(double *state, double *unused, double *out_4102645160163387358) {
   out_4102645160163387358[0] = state[16];
   out_4102645160163387358[1] = state[17];
   out_4102645160163387358[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6503672252930504029) {
   out_6503672252930504029[0] = 0;
   out_6503672252930504029[1] = 0;
   out_6503672252930504029[2] = 0;
   out_6503672252930504029[3] = 0;
   out_6503672252930504029[4] = 0;
   out_6503672252930504029[5] = 0;
   out_6503672252930504029[6] = 0;
   out_6503672252930504029[7] = 0;
   out_6503672252930504029[8] = 0;
   out_6503672252930504029[9] = 0;
   out_6503672252930504029[10] = 0;
   out_6503672252930504029[11] = 0;
   out_6503672252930504029[12] = 0;
   out_6503672252930504029[13] = 0;
   out_6503672252930504029[14] = 0;
   out_6503672252930504029[15] = 0;
   out_6503672252930504029[16] = 1;
   out_6503672252930504029[17] = 0;
   out_6503672252930504029[18] = 0;
   out_6503672252930504029[19] = 0;
   out_6503672252930504029[20] = 0;
   out_6503672252930504029[21] = 0;
   out_6503672252930504029[22] = 0;
   out_6503672252930504029[23] = 0;
   out_6503672252930504029[24] = 0;
   out_6503672252930504029[25] = 0;
   out_6503672252930504029[26] = 0;
   out_6503672252930504029[27] = 0;
   out_6503672252930504029[28] = 0;
   out_6503672252930504029[29] = 0;
   out_6503672252930504029[30] = 0;
   out_6503672252930504029[31] = 0;
   out_6503672252930504029[32] = 0;
   out_6503672252930504029[33] = 0;
   out_6503672252930504029[34] = 0;
   out_6503672252930504029[35] = 0;
   out_6503672252930504029[36] = 0;
   out_6503672252930504029[37] = 0;
   out_6503672252930504029[38] = 0;
   out_6503672252930504029[39] = 1;
   out_6503672252930504029[40] = 0;
   out_6503672252930504029[41] = 0;
   out_6503672252930504029[42] = 0;
   out_6503672252930504029[43] = 0;
   out_6503672252930504029[44] = 0;
   out_6503672252930504029[45] = 0;
   out_6503672252930504029[46] = 0;
   out_6503672252930504029[47] = 0;
   out_6503672252930504029[48] = 0;
   out_6503672252930504029[49] = 0;
   out_6503672252930504029[50] = 0;
   out_6503672252930504029[51] = 0;
   out_6503672252930504029[52] = 0;
   out_6503672252930504029[53] = 0;
   out_6503672252930504029[54] = 0;
   out_6503672252930504029[55] = 0;
   out_6503672252930504029[56] = 0;
   out_6503672252930504029[57] = 0;
   out_6503672252930504029[58] = 0;
   out_6503672252930504029[59] = 0;
   out_6503672252930504029[60] = 0;
   out_6503672252930504029[61] = 0;
   out_6503672252930504029[62] = 1;
   out_6503672252930504029[63] = 0;
   out_6503672252930504029[64] = 0;
   out_6503672252930504029[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4693309722997385379) {
  H(in_vec, out_4693309722997385379);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3625667551731442467) {
  err_fun(nom_x, delta_x, out_3625667551731442467);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1397906555224212298) {
  inv_err_fun(nom_x, true_x, out_1397906555224212298);
}
void live_H_mod_fun(double *state, double *out_5175308474310760537) {
  H_mod_fun(state, out_5175308474310760537);
}
void live_f_fun(double *state, double dt, double *out_209499706770349871) {
  f_fun(state,  dt, out_209499706770349871);
}
void live_F_fun(double *state, double dt, double *out_7267359054831337648) {
  F_fun(state,  dt, out_7267359054831337648);
}
void live_h_4(double *state, double *unused, double *out_5086780364148756313) {
  h_4(state, unused, out_5086780364148756313);
}
void live_H_4(double *state, double *unused, double *out_5425852758767582607) {
  H_4(state, unused, out_5425852758767582607);
}
void live_h_9(double *state, double *unused, double *out_6928945807093641406) {
  h_9(state, unused, out_6928945807093641406);
}
void live_H_9(double *state, double *unused, double *out_5667042405397173252) {
  H_9(state, unused, out_5667042405397173252);
}
void live_h_10(double *state, double *unused, double *out_5903315036155764538) {
  h_10(state, unused, out_5903315036155764538);
}
void live_H_10(double *state, double *unused, double *out_4679210779229393512) {
  H_10(state, unused, out_4679210779229393512);
}
void live_h_12(double *state, double *unused, double *out_8473880927125658690) {
  h_12(state, unused, out_8473880927125658690);
}
void live_H_12(double *state, double *unused, double *out_6046951783815176274) {
  H_12(state, unused, out_6046951783815176274);
}
void live_h_35(double *state, double *unused, double *out_3661109890776334232) {
  h_35(state, unused, out_3661109890776334232);
}
void live_H_35(double *state, double *unused, double *out_8792514816140189983) {
  H_35(state, unused, out_8792514816140189983);
}
void live_h_32(double *state, double *unused, double *out_187274835460619307) {
  h_32(state, unused, out_187274835460619307);
}
void live_H_32(double *state, double *unused, double *out_4451510040407083095) {
  H_32(state, unused, out_4451510040407083095);
}
void live_h_13(double *state, double *unused, double *out_196597214096291953) {
  h_13(state, unused, out_196597214096291953);
}
void live_H_13(double *state, double *unused, double *out_8992770197322762486) {
  H_13(state, unused, out_8992770197322762486);
}
void live_h_14(double *state, double *unused, double *out_6928945807093641406) {
  h_14(state, unused, out_6928945807093641406);
}
void live_H_14(double *state, double *unused, double *out_5667042405397173252) {
  H_14(state, unused, out_5667042405397173252);
}
void live_h_33(double *state, double *unused, double *out_4102645160163387358) {
  h_33(state, unused, out_4102645160163387358);
}
void live_H_33(double *state, double *unused, double *out_6503672252930504029) {
  H_33(state, unused, out_6503672252930504029);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
