#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2462819686313009570) {
   out_2462819686313009570[0] = 0;
   out_2462819686313009570[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2462819686313009570[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2462819686313009570[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2462819686313009570[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2462819686313009570[5] = -sin(in_vec[1]);
   out_2462819686313009570[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2462819686313009570[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2462819686313009570[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2462819686313009570[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2462819686313009570[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2462819686313009570[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2462819686313009570[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2462819686313009570[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2462819686313009570[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2462819686313009570[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2462819686313009570[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2462819686313009570[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7688666404763380594) {
   out_7688666404763380594[0] = delta_x[0] + nom_x[0];
   out_7688666404763380594[1] = delta_x[1] + nom_x[1];
   out_7688666404763380594[2] = delta_x[2] + nom_x[2];
   out_7688666404763380594[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7688666404763380594[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7688666404763380594[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7688666404763380594[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7688666404763380594[7] = delta_x[6] + nom_x[7];
   out_7688666404763380594[8] = delta_x[7] + nom_x[8];
   out_7688666404763380594[9] = delta_x[8] + nom_x[9];
   out_7688666404763380594[10] = delta_x[9] + nom_x[10];
   out_7688666404763380594[11] = delta_x[10] + nom_x[11];
   out_7688666404763380594[12] = delta_x[11] + nom_x[12];
   out_7688666404763380594[13] = delta_x[12] + nom_x[13];
   out_7688666404763380594[14] = delta_x[13] + nom_x[14];
   out_7688666404763380594[15] = delta_x[14] + nom_x[15];
   out_7688666404763380594[16] = delta_x[15] + nom_x[16];
   out_7688666404763380594[17] = delta_x[16] + nom_x[17];
   out_7688666404763380594[18] = delta_x[17] + nom_x[18];
   out_7688666404763380594[19] = delta_x[18] + nom_x[19];
   out_7688666404763380594[20] = delta_x[19] + nom_x[20];
   out_7688666404763380594[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6593376371524153869) {
   out_6593376371524153869[0] = -nom_x[0] + true_x[0];
   out_6593376371524153869[1] = -nom_x[1] + true_x[1];
   out_6593376371524153869[2] = -nom_x[2] + true_x[2];
   out_6593376371524153869[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6593376371524153869[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6593376371524153869[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6593376371524153869[6] = -nom_x[7] + true_x[7];
   out_6593376371524153869[7] = -nom_x[8] + true_x[8];
   out_6593376371524153869[8] = -nom_x[9] + true_x[9];
   out_6593376371524153869[9] = -nom_x[10] + true_x[10];
   out_6593376371524153869[10] = -nom_x[11] + true_x[11];
   out_6593376371524153869[11] = -nom_x[12] + true_x[12];
   out_6593376371524153869[12] = -nom_x[13] + true_x[13];
   out_6593376371524153869[13] = -nom_x[14] + true_x[14];
   out_6593376371524153869[14] = -nom_x[15] + true_x[15];
   out_6593376371524153869[15] = -nom_x[16] + true_x[16];
   out_6593376371524153869[16] = -nom_x[17] + true_x[17];
   out_6593376371524153869[17] = -nom_x[18] + true_x[18];
   out_6593376371524153869[18] = -nom_x[19] + true_x[19];
   out_6593376371524153869[19] = -nom_x[20] + true_x[20];
   out_6593376371524153869[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5061725893169435400) {
   out_5061725893169435400[0] = 1.0;
   out_5061725893169435400[1] = 0;
   out_5061725893169435400[2] = 0;
   out_5061725893169435400[3] = 0;
   out_5061725893169435400[4] = 0;
   out_5061725893169435400[5] = 0;
   out_5061725893169435400[6] = 0;
   out_5061725893169435400[7] = 0;
   out_5061725893169435400[8] = 0;
   out_5061725893169435400[9] = 0;
   out_5061725893169435400[10] = 0;
   out_5061725893169435400[11] = 0;
   out_5061725893169435400[12] = 0;
   out_5061725893169435400[13] = 0;
   out_5061725893169435400[14] = 0;
   out_5061725893169435400[15] = 0;
   out_5061725893169435400[16] = 0;
   out_5061725893169435400[17] = 0;
   out_5061725893169435400[18] = 0;
   out_5061725893169435400[19] = 0;
   out_5061725893169435400[20] = 0;
   out_5061725893169435400[21] = 0;
   out_5061725893169435400[22] = 1.0;
   out_5061725893169435400[23] = 0;
   out_5061725893169435400[24] = 0;
   out_5061725893169435400[25] = 0;
   out_5061725893169435400[26] = 0;
   out_5061725893169435400[27] = 0;
   out_5061725893169435400[28] = 0;
   out_5061725893169435400[29] = 0;
   out_5061725893169435400[30] = 0;
   out_5061725893169435400[31] = 0;
   out_5061725893169435400[32] = 0;
   out_5061725893169435400[33] = 0;
   out_5061725893169435400[34] = 0;
   out_5061725893169435400[35] = 0;
   out_5061725893169435400[36] = 0;
   out_5061725893169435400[37] = 0;
   out_5061725893169435400[38] = 0;
   out_5061725893169435400[39] = 0;
   out_5061725893169435400[40] = 0;
   out_5061725893169435400[41] = 0;
   out_5061725893169435400[42] = 0;
   out_5061725893169435400[43] = 0;
   out_5061725893169435400[44] = 1.0;
   out_5061725893169435400[45] = 0;
   out_5061725893169435400[46] = 0;
   out_5061725893169435400[47] = 0;
   out_5061725893169435400[48] = 0;
   out_5061725893169435400[49] = 0;
   out_5061725893169435400[50] = 0;
   out_5061725893169435400[51] = 0;
   out_5061725893169435400[52] = 0;
   out_5061725893169435400[53] = 0;
   out_5061725893169435400[54] = 0;
   out_5061725893169435400[55] = 0;
   out_5061725893169435400[56] = 0;
   out_5061725893169435400[57] = 0;
   out_5061725893169435400[58] = 0;
   out_5061725893169435400[59] = 0;
   out_5061725893169435400[60] = 0;
   out_5061725893169435400[61] = 0;
   out_5061725893169435400[62] = 0;
   out_5061725893169435400[63] = 0;
   out_5061725893169435400[64] = 0;
   out_5061725893169435400[65] = 0;
   out_5061725893169435400[66] = -0.5*state[4];
   out_5061725893169435400[67] = -0.5*state[5];
   out_5061725893169435400[68] = -0.5*state[6];
   out_5061725893169435400[69] = 0;
   out_5061725893169435400[70] = 0;
   out_5061725893169435400[71] = 0;
   out_5061725893169435400[72] = 0;
   out_5061725893169435400[73] = 0;
   out_5061725893169435400[74] = 0;
   out_5061725893169435400[75] = 0;
   out_5061725893169435400[76] = 0;
   out_5061725893169435400[77] = 0;
   out_5061725893169435400[78] = 0;
   out_5061725893169435400[79] = 0;
   out_5061725893169435400[80] = 0;
   out_5061725893169435400[81] = 0;
   out_5061725893169435400[82] = 0;
   out_5061725893169435400[83] = 0;
   out_5061725893169435400[84] = 0;
   out_5061725893169435400[85] = 0;
   out_5061725893169435400[86] = 0;
   out_5061725893169435400[87] = 0.5*state[3];
   out_5061725893169435400[88] = 0.5*state[6];
   out_5061725893169435400[89] = -0.5*state[5];
   out_5061725893169435400[90] = 0;
   out_5061725893169435400[91] = 0;
   out_5061725893169435400[92] = 0;
   out_5061725893169435400[93] = 0;
   out_5061725893169435400[94] = 0;
   out_5061725893169435400[95] = 0;
   out_5061725893169435400[96] = 0;
   out_5061725893169435400[97] = 0;
   out_5061725893169435400[98] = 0;
   out_5061725893169435400[99] = 0;
   out_5061725893169435400[100] = 0;
   out_5061725893169435400[101] = 0;
   out_5061725893169435400[102] = 0;
   out_5061725893169435400[103] = 0;
   out_5061725893169435400[104] = 0;
   out_5061725893169435400[105] = 0;
   out_5061725893169435400[106] = 0;
   out_5061725893169435400[107] = 0;
   out_5061725893169435400[108] = -0.5*state[6];
   out_5061725893169435400[109] = 0.5*state[3];
   out_5061725893169435400[110] = 0.5*state[4];
   out_5061725893169435400[111] = 0;
   out_5061725893169435400[112] = 0;
   out_5061725893169435400[113] = 0;
   out_5061725893169435400[114] = 0;
   out_5061725893169435400[115] = 0;
   out_5061725893169435400[116] = 0;
   out_5061725893169435400[117] = 0;
   out_5061725893169435400[118] = 0;
   out_5061725893169435400[119] = 0;
   out_5061725893169435400[120] = 0;
   out_5061725893169435400[121] = 0;
   out_5061725893169435400[122] = 0;
   out_5061725893169435400[123] = 0;
   out_5061725893169435400[124] = 0;
   out_5061725893169435400[125] = 0;
   out_5061725893169435400[126] = 0;
   out_5061725893169435400[127] = 0;
   out_5061725893169435400[128] = 0;
   out_5061725893169435400[129] = 0.5*state[5];
   out_5061725893169435400[130] = -0.5*state[4];
   out_5061725893169435400[131] = 0.5*state[3];
   out_5061725893169435400[132] = 0;
   out_5061725893169435400[133] = 0;
   out_5061725893169435400[134] = 0;
   out_5061725893169435400[135] = 0;
   out_5061725893169435400[136] = 0;
   out_5061725893169435400[137] = 0;
   out_5061725893169435400[138] = 0;
   out_5061725893169435400[139] = 0;
   out_5061725893169435400[140] = 0;
   out_5061725893169435400[141] = 0;
   out_5061725893169435400[142] = 0;
   out_5061725893169435400[143] = 0;
   out_5061725893169435400[144] = 0;
   out_5061725893169435400[145] = 0;
   out_5061725893169435400[146] = 0;
   out_5061725893169435400[147] = 0;
   out_5061725893169435400[148] = 0;
   out_5061725893169435400[149] = 0;
   out_5061725893169435400[150] = 0;
   out_5061725893169435400[151] = 0;
   out_5061725893169435400[152] = 0;
   out_5061725893169435400[153] = 1.0;
   out_5061725893169435400[154] = 0;
   out_5061725893169435400[155] = 0;
   out_5061725893169435400[156] = 0;
   out_5061725893169435400[157] = 0;
   out_5061725893169435400[158] = 0;
   out_5061725893169435400[159] = 0;
   out_5061725893169435400[160] = 0;
   out_5061725893169435400[161] = 0;
   out_5061725893169435400[162] = 0;
   out_5061725893169435400[163] = 0;
   out_5061725893169435400[164] = 0;
   out_5061725893169435400[165] = 0;
   out_5061725893169435400[166] = 0;
   out_5061725893169435400[167] = 0;
   out_5061725893169435400[168] = 0;
   out_5061725893169435400[169] = 0;
   out_5061725893169435400[170] = 0;
   out_5061725893169435400[171] = 0;
   out_5061725893169435400[172] = 0;
   out_5061725893169435400[173] = 0;
   out_5061725893169435400[174] = 0;
   out_5061725893169435400[175] = 1.0;
   out_5061725893169435400[176] = 0;
   out_5061725893169435400[177] = 0;
   out_5061725893169435400[178] = 0;
   out_5061725893169435400[179] = 0;
   out_5061725893169435400[180] = 0;
   out_5061725893169435400[181] = 0;
   out_5061725893169435400[182] = 0;
   out_5061725893169435400[183] = 0;
   out_5061725893169435400[184] = 0;
   out_5061725893169435400[185] = 0;
   out_5061725893169435400[186] = 0;
   out_5061725893169435400[187] = 0;
   out_5061725893169435400[188] = 0;
   out_5061725893169435400[189] = 0;
   out_5061725893169435400[190] = 0;
   out_5061725893169435400[191] = 0;
   out_5061725893169435400[192] = 0;
   out_5061725893169435400[193] = 0;
   out_5061725893169435400[194] = 0;
   out_5061725893169435400[195] = 0;
   out_5061725893169435400[196] = 0;
   out_5061725893169435400[197] = 1.0;
   out_5061725893169435400[198] = 0;
   out_5061725893169435400[199] = 0;
   out_5061725893169435400[200] = 0;
   out_5061725893169435400[201] = 0;
   out_5061725893169435400[202] = 0;
   out_5061725893169435400[203] = 0;
   out_5061725893169435400[204] = 0;
   out_5061725893169435400[205] = 0;
   out_5061725893169435400[206] = 0;
   out_5061725893169435400[207] = 0;
   out_5061725893169435400[208] = 0;
   out_5061725893169435400[209] = 0;
   out_5061725893169435400[210] = 0;
   out_5061725893169435400[211] = 0;
   out_5061725893169435400[212] = 0;
   out_5061725893169435400[213] = 0;
   out_5061725893169435400[214] = 0;
   out_5061725893169435400[215] = 0;
   out_5061725893169435400[216] = 0;
   out_5061725893169435400[217] = 0;
   out_5061725893169435400[218] = 0;
   out_5061725893169435400[219] = 1.0;
   out_5061725893169435400[220] = 0;
   out_5061725893169435400[221] = 0;
   out_5061725893169435400[222] = 0;
   out_5061725893169435400[223] = 0;
   out_5061725893169435400[224] = 0;
   out_5061725893169435400[225] = 0;
   out_5061725893169435400[226] = 0;
   out_5061725893169435400[227] = 0;
   out_5061725893169435400[228] = 0;
   out_5061725893169435400[229] = 0;
   out_5061725893169435400[230] = 0;
   out_5061725893169435400[231] = 0;
   out_5061725893169435400[232] = 0;
   out_5061725893169435400[233] = 0;
   out_5061725893169435400[234] = 0;
   out_5061725893169435400[235] = 0;
   out_5061725893169435400[236] = 0;
   out_5061725893169435400[237] = 0;
   out_5061725893169435400[238] = 0;
   out_5061725893169435400[239] = 0;
   out_5061725893169435400[240] = 0;
   out_5061725893169435400[241] = 1.0;
   out_5061725893169435400[242] = 0;
   out_5061725893169435400[243] = 0;
   out_5061725893169435400[244] = 0;
   out_5061725893169435400[245] = 0;
   out_5061725893169435400[246] = 0;
   out_5061725893169435400[247] = 0;
   out_5061725893169435400[248] = 0;
   out_5061725893169435400[249] = 0;
   out_5061725893169435400[250] = 0;
   out_5061725893169435400[251] = 0;
   out_5061725893169435400[252] = 0;
   out_5061725893169435400[253] = 0;
   out_5061725893169435400[254] = 0;
   out_5061725893169435400[255] = 0;
   out_5061725893169435400[256] = 0;
   out_5061725893169435400[257] = 0;
   out_5061725893169435400[258] = 0;
   out_5061725893169435400[259] = 0;
   out_5061725893169435400[260] = 0;
   out_5061725893169435400[261] = 0;
   out_5061725893169435400[262] = 0;
   out_5061725893169435400[263] = 1.0;
   out_5061725893169435400[264] = 0;
   out_5061725893169435400[265] = 0;
   out_5061725893169435400[266] = 0;
   out_5061725893169435400[267] = 0;
   out_5061725893169435400[268] = 0;
   out_5061725893169435400[269] = 0;
   out_5061725893169435400[270] = 0;
   out_5061725893169435400[271] = 0;
   out_5061725893169435400[272] = 0;
   out_5061725893169435400[273] = 0;
   out_5061725893169435400[274] = 0;
   out_5061725893169435400[275] = 0;
   out_5061725893169435400[276] = 0;
   out_5061725893169435400[277] = 0;
   out_5061725893169435400[278] = 0;
   out_5061725893169435400[279] = 0;
   out_5061725893169435400[280] = 0;
   out_5061725893169435400[281] = 0;
   out_5061725893169435400[282] = 0;
   out_5061725893169435400[283] = 0;
   out_5061725893169435400[284] = 0;
   out_5061725893169435400[285] = 1.0;
   out_5061725893169435400[286] = 0;
   out_5061725893169435400[287] = 0;
   out_5061725893169435400[288] = 0;
   out_5061725893169435400[289] = 0;
   out_5061725893169435400[290] = 0;
   out_5061725893169435400[291] = 0;
   out_5061725893169435400[292] = 0;
   out_5061725893169435400[293] = 0;
   out_5061725893169435400[294] = 0;
   out_5061725893169435400[295] = 0;
   out_5061725893169435400[296] = 0;
   out_5061725893169435400[297] = 0;
   out_5061725893169435400[298] = 0;
   out_5061725893169435400[299] = 0;
   out_5061725893169435400[300] = 0;
   out_5061725893169435400[301] = 0;
   out_5061725893169435400[302] = 0;
   out_5061725893169435400[303] = 0;
   out_5061725893169435400[304] = 0;
   out_5061725893169435400[305] = 0;
   out_5061725893169435400[306] = 0;
   out_5061725893169435400[307] = 1.0;
   out_5061725893169435400[308] = 0;
   out_5061725893169435400[309] = 0;
   out_5061725893169435400[310] = 0;
   out_5061725893169435400[311] = 0;
   out_5061725893169435400[312] = 0;
   out_5061725893169435400[313] = 0;
   out_5061725893169435400[314] = 0;
   out_5061725893169435400[315] = 0;
   out_5061725893169435400[316] = 0;
   out_5061725893169435400[317] = 0;
   out_5061725893169435400[318] = 0;
   out_5061725893169435400[319] = 0;
   out_5061725893169435400[320] = 0;
   out_5061725893169435400[321] = 0;
   out_5061725893169435400[322] = 0;
   out_5061725893169435400[323] = 0;
   out_5061725893169435400[324] = 0;
   out_5061725893169435400[325] = 0;
   out_5061725893169435400[326] = 0;
   out_5061725893169435400[327] = 0;
   out_5061725893169435400[328] = 0;
   out_5061725893169435400[329] = 1.0;
   out_5061725893169435400[330] = 0;
   out_5061725893169435400[331] = 0;
   out_5061725893169435400[332] = 0;
   out_5061725893169435400[333] = 0;
   out_5061725893169435400[334] = 0;
   out_5061725893169435400[335] = 0;
   out_5061725893169435400[336] = 0;
   out_5061725893169435400[337] = 0;
   out_5061725893169435400[338] = 0;
   out_5061725893169435400[339] = 0;
   out_5061725893169435400[340] = 0;
   out_5061725893169435400[341] = 0;
   out_5061725893169435400[342] = 0;
   out_5061725893169435400[343] = 0;
   out_5061725893169435400[344] = 0;
   out_5061725893169435400[345] = 0;
   out_5061725893169435400[346] = 0;
   out_5061725893169435400[347] = 0;
   out_5061725893169435400[348] = 0;
   out_5061725893169435400[349] = 0;
   out_5061725893169435400[350] = 0;
   out_5061725893169435400[351] = 1.0;
   out_5061725893169435400[352] = 0;
   out_5061725893169435400[353] = 0;
   out_5061725893169435400[354] = 0;
   out_5061725893169435400[355] = 0;
   out_5061725893169435400[356] = 0;
   out_5061725893169435400[357] = 0;
   out_5061725893169435400[358] = 0;
   out_5061725893169435400[359] = 0;
   out_5061725893169435400[360] = 0;
   out_5061725893169435400[361] = 0;
   out_5061725893169435400[362] = 0;
   out_5061725893169435400[363] = 0;
   out_5061725893169435400[364] = 0;
   out_5061725893169435400[365] = 0;
   out_5061725893169435400[366] = 0;
   out_5061725893169435400[367] = 0;
   out_5061725893169435400[368] = 0;
   out_5061725893169435400[369] = 0;
   out_5061725893169435400[370] = 0;
   out_5061725893169435400[371] = 0;
   out_5061725893169435400[372] = 0;
   out_5061725893169435400[373] = 1.0;
   out_5061725893169435400[374] = 0;
   out_5061725893169435400[375] = 0;
   out_5061725893169435400[376] = 0;
   out_5061725893169435400[377] = 0;
   out_5061725893169435400[378] = 0;
   out_5061725893169435400[379] = 0;
   out_5061725893169435400[380] = 0;
   out_5061725893169435400[381] = 0;
   out_5061725893169435400[382] = 0;
   out_5061725893169435400[383] = 0;
   out_5061725893169435400[384] = 0;
   out_5061725893169435400[385] = 0;
   out_5061725893169435400[386] = 0;
   out_5061725893169435400[387] = 0;
   out_5061725893169435400[388] = 0;
   out_5061725893169435400[389] = 0;
   out_5061725893169435400[390] = 0;
   out_5061725893169435400[391] = 0;
   out_5061725893169435400[392] = 0;
   out_5061725893169435400[393] = 0;
   out_5061725893169435400[394] = 0;
   out_5061725893169435400[395] = 1.0;
   out_5061725893169435400[396] = 0;
   out_5061725893169435400[397] = 0;
   out_5061725893169435400[398] = 0;
   out_5061725893169435400[399] = 0;
   out_5061725893169435400[400] = 0;
   out_5061725893169435400[401] = 0;
   out_5061725893169435400[402] = 0;
   out_5061725893169435400[403] = 0;
   out_5061725893169435400[404] = 0;
   out_5061725893169435400[405] = 0;
   out_5061725893169435400[406] = 0;
   out_5061725893169435400[407] = 0;
   out_5061725893169435400[408] = 0;
   out_5061725893169435400[409] = 0;
   out_5061725893169435400[410] = 0;
   out_5061725893169435400[411] = 0;
   out_5061725893169435400[412] = 0;
   out_5061725893169435400[413] = 0;
   out_5061725893169435400[414] = 0;
   out_5061725893169435400[415] = 0;
   out_5061725893169435400[416] = 0;
   out_5061725893169435400[417] = 1.0;
   out_5061725893169435400[418] = 0;
   out_5061725893169435400[419] = 0;
   out_5061725893169435400[420] = 0;
   out_5061725893169435400[421] = 0;
   out_5061725893169435400[422] = 0;
   out_5061725893169435400[423] = 0;
   out_5061725893169435400[424] = 0;
   out_5061725893169435400[425] = 0;
   out_5061725893169435400[426] = 0;
   out_5061725893169435400[427] = 0;
   out_5061725893169435400[428] = 0;
   out_5061725893169435400[429] = 0;
   out_5061725893169435400[430] = 0;
   out_5061725893169435400[431] = 0;
   out_5061725893169435400[432] = 0;
   out_5061725893169435400[433] = 0;
   out_5061725893169435400[434] = 0;
   out_5061725893169435400[435] = 0;
   out_5061725893169435400[436] = 0;
   out_5061725893169435400[437] = 0;
   out_5061725893169435400[438] = 0;
   out_5061725893169435400[439] = 1.0;
   out_5061725893169435400[440] = 0;
   out_5061725893169435400[441] = 0;
   out_5061725893169435400[442] = 0;
   out_5061725893169435400[443] = 0;
   out_5061725893169435400[444] = 0;
   out_5061725893169435400[445] = 0;
   out_5061725893169435400[446] = 0;
   out_5061725893169435400[447] = 0;
   out_5061725893169435400[448] = 0;
   out_5061725893169435400[449] = 0;
   out_5061725893169435400[450] = 0;
   out_5061725893169435400[451] = 0;
   out_5061725893169435400[452] = 0;
   out_5061725893169435400[453] = 0;
   out_5061725893169435400[454] = 0;
   out_5061725893169435400[455] = 0;
   out_5061725893169435400[456] = 0;
   out_5061725893169435400[457] = 0;
   out_5061725893169435400[458] = 0;
   out_5061725893169435400[459] = 0;
   out_5061725893169435400[460] = 0;
   out_5061725893169435400[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7683985547281658067) {
   out_7683985547281658067[0] = dt*state[7] + state[0];
   out_7683985547281658067[1] = dt*state[8] + state[1];
   out_7683985547281658067[2] = dt*state[9] + state[2];
   out_7683985547281658067[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7683985547281658067[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7683985547281658067[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7683985547281658067[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7683985547281658067[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7683985547281658067[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7683985547281658067[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7683985547281658067[10] = state[10];
   out_7683985547281658067[11] = state[11];
   out_7683985547281658067[12] = state[12];
   out_7683985547281658067[13] = state[13];
   out_7683985547281658067[14] = state[14];
   out_7683985547281658067[15] = state[15];
   out_7683985547281658067[16] = state[16];
   out_7683985547281658067[17] = state[17];
   out_7683985547281658067[18] = state[18];
   out_7683985547281658067[19] = state[19];
   out_7683985547281658067[20] = state[20];
   out_7683985547281658067[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8943773693071752463) {
   out_8943773693071752463[0] = 1;
   out_8943773693071752463[1] = 0;
   out_8943773693071752463[2] = 0;
   out_8943773693071752463[3] = 0;
   out_8943773693071752463[4] = 0;
   out_8943773693071752463[5] = 0;
   out_8943773693071752463[6] = dt;
   out_8943773693071752463[7] = 0;
   out_8943773693071752463[8] = 0;
   out_8943773693071752463[9] = 0;
   out_8943773693071752463[10] = 0;
   out_8943773693071752463[11] = 0;
   out_8943773693071752463[12] = 0;
   out_8943773693071752463[13] = 0;
   out_8943773693071752463[14] = 0;
   out_8943773693071752463[15] = 0;
   out_8943773693071752463[16] = 0;
   out_8943773693071752463[17] = 0;
   out_8943773693071752463[18] = 0;
   out_8943773693071752463[19] = 0;
   out_8943773693071752463[20] = 0;
   out_8943773693071752463[21] = 0;
   out_8943773693071752463[22] = 1;
   out_8943773693071752463[23] = 0;
   out_8943773693071752463[24] = 0;
   out_8943773693071752463[25] = 0;
   out_8943773693071752463[26] = 0;
   out_8943773693071752463[27] = 0;
   out_8943773693071752463[28] = dt;
   out_8943773693071752463[29] = 0;
   out_8943773693071752463[30] = 0;
   out_8943773693071752463[31] = 0;
   out_8943773693071752463[32] = 0;
   out_8943773693071752463[33] = 0;
   out_8943773693071752463[34] = 0;
   out_8943773693071752463[35] = 0;
   out_8943773693071752463[36] = 0;
   out_8943773693071752463[37] = 0;
   out_8943773693071752463[38] = 0;
   out_8943773693071752463[39] = 0;
   out_8943773693071752463[40] = 0;
   out_8943773693071752463[41] = 0;
   out_8943773693071752463[42] = 0;
   out_8943773693071752463[43] = 0;
   out_8943773693071752463[44] = 1;
   out_8943773693071752463[45] = 0;
   out_8943773693071752463[46] = 0;
   out_8943773693071752463[47] = 0;
   out_8943773693071752463[48] = 0;
   out_8943773693071752463[49] = 0;
   out_8943773693071752463[50] = dt;
   out_8943773693071752463[51] = 0;
   out_8943773693071752463[52] = 0;
   out_8943773693071752463[53] = 0;
   out_8943773693071752463[54] = 0;
   out_8943773693071752463[55] = 0;
   out_8943773693071752463[56] = 0;
   out_8943773693071752463[57] = 0;
   out_8943773693071752463[58] = 0;
   out_8943773693071752463[59] = 0;
   out_8943773693071752463[60] = 0;
   out_8943773693071752463[61] = 0;
   out_8943773693071752463[62] = 0;
   out_8943773693071752463[63] = 0;
   out_8943773693071752463[64] = 0;
   out_8943773693071752463[65] = 0;
   out_8943773693071752463[66] = 1;
   out_8943773693071752463[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8943773693071752463[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8943773693071752463[69] = 0;
   out_8943773693071752463[70] = 0;
   out_8943773693071752463[71] = 0;
   out_8943773693071752463[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8943773693071752463[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8943773693071752463[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8943773693071752463[75] = 0;
   out_8943773693071752463[76] = 0;
   out_8943773693071752463[77] = 0;
   out_8943773693071752463[78] = 0;
   out_8943773693071752463[79] = 0;
   out_8943773693071752463[80] = 0;
   out_8943773693071752463[81] = 0;
   out_8943773693071752463[82] = 0;
   out_8943773693071752463[83] = 0;
   out_8943773693071752463[84] = 0;
   out_8943773693071752463[85] = 0;
   out_8943773693071752463[86] = 0;
   out_8943773693071752463[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8943773693071752463[88] = 1;
   out_8943773693071752463[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8943773693071752463[90] = 0;
   out_8943773693071752463[91] = 0;
   out_8943773693071752463[92] = 0;
   out_8943773693071752463[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8943773693071752463[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8943773693071752463[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8943773693071752463[96] = 0;
   out_8943773693071752463[97] = 0;
   out_8943773693071752463[98] = 0;
   out_8943773693071752463[99] = 0;
   out_8943773693071752463[100] = 0;
   out_8943773693071752463[101] = 0;
   out_8943773693071752463[102] = 0;
   out_8943773693071752463[103] = 0;
   out_8943773693071752463[104] = 0;
   out_8943773693071752463[105] = 0;
   out_8943773693071752463[106] = 0;
   out_8943773693071752463[107] = 0;
   out_8943773693071752463[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8943773693071752463[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8943773693071752463[110] = 1;
   out_8943773693071752463[111] = 0;
   out_8943773693071752463[112] = 0;
   out_8943773693071752463[113] = 0;
   out_8943773693071752463[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8943773693071752463[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8943773693071752463[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8943773693071752463[117] = 0;
   out_8943773693071752463[118] = 0;
   out_8943773693071752463[119] = 0;
   out_8943773693071752463[120] = 0;
   out_8943773693071752463[121] = 0;
   out_8943773693071752463[122] = 0;
   out_8943773693071752463[123] = 0;
   out_8943773693071752463[124] = 0;
   out_8943773693071752463[125] = 0;
   out_8943773693071752463[126] = 0;
   out_8943773693071752463[127] = 0;
   out_8943773693071752463[128] = 0;
   out_8943773693071752463[129] = 0;
   out_8943773693071752463[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8943773693071752463[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8943773693071752463[132] = 1;
   out_8943773693071752463[133] = 0;
   out_8943773693071752463[134] = 0;
   out_8943773693071752463[135] = 0;
   out_8943773693071752463[136] = 0;
   out_8943773693071752463[137] = 0;
   out_8943773693071752463[138] = 0;
   out_8943773693071752463[139] = 0;
   out_8943773693071752463[140] = 0;
   out_8943773693071752463[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8943773693071752463[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8943773693071752463[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8943773693071752463[144] = 0;
   out_8943773693071752463[145] = 0;
   out_8943773693071752463[146] = 0;
   out_8943773693071752463[147] = 0;
   out_8943773693071752463[148] = 0;
   out_8943773693071752463[149] = 0;
   out_8943773693071752463[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8943773693071752463[151] = 0;
   out_8943773693071752463[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8943773693071752463[153] = 0;
   out_8943773693071752463[154] = 1;
   out_8943773693071752463[155] = 0;
   out_8943773693071752463[156] = 0;
   out_8943773693071752463[157] = 0;
   out_8943773693071752463[158] = 0;
   out_8943773693071752463[159] = 0;
   out_8943773693071752463[160] = 0;
   out_8943773693071752463[161] = 0;
   out_8943773693071752463[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8943773693071752463[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8943773693071752463[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8943773693071752463[165] = 0;
   out_8943773693071752463[166] = 0;
   out_8943773693071752463[167] = 0;
   out_8943773693071752463[168] = 0;
   out_8943773693071752463[169] = 0;
   out_8943773693071752463[170] = 0;
   out_8943773693071752463[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8943773693071752463[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8943773693071752463[173] = 0;
   out_8943773693071752463[174] = 0;
   out_8943773693071752463[175] = 0;
   out_8943773693071752463[176] = 1;
   out_8943773693071752463[177] = 0;
   out_8943773693071752463[178] = 0;
   out_8943773693071752463[179] = 0;
   out_8943773693071752463[180] = 0;
   out_8943773693071752463[181] = 0;
   out_8943773693071752463[182] = 0;
   out_8943773693071752463[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8943773693071752463[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8943773693071752463[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8943773693071752463[186] = 0;
   out_8943773693071752463[187] = 0;
   out_8943773693071752463[188] = 0;
   out_8943773693071752463[189] = 0;
   out_8943773693071752463[190] = 0;
   out_8943773693071752463[191] = 0;
   out_8943773693071752463[192] = 0;
   out_8943773693071752463[193] = 0;
   out_8943773693071752463[194] = 0;
   out_8943773693071752463[195] = 0;
   out_8943773693071752463[196] = 0;
   out_8943773693071752463[197] = 0;
   out_8943773693071752463[198] = 1;
   out_8943773693071752463[199] = 0;
   out_8943773693071752463[200] = 0;
   out_8943773693071752463[201] = 0;
   out_8943773693071752463[202] = 0;
   out_8943773693071752463[203] = 0;
   out_8943773693071752463[204] = 0;
   out_8943773693071752463[205] = 0;
   out_8943773693071752463[206] = 0;
   out_8943773693071752463[207] = 0;
   out_8943773693071752463[208] = 0;
   out_8943773693071752463[209] = 0;
   out_8943773693071752463[210] = 0;
   out_8943773693071752463[211] = 0;
   out_8943773693071752463[212] = 0;
   out_8943773693071752463[213] = 0;
   out_8943773693071752463[214] = 0;
   out_8943773693071752463[215] = 0;
   out_8943773693071752463[216] = 0;
   out_8943773693071752463[217] = 0;
   out_8943773693071752463[218] = 0;
   out_8943773693071752463[219] = 0;
   out_8943773693071752463[220] = 1;
   out_8943773693071752463[221] = 0;
   out_8943773693071752463[222] = 0;
   out_8943773693071752463[223] = 0;
   out_8943773693071752463[224] = 0;
   out_8943773693071752463[225] = 0;
   out_8943773693071752463[226] = 0;
   out_8943773693071752463[227] = 0;
   out_8943773693071752463[228] = 0;
   out_8943773693071752463[229] = 0;
   out_8943773693071752463[230] = 0;
   out_8943773693071752463[231] = 0;
   out_8943773693071752463[232] = 0;
   out_8943773693071752463[233] = 0;
   out_8943773693071752463[234] = 0;
   out_8943773693071752463[235] = 0;
   out_8943773693071752463[236] = 0;
   out_8943773693071752463[237] = 0;
   out_8943773693071752463[238] = 0;
   out_8943773693071752463[239] = 0;
   out_8943773693071752463[240] = 0;
   out_8943773693071752463[241] = 0;
   out_8943773693071752463[242] = 1;
   out_8943773693071752463[243] = 0;
   out_8943773693071752463[244] = 0;
   out_8943773693071752463[245] = 0;
   out_8943773693071752463[246] = 0;
   out_8943773693071752463[247] = 0;
   out_8943773693071752463[248] = 0;
   out_8943773693071752463[249] = 0;
   out_8943773693071752463[250] = 0;
   out_8943773693071752463[251] = 0;
   out_8943773693071752463[252] = 0;
   out_8943773693071752463[253] = 0;
   out_8943773693071752463[254] = 0;
   out_8943773693071752463[255] = 0;
   out_8943773693071752463[256] = 0;
   out_8943773693071752463[257] = 0;
   out_8943773693071752463[258] = 0;
   out_8943773693071752463[259] = 0;
   out_8943773693071752463[260] = 0;
   out_8943773693071752463[261] = 0;
   out_8943773693071752463[262] = 0;
   out_8943773693071752463[263] = 0;
   out_8943773693071752463[264] = 1;
   out_8943773693071752463[265] = 0;
   out_8943773693071752463[266] = 0;
   out_8943773693071752463[267] = 0;
   out_8943773693071752463[268] = 0;
   out_8943773693071752463[269] = 0;
   out_8943773693071752463[270] = 0;
   out_8943773693071752463[271] = 0;
   out_8943773693071752463[272] = 0;
   out_8943773693071752463[273] = 0;
   out_8943773693071752463[274] = 0;
   out_8943773693071752463[275] = 0;
   out_8943773693071752463[276] = 0;
   out_8943773693071752463[277] = 0;
   out_8943773693071752463[278] = 0;
   out_8943773693071752463[279] = 0;
   out_8943773693071752463[280] = 0;
   out_8943773693071752463[281] = 0;
   out_8943773693071752463[282] = 0;
   out_8943773693071752463[283] = 0;
   out_8943773693071752463[284] = 0;
   out_8943773693071752463[285] = 0;
   out_8943773693071752463[286] = 1;
   out_8943773693071752463[287] = 0;
   out_8943773693071752463[288] = 0;
   out_8943773693071752463[289] = 0;
   out_8943773693071752463[290] = 0;
   out_8943773693071752463[291] = 0;
   out_8943773693071752463[292] = 0;
   out_8943773693071752463[293] = 0;
   out_8943773693071752463[294] = 0;
   out_8943773693071752463[295] = 0;
   out_8943773693071752463[296] = 0;
   out_8943773693071752463[297] = 0;
   out_8943773693071752463[298] = 0;
   out_8943773693071752463[299] = 0;
   out_8943773693071752463[300] = 0;
   out_8943773693071752463[301] = 0;
   out_8943773693071752463[302] = 0;
   out_8943773693071752463[303] = 0;
   out_8943773693071752463[304] = 0;
   out_8943773693071752463[305] = 0;
   out_8943773693071752463[306] = 0;
   out_8943773693071752463[307] = 0;
   out_8943773693071752463[308] = 1;
   out_8943773693071752463[309] = 0;
   out_8943773693071752463[310] = 0;
   out_8943773693071752463[311] = 0;
   out_8943773693071752463[312] = 0;
   out_8943773693071752463[313] = 0;
   out_8943773693071752463[314] = 0;
   out_8943773693071752463[315] = 0;
   out_8943773693071752463[316] = 0;
   out_8943773693071752463[317] = 0;
   out_8943773693071752463[318] = 0;
   out_8943773693071752463[319] = 0;
   out_8943773693071752463[320] = 0;
   out_8943773693071752463[321] = 0;
   out_8943773693071752463[322] = 0;
   out_8943773693071752463[323] = 0;
   out_8943773693071752463[324] = 0;
   out_8943773693071752463[325] = 0;
   out_8943773693071752463[326] = 0;
   out_8943773693071752463[327] = 0;
   out_8943773693071752463[328] = 0;
   out_8943773693071752463[329] = 0;
   out_8943773693071752463[330] = 1;
   out_8943773693071752463[331] = 0;
   out_8943773693071752463[332] = 0;
   out_8943773693071752463[333] = 0;
   out_8943773693071752463[334] = 0;
   out_8943773693071752463[335] = 0;
   out_8943773693071752463[336] = 0;
   out_8943773693071752463[337] = 0;
   out_8943773693071752463[338] = 0;
   out_8943773693071752463[339] = 0;
   out_8943773693071752463[340] = 0;
   out_8943773693071752463[341] = 0;
   out_8943773693071752463[342] = 0;
   out_8943773693071752463[343] = 0;
   out_8943773693071752463[344] = 0;
   out_8943773693071752463[345] = 0;
   out_8943773693071752463[346] = 0;
   out_8943773693071752463[347] = 0;
   out_8943773693071752463[348] = 0;
   out_8943773693071752463[349] = 0;
   out_8943773693071752463[350] = 0;
   out_8943773693071752463[351] = 0;
   out_8943773693071752463[352] = 1;
   out_8943773693071752463[353] = 0;
   out_8943773693071752463[354] = 0;
   out_8943773693071752463[355] = 0;
   out_8943773693071752463[356] = 0;
   out_8943773693071752463[357] = 0;
   out_8943773693071752463[358] = 0;
   out_8943773693071752463[359] = 0;
   out_8943773693071752463[360] = 0;
   out_8943773693071752463[361] = 0;
   out_8943773693071752463[362] = 0;
   out_8943773693071752463[363] = 0;
   out_8943773693071752463[364] = 0;
   out_8943773693071752463[365] = 0;
   out_8943773693071752463[366] = 0;
   out_8943773693071752463[367] = 0;
   out_8943773693071752463[368] = 0;
   out_8943773693071752463[369] = 0;
   out_8943773693071752463[370] = 0;
   out_8943773693071752463[371] = 0;
   out_8943773693071752463[372] = 0;
   out_8943773693071752463[373] = 0;
   out_8943773693071752463[374] = 1;
   out_8943773693071752463[375] = 0;
   out_8943773693071752463[376] = 0;
   out_8943773693071752463[377] = 0;
   out_8943773693071752463[378] = 0;
   out_8943773693071752463[379] = 0;
   out_8943773693071752463[380] = 0;
   out_8943773693071752463[381] = 0;
   out_8943773693071752463[382] = 0;
   out_8943773693071752463[383] = 0;
   out_8943773693071752463[384] = 0;
   out_8943773693071752463[385] = 0;
   out_8943773693071752463[386] = 0;
   out_8943773693071752463[387] = 0;
   out_8943773693071752463[388] = 0;
   out_8943773693071752463[389] = 0;
   out_8943773693071752463[390] = 0;
   out_8943773693071752463[391] = 0;
   out_8943773693071752463[392] = 0;
   out_8943773693071752463[393] = 0;
   out_8943773693071752463[394] = 0;
   out_8943773693071752463[395] = 0;
   out_8943773693071752463[396] = 1;
   out_8943773693071752463[397] = 0;
   out_8943773693071752463[398] = 0;
   out_8943773693071752463[399] = 0;
   out_8943773693071752463[400] = 0;
   out_8943773693071752463[401] = 0;
   out_8943773693071752463[402] = 0;
   out_8943773693071752463[403] = 0;
   out_8943773693071752463[404] = 0;
   out_8943773693071752463[405] = 0;
   out_8943773693071752463[406] = 0;
   out_8943773693071752463[407] = 0;
   out_8943773693071752463[408] = 0;
   out_8943773693071752463[409] = 0;
   out_8943773693071752463[410] = 0;
   out_8943773693071752463[411] = 0;
   out_8943773693071752463[412] = 0;
   out_8943773693071752463[413] = 0;
   out_8943773693071752463[414] = 0;
   out_8943773693071752463[415] = 0;
   out_8943773693071752463[416] = 0;
   out_8943773693071752463[417] = 0;
   out_8943773693071752463[418] = 1;
   out_8943773693071752463[419] = 0;
   out_8943773693071752463[420] = 0;
   out_8943773693071752463[421] = 0;
   out_8943773693071752463[422] = 0;
   out_8943773693071752463[423] = 0;
   out_8943773693071752463[424] = 0;
   out_8943773693071752463[425] = 0;
   out_8943773693071752463[426] = 0;
   out_8943773693071752463[427] = 0;
   out_8943773693071752463[428] = 0;
   out_8943773693071752463[429] = 0;
   out_8943773693071752463[430] = 0;
   out_8943773693071752463[431] = 0;
   out_8943773693071752463[432] = 0;
   out_8943773693071752463[433] = 0;
   out_8943773693071752463[434] = 0;
   out_8943773693071752463[435] = 0;
   out_8943773693071752463[436] = 0;
   out_8943773693071752463[437] = 0;
   out_8943773693071752463[438] = 0;
   out_8943773693071752463[439] = 0;
   out_8943773693071752463[440] = 1;
}
void h_4(double *state, double *unused, double *out_9168729868079662505) {
   out_9168729868079662505[0] = state[10] + state[13];
   out_9168729868079662505[1] = state[11] + state[14];
   out_9168729868079662505[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6430951254900454667) {
   out_6430951254900454667[0] = 0;
   out_6430951254900454667[1] = 0;
   out_6430951254900454667[2] = 0;
   out_6430951254900454667[3] = 0;
   out_6430951254900454667[4] = 0;
   out_6430951254900454667[5] = 0;
   out_6430951254900454667[6] = 0;
   out_6430951254900454667[7] = 0;
   out_6430951254900454667[8] = 0;
   out_6430951254900454667[9] = 0;
   out_6430951254900454667[10] = 1;
   out_6430951254900454667[11] = 0;
   out_6430951254900454667[12] = 0;
   out_6430951254900454667[13] = 1;
   out_6430951254900454667[14] = 0;
   out_6430951254900454667[15] = 0;
   out_6430951254900454667[16] = 0;
   out_6430951254900454667[17] = 0;
   out_6430951254900454667[18] = 0;
   out_6430951254900454667[19] = 0;
   out_6430951254900454667[20] = 0;
   out_6430951254900454667[21] = 0;
   out_6430951254900454667[22] = 0;
   out_6430951254900454667[23] = 0;
   out_6430951254900454667[24] = 0;
   out_6430951254900454667[25] = 0;
   out_6430951254900454667[26] = 0;
   out_6430951254900454667[27] = 0;
   out_6430951254900454667[28] = 0;
   out_6430951254900454667[29] = 0;
   out_6430951254900454667[30] = 0;
   out_6430951254900454667[31] = 0;
   out_6430951254900454667[32] = 0;
   out_6430951254900454667[33] = 1;
   out_6430951254900454667[34] = 0;
   out_6430951254900454667[35] = 0;
   out_6430951254900454667[36] = 1;
   out_6430951254900454667[37] = 0;
   out_6430951254900454667[38] = 0;
   out_6430951254900454667[39] = 0;
   out_6430951254900454667[40] = 0;
   out_6430951254900454667[41] = 0;
   out_6430951254900454667[42] = 0;
   out_6430951254900454667[43] = 0;
   out_6430951254900454667[44] = 0;
   out_6430951254900454667[45] = 0;
   out_6430951254900454667[46] = 0;
   out_6430951254900454667[47] = 0;
   out_6430951254900454667[48] = 0;
   out_6430951254900454667[49] = 0;
   out_6430951254900454667[50] = 0;
   out_6430951254900454667[51] = 0;
   out_6430951254900454667[52] = 0;
   out_6430951254900454667[53] = 0;
   out_6430951254900454667[54] = 0;
   out_6430951254900454667[55] = 0;
   out_6430951254900454667[56] = 1;
   out_6430951254900454667[57] = 0;
   out_6430951254900454667[58] = 0;
   out_6430951254900454667[59] = 1;
   out_6430951254900454667[60] = 0;
   out_6430951254900454667[61] = 0;
   out_6430951254900454667[62] = 0;
   out_6430951254900454667[63] = 0;
   out_6430951254900454667[64] = 0;
   out_6430951254900454667[65] = 0;
}
void h_9(double *state, double *unused, double *out_2361113187014814240) {
   out_2361113187014814240[0] = state[10];
   out_2361113187014814240[1] = state[11];
   out_2361113187014814240[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6672140901530045312) {
   out_6672140901530045312[0] = 0;
   out_6672140901530045312[1] = 0;
   out_6672140901530045312[2] = 0;
   out_6672140901530045312[3] = 0;
   out_6672140901530045312[4] = 0;
   out_6672140901530045312[5] = 0;
   out_6672140901530045312[6] = 0;
   out_6672140901530045312[7] = 0;
   out_6672140901530045312[8] = 0;
   out_6672140901530045312[9] = 0;
   out_6672140901530045312[10] = 1;
   out_6672140901530045312[11] = 0;
   out_6672140901530045312[12] = 0;
   out_6672140901530045312[13] = 0;
   out_6672140901530045312[14] = 0;
   out_6672140901530045312[15] = 0;
   out_6672140901530045312[16] = 0;
   out_6672140901530045312[17] = 0;
   out_6672140901530045312[18] = 0;
   out_6672140901530045312[19] = 0;
   out_6672140901530045312[20] = 0;
   out_6672140901530045312[21] = 0;
   out_6672140901530045312[22] = 0;
   out_6672140901530045312[23] = 0;
   out_6672140901530045312[24] = 0;
   out_6672140901530045312[25] = 0;
   out_6672140901530045312[26] = 0;
   out_6672140901530045312[27] = 0;
   out_6672140901530045312[28] = 0;
   out_6672140901530045312[29] = 0;
   out_6672140901530045312[30] = 0;
   out_6672140901530045312[31] = 0;
   out_6672140901530045312[32] = 0;
   out_6672140901530045312[33] = 1;
   out_6672140901530045312[34] = 0;
   out_6672140901530045312[35] = 0;
   out_6672140901530045312[36] = 0;
   out_6672140901530045312[37] = 0;
   out_6672140901530045312[38] = 0;
   out_6672140901530045312[39] = 0;
   out_6672140901530045312[40] = 0;
   out_6672140901530045312[41] = 0;
   out_6672140901530045312[42] = 0;
   out_6672140901530045312[43] = 0;
   out_6672140901530045312[44] = 0;
   out_6672140901530045312[45] = 0;
   out_6672140901530045312[46] = 0;
   out_6672140901530045312[47] = 0;
   out_6672140901530045312[48] = 0;
   out_6672140901530045312[49] = 0;
   out_6672140901530045312[50] = 0;
   out_6672140901530045312[51] = 0;
   out_6672140901530045312[52] = 0;
   out_6672140901530045312[53] = 0;
   out_6672140901530045312[54] = 0;
   out_6672140901530045312[55] = 0;
   out_6672140901530045312[56] = 1;
   out_6672140901530045312[57] = 0;
   out_6672140901530045312[58] = 0;
   out_6672140901530045312[59] = 0;
   out_6672140901530045312[60] = 0;
   out_6672140901530045312[61] = 0;
   out_6672140901530045312[62] = 0;
   out_6672140901530045312[63] = 0;
   out_6672140901530045312[64] = 0;
   out_6672140901530045312[65] = 0;
}
void h_10(double *state, double *unused, double *out_8419921845420664958) {
   out_8419921845420664958[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8419921845420664958[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8419921845420664958[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_153786458289373345) {
   out_153786458289373345[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_153786458289373345[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_153786458289373345[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_153786458289373345[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_153786458289373345[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_153786458289373345[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_153786458289373345[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_153786458289373345[7] = 0;
   out_153786458289373345[8] = 0;
   out_153786458289373345[9] = 0;
   out_153786458289373345[10] = 0;
   out_153786458289373345[11] = 0;
   out_153786458289373345[12] = 0;
   out_153786458289373345[13] = 0;
   out_153786458289373345[14] = 0;
   out_153786458289373345[15] = 0;
   out_153786458289373345[16] = 1;
   out_153786458289373345[17] = 0;
   out_153786458289373345[18] = 0;
   out_153786458289373345[19] = 1;
   out_153786458289373345[20] = 0;
   out_153786458289373345[21] = 0;
   out_153786458289373345[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_153786458289373345[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_153786458289373345[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_153786458289373345[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_153786458289373345[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_153786458289373345[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_153786458289373345[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_153786458289373345[29] = 0;
   out_153786458289373345[30] = 0;
   out_153786458289373345[31] = 0;
   out_153786458289373345[32] = 0;
   out_153786458289373345[33] = 0;
   out_153786458289373345[34] = 0;
   out_153786458289373345[35] = 0;
   out_153786458289373345[36] = 0;
   out_153786458289373345[37] = 0;
   out_153786458289373345[38] = 0;
   out_153786458289373345[39] = 1;
   out_153786458289373345[40] = 0;
   out_153786458289373345[41] = 0;
   out_153786458289373345[42] = 1;
   out_153786458289373345[43] = 0;
   out_153786458289373345[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_153786458289373345[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_153786458289373345[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_153786458289373345[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_153786458289373345[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_153786458289373345[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_153786458289373345[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_153786458289373345[51] = 0;
   out_153786458289373345[52] = 0;
   out_153786458289373345[53] = 0;
   out_153786458289373345[54] = 0;
   out_153786458289373345[55] = 0;
   out_153786458289373345[56] = 0;
   out_153786458289373345[57] = 0;
   out_153786458289373345[58] = 0;
   out_153786458289373345[59] = 0;
   out_153786458289373345[60] = 0;
   out_153786458289373345[61] = 0;
   out_153786458289373345[62] = 1;
   out_153786458289373345[63] = 0;
   out_153786458289373345[64] = 0;
   out_153786458289373345[65] = 1;
}
void h_12(double *state, double *unused, double *out_2993796051743061643) {
   out_2993796051743061643[0] = state[0];
   out_2993796051743061643[1] = state[1];
   out_2993796051743061643[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6996336410777135154) {
   out_6996336410777135154[0] = 1;
   out_6996336410777135154[1] = 0;
   out_6996336410777135154[2] = 0;
   out_6996336410777135154[3] = 0;
   out_6996336410777135154[4] = 0;
   out_6996336410777135154[5] = 0;
   out_6996336410777135154[6] = 0;
   out_6996336410777135154[7] = 0;
   out_6996336410777135154[8] = 0;
   out_6996336410777135154[9] = 0;
   out_6996336410777135154[10] = 0;
   out_6996336410777135154[11] = 0;
   out_6996336410777135154[12] = 0;
   out_6996336410777135154[13] = 0;
   out_6996336410777135154[14] = 0;
   out_6996336410777135154[15] = 0;
   out_6996336410777135154[16] = 0;
   out_6996336410777135154[17] = 0;
   out_6996336410777135154[18] = 0;
   out_6996336410777135154[19] = 0;
   out_6996336410777135154[20] = 0;
   out_6996336410777135154[21] = 0;
   out_6996336410777135154[22] = 0;
   out_6996336410777135154[23] = 1;
   out_6996336410777135154[24] = 0;
   out_6996336410777135154[25] = 0;
   out_6996336410777135154[26] = 0;
   out_6996336410777135154[27] = 0;
   out_6996336410777135154[28] = 0;
   out_6996336410777135154[29] = 0;
   out_6996336410777135154[30] = 0;
   out_6996336410777135154[31] = 0;
   out_6996336410777135154[32] = 0;
   out_6996336410777135154[33] = 0;
   out_6996336410777135154[34] = 0;
   out_6996336410777135154[35] = 0;
   out_6996336410777135154[36] = 0;
   out_6996336410777135154[37] = 0;
   out_6996336410777135154[38] = 0;
   out_6996336410777135154[39] = 0;
   out_6996336410777135154[40] = 0;
   out_6996336410777135154[41] = 0;
   out_6996336410777135154[42] = 0;
   out_6996336410777135154[43] = 0;
   out_6996336410777135154[44] = 0;
   out_6996336410777135154[45] = 0;
   out_6996336410777135154[46] = 1;
   out_6996336410777135154[47] = 0;
   out_6996336410777135154[48] = 0;
   out_6996336410777135154[49] = 0;
   out_6996336410777135154[50] = 0;
   out_6996336410777135154[51] = 0;
   out_6996336410777135154[52] = 0;
   out_6996336410777135154[53] = 0;
   out_6996336410777135154[54] = 0;
   out_6996336410777135154[55] = 0;
   out_6996336410777135154[56] = 0;
   out_6996336410777135154[57] = 0;
   out_6996336410777135154[58] = 0;
   out_6996336410777135154[59] = 0;
   out_6996336410777135154[60] = 0;
   out_6996336410777135154[61] = 0;
   out_6996336410777135154[62] = 0;
   out_6996336410777135154[63] = 0;
   out_6996336410777135154[64] = 0;
   out_6996336410777135154[65] = 0;
}
void h_35(double *state, double *unused, double *out_2029823416700293347) {
   out_2029823416700293347[0] = state[7];
   out_2029823416700293347[1] = state[8];
   out_2029823416700293347[2] = state[9];
}
void H_35(double *state, double *unused, double *out_8649130761436489573) {
   out_8649130761436489573[0] = 0;
   out_8649130761436489573[1] = 0;
   out_8649130761436489573[2] = 0;
   out_8649130761436489573[3] = 0;
   out_8649130761436489573[4] = 0;
   out_8649130761436489573[5] = 0;
   out_8649130761436489573[6] = 0;
   out_8649130761436489573[7] = 1;
   out_8649130761436489573[8] = 0;
   out_8649130761436489573[9] = 0;
   out_8649130761436489573[10] = 0;
   out_8649130761436489573[11] = 0;
   out_8649130761436489573[12] = 0;
   out_8649130761436489573[13] = 0;
   out_8649130761436489573[14] = 0;
   out_8649130761436489573[15] = 0;
   out_8649130761436489573[16] = 0;
   out_8649130761436489573[17] = 0;
   out_8649130761436489573[18] = 0;
   out_8649130761436489573[19] = 0;
   out_8649130761436489573[20] = 0;
   out_8649130761436489573[21] = 0;
   out_8649130761436489573[22] = 0;
   out_8649130761436489573[23] = 0;
   out_8649130761436489573[24] = 0;
   out_8649130761436489573[25] = 0;
   out_8649130761436489573[26] = 0;
   out_8649130761436489573[27] = 0;
   out_8649130761436489573[28] = 0;
   out_8649130761436489573[29] = 0;
   out_8649130761436489573[30] = 1;
   out_8649130761436489573[31] = 0;
   out_8649130761436489573[32] = 0;
   out_8649130761436489573[33] = 0;
   out_8649130761436489573[34] = 0;
   out_8649130761436489573[35] = 0;
   out_8649130761436489573[36] = 0;
   out_8649130761436489573[37] = 0;
   out_8649130761436489573[38] = 0;
   out_8649130761436489573[39] = 0;
   out_8649130761436489573[40] = 0;
   out_8649130761436489573[41] = 0;
   out_8649130761436489573[42] = 0;
   out_8649130761436489573[43] = 0;
   out_8649130761436489573[44] = 0;
   out_8649130761436489573[45] = 0;
   out_8649130761436489573[46] = 0;
   out_8649130761436489573[47] = 0;
   out_8649130761436489573[48] = 0;
   out_8649130761436489573[49] = 0;
   out_8649130761436489573[50] = 0;
   out_8649130761436489573[51] = 0;
   out_8649130761436489573[52] = 0;
   out_8649130761436489573[53] = 1;
   out_8649130761436489573[54] = 0;
   out_8649130761436489573[55] = 0;
   out_8649130761436489573[56] = 0;
   out_8649130761436489573[57] = 0;
   out_8649130761436489573[58] = 0;
   out_8649130761436489573[59] = 0;
   out_8649130761436489573[60] = 0;
   out_8649130761436489573[61] = 0;
   out_8649130761436489573[62] = 0;
   out_8649130761436489573[63] = 0;
   out_8649130761436489573[64] = 0;
   out_8649130761436489573[65] = 0;
}
void h_32(double *state, double *unused, double *out_5219838782958765734) {
   out_5219838782958765734[0] = state[3];
   out_5219838782958765734[1] = state[4];
   out_5219838782958765734[2] = state[5];
   out_5219838782958765734[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6911131889424607547) {
   out_6911131889424607547[0] = 0;
   out_6911131889424607547[1] = 0;
   out_6911131889424607547[2] = 0;
   out_6911131889424607547[3] = 1;
   out_6911131889424607547[4] = 0;
   out_6911131889424607547[5] = 0;
   out_6911131889424607547[6] = 0;
   out_6911131889424607547[7] = 0;
   out_6911131889424607547[8] = 0;
   out_6911131889424607547[9] = 0;
   out_6911131889424607547[10] = 0;
   out_6911131889424607547[11] = 0;
   out_6911131889424607547[12] = 0;
   out_6911131889424607547[13] = 0;
   out_6911131889424607547[14] = 0;
   out_6911131889424607547[15] = 0;
   out_6911131889424607547[16] = 0;
   out_6911131889424607547[17] = 0;
   out_6911131889424607547[18] = 0;
   out_6911131889424607547[19] = 0;
   out_6911131889424607547[20] = 0;
   out_6911131889424607547[21] = 0;
   out_6911131889424607547[22] = 0;
   out_6911131889424607547[23] = 0;
   out_6911131889424607547[24] = 0;
   out_6911131889424607547[25] = 0;
   out_6911131889424607547[26] = 1;
   out_6911131889424607547[27] = 0;
   out_6911131889424607547[28] = 0;
   out_6911131889424607547[29] = 0;
   out_6911131889424607547[30] = 0;
   out_6911131889424607547[31] = 0;
   out_6911131889424607547[32] = 0;
   out_6911131889424607547[33] = 0;
   out_6911131889424607547[34] = 0;
   out_6911131889424607547[35] = 0;
   out_6911131889424607547[36] = 0;
   out_6911131889424607547[37] = 0;
   out_6911131889424607547[38] = 0;
   out_6911131889424607547[39] = 0;
   out_6911131889424607547[40] = 0;
   out_6911131889424607547[41] = 0;
   out_6911131889424607547[42] = 0;
   out_6911131889424607547[43] = 0;
   out_6911131889424607547[44] = 0;
   out_6911131889424607547[45] = 0;
   out_6911131889424607547[46] = 0;
   out_6911131889424607547[47] = 0;
   out_6911131889424607547[48] = 0;
   out_6911131889424607547[49] = 1;
   out_6911131889424607547[50] = 0;
   out_6911131889424607547[51] = 0;
   out_6911131889424607547[52] = 0;
   out_6911131889424607547[53] = 0;
   out_6911131889424607547[54] = 0;
   out_6911131889424607547[55] = 0;
   out_6911131889424607547[56] = 0;
   out_6911131889424607547[57] = 0;
   out_6911131889424607547[58] = 0;
   out_6911131889424607547[59] = 0;
   out_6911131889424607547[60] = 0;
   out_6911131889424607547[61] = 0;
   out_6911131889424607547[62] = 0;
   out_6911131889424607547[63] = 0;
   out_6911131889424607547[64] = 0;
   out_6911131889424607547[65] = 0;
   out_6911131889424607547[66] = 0;
   out_6911131889424607547[67] = 0;
   out_6911131889424607547[68] = 0;
   out_6911131889424607547[69] = 0;
   out_6911131889424607547[70] = 0;
   out_6911131889424607547[71] = 0;
   out_6911131889424607547[72] = 1;
   out_6911131889424607547[73] = 0;
   out_6911131889424607547[74] = 0;
   out_6911131889424607547[75] = 0;
   out_6911131889424607547[76] = 0;
   out_6911131889424607547[77] = 0;
   out_6911131889424607547[78] = 0;
   out_6911131889424607547[79] = 0;
   out_6911131889424607547[80] = 0;
   out_6911131889424607547[81] = 0;
   out_6911131889424607547[82] = 0;
   out_6911131889424607547[83] = 0;
   out_6911131889424607547[84] = 0;
   out_6911131889424607547[85] = 0;
   out_6911131889424607547[86] = 0;
   out_6911131889424607547[87] = 0;
}
void h_13(double *state, double *unused, double *out_8276578619223013863) {
   out_8276578619223013863[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8276578619223013863[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8276578619223013863[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4422587517669313216) {
   out_4422587517669313216[0] = 0;
   out_4422587517669313216[1] = 0;
   out_4422587517669313216[2] = 0;
   out_4422587517669313216[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4422587517669313216[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4422587517669313216[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4422587517669313216[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4422587517669313216[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4422587517669313216[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4422587517669313216[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4422587517669313216[10] = 0;
   out_4422587517669313216[11] = 0;
   out_4422587517669313216[12] = 0;
   out_4422587517669313216[13] = 0;
   out_4422587517669313216[14] = 0;
   out_4422587517669313216[15] = 0;
   out_4422587517669313216[16] = 0;
   out_4422587517669313216[17] = 0;
   out_4422587517669313216[18] = 0;
   out_4422587517669313216[19] = 0;
   out_4422587517669313216[20] = 0;
   out_4422587517669313216[21] = 0;
   out_4422587517669313216[22] = 0;
   out_4422587517669313216[23] = 0;
   out_4422587517669313216[24] = 0;
   out_4422587517669313216[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4422587517669313216[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4422587517669313216[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4422587517669313216[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4422587517669313216[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4422587517669313216[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4422587517669313216[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4422587517669313216[32] = 0;
   out_4422587517669313216[33] = 0;
   out_4422587517669313216[34] = 0;
   out_4422587517669313216[35] = 0;
   out_4422587517669313216[36] = 0;
   out_4422587517669313216[37] = 0;
   out_4422587517669313216[38] = 0;
   out_4422587517669313216[39] = 0;
   out_4422587517669313216[40] = 0;
   out_4422587517669313216[41] = 0;
   out_4422587517669313216[42] = 0;
   out_4422587517669313216[43] = 0;
   out_4422587517669313216[44] = 0;
   out_4422587517669313216[45] = 0;
   out_4422587517669313216[46] = 0;
   out_4422587517669313216[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4422587517669313216[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4422587517669313216[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4422587517669313216[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4422587517669313216[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4422587517669313216[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4422587517669313216[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4422587517669313216[54] = 0;
   out_4422587517669313216[55] = 0;
   out_4422587517669313216[56] = 0;
   out_4422587517669313216[57] = 0;
   out_4422587517669313216[58] = 0;
   out_4422587517669313216[59] = 0;
   out_4422587517669313216[60] = 0;
   out_4422587517669313216[61] = 0;
   out_4422587517669313216[62] = 0;
   out_4422587517669313216[63] = 0;
   out_4422587517669313216[64] = 0;
   out_4422587517669313216[65] = 0;
}
void h_14(double *state, double *unused, double *out_2361113187014814240) {
   out_2361113187014814240[0] = state[10];
   out_2361113187014814240[1] = state[11];
   out_2361113187014814240[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6672140901530045312) {
   out_6672140901530045312[0] = 0;
   out_6672140901530045312[1] = 0;
   out_6672140901530045312[2] = 0;
   out_6672140901530045312[3] = 0;
   out_6672140901530045312[4] = 0;
   out_6672140901530045312[5] = 0;
   out_6672140901530045312[6] = 0;
   out_6672140901530045312[7] = 0;
   out_6672140901530045312[8] = 0;
   out_6672140901530045312[9] = 0;
   out_6672140901530045312[10] = 1;
   out_6672140901530045312[11] = 0;
   out_6672140901530045312[12] = 0;
   out_6672140901530045312[13] = 0;
   out_6672140901530045312[14] = 0;
   out_6672140901530045312[15] = 0;
   out_6672140901530045312[16] = 0;
   out_6672140901530045312[17] = 0;
   out_6672140901530045312[18] = 0;
   out_6672140901530045312[19] = 0;
   out_6672140901530045312[20] = 0;
   out_6672140901530045312[21] = 0;
   out_6672140901530045312[22] = 0;
   out_6672140901530045312[23] = 0;
   out_6672140901530045312[24] = 0;
   out_6672140901530045312[25] = 0;
   out_6672140901530045312[26] = 0;
   out_6672140901530045312[27] = 0;
   out_6672140901530045312[28] = 0;
   out_6672140901530045312[29] = 0;
   out_6672140901530045312[30] = 0;
   out_6672140901530045312[31] = 0;
   out_6672140901530045312[32] = 0;
   out_6672140901530045312[33] = 1;
   out_6672140901530045312[34] = 0;
   out_6672140901530045312[35] = 0;
   out_6672140901530045312[36] = 0;
   out_6672140901530045312[37] = 0;
   out_6672140901530045312[38] = 0;
   out_6672140901530045312[39] = 0;
   out_6672140901530045312[40] = 0;
   out_6672140901530045312[41] = 0;
   out_6672140901530045312[42] = 0;
   out_6672140901530045312[43] = 0;
   out_6672140901530045312[44] = 0;
   out_6672140901530045312[45] = 0;
   out_6672140901530045312[46] = 0;
   out_6672140901530045312[47] = 0;
   out_6672140901530045312[48] = 0;
   out_6672140901530045312[49] = 0;
   out_6672140901530045312[50] = 0;
   out_6672140901530045312[51] = 0;
   out_6672140901530045312[52] = 0;
   out_6672140901530045312[53] = 0;
   out_6672140901530045312[54] = 0;
   out_6672140901530045312[55] = 0;
   out_6672140901530045312[56] = 1;
   out_6672140901530045312[57] = 0;
   out_6672140901530045312[58] = 0;
   out_6672140901530045312[59] = 0;
   out_6672140901530045312[60] = 0;
   out_6672140901530045312[61] = 0;
   out_6672140901530045312[62] = 0;
   out_6672140901530045312[63] = 0;
   out_6672140901530045312[64] = 0;
   out_6672140901530045312[65] = 0;
}
void h_33(double *state, double *unused, double *out_779782712918856491) {
   out_779782712918856491[0] = state[16];
   out_779782712918856491[1] = state[17];
   out_779782712918856491[2] = state[18];
}
void H_33(double *state, double *unused, double *out_5498573756797631969) {
   out_5498573756797631969[0] = 0;
   out_5498573756797631969[1] = 0;
   out_5498573756797631969[2] = 0;
   out_5498573756797631969[3] = 0;
   out_5498573756797631969[4] = 0;
   out_5498573756797631969[5] = 0;
   out_5498573756797631969[6] = 0;
   out_5498573756797631969[7] = 0;
   out_5498573756797631969[8] = 0;
   out_5498573756797631969[9] = 0;
   out_5498573756797631969[10] = 0;
   out_5498573756797631969[11] = 0;
   out_5498573756797631969[12] = 0;
   out_5498573756797631969[13] = 0;
   out_5498573756797631969[14] = 0;
   out_5498573756797631969[15] = 0;
   out_5498573756797631969[16] = 1;
   out_5498573756797631969[17] = 0;
   out_5498573756797631969[18] = 0;
   out_5498573756797631969[19] = 0;
   out_5498573756797631969[20] = 0;
   out_5498573756797631969[21] = 0;
   out_5498573756797631969[22] = 0;
   out_5498573756797631969[23] = 0;
   out_5498573756797631969[24] = 0;
   out_5498573756797631969[25] = 0;
   out_5498573756797631969[26] = 0;
   out_5498573756797631969[27] = 0;
   out_5498573756797631969[28] = 0;
   out_5498573756797631969[29] = 0;
   out_5498573756797631969[30] = 0;
   out_5498573756797631969[31] = 0;
   out_5498573756797631969[32] = 0;
   out_5498573756797631969[33] = 0;
   out_5498573756797631969[34] = 0;
   out_5498573756797631969[35] = 0;
   out_5498573756797631969[36] = 0;
   out_5498573756797631969[37] = 0;
   out_5498573756797631969[38] = 0;
   out_5498573756797631969[39] = 1;
   out_5498573756797631969[40] = 0;
   out_5498573756797631969[41] = 0;
   out_5498573756797631969[42] = 0;
   out_5498573756797631969[43] = 0;
   out_5498573756797631969[44] = 0;
   out_5498573756797631969[45] = 0;
   out_5498573756797631969[46] = 0;
   out_5498573756797631969[47] = 0;
   out_5498573756797631969[48] = 0;
   out_5498573756797631969[49] = 0;
   out_5498573756797631969[50] = 0;
   out_5498573756797631969[51] = 0;
   out_5498573756797631969[52] = 0;
   out_5498573756797631969[53] = 0;
   out_5498573756797631969[54] = 0;
   out_5498573756797631969[55] = 0;
   out_5498573756797631969[56] = 0;
   out_5498573756797631969[57] = 0;
   out_5498573756797631969[58] = 0;
   out_5498573756797631969[59] = 0;
   out_5498573756797631969[60] = 0;
   out_5498573756797631969[61] = 0;
   out_5498573756797631969[62] = 1;
   out_5498573756797631969[63] = 0;
   out_5498573756797631969[64] = 0;
   out_5498573756797631969[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2462819686313009570) {
  H(in_vec, out_2462819686313009570);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7688666404763380594) {
  err_fun(nom_x, delta_x, out_7688666404763380594);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6593376371524153869) {
  inv_err_fun(nom_x, true_x, out_6593376371524153869);
}
void live_H_mod_fun(double *state, double *out_5061725893169435400) {
  H_mod_fun(state, out_5061725893169435400);
}
void live_f_fun(double *state, double dt, double *out_7683985547281658067) {
  f_fun(state,  dt, out_7683985547281658067);
}
void live_F_fun(double *state, double dt, double *out_8943773693071752463) {
  F_fun(state,  dt, out_8943773693071752463);
}
void live_h_4(double *state, double *unused, double *out_9168729868079662505) {
  h_4(state, unused, out_9168729868079662505);
}
void live_H_4(double *state, double *unused, double *out_6430951254900454667) {
  H_4(state, unused, out_6430951254900454667);
}
void live_h_9(double *state, double *unused, double *out_2361113187014814240) {
  h_9(state, unused, out_2361113187014814240);
}
void live_H_9(double *state, double *unused, double *out_6672140901530045312) {
  H_9(state, unused, out_6672140901530045312);
}
void live_h_10(double *state, double *unused, double *out_8419921845420664958) {
  h_10(state, unused, out_8419921845420664958);
}
void live_H_10(double *state, double *unused, double *out_153786458289373345) {
  H_10(state, unused, out_153786458289373345);
}
void live_h_12(double *state, double *unused, double *out_2993796051743061643) {
  h_12(state, unused, out_2993796051743061643);
}
void live_H_12(double *state, double *unused, double *out_6996336410777135154) {
  H_12(state, unused, out_6996336410777135154);
}
void live_h_35(double *state, double *unused, double *out_2029823416700293347) {
  h_35(state, unused, out_2029823416700293347);
}
void live_H_35(double *state, double *unused, double *out_8649130761436489573) {
  H_35(state, unused, out_8649130761436489573);
}
void live_h_32(double *state, double *unused, double *out_5219838782958765734) {
  h_32(state, unused, out_5219838782958765734);
}
void live_H_32(double *state, double *unused, double *out_6911131889424607547) {
  H_32(state, unused, out_6911131889424607547);
}
void live_h_13(double *state, double *unused, double *out_8276578619223013863) {
  h_13(state, unused, out_8276578619223013863);
}
void live_H_13(double *state, double *unused, double *out_4422587517669313216) {
  H_13(state, unused, out_4422587517669313216);
}
void live_h_14(double *state, double *unused, double *out_2361113187014814240) {
  h_14(state, unused, out_2361113187014814240);
}
void live_H_14(double *state, double *unused, double *out_6672140901530045312) {
  H_14(state, unused, out_6672140901530045312);
}
void live_h_33(double *state, double *unused, double *out_779782712918856491) {
  h_33(state, unused, out_779782712918856491);
}
void live_H_33(double *state, double *unused, double *out_5498573756797631969) {
  H_33(state, unused, out_5498573756797631969);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
