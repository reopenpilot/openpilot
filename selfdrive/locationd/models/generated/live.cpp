#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3077768121840607383) {
   out_3077768121840607383[0] = 0;
   out_3077768121840607383[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3077768121840607383[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3077768121840607383[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3077768121840607383[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3077768121840607383[5] = -sin(in_vec[1]);
   out_3077768121840607383[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3077768121840607383[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3077768121840607383[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3077768121840607383[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3077768121840607383[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3077768121840607383[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3077768121840607383[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3077768121840607383[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3077768121840607383[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3077768121840607383[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3077768121840607383[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3077768121840607383[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7472978668657561473) {
   out_7472978668657561473[0] = delta_x[0] + nom_x[0];
   out_7472978668657561473[1] = delta_x[1] + nom_x[1];
   out_7472978668657561473[2] = delta_x[2] + nom_x[2];
   out_7472978668657561473[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7472978668657561473[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7472978668657561473[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7472978668657561473[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7472978668657561473[7] = delta_x[6] + nom_x[7];
   out_7472978668657561473[8] = delta_x[7] + nom_x[8];
   out_7472978668657561473[9] = delta_x[8] + nom_x[9];
   out_7472978668657561473[10] = delta_x[9] + nom_x[10];
   out_7472978668657561473[11] = delta_x[10] + nom_x[11];
   out_7472978668657561473[12] = delta_x[11] + nom_x[12];
   out_7472978668657561473[13] = delta_x[12] + nom_x[13];
   out_7472978668657561473[14] = delta_x[13] + nom_x[14];
   out_7472978668657561473[15] = delta_x[14] + nom_x[15];
   out_7472978668657561473[16] = delta_x[15] + nom_x[16];
   out_7472978668657561473[17] = delta_x[16] + nom_x[17];
   out_7472978668657561473[18] = delta_x[17] + nom_x[18];
   out_7472978668657561473[19] = delta_x[18] + nom_x[19];
   out_7472978668657561473[20] = delta_x[19] + nom_x[20];
   out_7472978668657561473[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6764604191109413454) {
   out_6764604191109413454[0] = -nom_x[0] + true_x[0];
   out_6764604191109413454[1] = -nom_x[1] + true_x[1];
   out_6764604191109413454[2] = -nom_x[2] + true_x[2];
   out_6764604191109413454[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6764604191109413454[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6764604191109413454[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6764604191109413454[6] = -nom_x[7] + true_x[7];
   out_6764604191109413454[7] = -nom_x[8] + true_x[8];
   out_6764604191109413454[8] = -nom_x[9] + true_x[9];
   out_6764604191109413454[9] = -nom_x[10] + true_x[10];
   out_6764604191109413454[10] = -nom_x[11] + true_x[11];
   out_6764604191109413454[11] = -nom_x[12] + true_x[12];
   out_6764604191109413454[12] = -nom_x[13] + true_x[13];
   out_6764604191109413454[13] = -nom_x[14] + true_x[14];
   out_6764604191109413454[14] = -nom_x[15] + true_x[15];
   out_6764604191109413454[15] = -nom_x[16] + true_x[16];
   out_6764604191109413454[16] = -nom_x[17] + true_x[17];
   out_6764604191109413454[17] = -nom_x[18] + true_x[18];
   out_6764604191109413454[18] = -nom_x[19] + true_x[19];
   out_6764604191109413454[19] = -nom_x[20] + true_x[20];
   out_6764604191109413454[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_438491143769632061) {
   out_438491143769632061[0] = 1.0;
   out_438491143769632061[1] = 0;
   out_438491143769632061[2] = 0;
   out_438491143769632061[3] = 0;
   out_438491143769632061[4] = 0;
   out_438491143769632061[5] = 0;
   out_438491143769632061[6] = 0;
   out_438491143769632061[7] = 0;
   out_438491143769632061[8] = 0;
   out_438491143769632061[9] = 0;
   out_438491143769632061[10] = 0;
   out_438491143769632061[11] = 0;
   out_438491143769632061[12] = 0;
   out_438491143769632061[13] = 0;
   out_438491143769632061[14] = 0;
   out_438491143769632061[15] = 0;
   out_438491143769632061[16] = 0;
   out_438491143769632061[17] = 0;
   out_438491143769632061[18] = 0;
   out_438491143769632061[19] = 0;
   out_438491143769632061[20] = 0;
   out_438491143769632061[21] = 0;
   out_438491143769632061[22] = 1.0;
   out_438491143769632061[23] = 0;
   out_438491143769632061[24] = 0;
   out_438491143769632061[25] = 0;
   out_438491143769632061[26] = 0;
   out_438491143769632061[27] = 0;
   out_438491143769632061[28] = 0;
   out_438491143769632061[29] = 0;
   out_438491143769632061[30] = 0;
   out_438491143769632061[31] = 0;
   out_438491143769632061[32] = 0;
   out_438491143769632061[33] = 0;
   out_438491143769632061[34] = 0;
   out_438491143769632061[35] = 0;
   out_438491143769632061[36] = 0;
   out_438491143769632061[37] = 0;
   out_438491143769632061[38] = 0;
   out_438491143769632061[39] = 0;
   out_438491143769632061[40] = 0;
   out_438491143769632061[41] = 0;
   out_438491143769632061[42] = 0;
   out_438491143769632061[43] = 0;
   out_438491143769632061[44] = 1.0;
   out_438491143769632061[45] = 0;
   out_438491143769632061[46] = 0;
   out_438491143769632061[47] = 0;
   out_438491143769632061[48] = 0;
   out_438491143769632061[49] = 0;
   out_438491143769632061[50] = 0;
   out_438491143769632061[51] = 0;
   out_438491143769632061[52] = 0;
   out_438491143769632061[53] = 0;
   out_438491143769632061[54] = 0;
   out_438491143769632061[55] = 0;
   out_438491143769632061[56] = 0;
   out_438491143769632061[57] = 0;
   out_438491143769632061[58] = 0;
   out_438491143769632061[59] = 0;
   out_438491143769632061[60] = 0;
   out_438491143769632061[61] = 0;
   out_438491143769632061[62] = 0;
   out_438491143769632061[63] = 0;
   out_438491143769632061[64] = 0;
   out_438491143769632061[65] = 0;
   out_438491143769632061[66] = -0.5*state[4];
   out_438491143769632061[67] = -0.5*state[5];
   out_438491143769632061[68] = -0.5*state[6];
   out_438491143769632061[69] = 0;
   out_438491143769632061[70] = 0;
   out_438491143769632061[71] = 0;
   out_438491143769632061[72] = 0;
   out_438491143769632061[73] = 0;
   out_438491143769632061[74] = 0;
   out_438491143769632061[75] = 0;
   out_438491143769632061[76] = 0;
   out_438491143769632061[77] = 0;
   out_438491143769632061[78] = 0;
   out_438491143769632061[79] = 0;
   out_438491143769632061[80] = 0;
   out_438491143769632061[81] = 0;
   out_438491143769632061[82] = 0;
   out_438491143769632061[83] = 0;
   out_438491143769632061[84] = 0;
   out_438491143769632061[85] = 0;
   out_438491143769632061[86] = 0;
   out_438491143769632061[87] = 0.5*state[3];
   out_438491143769632061[88] = 0.5*state[6];
   out_438491143769632061[89] = -0.5*state[5];
   out_438491143769632061[90] = 0;
   out_438491143769632061[91] = 0;
   out_438491143769632061[92] = 0;
   out_438491143769632061[93] = 0;
   out_438491143769632061[94] = 0;
   out_438491143769632061[95] = 0;
   out_438491143769632061[96] = 0;
   out_438491143769632061[97] = 0;
   out_438491143769632061[98] = 0;
   out_438491143769632061[99] = 0;
   out_438491143769632061[100] = 0;
   out_438491143769632061[101] = 0;
   out_438491143769632061[102] = 0;
   out_438491143769632061[103] = 0;
   out_438491143769632061[104] = 0;
   out_438491143769632061[105] = 0;
   out_438491143769632061[106] = 0;
   out_438491143769632061[107] = 0;
   out_438491143769632061[108] = -0.5*state[6];
   out_438491143769632061[109] = 0.5*state[3];
   out_438491143769632061[110] = 0.5*state[4];
   out_438491143769632061[111] = 0;
   out_438491143769632061[112] = 0;
   out_438491143769632061[113] = 0;
   out_438491143769632061[114] = 0;
   out_438491143769632061[115] = 0;
   out_438491143769632061[116] = 0;
   out_438491143769632061[117] = 0;
   out_438491143769632061[118] = 0;
   out_438491143769632061[119] = 0;
   out_438491143769632061[120] = 0;
   out_438491143769632061[121] = 0;
   out_438491143769632061[122] = 0;
   out_438491143769632061[123] = 0;
   out_438491143769632061[124] = 0;
   out_438491143769632061[125] = 0;
   out_438491143769632061[126] = 0;
   out_438491143769632061[127] = 0;
   out_438491143769632061[128] = 0;
   out_438491143769632061[129] = 0.5*state[5];
   out_438491143769632061[130] = -0.5*state[4];
   out_438491143769632061[131] = 0.5*state[3];
   out_438491143769632061[132] = 0;
   out_438491143769632061[133] = 0;
   out_438491143769632061[134] = 0;
   out_438491143769632061[135] = 0;
   out_438491143769632061[136] = 0;
   out_438491143769632061[137] = 0;
   out_438491143769632061[138] = 0;
   out_438491143769632061[139] = 0;
   out_438491143769632061[140] = 0;
   out_438491143769632061[141] = 0;
   out_438491143769632061[142] = 0;
   out_438491143769632061[143] = 0;
   out_438491143769632061[144] = 0;
   out_438491143769632061[145] = 0;
   out_438491143769632061[146] = 0;
   out_438491143769632061[147] = 0;
   out_438491143769632061[148] = 0;
   out_438491143769632061[149] = 0;
   out_438491143769632061[150] = 0;
   out_438491143769632061[151] = 0;
   out_438491143769632061[152] = 0;
   out_438491143769632061[153] = 1.0;
   out_438491143769632061[154] = 0;
   out_438491143769632061[155] = 0;
   out_438491143769632061[156] = 0;
   out_438491143769632061[157] = 0;
   out_438491143769632061[158] = 0;
   out_438491143769632061[159] = 0;
   out_438491143769632061[160] = 0;
   out_438491143769632061[161] = 0;
   out_438491143769632061[162] = 0;
   out_438491143769632061[163] = 0;
   out_438491143769632061[164] = 0;
   out_438491143769632061[165] = 0;
   out_438491143769632061[166] = 0;
   out_438491143769632061[167] = 0;
   out_438491143769632061[168] = 0;
   out_438491143769632061[169] = 0;
   out_438491143769632061[170] = 0;
   out_438491143769632061[171] = 0;
   out_438491143769632061[172] = 0;
   out_438491143769632061[173] = 0;
   out_438491143769632061[174] = 0;
   out_438491143769632061[175] = 1.0;
   out_438491143769632061[176] = 0;
   out_438491143769632061[177] = 0;
   out_438491143769632061[178] = 0;
   out_438491143769632061[179] = 0;
   out_438491143769632061[180] = 0;
   out_438491143769632061[181] = 0;
   out_438491143769632061[182] = 0;
   out_438491143769632061[183] = 0;
   out_438491143769632061[184] = 0;
   out_438491143769632061[185] = 0;
   out_438491143769632061[186] = 0;
   out_438491143769632061[187] = 0;
   out_438491143769632061[188] = 0;
   out_438491143769632061[189] = 0;
   out_438491143769632061[190] = 0;
   out_438491143769632061[191] = 0;
   out_438491143769632061[192] = 0;
   out_438491143769632061[193] = 0;
   out_438491143769632061[194] = 0;
   out_438491143769632061[195] = 0;
   out_438491143769632061[196] = 0;
   out_438491143769632061[197] = 1.0;
   out_438491143769632061[198] = 0;
   out_438491143769632061[199] = 0;
   out_438491143769632061[200] = 0;
   out_438491143769632061[201] = 0;
   out_438491143769632061[202] = 0;
   out_438491143769632061[203] = 0;
   out_438491143769632061[204] = 0;
   out_438491143769632061[205] = 0;
   out_438491143769632061[206] = 0;
   out_438491143769632061[207] = 0;
   out_438491143769632061[208] = 0;
   out_438491143769632061[209] = 0;
   out_438491143769632061[210] = 0;
   out_438491143769632061[211] = 0;
   out_438491143769632061[212] = 0;
   out_438491143769632061[213] = 0;
   out_438491143769632061[214] = 0;
   out_438491143769632061[215] = 0;
   out_438491143769632061[216] = 0;
   out_438491143769632061[217] = 0;
   out_438491143769632061[218] = 0;
   out_438491143769632061[219] = 1.0;
   out_438491143769632061[220] = 0;
   out_438491143769632061[221] = 0;
   out_438491143769632061[222] = 0;
   out_438491143769632061[223] = 0;
   out_438491143769632061[224] = 0;
   out_438491143769632061[225] = 0;
   out_438491143769632061[226] = 0;
   out_438491143769632061[227] = 0;
   out_438491143769632061[228] = 0;
   out_438491143769632061[229] = 0;
   out_438491143769632061[230] = 0;
   out_438491143769632061[231] = 0;
   out_438491143769632061[232] = 0;
   out_438491143769632061[233] = 0;
   out_438491143769632061[234] = 0;
   out_438491143769632061[235] = 0;
   out_438491143769632061[236] = 0;
   out_438491143769632061[237] = 0;
   out_438491143769632061[238] = 0;
   out_438491143769632061[239] = 0;
   out_438491143769632061[240] = 0;
   out_438491143769632061[241] = 1.0;
   out_438491143769632061[242] = 0;
   out_438491143769632061[243] = 0;
   out_438491143769632061[244] = 0;
   out_438491143769632061[245] = 0;
   out_438491143769632061[246] = 0;
   out_438491143769632061[247] = 0;
   out_438491143769632061[248] = 0;
   out_438491143769632061[249] = 0;
   out_438491143769632061[250] = 0;
   out_438491143769632061[251] = 0;
   out_438491143769632061[252] = 0;
   out_438491143769632061[253] = 0;
   out_438491143769632061[254] = 0;
   out_438491143769632061[255] = 0;
   out_438491143769632061[256] = 0;
   out_438491143769632061[257] = 0;
   out_438491143769632061[258] = 0;
   out_438491143769632061[259] = 0;
   out_438491143769632061[260] = 0;
   out_438491143769632061[261] = 0;
   out_438491143769632061[262] = 0;
   out_438491143769632061[263] = 1.0;
   out_438491143769632061[264] = 0;
   out_438491143769632061[265] = 0;
   out_438491143769632061[266] = 0;
   out_438491143769632061[267] = 0;
   out_438491143769632061[268] = 0;
   out_438491143769632061[269] = 0;
   out_438491143769632061[270] = 0;
   out_438491143769632061[271] = 0;
   out_438491143769632061[272] = 0;
   out_438491143769632061[273] = 0;
   out_438491143769632061[274] = 0;
   out_438491143769632061[275] = 0;
   out_438491143769632061[276] = 0;
   out_438491143769632061[277] = 0;
   out_438491143769632061[278] = 0;
   out_438491143769632061[279] = 0;
   out_438491143769632061[280] = 0;
   out_438491143769632061[281] = 0;
   out_438491143769632061[282] = 0;
   out_438491143769632061[283] = 0;
   out_438491143769632061[284] = 0;
   out_438491143769632061[285] = 1.0;
   out_438491143769632061[286] = 0;
   out_438491143769632061[287] = 0;
   out_438491143769632061[288] = 0;
   out_438491143769632061[289] = 0;
   out_438491143769632061[290] = 0;
   out_438491143769632061[291] = 0;
   out_438491143769632061[292] = 0;
   out_438491143769632061[293] = 0;
   out_438491143769632061[294] = 0;
   out_438491143769632061[295] = 0;
   out_438491143769632061[296] = 0;
   out_438491143769632061[297] = 0;
   out_438491143769632061[298] = 0;
   out_438491143769632061[299] = 0;
   out_438491143769632061[300] = 0;
   out_438491143769632061[301] = 0;
   out_438491143769632061[302] = 0;
   out_438491143769632061[303] = 0;
   out_438491143769632061[304] = 0;
   out_438491143769632061[305] = 0;
   out_438491143769632061[306] = 0;
   out_438491143769632061[307] = 1.0;
   out_438491143769632061[308] = 0;
   out_438491143769632061[309] = 0;
   out_438491143769632061[310] = 0;
   out_438491143769632061[311] = 0;
   out_438491143769632061[312] = 0;
   out_438491143769632061[313] = 0;
   out_438491143769632061[314] = 0;
   out_438491143769632061[315] = 0;
   out_438491143769632061[316] = 0;
   out_438491143769632061[317] = 0;
   out_438491143769632061[318] = 0;
   out_438491143769632061[319] = 0;
   out_438491143769632061[320] = 0;
   out_438491143769632061[321] = 0;
   out_438491143769632061[322] = 0;
   out_438491143769632061[323] = 0;
   out_438491143769632061[324] = 0;
   out_438491143769632061[325] = 0;
   out_438491143769632061[326] = 0;
   out_438491143769632061[327] = 0;
   out_438491143769632061[328] = 0;
   out_438491143769632061[329] = 1.0;
   out_438491143769632061[330] = 0;
   out_438491143769632061[331] = 0;
   out_438491143769632061[332] = 0;
   out_438491143769632061[333] = 0;
   out_438491143769632061[334] = 0;
   out_438491143769632061[335] = 0;
   out_438491143769632061[336] = 0;
   out_438491143769632061[337] = 0;
   out_438491143769632061[338] = 0;
   out_438491143769632061[339] = 0;
   out_438491143769632061[340] = 0;
   out_438491143769632061[341] = 0;
   out_438491143769632061[342] = 0;
   out_438491143769632061[343] = 0;
   out_438491143769632061[344] = 0;
   out_438491143769632061[345] = 0;
   out_438491143769632061[346] = 0;
   out_438491143769632061[347] = 0;
   out_438491143769632061[348] = 0;
   out_438491143769632061[349] = 0;
   out_438491143769632061[350] = 0;
   out_438491143769632061[351] = 1.0;
   out_438491143769632061[352] = 0;
   out_438491143769632061[353] = 0;
   out_438491143769632061[354] = 0;
   out_438491143769632061[355] = 0;
   out_438491143769632061[356] = 0;
   out_438491143769632061[357] = 0;
   out_438491143769632061[358] = 0;
   out_438491143769632061[359] = 0;
   out_438491143769632061[360] = 0;
   out_438491143769632061[361] = 0;
   out_438491143769632061[362] = 0;
   out_438491143769632061[363] = 0;
   out_438491143769632061[364] = 0;
   out_438491143769632061[365] = 0;
   out_438491143769632061[366] = 0;
   out_438491143769632061[367] = 0;
   out_438491143769632061[368] = 0;
   out_438491143769632061[369] = 0;
   out_438491143769632061[370] = 0;
   out_438491143769632061[371] = 0;
   out_438491143769632061[372] = 0;
   out_438491143769632061[373] = 1.0;
   out_438491143769632061[374] = 0;
   out_438491143769632061[375] = 0;
   out_438491143769632061[376] = 0;
   out_438491143769632061[377] = 0;
   out_438491143769632061[378] = 0;
   out_438491143769632061[379] = 0;
   out_438491143769632061[380] = 0;
   out_438491143769632061[381] = 0;
   out_438491143769632061[382] = 0;
   out_438491143769632061[383] = 0;
   out_438491143769632061[384] = 0;
   out_438491143769632061[385] = 0;
   out_438491143769632061[386] = 0;
   out_438491143769632061[387] = 0;
   out_438491143769632061[388] = 0;
   out_438491143769632061[389] = 0;
   out_438491143769632061[390] = 0;
   out_438491143769632061[391] = 0;
   out_438491143769632061[392] = 0;
   out_438491143769632061[393] = 0;
   out_438491143769632061[394] = 0;
   out_438491143769632061[395] = 1.0;
   out_438491143769632061[396] = 0;
   out_438491143769632061[397] = 0;
   out_438491143769632061[398] = 0;
   out_438491143769632061[399] = 0;
   out_438491143769632061[400] = 0;
   out_438491143769632061[401] = 0;
   out_438491143769632061[402] = 0;
   out_438491143769632061[403] = 0;
   out_438491143769632061[404] = 0;
   out_438491143769632061[405] = 0;
   out_438491143769632061[406] = 0;
   out_438491143769632061[407] = 0;
   out_438491143769632061[408] = 0;
   out_438491143769632061[409] = 0;
   out_438491143769632061[410] = 0;
   out_438491143769632061[411] = 0;
   out_438491143769632061[412] = 0;
   out_438491143769632061[413] = 0;
   out_438491143769632061[414] = 0;
   out_438491143769632061[415] = 0;
   out_438491143769632061[416] = 0;
   out_438491143769632061[417] = 1.0;
   out_438491143769632061[418] = 0;
   out_438491143769632061[419] = 0;
   out_438491143769632061[420] = 0;
   out_438491143769632061[421] = 0;
   out_438491143769632061[422] = 0;
   out_438491143769632061[423] = 0;
   out_438491143769632061[424] = 0;
   out_438491143769632061[425] = 0;
   out_438491143769632061[426] = 0;
   out_438491143769632061[427] = 0;
   out_438491143769632061[428] = 0;
   out_438491143769632061[429] = 0;
   out_438491143769632061[430] = 0;
   out_438491143769632061[431] = 0;
   out_438491143769632061[432] = 0;
   out_438491143769632061[433] = 0;
   out_438491143769632061[434] = 0;
   out_438491143769632061[435] = 0;
   out_438491143769632061[436] = 0;
   out_438491143769632061[437] = 0;
   out_438491143769632061[438] = 0;
   out_438491143769632061[439] = 1.0;
   out_438491143769632061[440] = 0;
   out_438491143769632061[441] = 0;
   out_438491143769632061[442] = 0;
   out_438491143769632061[443] = 0;
   out_438491143769632061[444] = 0;
   out_438491143769632061[445] = 0;
   out_438491143769632061[446] = 0;
   out_438491143769632061[447] = 0;
   out_438491143769632061[448] = 0;
   out_438491143769632061[449] = 0;
   out_438491143769632061[450] = 0;
   out_438491143769632061[451] = 0;
   out_438491143769632061[452] = 0;
   out_438491143769632061[453] = 0;
   out_438491143769632061[454] = 0;
   out_438491143769632061[455] = 0;
   out_438491143769632061[456] = 0;
   out_438491143769632061[457] = 0;
   out_438491143769632061[458] = 0;
   out_438491143769632061[459] = 0;
   out_438491143769632061[460] = 0;
   out_438491143769632061[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1041270898332223269) {
   out_1041270898332223269[0] = dt*state[7] + state[0];
   out_1041270898332223269[1] = dt*state[8] + state[1];
   out_1041270898332223269[2] = dt*state[9] + state[2];
   out_1041270898332223269[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1041270898332223269[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1041270898332223269[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1041270898332223269[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1041270898332223269[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1041270898332223269[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1041270898332223269[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1041270898332223269[10] = state[10];
   out_1041270898332223269[11] = state[11];
   out_1041270898332223269[12] = state[12];
   out_1041270898332223269[13] = state[13];
   out_1041270898332223269[14] = state[14];
   out_1041270898332223269[15] = state[15];
   out_1041270898332223269[16] = state[16];
   out_1041270898332223269[17] = state[17];
   out_1041270898332223269[18] = state[18];
   out_1041270898332223269[19] = state[19];
   out_1041270898332223269[20] = state[20];
   out_1041270898332223269[21] = state[21];
}
void F_fun(double *state, double dt, double *out_9032191010990772443) {
   out_9032191010990772443[0] = 1;
   out_9032191010990772443[1] = 0;
   out_9032191010990772443[2] = 0;
   out_9032191010990772443[3] = 0;
   out_9032191010990772443[4] = 0;
   out_9032191010990772443[5] = 0;
   out_9032191010990772443[6] = dt;
   out_9032191010990772443[7] = 0;
   out_9032191010990772443[8] = 0;
   out_9032191010990772443[9] = 0;
   out_9032191010990772443[10] = 0;
   out_9032191010990772443[11] = 0;
   out_9032191010990772443[12] = 0;
   out_9032191010990772443[13] = 0;
   out_9032191010990772443[14] = 0;
   out_9032191010990772443[15] = 0;
   out_9032191010990772443[16] = 0;
   out_9032191010990772443[17] = 0;
   out_9032191010990772443[18] = 0;
   out_9032191010990772443[19] = 0;
   out_9032191010990772443[20] = 0;
   out_9032191010990772443[21] = 0;
   out_9032191010990772443[22] = 1;
   out_9032191010990772443[23] = 0;
   out_9032191010990772443[24] = 0;
   out_9032191010990772443[25] = 0;
   out_9032191010990772443[26] = 0;
   out_9032191010990772443[27] = 0;
   out_9032191010990772443[28] = dt;
   out_9032191010990772443[29] = 0;
   out_9032191010990772443[30] = 0;
   out_9032191010990772443[31] = 0;
   out_9032191010990772443[32] = 0;
   out_9032191010990772443[33] = 0;
   out_9032191010990772443[34] = 0;
   out_9032191010990772443[35] = 0;
   out_9032191010990772443[36] = 0;
   out_9032191010990772443[37] = 0;
   out_9032191010990772443[38] = 0;
   out_9032191010990772443[39] = 0;
   out_9032191010990772443[40] = 0;
   out_9032191010990772443[41] = 0;
   out_9032191010990772443[42] = 0;
   out_9032191010990772443[43] = 0;
   out_9032191010990772443[44] = 1;
   out_9032191010990772443[45] = 0;
   out_9032191010990772443[46] = 0;
   out_9032191010990772443[47] = 0;
   out_9032191010990772443[48] = 0;
   out_9032191010990772443[49] = 0;
   out_9032191010990772443[50] = dt;
   out_9032191010990772443[51] = 0;
   out_9032191010990772443[52] = 0;
   out_9032191010990772443[53] = 0;
   out_9032191010990772443[54] = 0;
   out_9032191010990772443[55] = 0;
   out_9032191010990772443[56] = 0;
   out_9032191010990772443[57] = 0;
   out_9032191010990772443[58] = 0;
   out_9032191010990772443[59] = 0;
   out_9032191010990772443[60] = 0;
   out_9032191010990772443[61] = 0;
   out_9032191010990772443[62] = 0;
   out_9032191010990772443[63] = 0;
   out_9032191010990772443[64] = 0;
   out_9032191010990772443[65] = 0;
   out_9032191010990772443[66] = 1;
   out_9032191010990772443[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_9032191010990772443[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_9032191010990772443[69] = 0;
   out_9032191010990772443[70] = 0;
   out_9032191010990772443[71] = 0;
   out_9032191010990772443[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_9032191010990772443[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9032191010990772443[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9032191010990772443[75] = 0;
   out_9032191010990772443[76] = 0;
   out_9032191010990772443[77] = 0;
   out_9032191010990772443[78] = 0;
   out_9032191010990772443[79] = 0;
   out_9032191010990772443[80] = 0;
   out_9032191010990772443[81] = 0;
   out_9032191010990772443[82] = 0;
   out_9032191010990772443[83] = 0;
   out_9032191010990772443[84] = 0;
   out_9032191010990772443[85] = 0;
   out_9032191010990772443[86] = 0;
   out_9032191010990772443[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_9032191010990772443[88] = 1;
   out_9032191010990772443[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_9032191010990772443[90] = 0;
   out_9032191010990772443[91] = 0;
   out_9032191010990772443[92] = 0;
   out_9032191010990772443[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9032191010990772443[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_9032191010990772443[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9032191010990772443[96] = 0;
   out_9032191010990772443[97] = 0;
   out_9032191010990772443[98] = 0;
   out_9032191010990772443[99] = 0;
   out_9032191010990772443[100] = 0;
   out_9032191010990772443[101] = 0;
   out_9032191010990772443[102] = 0;
   out_9032191010990772443[103] = 0;
   out_9032191010990772443[104] = 0;
   out_9032191010990772443[105] = 0;
   out_9032191010990772443[106] = 0;
   out_9032191010990772443[107] = 0;
   out_9032191010990772443[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_9032191010990772443[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_9032191010990772443[110] = 1;
   out_9032191010990772443[111] = 0;
   out_9032191010990772443[112] = 0;
   out_9032191010990772443[113] = 0;
   out_9032191010990772443[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9032191010990772443[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9032191010990772443[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_9032191010990772443[117] = 0;
   out_9032191010990772443[118] = 0;
   out_9032191010990772443[119] = 0;
   out_9032191010990772443[120] = 0;
   out_9032191010990772443[121] = 0;
   out_9032191010990772443[122] = 0;
   out_9032191010990772443[123] = 0;
   out_9032191010990772443[124] = 0;
   out_9032191010990772443[125] = 0;
   out_9032191010990772443[126] = 0;
   out_9032191010990772443[127] = 0;
   out_9032191010990772443[128] = 0;
   out_9032191010990772443[129] = 0;
   out_9032191010990772443[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_9032191010990772443[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_9032191010990772443[132] = 1;
   out_9032191010990772443[133] = 0;
   out_9032191010990772443[134] = 0;
   out_9032191010990772443[135] = 0;
   out_9032191010990772443[136] = 0;
   out_9032191010990772443[137] = 0;
   out_9032191010990772443[138] = 0;
   out_9032191010990772443[139] = 0;
   out_9032191010990772443[140] = 0;
   out_9032191010990772443[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_9032191010990772443[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9032191010990772443[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9032191010990772443[144] = 0;
   out_9032191010990772443[145] = 0;
   out_9032191010990772443[146] = 0;
   out_9032191010990772443[147] = 0;
   out_9032191010990772443[148] = 0;
   out_9032191010990772443[149] = 0;
   out_9032191010990772443[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_9032191010990772443[151] = 0;
   out_9032191010990772443[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_9032191010990772443[153] = 0;
   out_9032191010990772443[154] = 1;
   out_9032191010990772443[155] = 0;
   out_9032191010990772443[156] = 0;
   out_9032191010990772443[157] = 0;
   out_9032191010990772443[158] = 0;
   out_9032191010990772443[159] = 0;
   out_9032191010990772443[160] = 0;
   out_9032191010990772443[161] = 0;
   out_9032191010990772443[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_9032191010990772443[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_9032191010990772443[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9032191010990772443[165] = 0;
   out_9032191010990772443[166] = 0;
   out_9032191010990772443[167] = 0;
   out_9032191010990772443[168] = 0;
   out_9032191010990772443[169] = 0;
   out_9032191010990772443[170] = 0;
   out_9032191010990772443[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_9032191010990772443[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_9032191010990772443[173] = 0;
   out_9032191010990772443[174] = 0;
   out_9032191010990772443[175] = 0;
   out_9032191010990772443[176] = 1;
   out_9032191010990772443[177] = 0;
   out_9032191010990772443[178] = 0;
   out_9032191010990772443[179] = 0;
   out_9032191010990772443[180] = 0;
   out_9032191010990772443[181] = 0;
   out_9032191010990772443[182] = 0;
   out_9032191010990772443[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_9032191010990772443[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_9032191010990772443[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_9032191010990772443[186] = 0;
   out_9032191010990772443[187] = 0;
   out_9032191010990772443[188] = 0;
   out_9032191010990772443[189] = 0;
   out_9032191010990772443[190] = 0;
   out_9032191010990772443[191] = 0;
   out_9032191010990772443[192] = 0;
   out_9032191010990772443[193] = 0;
   out_9032191010990772443[194] = 0;
   out_9032191010990772443[195] = 0;
   out_9032191010990772443[196] = 0;
   out_9032191010990772443[197] = 0;
   out_9032191010990772443[198] = 1;
   out_9032191010990772443[199] = 0;
   out_9032191010990772443[200] = 0;
   out_9032191010990772443[201] = 0;
   out_9032191010990772443[202] = 0;
   out_9032191010990772443[203] = 0;
   out_9032191010990772443[204] = 0;
   out_9032191010990772443[205] = 0;
   out_9032191010990772443[206] = 0;
   out_9032191010990772443[207] = 0;
   out_9032191010990772443[208] = 0;
   out_9032191010990772443[209] = 0;
   out_9032191010990772443[210] = 0;
   out_9032191010990772443[211] = 0;
   out_9032191010990772443[212] = 0;
   out_9032191010990772443[213] = 0;
   out_9032191010990772443[214] = 0;
   out_9032191010990772443[215] = 0;
   out_9032191010990772443[216] = 0;
   out_9032191010990772443[217] = 0;
   out_9032191010990772443[218] = 0;
   out_9032191010990772443[219] = 0;
   out_9032191010990772443[220] = 1;
   out_9032191010990772443[221] = 0;
   out_9032191010990772443[222] = 0;
   out_9032191010990772443[223] = 0;
   out_9032191010990772443[224] = 0;
   out_9032191010990772443[225] = 0;
   out_9032191010990772443[226] = 0;
   out_9032191010990772443[227] = 0;
   out_9032191010990772443[228] = 0;
   out_9032191010990772443[229] = 0;
   out_9032191010990772443[230] = 0;
   out_9032191010990772443[231] = 0;
   out_9032191010990772443[232] = 0;
   out_9032191010990772443[233] = 0;
   out_9032191010990772443[234] = 0;
   out_9032191010990772443[235] = 0;
   out_9032191010990772443[236] = 0;
   out_9032191010990772443[237] = 0;
   out_9032191010990772443[238] = 0;
   out_9032191010990772443[239] = 0;
   out_9032191010990772443[240] = 0;
   out_9032191010990772443[241] = 0;
   out_9032191010990772443[242] = 1;
   out_9032191010990772443[243] = 0;
   out_9032191010990772443[244] = 0;
   out_9032191010990772443[245] = 0;
   out_9032191010990772443[246] = 0;
   out_9032191010990772443[247] = 0;
   out_9032191010990772443[248] = 0;
   out_9032191010990772443[249] = 0;
   out_9032191010990772443[250] = 0;
   out_9032191010990772443[251] = 0;
   out_9032191010990772443[252] = 0;
   out_9032191010990772443[253] = 0;
   out_9032191010990772443[254] = 0;
   out_9032191010990772443[255] = 0;
   out_9032191010990772443[256] = 0;
   out_9032191010990772443[257] = 0;
   out_9032191010990772443[258] = 0;
   out_9032191010990772443[259] = 0;
   out_9032191010990772443[260] = 0;
   out_9032191010990772443[261] = 0;
   out_9032191010990772443[262] = 0;
   out_9032191010990772443[263] = 0;
   out_9032191010990772443[264] = 1;
   out_9032191010990772443[265] = 0;
   out_9032191010990772443[266] = 0;
   out_9032191010990772443[267] = 0;
   out_9032191010990772443[268] = 0;
   out_9032191010990772443[269] = 0;
   out_9032191010990772443[270] = 0;
   out_9032191010990772443[271] = 0;
   out_9032191010990772443[272] = 0;
   out_9032191010990772443[273] = 0;
   out_9032191010990772443[274] = 0;
   out_9032191010990772443[275] = 0;
   out_9032191010990772443[276] = 0;
   out_9032191010990772443[277] = 0;
   out_9032191010990772443[278] = 0;
   out_9032191010990772443[279] = 0;
   out_9032191010990772443[280] = 0;
   out_9032191010990772443[281] = 0;
   out_9032191010990772443[282] = 0;
   out_9032191010990772443[283] = 0;
   out_9032191010990772443[284] = 0;
   out_9032191010990772443[285] = 0;
   out_9032191010990772443[286] = 1;
   out_9032191010990772443[287] = 0;
   out_9032191010990772443[288] = 0;
   out_9032191010990772443[289] = 0;
   out_9032191010990772443[290] = 0;
   out_9032191010990772443[291] = 0;
   out_9032191010990772443[292] = 0;
   out_9032191010990772443[293] = 0;
   out_9032191010990772443[294] = 0;
   out_9032191010990772443[295] = 0;
   out_9032191010990772443[296] = 0;
   out_9032191010990772443[297] = 0;
   out_9032191010990772443[298] = 0;
   out_9032191010990772443[299] = 0;
   out_9032191010990772443[300] = 0;
   out_9032191010990772443[301] = 0;
   out_9032191010990772443[302] = 0;
   out_9032191010990772443[303] = 0;
   out_9032191010990772443[304] = 0;
   out_9032191010990772443[305] = 0;
   out_9032191010990772443[306] = 0;
   out_9032191010990772443[307] = 0;
   out_9032191010990772443[308] = 1;
   out_9032191010990772443[309] = 0;
   out_9032191010990772443[310] = 0;
   out_9032191010990772443[311] = 0;
   out_9032191010990772443[312] = 0;
   out_9032191010990772443[313] = 0;
   out_9032191010990772443[314] = 0;
   out_9032191010990772443[315] = 0;
   out_9032191010990772443[316] = 0;
   out_9032191010990772443[317] = 0;
   out_9032191010990772443[318] = 0;
   out_9032191010990772443[319] = 0;
   out_9032191010990772443[320] = 0;
   out_9032191010990772443[321] = 0;
   out_9032191010990772443[322] = 0;
   out_9032191010990772443[323] = 0;
   out_9032191010990772443[324] = 0;
   out_9032191010990772443[325] = 0;
   out_9032191010990772443[326] = 0;
   out_9032191010990772443[327] = 0;
   out_9032191010990772443[328] = 0;
   out_9032191010990772443[329] = 0;
   out_9032191010990772443[330] = 1;
   out_9032191010990772443[331] = 0;
   out_9032191010990772443[332] = 0;
   out_9032191010990772443[333] = 0;
   out_9032191010990772443[334] = 0;
   out_9032191010990772443[335] = 0;
   out_9032191010990772443[336] = 0;
   out_9032191010990772443[337] = 0;
   out_9032191010990772443[338] = 0;
   out_9032191010990772443[339] = 0;
   out_9032191010990772443[340] = 0;
   out_9032191010990772443[341] = 0;
   out_9032191010990772443[342] = 0;
   out_9032191010990772443[343] = 0;
   out_9032191010990772443[344] = 0;
   out_9032191010990772443[345] = 0;
   out_9032191010990772443[346] = 0;
   out_9032191010990772443[347] = 0;
   out_9032191010990772443[348] = 0;
   out_9032191010990772443[349] = 0;
   out_9032191010990772443[350] = 0;
   out_9032191010990772443[351] = 0;
   out_9032191010990772443[352] = 1;
   out_9032191010990772443[353] = 0;
   out_9032191010990772443[354] = 0;
   out_9032191010990772443[355] = 0;
   out_9032191010990772443[356] = 0;
   out_9032191010990772443[357] = 0;
   out_9032191010990772443[358] = 0;
   out_9032191010990772443[359] = 0;
   out_9032191010990772443[360] = 0;
   out_9032191010990772443[361] = 0;
   out_9032191010990772443[362] = 0;
   out_9032191010990772443[363] = 0;
   out_9032191010990772443[364] = 0;
   out_9032191010990772443[365] = 0;
   out_9032191010990772443[366] = 0;
   out_9032191010990772443[367] = 0;
   out_9032191010990772443[368] = 0;
   out_9032191010990772443[369] = 0;
   out_9032191010990772443[370] = 0;
   out_9032191010990772443[371] = 0;
   out_9032191010990772443[372] = 0;
   out_9032191010990772443[373] = 0;
   out_9032191010990772443[374] = 1;
   out_9032191010990772443[375] = 0;
   out_9032191010990772443[376] = 0;
   out_9032191010990772443[377] = 0;
   out_9032191010990772443[378] = 0;
   out_9032191010990772443[379] = 0;
   out_9032191010990772443[380] = 0;
   out_9032191010990772443[381] = 0;
   out_9032191010990772443[382] = 0;
   out_9032191010990772443[383] = 0;
   out_9032191010990772443[384] = 0;
   out_9032191010990772443[385] = 0;
   out_9032191010990772443[386] = 0;
   out_9032191010990772443[387] = 0;
   out_9032191010990772443[388] = 0;
   out_9032191010990772443[389] = 0;
   out_9032191010990772443[390] = 0;
   out_9032191010990772443[391] = 0;
   out_9032191010990772443[392] = 0;
   out_9032191010990772443[393] = 0;
   out_9032191010990772443[394] = 0;
   out_9032191010990772443[395] = 0;
   out_9032191010990772443[396] = 1;
   out_9032191010990772443[397] = 0;
   out_9032191010990772443[398] = 0;
   out_9032191010990772443[399] = 0;
   out_9032191010990772443[400] = 0;
   out_9032191010990772443[401] = 0;
   out_9032191010990772443[402] = 0;
   out_9032191010990772443[403] = 0;
   out_9032191010990772443[404] = 0;
   out_9032191010990772443[405] = 0;
   out_9032191010990772443[406] = 0;
   out_9032191010990772443[407] = 0;
   out_9032191010990772443[408] = 0;
   out_9032191010990772443[409] = 0;
   out_9032191010990772443[410] = 0;
   out_9032191010990772443[411] = 0;
   out_9032191010990772443[412] = 0;
   out_9032191010990772443[413] = 0;
   out_9032191010990772443[414] = 0;
   out_9032191010990772443[415] = 0;
   out_9032191010990772443[416] = 0;
   out_9032191010990772443[417] = 0;
   out_9032191010990772443[418] = 1;
   out_9032191010990772443[419] = 0;
   out_9032191010990772443[420] = 0;
   out_9032191010990772443[421] = 0;
   out_9032191010990772443[422] = 0;
   out_9032191010990772443[423] = 0;
   out_9032191010990772443[424] = 0;
   out_9032191010990772443[425] = 0;
   out_9032191010990772443[426] = 0;
   out_9032191010990772443[427] = 0;
   out_9032191010990772443[428] = 0;
   out_9032191010990772443[429] = 0;
   out_9032191010990772443[430] = 0;
   out_9032191010990772443[431] = 0;
   out_9032191010990772443[432] = 0;
   out_9032191010990772443[433] = 0;
   out_9032191010990772443[434] = 0;
   out_9032191010990772443[435] = 0;
   out_9032191010990772443[436] = 0;
   out_9032191010990772443[437] = 0;
   out_9032191010990772443[438] = 0;
   out_9032191010990772443[439] = 0;
   out_9032191010990772443[440] = 1;
}
void h_4(double *state, double *unused, double *out_633172382618728480) {
   out_633172382618728480[0] = state[10] + state[13];
   out_633172382618728480[1] = state[11] + state[14];
   out_633172382618728480[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2167440610573421791) {
   out_2167440610573421791[0] = 0;
   out_2167440610573421791[1] = 0;
   out_2167440610573421791[2] = 0;
   out_2167440610573421791[3] = 0;
   out_2167440610573421791[4] = 0;
   out_2167440610573421791[5] = 0;
   out_2167440610573421791[6] = 0;
   out_2167440610573421791[7] = 0;
   out_2167440610573421791[8] = 0;
   out_2167440610573421791[9] = 0;
   out_2167440610573421791[10] = 1;
   out_2167440610573421791[11] = 0;
   out_2167440610573421791[12] = 0;
   out_2167440610573421791[13] = 1;
   out_2167440610573421791[14] = 0;
   out_2167440610573421791[15] = 0;
   out_2167440610573421791[16] = 0;
   out_2167440610573421791[17] = 0;
   out_2167440610573421791[18] = 0;
   out_2167440610573421791[19] = 0;
   out_2167440610573421791[20] = 0;
   out_2167440610573421791[21] = 0;
   out_2167440610573421791[22] = 0;
   out_2167440610573421791[23] = 0;
   out_2167440610573421791[24] = 0;
   out_2167440610573421791[25] = 0;
   out_2167440610573421791[26] = 0;
   out_2167440610573421791[27] = 0;
   out_2167440610573421791[28] = 0;
   out_2167440610573421791[29] = 0;
   out_2167440610573421791[30] = 0;
   out_2167440610573421791[31] = 0;
   out_2167440610573421791[32] = 0;
   out_2167440610573421791[33] = 1;
   out_2167440610573421791[34] = 0;
   out_2167440610573421791[35] = 0;
   out_2167440610573421791[36] = 1;
   out_2167440610573421791[37] = 0;
   out_2167440610573421791[38] = 0;
   out_2167440610573421791[39] = 0;
   out_2167440610573421791[40] = 0;
   out_2167440610573421791[41] = 0;
   out_2167440610573421791[42] = 0;
   out_2167440610573421791[43] = 0;
   out_2167440610573421791[44] = 0;
   out_2167440610573421791[45] = 0;
   out_2167440610573421791[46] = 0;
   out_2167440610573421791[47] = 0;
   out_2167440610573421791[48] = 0;
   out_2167440610573421791[49] = 0;
   out_2167440610573421791[50] = 0;
   out_2167440610573421791[51] = 0;
   out_2167440610573421791[52] = 0;
   out_2167440610573421791[53] = 0;
   out_2167440610573421791[54] = 0;
   out_2167440610573421791[55] = 0;
   out_2167440610573421791[56] = 1;
   out_2167440610573421791[57] = 0;
   out_2167440610573421791[58] = 0;
   out_2167440610573421791[59] = 1;
   out_2167440610573421791[60] = 0;
   out_2167440610573421791[61] = 0;
   out_2167440610573421791[62] = 0;
   out_2167440610573421791[63] = 0;
   out_2167440610573421791[64] = 0;
   out_2167440610573421791[65] = 0;
}
void h_9(double *state, double *unused, double *out_4963282271439406197) {
   out_4963282271439406197[0] = state[10];
   out_4963282271439406197[1] = state[11];
   out_4963282271439406197[2] = state[12];
}
void H_9(double *state, double *unused, double *out_721420941706657551) {
   out_721420941706657551[0] = 0;
   out_721420941706657551[1] = 0;
   out_721420941706657551[2] = 0;
   out_721420941706657551[3] = 0;
   out_721420941706657551[4] = 0;
   out_721420941706657551[5] = 0;
   out_721420941706657551[6] = 0;
   out_721420941706657551[7] = 0;
   out_721420941706657551[8] = 0;
   out_721420941706657551[9] = 0;
   out_721420941706657551[10] = 1;
   out_721420941706657551[11] = 0;
   out_721420941706657551[12] = 0;
   out_721420941706657551[13] = 0;
   out_721420941706657551[14] = 0;
   out_721420941706657551[15] = 0;
   out_721420941706657551[16] = 0;
   out_721420941706657551[17] = 0;
   out_721420941706657551[18] = 0;
   out_721420941706657551[19] = 0;
   out_721420941706657551[20] = 0;
   out_721420941706657551[21] = 0;
   out_721420941706657551[22] = 0;
   out_721420941706657551[23] = 0;
   out_721420941706657551[24] = 0;
   out_721420941706657551[25] = 0;
   out_721420941706657551[26] = 0;
   out_721420941706657551[27] = 0;
   out_721420941706657551[28] = 0;
   out_721420941706657551[29] = 0;
   out_721420941706657551[30] = 0;
   out_721420941706657551[31] = 0;
   out_721420941706657551[32] = 0;
   out_721420941706657551[33] = 1;
   out_721420941706657551[34] = 0;
   out_721420941706657551[35] = 0;
   out_721420941706657551[36] = 0;
   out_721420941706657551[37] = 0;
   out_721420941706657551[38] = 0;
   out_721420941706657551[39] = 0;
   out_721420941706657551[40] = 0;
   out_721420941706657551[41] = 0;
   out_721420941706657551[42] = 0;
   out_721420941706657551[43] = 0;
   out_721420941706657551[44] = 0;
   out_721420941706657551[45] = 0;
   out_721420941706657551[46] = 0;
   out_721420941706657551[47] = 0;
   out_721420941706657551[48] = 0;
   out_721420941706657551[49] = 0;
   out_721420941706657551[50] = 0;
   out_721420941706657551[51] = 0;
   out_721420941706657551[52] = 0;
   out_721420941706657551[53] = 0;
   out_721420941706657551[54] = 0;
   out_721420941706657551[55] = 0;
   out_721420941706657551[56] = 1;
   out_721420941706657551[57] = 0;
   out_721420941706657551[58] = 0;
   out_721420941706657551[59] = 0;
   out_721420941706657551[60] = 0;
   out_721420941706657551[61] = 0;
   out_721420941706657551[62] = 0;
   out_721420941706657551[63] = 0;
   out_721420941706657551[64] = 0;
   out_721420941706657551[65] = 0;
}
void h_10(double *state, double *unused, double *out_6760578748027821069) {
   out_6760578748027821069[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_6760578748027821069[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_6760578748027821069[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8173468374035088293) {
   out_8173468374035088293[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8173468374035088293[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8173468374035088293[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8173468374035088293[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8173468374035088293[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8173468374035088293[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8173468374035088293[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8173468374035088293[7] = 0;
   out_8173468374035088293[8] = 0;
   out_8173468374035088293[9] = 0;
   out_8173468374035088293[10] = 0;
   out_8173468374035088293[11] = 0;
   out_8173468374035088293[12] = 0;
   out_8173468374035088293[13] = 0;
   out_8173468374035088293[14] = 0;
   out_8173468374035088293[15] = 0;
   out_8173468374035088293[16] = 1;
   out_8173468374035088293[17] = 0;
   out_8173468374035088293[18] = 0;
   out_8173468374035088293[19] = 1;
   out_8173468374035088293[20] = 0;
   out_8173468374035088293[21] = 0;
   out_8173468374035088293[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8173468374035088293[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8173468374035088293[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8173468374035088293[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8173468374035088293[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8173468374035088293[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8173468374035088293[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8173468374035088293[29] = 0;
   out_8173468374035088293[30] = 0;
   out_8173468374035088293[31] = 0;
   out_8173468374035088293[32] = 0;
   out_8173468374035088293[33] = 0;
   out_8173468374035088293[34] = 0;
   out_8173468374035088293[35] = 0;
   out_8173468374035088293[36] = 0;
   out_8173468374035088293[37] = 0;
   out_8173468374035088293[38] = 0;
   out_8173468374035088293[39] = 1;
   out_8173468374035088293[40] = 0;
   out_8173468374035088293[41] = 0;
   out_8173468374035088293[42] = 1;
   out_8173468374035088293[43] = 0;
   out_8173468374035088293[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8173468374035088293[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8173468374035088293[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8173468374035088293[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8173468374035088293[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8173468374035088293[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8173468374035088293[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8173468374035088293[51] = 0;
   out_8173468374035088293[52] = 0;
   out_8173468374035088293[53] = 0;
   out_8173468374035088293[54] = 0;
   out_8173468374035088293[55] = 0;
   out_8173468374035088293[56] = 0;
   out_8173468374035088293[57] = 0;
   out_8173468374035088293[58] = 0;
   out_8173468374035088293[59] = 0;
   out_8173468374035088293[60] = 0;
   out_8173468374035088293[61] = 0;
   out_8173468374035088293[62] = 1;
   out_8173468374035088293[63] = 0;
   out_8173468374035088293[64] = 0;
   out_8173468374035088293[65] = 1;
}
void h_12(double *state, double *unused, double *out_8975123302553099687) {
   out_8975123302553099687[0] = state[0];
   out_8975123302553099687[1] = state[1];
   out_8975123302553099687[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1546341585525828124) {
   out_1546341585525828124[0] = 1;
   out_1546341585525828124[1] = 0;
   out_1546341585525828124[2] = 0;
   out_1546341585525828124[3] = 0;
   out_1546341585525828124[4] = 0;
   out_1546341585525828124[5] = 0;
   out_1546341585525828124[6] = 0;
   out_1546341585525828124[7] = 0;
   out_1546341585525828124[8] = 0;
   out_1546341585525828124[9] = 0;
   out_1546341585525828124[10] = 0;
   out_1546341585525828124[11] = 0;
   out_1546341585525828124[12] = 0;
   out_1546341585525828124[13] = 0;
   out_1546341585525828124[14] = 0;
   out_1546341585525828124[15] = 0;
   out_1546341585525828124[16] = 0;
   out_1546341585525828124[17] = 0;
   out_1546341585525828124[18] = 0;
   out_1546341585525828124[19] = 0;
   out_1546341585525828124[20] = 0;
   out_1546341585525828124[21] = 0;
   out_1546341585525828124[22] = 0;
   out_1546341585525828124[23] = 1;
   out_1546341585525828124[24] = 0;
   out_1546341585525828124[25] = 0;
   out_1546341585525828124[26] = 0;
   out_1546341585525828124[27] = 0;
   out_1546341585525828124[28] = 0;
   out_1546341585525828124[29] = 0;
   out_1546341585525828124[30] = 0;
   out_1546341585525828124[31] = 0;
   out_1546341585525828124[32] = 0;
   out_1546341585525828124[33] = 0;
   out_1546341585525828124[34] = 0;
   out_1546341585525828124[35] = 0;
   out_1546341585525828124[36] = 0;
   out_1546341585525828124[37] = 0;
   out_1546341585525828124[38] = 0;
   out_1546341585525828124[39] = 0;
   out_1546341585525828124[40] = 0;
   out_1546341585525828124[41] = 0;
   out_1546341585525828124[42] = 0;
   out_1546341585525828124[43] = 0;
   out_1546341585525828124[44] = 0;
   out_1546341585525828124[45] = 0;
   out_1546341585525828124[46] = 1;
   out_1546341585525828124[47] = 0;
   out_1546341585525828124[48] = 0;
   out_1546341585525828124[49] = 0;
   out_1546341585525828124[50] = 0;
   out_1546341585525828124[51] = 0;
   out_1546341585525828124[52] = 0;
   out_1546341585525828124[53] = 0;
   out_1546341585525828124[54] = 0;
   out_1546341585525828124[55] = 0;
   out_1546341585525828124[56] = 0;
   out_1546341585525828124[57] = 0;
   out_1546341585525828124[58] = 0;
   out_1546341585525828124[59] = 0;
   out_1546341585525828124[60] = 0;
   out_1546341585525828124[61] = 0;
   out_1546341585525828124[62] = 0;
   out_1546341585525828124[63] = 0;
   out_1546341585525828124[64] = 0;
   out_1546341585525828124[65] = 0;
}
void h_35(double *state, double *unused, double *out_2068742798877081471) {
   out_2068742798877081471[0] = state[7];
   out_2068742798877081471[1] = state[8];
   out_2068742798877081471[2] = state[9];
}
void H_35(double *state, double *unused, double *out_1199221446799185585) {
   out_1199221446799185585[0] = 0;
   out_1199221446799185585[1] = 0;
   out_1199221446799185585[2] = 0;
   out_1199221446799185585[3] = 0;
   out_1199221446799185585[4] = 0;
   out_1199221446799185585[5] = 0;
   out_1199221446799185585[6] = 0;
   out_1199221446799185585[7] = 1;
   out_1199221446799185585[8] = 0;
   out_1199221446799185585[9] = 0;
   out_1199221446799185585[10] = 0;
   out_1199221446799185585[11] = 0;
   out_1199221446799185585[12] = 0;
   out_1199221446799185585[13] = 0;
   out_1199221446799185585[14] = 0;
   out_1199221446799185585[15] = 0;
   out_1199221446799185585[16] = 0;
   out_1199221446799185585[17] = 0;
   out_1199221446799185585[18] = 0;
   out_1199221446799185585[19] = 0;
   out_1199221446799185585[20] = 0;
   out_1199221446799185585[21] = 0;
   out_1199221446799185585[22] = 0;
   out_1199221446799185585[23] = 0;
   out_1199221446799185585[24] = 0;
   out_1199221446799185585[25] = 0;
   out_1199221446799185585[26] = 0;
   out_1199221446799185585[27] = 0;
   out_1199221446799185585[28] = 0;
   out_1199221446799185585[29] = 0;
   out_1199221446799185585[30] = 1;
   out_1199221446799185585[31] = 0;
   out_1199221446799185585[32] = 0;
   out_1199221446799185585[33] = 0;
   out_1199221446799185585[34] = 0;
   out_1199221446799185585[35] = 0;
   out_1199221446799185585[36] = 0;
   out_1199221446799185585[37] = 0;
   out_1199221446799185585[38] = 0;
   out_1199221446799185585[39] = 0;
   out_1199221446799185585[40] = 0;
   out_1199221446799185585[41] = 0;
   out_1199221446799185585[42] = 0;
   out_1199221446799185585[43] = 0;
   out_1199221446799185585[44] = 0;
   out_1199221446799185585[45] = 0;
   out_1199221446799185585[46] = 0;
   out_1199221446799185585[47] = 0;
   out_1199221446799185585[48] = 0;
   out_1199221446799185585[49] = 0;
   out_1199221446799185585[50] = 0;
   out_1199221446799185585[51] = 0;
   out_1199221446799185585[52] = 0;
   out_1199221446799185585[53] = 1;
   out_1199221446799185585[54] = 0;
   out_1199221446799185585[55] = 0;
   out_1199221446799185585[56] = 0;
   out_1199221446799185585[57] = 0;
   out_1199221446799185585[58] = 0;
   out_1199221446799185585[59] = 0;
   out_1199221446799185585[60] = 0;
   out_1199221446799185585[61] = 0;
   out_1199221446799185585[62] = 0;
   out_1199221446799185585[63] = 0;
   out_1199221446799185585[64] = 0;
   out_1199221446799185585[65] = 0;
}
void h_32(double *state, double *unused, double *out_6839174289439674713) {
   out_6839174289439674713[0] = state[3];
   out_6839174289439674713[1] = state[4];
   out_6839174289439674713[2] = state[5];
   out_6839174289439674713[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7417835173857091613) {
   out_7417835173857091613[0] = 0;
   out_7417835173857091613[1] = 0;
   out_7417835173857091613[2] = 0;
   out_7417835173857091613[3] = 1;
   out_7417835173857091613[4] = 0;
   out_7417835173857091613[5] = 0;
   out_7417835173857091613[6] = 0;
   out_7417835173857091613[7] = 0;
   out_7417835173857091613[8] = 0;
   out_7417835173857091613[9] = 0;
   out_7417835173857091613[10] = 0;
   out_7417835173857091613[11] = 0;
   out_7417835173857091613[12] = 0;
   out_7417835173857091613[13] = 0;
   out_7417835173857091613[14] = 0;
   out_7417835173857091613[15] = 0;
   out_7417835173857091613[16] = 0;
   out_7417835173857091613[17] = 0;
   out_7417835173857091613[18] = 0;
   out_7417835173857091613[19] = 0;
   out_7417835173857091613[20] = 0;
   out_7417835173857091613[21] = 0;
   out_7417835173857091613[22] = 0;
   out_7417835173857091613[23] = 0;
   out_7417835173857091613[24] = 0;
   out_7417835173857091613[25] = 0;
   out_7417835173857091613[26] = 1;
   out_7417835173857091613[27] = 0;
   out_7417835173857091613[28] = 0;
   out_7417835173857091613[29] = 0;
   out_7417835173857091613[30] = 0;
   out_7417835173857091613[31] = 0;
   out_7417835173857091613[32] = 0;
   out_7417835173857091613[33] = 0;
   out_7417835173857091613[34] = 0;
   out_7417835173857091613[35] = 0;
   out_7417835173857091613[36] = 0;
   out_7417835173857091613[37] = 0;
   out_7417835173857091613[38] = 0;
   out_7417835173857091613[39] = 0;
   out_7417835173857091613[40] = 0;
   out_7417835173857091613[41] = 0;
   out_7417835173857091613[42] = 0;
   out_7417835173857091613[43] = 0;
   out_7417835173857091613[44] = 0;
   out_7417835173857091613[45] = 0;
   out_7417835173857091613[46] = 0;
   out_7417835173857091613[47] = 0;
   out_7417835173857091613[48] = 0;
   out_7417835173857091613[49] = 1;
   out_7417835173857091613[50] = 0;
   out_7417835173857091613[51] = 0;
   out_7417835173857091613[52] = 0;
   out_7417835173857091613[53] = 0;
   out_7417835173857091613[54] = 0;
   out_7417835173857091613[55] = 0;
   out_7417835173857091613[56] = 0;
   out_7417835173857091613[57] = 0;
   out_7417835173857091613[58] = 0;
   out_7417835173857091613[59] = 0;
   out_7417835173857091613[60] = 0;
   out_7417835173857091613[61] = 0;
   out_7417835173857091613[62] = 0;
   out_7417835173857091613[63] = 0;
   out_7417835173857091613[64] = 0;
   out_7417835173857091613[65] = 0;
   out_7417835173857091613[66] = 0;
   out_7417835173857091613[67] = 0;
   out_7417835173857091613[68] = 0;
   out_7417835173857091613[69] = 0;
   out_7417835173857091613[70] = 0;
   out_7417835173857091613[71] = 0;
   out_7417835173857091613[72] = 1;
   out_7417835173857091613[73] = 0;
   out_7417835173857091613[74] = 0;
   out_7417835173857091613[75] = 0;
   out_7417835173857091613[76] = 0;
   out_7417835173857091613[77] = 0;
   out_7417835173857091613[78] = 0;
   out_7417835173857091613[79] = 0;
   out_7417835173857091613[80] = 0;
   out_7417835173857091613[81] = 0;
   out_7417835173857091613[82] = 0;
   out_7417835173857091613[83] = 0;
   out_7417835173857091613[84] = 0;
   out_7417835173857091613[85] = 0;
   out_7417835173857091613[86] = 0;
   out_7417835173857091613[87] = 0;
}
void h_13(double *state, double *unused, double *out_4953518883879515136) {
   out_4953518883879515136[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4953518883879515136[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4953518883879515136[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2214355387392541157) {
   out_2214355387392541157[0] = 0;
   out_2214355387392541157[1] = 0;
   out_2214355387392541157[2] = 0;
   out_2214355387392541157[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2214355387392541157[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2214355387392541157[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2214355387392541157[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2214355387392541157[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2214355387392541157[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2214355387392541157[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2214355387392541157[10] = 0;
   out_2214355387392541157[11] = 0;
   out_2214355387392541157[12] = 0;
   out_2214355387392541157[13] = 0;
   out_2214355387392541157[14] = 0;
   out_2214355387392541157[15] = 0;
   out_2214355387392541157[16] = 0;
   out_2214355387392541157[17] = 0;
   out_2214355387392541157[18] = 0;
   out_2214355387392541157[19] = 0;
   out_2214355387392541157[20] = 0;
   out_2214355387392541157[21] = 0;
   out_2214355387392541157[22] = 0;
   out_2214355387392541157[23] = 0;
   out_2214355387392541157[24] = 0;
   out_2214355387392541157[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2214355387392541157[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2214355387392541157[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2214355387392541157[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2214355387392541157[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2214355387392541157[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2214355387392541157[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2214355387392541157[32] = 0;
   out_2214355387392541157[33] = 0;
   out_2214355387392541157[34] = 0;
   out_2214355387392541157[35] = 0;
   out_2214355387392541157[36] = 0;
   out_2214355387392541157[37] = 0;
   out_2214355387392541157[38] = 0;
   out_2214355387392541157[39] = 0;
   out_2214355387392541157[40] = 0;
   out_2214355387392541157[41] = 0;
   out_2214355387392541157[42] = 0;
   out_2214355387392541157[43] = 0;
   out_2214355387392541157[44] = 0;
   out_2214355387392541157[45] = 0;
   out_2214355387392541157[46] = 0;
   out_2214355387392541157[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2214355387392541157[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2214355387392541157[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2214355387392541157[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2214355387392541157[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2214355387392541157[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2214355387392541157[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2214355387392541157[54] = 0;
   out_2214355387392541157[55] = 0;
   out_2214355387392541157[56] = 0;
   out_2214355387392541157[57] = 0;
   out_2214355387392541157[58] = 0;
   out_2214355387392541157[59] = 0;
   out_2214355387392541157[60] = 0;
   out_2214355387392541157[61] = 0;
   out_2214355387392541157[62] = 0;
   out_2214355387392541157[63] = 0;
   out_2214355387392541157[64] = 0;
   out_2214355387392541157[65] = 0;
}
void h_14(double *state, double *unused, double *out_4963282271439406197) {
   out_4963282271439406197[0] = state[10];
   out_4963282271439406197[1] = state[11];
   out_4963282271439406197[2] = state[12];
}
void H_14(double *state, double *unused, double *out_721420941706657551) {
   out_721420941706657551[0] = 0;
   out_721420941706657551[1] = 0;
   out_721420941706657551[2] = 0;
   out_721420941706657551[3] = 0;
   out_721420941706657551[4] = 0;
   out_721420941706657551[5] = 0;
   out_721420941706657551[6] = 0;
   out_721420941706657551[7] = 0;
   out_721420941706657551[8] = 0;
   out_721420941706657551[9] = 0;
   out_721420941706657551[10] = 1;
   out_721420941706657551[11] = 0;
   out_721420941706657551[12] = 0;
   out_721420941706657551[13] = 0;
   out_721420941706657551[14] = 0;
   out_721420941706657551[15] = 0;
   out_721420941706657551[16] = 0;
   out_721420941706657551[17] = 0;
   out_721420941706657551[18] = 0;
   out_721420941706657551[19] = 0;
   out_721420941706657551[20] = 0;
   out_721420941706657551[21] = 0;
   out_721420941706657551[22] = 0;
   out_721420941706657551[23] = 0;
   out_721420941706657551[24] = 0;
   out_721420941706657551[25] = 0;
   out_721420941706657551[26] = 0;
   out_721420941706657551[27] = 0;
   out_721420941706657551[28] = 0;
   out_721420941706657551[29] = 0;
   out_721420941706657551[30] = 0;
   out_721420941706657551[31] = 0;
   out_721420941706657551[32] = 0;
   out_721420941706657551[33] = 1;
   out_721420941706657551[34] = 0;
   out_721420941706657551[35] = 0;
   out_721420941706657551[36] = 0;
   out_721420941706657551[37] = 0;
   out_721420941706657551[38] = 0;
   out_721420941706657551[39] = 0;
   out_721420941706657551[40] = 0;
   out_721420941706657551[41] = 0;
   out_721420941706657551[42] = 0;
   out_721420941706657551[43] = 0;
   out_721420941706657551[44] = 0;
   out_721420941706657551[45] = 0;
   out_721420941706657551[46] = 0;
   out_721420941706657551[47] = 0;
   out_721420941706657551[48] = 0;
   out_721420941706657551[49] = 0;
   out_721420941706657551[50] = 0;
   out_721420941706657551[51] = 0;
   out_721420941706657551[52] = 0;
   out_721420941706657551[53] = 0;
   out_721420941706657551[54] = 0;
   out_721420941706657551[55] = 0;
   out_721420941706657551[56] = 1;
   out_721420941706657551[57] = 0;
   out_721420941706657551[58] = 0;
   out_721420941706657551[59] = 0;
   out_721420941706657551[60] = 0;
   out_721420941706657551[61] = 0;
   out_721420941706657551[62] = 0;
   out_721420941706657551[63] = 0;
   out_721420941706657551[64] = 0;
   out_721420941706657551[65] = 0;
}
void h_33(double *state, double *unused, double *out_3382631730957408293) {
   out_3382631730957408293[0] = state[16];
   out_3382631730957408293[1] = state[17];
   out_3382631730957408293[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4349778451438043189) {
   out_4349778451438043189[0] = 0;
   out_4349778451438043189[1] = 0;
   out_4349778451438043189[2] = 0;
   out_4349778451438043189[3] = 0;
   out_4349778451438043189[4] = 0;
   out_4349778451438043189[5] = 0;
   out_4349778451438043189[6] = 0;
   out_4349778451438043189[7] = 0;
   out_4349778451438043189[8] = 0;
   out_4349778451438043189[9] = 0;
   out_4349778451438043189[10] = 0;
   out_4349778451438043189[11] = 0;
   out_4349778451438043189[12] = 0;
   out_4349778451438043189[13] = 0;
   out_4349778451438043189[14] = 0;
   out_4349778451438043189[15] = 0;
   out_4349778451438043189[16] = 1;
   out_4349778451438043189[17] = 0;
   out_4349778451438043189[18] = 0;
   out_4349778451438043189[19] = 0;
   out_4349778451438043189[20] = 0;
   out_4349778451438043189[21] = 0;
   out_4349778451438043189[22] = 0;
   out_4349778451438043189[23] = 0;
   out_4349778451438043189[24] = 0;
   out_4349778451438043189[25] = 0;
   out_4349778451438043189[26] = 0;
   out_4349778451438043189[27] = 0;
   out_4349778451438043189[28] = 0;
   out_4349778451438043189[29] = 0;
   out_4349778451438043189[30] = 0;
   out_4349778451438043189[31] = 0;
   out_4349778451438043189[32] = 0;
   out_4349778451438043189[33] = 0;
   out_4349778451438043189[34] = 0;
   out_4349778451438043189[35] = 0;
   out_4349778451438043189[36] = 0;
   out_4349778451438043189[37] = 0;
   out_4349778451438043189[38] = 0;
   out_4349778451438043189[39] = 1;
   out_4349778451438043189[40] = 0;
   out_4349778451438043189[41] = 0;
   out_4349778451438043189[42] = 0;
   out_4349778451438043189[43] = 0;
   out_4349778451438043189[44] = 0;
   out_4349778451438043189[45] = 0;
   out_4349778451438043189[46] = 0;
   out_4349778451438043189[47] = 0;
   out_4349778451438043189[48] = 0;
   out_4349778451438043189[49] = 0;
   out_4349778451438043189[50] = 0;
   out_4349778451438043189[51] = 0;
   out_4349778451438043189[52] = 0;
   out_4349778451438043189[53] = 0;
   out_4349778451438043189[54] = 0;
   out_4349778451438043189[55] = 0;
   out_4349778451438043189[56] = 0;
   out_4349778451438043189[57] = 0;
   out_4349778451438043189[58] = 0;
   out_4349778451438043189[59] = 0;
   out_4349778451438043189[60] = 0;
   out_4349778451438043189[61] = 0;
   out_4349778451438043189[62] = 1;
   out_4349778451438043189[63] = 0;
   out_4349778451438043189[64] = 0;
   out_4349778451438043189[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3077768121840607383) {
  H(in_vec, out_3077768121840607383);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7472978668657561473) {
  err_fun(nom_x, delta_x, out_7472978668657561473);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6764604191109413454) {
  inv_err_fun(nom_x, true_x, out_6764604191109413454);
}
void live_H_mod_fun(double *state, double *out_438491143769632061) {
  H_mod_fun(state, out_438491143769632061);
}
void live_f_fun(double *state, double dt, double *out_1041270898332223269) {
  f_fun(state,  dt, out_1041270898332223269);
}
void live_F_fun(double *state, double dt, double *out_9032191010990772443) {
  F_fun(state,  dt, out_9032191010990772443);
}
void live_h_4(double *state, double *unused, double *out_633172382618728480) {
  h_4(state, unused, out_633172382618728480);
}
void live_H_4(double *state, double *unused, double *out_2167440610573421791) {
  H_4(state, unused, out_2167440610573421791);
}
void live_h_9(double *state, double *unused, double *out_4963282271439406197) {
  h_9(state, unused, out_4963282271439406197);
}
void live_H_9(double *state, double *unused, double *out_721420941706657551) {
  H_9(state, unused, out_721420941706657551);
}
void live_h_10(double *state, double *unused, double *out_6760578748027821069) {
  h_10(state, unused, out_6760578748027821069);
}
void live_H_10(double *state, double *unused, double *out_8173468374035088293) {
  H_10(state, unused, out_8173468374035088293);
}
void live_h_12(double *state, double *unused, double *out_8975123302553099687) {
  h_12(state, unused, out_8975123302553099687);
}
void live_H_12(double *state, double *unused, double *out_1546341585525828124) {
  H_12(state, unused, out_1546341585525828124);
}
void live_h_35(double *state, double *unused, double *out_2068742798877081471) {
  h_35(state, unused, out_2068742798877081471);
}
void live_H_35(double *state, double *unused, double *out_1199221446799185585) {
  H_35(state, unused, out_1199221446799185585);
}
void live_h_32(double *state, double *unused, double *out_6839174289439674713) {
  h_32(state, unused, out_6839174289439674713);
}
void live_H_32(double *state, double *unused, double *out_7417835173857091613) {
  H_32(state, unused, out_7417835173857091613);
}
void live_h_13(double *state, double *unused, double *out_4953518883879515136) {
  h_13(state, unused, out_4953518883879515136);
}
void live_H_13(double *state, double *unused, double *out_2214355387392541157) {
  H_13(state, unused, out_2214355387392541157);
}
void live_h_14(double *state, double *unused, double *out_4963282271439406197) {
  h_14(state, unused, out_4963282271439406197);
}
void live_H_14(double *state, double *unused, double *out_721420941706657551) {
  H_14(state, unused, out_721420941706657551);
}
void live_h_33(double *state, double *unused, double *out_3382631730957408293) {
  h_33(state, unused, out_3382631730957408293);
}
void live_H_33(double *state, double *unused, double *out_4349778451438043189) {
  H_33(state, unused, out_4349778451438043189);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
