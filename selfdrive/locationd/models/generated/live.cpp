#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5643343481595750987) {
   out_5643343481595750987[0] = 0;
   out_5643343481595750987[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5643343481595750987[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5643343481595750987[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5643343481595750987[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5643343481595750987[5] = -sin(in_vec[1]);
   out_5643343481595750987[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5643343481595750987[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5643343481595750987[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5643343481595750987[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5643343481595750987[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5643343481595750987[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5643343481595750987[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5643343481595750987[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5643343481595750987[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5643343481595750987[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5643343481595750987[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5643343481595750987[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7981398626472992736) {
   out_7981398626472992736[0] = delta_x[0] + nom_x[0];
   out_7981398626472992736[1] = delta_x[1] + nom_x[1];
   out_7981398626472992736[2] = delta_x[2] + nom_x[2];
   out_7981398626472992736[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7981398626472992736[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7981398626472992736[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7981398626472992736[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7981398626472992736[7] = delta_x[6] + nom_x[7];
   out_7981398626472992736[8] = delta_x[7] + nom_x[8];
   out_7981398626472992736[9] = delta_x[8] + nom_x[9];
   out_7981398626472992736[10] = delta_x[9] + nom_x[10];
   out_7981398626472992736[11] = delta_x[10] + nom_x[11];
   out_7981398626472992736[12] = delta_x[11] + nom_x[12];
   out_7981398626472992736[13] = delta_x[12] + nom_x[13];
   out_7981398626472992736[14] = delta_x[13] + nom_x[14];
   out_7981398626472992736[15] = delta_x[14] + nom_x[15];
   out_7981398626472992736[16] = delta_x[15] + nom_x[16];
   out_7981398626472992736[17] = delta_x[16] + nom_x[17];
   out_7981398626472992736[18] = delta_x[17] + nom_x[18];
   out_7981398626472992736[19] = delta_x[18] + nom_x[19];
   out_7981398626472992736[20] = delta_x[19] + nom_x[20];
   out_7981398626472992736[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_296744906813650483) {
   out_296744906813650483[0] = -nom_x[0] + true_x[0];
   out_296744906813650483[1] = -nom_x[1] + true_x[1];
   out_296744906813650483[2] = -nom_x[2] + true_x[2];
   out_296744906813650483[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_296744906813650483[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_296744906813650483[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_296744906813650483[6] = -nom_x[7] + true_x[7];
   out_296744906813650483[7] = -nom_x[8] + true_x[8];
   out_296744906813650483[8] = -nom_x[9] + true_x[9];
   out_296744906813650483[9] = -nom_x[10] + true_x[10];
   out_296744906813650483[10] = -nom_x[11] + true_x[11];
   out_296744906813650483[11] = -nom_x[12] + true_x[12];
   out_296744906813650483[12] = -nom_x[13] + true_x[13];
   out_296744906813650483[13] = -nom_x[14] + true_x[14];
   out_296744906813650483[14] = -nom_x[15] + true_x[15];
   out_296744906813650483[15] = -nom_x[16] + true_x[16];
   out_296744906813650483[16] = -nom_x[17] + true_x[17];
   out_296744906813650483[17] = -nom_x[18] + true_x[18];
   out_296744906813650483[18] = -nom_x[19] + true_x[19];
   out_296744906813650483[19] = -nom_x[20] + true_x[20];
   out_296744906813650483[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8170742335209521410) {
   out_8170742335209521410[0] = 1.0;
   out_8170742335209521410[1] = 0;
   out_8170742335209521410[2] = 0;
   out_8170742335209521410[3] = 0;
   out_8170742335209521410[4] = 0;
   out_8170742335209521410[5] = 0;
   out_8170742335209521410[6] = 0;
   out_8170742335209521410[7] = 0;
   out_8170742335209521410[8] = 0;
   out_8170742335209521410[9] = 0;
   out_8170742335209521410[10] = 0;
   out_8170742335209521410[11] = 0;
   out_8170742335209521410[12] = 0;
   out_8170742335209521410[13] = 0;
   out_8170742335209521410[14] = 0;
   out_8170742335209521410[15] = 0;
   out_8170742335209521410[16] = 0;
   out_8170742335209521410[17] = 0;
   out_8170742335209521410[18] = 0;
   out_8170742335209521410[19] = 0;
   out_8170742335209521410[20] = 0;
   out_8170742335209521410[21] = 0;
   out_8170742335209521410[22] = 1.0;
   out_8170742335209521410[23] = 0;
   out_8170742335209521410[24] = 0;
   out_8170742335209521410[25] = 0;
   out_8170742335209521410[26] = 0;
   out_8170742335209521410[27] = 0;
   out_8170742335209521410[28] = 0;
   out_8170742335209521410[29] = 0;
   out_8170742335209521410[30] = 0;
   out_8170742335209521410[31] = 0;
   out_8170742335209521410[32] = 0;
   out_8170742335209521410[33] = 0;
   out_8170742335209521410[34] = 0;
   out_8170742335209521410[35] = 0;
   out_8170742335209521410[36] = 0;
   out_8170742335209521410[37] = 0;
   out_8170742335209521410[38] = 0;
   out_8170742335209521410[39] = 0;
   out_8170742335209521410[40] = 0;
   out_8170742335209521410[41] = 0;
   out_8170742335209521410[42] = 0;
   out_8170742335209521410[43] = 0;
   out_8170742335209521410[44] = 1.0;
   out_8170742335209521410[45] = 0;
   out_8170742335209521410[46] = 0;
   out_8170742335209521410[47] = 0;
   out_8170742335209521410[48] = 0;
   out_8170742335209521410[49] = 0;
   out_8170742335209521410[50] = 0;
   out_8170742335209521410[51] = 0;
   out_8170742335209521410[52] = 0;
   out_8170742335209521410[53] = 0;
   out_8170742335209521410[54] = 0;
   out_8170742335209521410[55] = 0;
   out_8170742335209521410[56] = 0;
   out_8170742335209521410[57] = 0;
   out_8170742335209521410[58] = 0;
   out_8170742335209521410[59] = 0;
   out_8170742335209521410[60] = 0;
   out_8170742335209521410[61] = 0;
   out_8170742335209521410[62] = 0;
   out_8170742335209521410[63] = 0;
   out_8170742335209521410[64] = 0;
   out_8170742335209521410[65] = 0;
   out_8170742335209521410[66] = -0.5*state[4];
   out_8170742335209521410[67] = -0.5*state[5];
   out_8170742335209521410[68] = -0.5*state[6];
   out_8170742335209521410[69] = 0;
   out_8170742335209521410[70] = 0;
   out_8170742335209521410[71] = 0;
   out_8170742335209521410[72] = 0;
   out_8170742335209521410[73] = 0;
   out_8170742335209521410[74] = 0;
   out_8170742335209521410[75] = 0;
   out_8170742335209521410[76] = 0;
   out_8170742335209521410[77] = 0;
   out_8170742335209521410[78] = 0;
   out_8170742335209521410[79] = 0;
   out_8170742335209521410[80] = 0;
   out_8170742335209521410[81] = 0;
   out_8170742335209521410[82] = 0;
   out_8170742335209521410[83] = 0;
   out_8170742335209521410[84] = 0;
   out_8170742335209521410[85] = 0;
   out_8170742335209521410[86] = 0;
   out_8170742335209521410[87] = 0.5*state[3];
   out_8170742335209521410[88] = 0.5*state[6];
   out_8170742335209521410[89] = -0.5*state[5];
   out_8170742335209521410[90] = 0;
   out_8170742335209521410[91] = 0;
   out_8170742335209521410[92] = 0;
   out_8170742335209521410[93] = 0;
   out_8170742335209521410[94] = 0;
   out_8170742335209521410[95] = 0;
   out_8170742335209521410[96] = 0;
   out_8170742335209521410[97] = 0;
   out_8170742335209521410[98] = 0;
   out_8170742335209521410[99] = 0;
   out_8170742335209521410[100] = 0;
   out_8170742335209521410[101] = 0;
   out_8170742335209521410[102] = 0;
   out_8170742335209521410[103] = 0;
   out_8170742335209521410[104] = 0;
   out_8170742335209521410[105] = 0;
   out_8170742335209521410[106] = 0;
   out_8170742335209521410[107] = 0;
   out_8170742335209521410[108] = -0.5*state[6];
   out_8170742335209521410[109] = 0.5*state[3];
   out_8170742335209521410[110] = 0.5*state[4];
   out_8170742335209521410[111] = 0;
   out_8170742335209521410[112] = 0;
   out_8170742335209521410[113] = 0;
   out_8170742335209521410[114] = 0;
   out_8170742335209521410[115] = 0;
   out_8170742335209521410[116] = 0;
   out_8170742335209521410[117] = 0;
   out_8170742335209521410[118] = 0;
   out_8170742335209521410[119] = 0;
   out_8170742335209521410[120] = 0;
   out_8170742335209521410[121] = 0;
   out_8170742335209521410[122] = 0;
   out_8170742335209521410[123] = 0;
   out_8170742335209521410[124] = 0;
   out_8170742335209521410[125] = 0;
   out_8170742335209521410[126] = 0;
   out_8170742335209521410[127] = 0;
   out_8170742335209521410[128] = 0;
   out_8170742335209521410[129] = 0.5*state[5];
   out_8170742335209521410[130] = -0.5*state[4];
   out_8170742335209521410[131] = 0.5*state[3];
   out_8170742335209521410[132] = 0;
   out_8170742335209521410[133] = 0;
   out_8170742335209521410[134] = 0;
   out_8170742335209521410[135] = 0;
   out_8170742335209521410[136] = 0;
   out_8170742335209521410[137] = 0;
   out_8170742335209521410[138] = 0;
   out_8170742335209521410[139] = 0;
   out_8170742335209521410[140] = 0;
   out_8170742335209521410[141] = 0;
   out_8170742335209521410[142] = 0;
   out_8170742335209521410[143] = 0;
   out_8170742335209521410[144] = 0;
   out_8170742335209521410[145] = 0;
   out_8170742335209521410[146] = 0;
   out_8170742335209521410[147] = 0;
   out_8170742335209521410[148] = 0;
   out_8170742335209521410[149] = 0;
   out_8170742335209521410[150] = 0;
   out_8170742335209521410[151] = 0;
   out_8170742335209521410[152] = 0;
   out_8170742335209521410[153] = 1.0;
   out_8170742335209521410[154] = 0;
   out_8170742335209521410[155] = 0;
   out_8170742335209521410[156] = 0;
   out_8170742335209521410[157] = 0;
   out_8170742335209521410[158] = 0;
   out_8170742335209521410[159] = 0;
   out_8170742335209521410[160] = 0;
   out_8170742335209521410[161] = 0;
   out_8170742335209521410[162] = 0;
   out_8170742335209521410[163] = 0;
   out_8170742335209521410[164] = 0;
   out_8170742335209521410[165] = 0;
   out_8170742335209521410[166] = 0;
   out_8170742335209521410[167] = 0;
   out_8170742335209521410[168] = 0;
   out_8170742335209521410[169] = 0;
   out_8170742335209521410[170] = 0;
   out_8170742335209521410[171] = 0;
   out_8170742335209521410[172] = 0;
   out_8170742335209521410[173] = 0;
   out_8170742335209521410[174] = 0;
   out_8170742335209521410[175] = 1.0;
   out_8170742335209521410[176] = 0;
   out_8170742335209521410[177] = 0;
   out_8170742335209521410[178] = 0;
   out_8170742335209521410[179] = 0;
   out_8170742335209521410[180] = 0;
   out_8170742335209521410[181] = 0;
   out_8170742335209521410[182] = 0;
   out_8170742335209521410[183] = 0;
   out_8170742335209521410[184] = 0;
   out_8170742335209521410[185] = 0;
   out_8170742335209521410[186] = 0;
   out_8170742335209521410[187] = 0;
   out_8170742335209521410[188] = 0;
   out_8170742335209521410[189] = 0;
   out_8170742335209521410[190] = 0;
   out_8170742335209521410[191] = 0;
   out_8170742335209521410[192] = 0;
   out_8170742335209521410[193] = 0;
   out_8170742335209521410[194] = 0;
   out_8170742335209521410[195] = 0;
   out_8170742335209521410[196] = 0;
   out_8170742335209521410[197] = 1.0;
   out_8170742335209521410[198] = 0;
   out_8170742335209521410[199] = 0;
   out_8170742335209521410[200] = 0;
   out_8170742335209521410[201] = 0;
   out_8170742335209521410[202] = 0;
   out_8170742335209521410[203] = 0;
   out_8170742335209521410[204] = 0;
   out_8170742335209521410[205] = 0;
   out_8170742335209521410[206] = 0;
   out_8170742335209521410[207] = 0;
   out_8170742335209521410[208] = 0;
   out_8170742335209521410[209] = 0;
   out_8170742335209521410[210] = 0;
   out_8170742335209521410[211] = 0;
   out_8170742335209521410[212] = 0;
   out_8170742335209521410[213] = 0;
   out_8170742335209521410[214] = 0;
   out_8170742335209521410[215] = 0;
   out_8170742335209521410[216] = 0;
   out_8170742335209521410[217] = 0;
   out_8170742335209521410[218] = 0;
   out_8170742335209521410[219] = 1.0;
   out_8170742335209521410[220] = 0;
   out_8170742335209521410[221] = 0;
   out_8170742335209521410[222] = 0;
   out_8170742335209521410[223] = 0;
   out_8170742335209521410[224] = 0;
   out_8170742335209521410[225] = 0;
   out_8170742335209521410[226] = 0;
   out_8170742335209521410[227] = 0;
   out_8170742335209521410[228] = 0;
   out_8170742335209521410[229] = 0;
   out_8170742335209521410[230] = 0;
   out_8170742335209521410[231] = 0;
   out_8170742335209521410[232] = 0;
   out_8170742335209521410[233] = 0;
   out_8170742335209521410[234] = 0;
   out_8170742335209521410[235] = 0;
   out_8170742335209521410[236] = 0;
   out_8170742335209521410[237] = 0;
   out_8170742335209521410[238] = 0;
   out_8170742335209521410[239] = 0;
   out_8170742335209521410[240] = 0;
   out_8170742335209521410[241] = 1.0;
   out_8170742335209521410[242] = 0;
   out_8170742335209521410[243] = 0;
   out_8170742335209521410[244] = 0;
   out_8170742335209521410[245] = 0;
   out_8170742335209521410[246] = 0;
   out_8170742335209521410[247] = 0;
   out_8170742335209521410[248] = 0;
   out_8170742335209521410[249] = 0;
   out_8170742335209521410[250] = 0;
   out_8170742335209521410[251] = 0;
   out_8170742335209521410[252] = 0;
   out_8170742335209521410[253] = 0;
   out_8170742335209521410[254] = 0;
   out_8170742335209521410[255] = 0;
   out_8170742335209521410[256] = 0;
   out_8170742335209521410[257] = 0;
   out_8170742335209521410[258] = 0;
   out_8170742335209521410[259] = 0;
   out_8170742335209521410[260] = 0;
   out_8170742335209521410[261] = 0;
   out_8170742335209521410[262] = 0;
   out_8170742335209521410[263] = 1.0;
   out_8170742335209521410[264] = 0;
   out_8170742335209521410[265] = 0;
   out_8170742335209521410[266] = 0;
   out_8170742335209521410[267] = 0;
   out_8170742335209521410[268] = 0;
   out_8170742335209521410[269] = 0;
   out_8170742335209521410[270] = 0;
   out_8170742335209521410[271] = 0;
   out_8170742335209521410[272] = 0;
   out_8170742335209521410[273] = 0;
   out_8170742335209521410[274] = 0;
   out_8170742335209521410[275] = 0;
   out_8170742335209521410[276] = 0;
   out_8170742335209521410[277] = 0;
   out_8170742335209521410[278] = 0;
   out_8170742335209521410[279] = 0;
   out_8170742335209521410[280] = 0;
   out_8170742335209521410[281] = 0;
   out_8170742335209521410[282] = 0;
   out_8170742335209521410[283] = 0;
   out_8170742335209521410[284] = 0;
   out_8170742335209521410[285] = 1.0;
   out_8170742335209521410[286] = 0;
   out_8170742335209521410[287] = 0;
   out_8170742335209521410[288] = 0;
   out_8170742335209521410[289] = 0;
   out_8170742335209521410[290] = 0;
   out_8170742335209521410[291] = 0;
   out_8170742335209521410[292] = 0;
   out_8170742335209521410[293] = 0;
   out_8170742335209521410[294] = 0;
   out_8170742335209521410[295] = 0;
   out_8170742335209521410[296] = 0;
   out_8170742335209521410[297] = 0;
   out_8170742335209521410[298] = 0;
   out_8170742335209521410[299] = 0;
   out_8170742335209521410[300] = 0;
   out_8170742335209521410[301] = 0;
   out_8170742335209521410[302] = 0;
   out_8170742335209521410[303] = 0;
   out_8170742335209521410[304] = 0;
   out_8170742335209521410[305] = 0;
   out_8170742335209521410[306] = 0;
   out_8170742335209521410[307] = 1.0;
   out_8170742335209521410[308] = 0;
   out_8170742335209521410[309] = 0;
   out_8170742335209521410[310] = 0;
   out_8170742335209521410[311] = 0;
   out_8170742335209521410[312] = 0;
   out_8170742335209521410[313] = 0;
   out_8170742335209521410[314] = 0;
   out_8170742335209521410[315] = 0;
   out_8170742335209521410[316] = 0;
   out_8170742335209521410[317] = 0;
   out_8170742335209521410[318] = 0;
   out_8170742335209521410[319] = 0;
   out_8170742335209521410[320] = 0;
   out_8170742335209521410[321] = 0;
   out_8170742335209521410[322] = 0;
   out_8170742335209521410[323] = 0;
   out_8170742335209521410[324] = 0;
   out_8170742335209521410[325] = 0;
   out_8170742335209521410[326] = 0;
   out_8170742335209521410[327] = 0;
   out_8170742335209521410[328] = 0;
   out_8170742335209521410[329] = 1.0;
   out_8170742335209521410[330] = 0;
   out_8170742335209521410[331] = 0;
   out_8170742335209521410[332] = 0;
   out_8170742335209521410[333] = 0;
   out_8170742335209521410[334] = 0;
   out_8170742335209521410[335] = 0;
   out_8170742335209521410[336] = 0;
   out_8170742335209521410[337] = 0;
   out_8170742335209521410[338] = 0;
   out_8170742335209521410[339] = 0;
   out_8170742335209521410[340] = 0;
   out_8170742335209521410[341] = 0;
   out_8170742335209521410[342] = 0;
   out_8170742335209521410[343] = 0;
   out_8170742335209521410[344] = 0;
   out_8170742335209521410[345] = 0;
   out_8170742335209521410[346] = 0;
   out_8170742335209521410[347] = 0;
   out_8170742335209521410[348] = 0;
   out_8170742335209521410[349] = 0;
   out_8170742335209521410[350] = 0;
   out_8170742335209521410[351] = 1.0;
   out_8170742335209521410[352] = 0;
   out_8170742335209521410[353] = 0;
   out_8170742335209521410[354] = 0;
   out_8170742335209521410[355] = 0;
   out_8170742335209521410[356] = 0;
   out_8170742335209521410[357] = 0;
   out_8170742335209521410[358] = 0;
   out_8170742335209521410[359] = 0;
   out_8170742335209521410[360] = 0;
   out_8170742335209521410[361] = 0;
   out_8170742335209521410[362] = 0;
   out_8170742335209521410[363] = 0;
   out_8170742335209521410[364] = 0;
   out_8170742335209521410[365] = 0;
   out_8170742335209521410[366] = 0;
   out_8170742335209521410[367] = 0;
   out_8170742335209521410[368] = 0;
   out_8170742335209521410[369] = 0;
   out_8170742335209521410[370] = 0;
   out_8170742335209521410[371] = 0;
   out_8170742335209521410[372] = 0;
   out_8170742335209521410[373] = 1.0;
   out_8170742335209521410[374] = 0;
   out_8170742335209521410[375] = 0;
   out_8170742335209521410[376] = 0;
   out_8170742335209521410[377] = 0;
   out_8170742335209521410[378] = 0;
   out_8170742335209521410[379] = 0;
   out_8170742335209521410[380] = 0;
   out_8170742335209521410[381] = 0;
   out_8170742335209521410[382] = 0;
   out_8170742335209521410[383] = 0;
   out_8170742335209521410[384] = 0;
   out_8170742335209521410[385] = 0;
   out_8170742335209521410[386] = 0;
   out_8170742335209521410[387] = 0;
   out_8170742335209521410[388] = 0;
   out_8170742335209521410[389] = 0;
   out_8170742335209521410[390] = 0;
   out_8170742335209521410[391] = 0;
   out_8170742335209521410[392] = 0;
   out_8170742335209521410[393] = 0;
   out_8170742335209521410[394] = 0;
   out_8170742335209521410[395] = 1.0;
   out_8170742335209521410[396] = 0;
   out_8170742335209521410[397] = 0;
   out_8170742335209521410[398] = 0;
   out_8170742335209521410[399] = 0;
   out_8170742335209521410[400] = 0;
   out_8170742335209521410[401] = 0;
   out_8170742335209521410[402] = 0;
   out_8170742335209521410[403] = 0;
   out_8170742335209521410[404] = 0;
   out_8170742335209521410[405] = 0;
   out_8170742335209521410[406] = 0;
   out_8170742335209521410[407] = 0;
   out_8170742335209521410[408] = 0;
   out_8170742335209521410[409] = 0;
   out_8170742335209521410[410] = 0;
   out_8170742335209521410[411] = 0;
   out_8170742335209521410[412] = 0;
   out_8170742335209521410[413] = 0;
   out_8170742335209521410[414] = 0;
   out_8170742335209521410[415] = 0;
   out_8170742335209521410[416] = 0;
   out_8170742335209521410[417] = 1.0;
   out_8170742335209521410[418] = 0;
   out_8170742335209521410[419] = 0;
   out_8170742335209521410[420] = 0;
   out_8170742335209521410[421] = 0;
   out_8170742335209521410[422] = 0;
   out_8170742335209521410[423] = 0;
   out_8170742335209521410[424] = 0;
   out_8170742335209521410[425] = 0;
   out_8170742335209521410[426] = 0;
   out_8170742335209521410[427] = 0;
   out_8170742335209521410[428] = 0;
   out_8170742335209521410[429] = 0;
   out_8170742335209521410[430] = 0;
   out_8170742335209521410[431] = 0;
   out_8170742335209521410[432] = 0;
   out_8170742335209521410[433] = 0;
   out_8170742335209521410[434] = 0;
   out_8170742335209521410[435] = 0;
   out_8170742335209521410[436] = 0;
   out_8170742335209521410[437] = 0;
   out_8170742335209521410[438] = 0;
   out_8170742335209521410[439] = 1.0;
   out_8170742335209521410[440] = 0;
   out_8170742335209521410[441] = 0;
   out_8170742335209521410[442] = 0;
   out_8170742335209521410[443] = 0;
   out_8170742335209521410[444] = 0;
   out_8170742335209521410[445] = 0;
   out_8170742335209521410[446] = 0;
   out_8170742335209521410[447] = 0;
   out_8170742335209521410[448] = 0;
   out_8170742335209521410[449] = 0;
   out_8170742335209521410[450] = 0;
   out_8170742335209521410[451] = 0;
   out_8170742335209521410[452] = 0;
   out_8170742335209521410[453] = 0;
   out_8170742335209521410[454] = 0;
   out_8170742335209521410[455] = 0;
   out_8170742335209521410[456] = 0;
   out_8170742335209521410[457] = 0;
   out_8170742335209521410[458] = 0;
   out_8170742335209521410[459] = 0;
   out_8170742335209521410[460] = 0;
   out_8170742335209521410[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_594400784426027615) {
   out_594400784426027615[0] = dt*state[7] + state[0];
   out_594400784426027615[1] = dt*state[8] + state[1];
   out_594400784426027615[2] = dt*state[9] + state[2];
   out_594400784426027615[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_594400784426027615[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_594400784426027615[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_594400784426027615[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_594400784426027615[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_594400784426027615[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_594400784426027615[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_594400784426027615[10] = state[10];
   out_594400784426027615[11] = state[11];
   out_594400784426027615[12] = state[12];
   out_594400784426027615[13] = state[13];
   out_594400784426027615[14] = state[14];
   out_594400784426027615[15] = state[15];
   out_594400784426027615[16] = state[16];
   out_594400784426027615[17] = state[17];
   out_594400784426027615[18] = state[18];
   out_594400784426027615[19] = state[19];
   out_594400784426027615[20] = state[20];
   out_594400784426027615[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5783246172519972355) {
   out_5783246172519972355[0] = 1;
   out_5783246172519972355[1] = 0;
   out_5783246172519972355[2] = 0;
   out_5783246172519972355[3] = 0;
   out_5783246172519972355[4] = 0;
   out_5783246172519972355[5] = 0;
   out_5783246172519972355[6] = dt;
   out_5783246172519972355[7] = 0;
   out_5783246172519972355[8] = 0;
   out_5783246172519972355[9] = 0;
   out_5783246172519972355[10] = 0;
   out_5783246172519972355[11] = 0;
   out_5783246172519972355[12] = 0;
   out_5783246172519972355[13] = 0;
   out_5783246172519972355[14] = 0;
   out_5783246172519972355[15] = 0;
   out_5783246172519972355[16] = 0;
   out_5783246172519972355[17] = 0;
   out_5783246172519972355[18] = 0;
   out_5783246172519972355[19] = 0;
   out_5783246172519972355[20] = 0;
   out_5783246172519972355[21] = 0;
   out_5783246172519972355[22] = 1;
   out_5783246172519972355[23] = 0;
   out_5783246172519972355[24] = 0;
   out_5783246172519972355[25] = 0;
   out_5783246172519972355[26] = 0;
   out_5783246172519972355[27] = 0;
   out_5783246172519972355[28] = dt;
   out_5783246172519972355[29] = 0;
   out_5783246172519972355[30] = 0;
   out_5783246172519972355[31] = 0;
   out_5783246172519972355[32] = 0;
   out_5783246172519972355[33] = 0;
   out_5783246172519972355[34] = 0;
   out_5783246172519972355[35] = 0;
   out_5783246172519972355[36] = 0;
   out_5783246172519972355[37] = 0;
   out_5783246172519972355[38] = 0;
   out_5783246172519972355[39] = 0;
   out_5783246172519972355[40] = 0;
   out_5783246172519972355[41] = 0;
   out_5783246172519972355[42] = 0;
   out_5783246172519972355[43] = 0;
   out_5783246172519972355[44] = 1;
   out_5783246172519972355[45] = 0;
   out_5783246172519972355[46] = 0;
   out_5783246172519972355[47] = 0;
   out_5783246172519972355[48] = 0;
   out_5783246172519972355[49] = 0;
   out_5783246172519972355[50] = dt;
   out_5783246172519972355[51] = 0;
   out_5783246172519972355[52] = 0;
   out_5783246172519972355[53] = 0;
   out_5783246172519972355[54] = 0;
   out_5783246172519972355[55] = 0;
   out_5783246172519972355[56] = 0;
   out_5783246172519972355[57] = 0;
   out_5783246172519972355[58] = 0;
   out_5783246172519972355[59] = 0;
   out_5783246172519972355[60] = 0;
   out_5783246172519972355[61] = 0;
   out_5783246172519972355[62] = 0;
   out_5783246172519972355[63] = 0;
   out_5783246172519972355[64] = 0;
   out_5783246172519972355[65] = 0;
   out_5783246172519972355[66] = 1;
   out_5783246172519972355[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5783246172519972355[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5783246172519972355[69] = 0;
   out_5783246172519972355[70] = 0;
   out_5783246172519972355[71] = 0;
   out_5783246172519972355[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5783246172519972355[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5783246172519972355[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5783246172519972355[75] = 0;
   out_5783246172519972355[76] = 0;
   out_5783246172519972355[77] = 0;
   out_5783246172519972355[78] = 0;
   out_5783246172519972355[79] = 0;
   out_5783246172519972355[80] = 0;
   out_5783246172519972355[81] = 0;
   out_5783246172519972355[82] = 0;
   out_5783246172519972355[83] = 0;
   out_5783246172519972355[84] = 0;
   out_5783246172519972355[85] = 0;
   out_5783246172519972355[86] = 0;
   out_5783246172519972355[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5783246172519972355[88] = 1;
   out_5783246172519972355[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5783246172519972355[90] = 0;
   out_5783246172519972355[91] = 0;
   out_5783246172519972355[92] = 0;
   out_5783246172519972355[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5783246172519972355[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5783246172519972355[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5783246172519972355[96] = 0;
   out_5783246172519972355[97] = 0;
   out_5783246172519972355[98] = 0;
   out_5783246172519972355[99] = 0;
   out_5783246172519972355[100] = 0;
   out_5783246172519972355[101] = 0;
   out_5783246172519972355[102] = 0;
   out_5783246172519972355[103] = 0;
   out_5783246172519972355[104] = 0;
   out_5783246172519972355[105] = 0;
   out_5783246172519972355[106] = 0;
   out_5783246172519972355[107] = 0;
   out_5783246172519972355[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5783246172519972355[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5783246172519972355[110] = 1;
   out_5783246172519972355[111] = 0;
   out_5783246172519972355[112] = 0;
   out_5783246172519972355[113] = 0;
   out_5783246172519972355[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5783246172519972355[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5783246172519972355[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5783246172519972355[117] = 0;
   out_5783246172519972355[118] = 0;
   out_5783246172519972355[119] = 0;
   out_5783246172519972355[120] = 0;
   out_5783246172519972355[121] = 0;
   out_5783246172519972355[122] = 0;
   out_5783246172519972355[123] = 0;
   out_5783246172519972355[124] = 0;
   out_5783246172519972355[125] = 0;
   out_5783246172519972355[126] = 0;
   out_5783246172519972355[127] = 0;
   out_5783246172519972355[128] = 0;
   out_5783246172519972355[129] = 0;
   out_5783246172519972355[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5783246172519972355[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5783246172519972355[132] = 1;
   out_5783246172519972355[133] = 0;
   out_5783246172519972355[134] = 0;
   out_5783246172519972355[135] = 0;
   out_5783246172519972355[136] = 0;
   out_5783246172519972355[137] = 0;
   out_5783246172519972355[138] = 0;
   out_5783246172519972355[139] = 0;
   out_5783246172519972355[140] = 0;
   out_5783246172519972355[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5783246172519972355[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5783246172519972355[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5783246172519972355[144] = 0;
   out_5783246172519972355[145] = 0;
   out_5783246172519972355[146] = 0;
   out_5783246172519972355[147] = 0;
   out_5783246172519972355[148] = 0;
   out_5783246172519972355[149] = 0;
   out_5783246172519972355[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5783246172519972355[151] = 0;
   out_5783246172519972355[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5783246172519972355[153] = 0;
   out_5783246172519972355[154] = 1;
   out_5783246172519972355[155] = 0;
   out_5783246172519972355[156] = 0;
   out_5783246172519972355[157] = 0;
   out_5783246172519972355[158] = 0;
   out_5783246172519972355[159] = 0;
   out_5783246172519972355[160] = 0;
   out_5783246172519972355[161] = 0;
   out_5783246172519972355[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5783246172519972355[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5783246172519972355[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5783246172519972355[165] = 0;
   out_5783246172519972355[166] = 0;
   out_5783246172519972355[167] = 0;
   out_5783246172519972355[168] = 0;
   out_5783246172519972355[169] = 0;
   out_5783246172519972355[170] = 0;
   out_5783246172519972355[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5783246172519972355[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5783246172519972355[173] = 0;
   out_5783246172519972355[174] = 0;
   out_5783246172519972355[175] = 0;
   out_5783246172519972355[176] = 1;
   out_5783246172519972355[177] = 0;
   out_5783246172519972355[178] = 0;
   out_5783246172519972355[179] = 0;
   out_5783246172519972355[180] = 0;
   out_5783246172519972355[181] = 0;
   out_5783246172519972355[182] = 0;
   out_5783246172519972355[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5783246172519972355[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5783246172519972355[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5783246172519972355[186] = 0;
   out_5783246172519972355[187] = 0;
   out_5783246172519972355[188] = 0;
   out_5783246172519972355[189] = 0;
   out_5783246172519972355[190] = 0;
   out_5783246172519972355[191] = 0;
   out_5783246172519972355[192] = 0;
   out_5783246172519972355[193] = 0;
   out_5783246172519972355[194] = 0;
   out_5783246172519972355[195] = 0;
   out_5783246172519972355[196] = 0;
   out_5783246172519972355[197] = 0;
   out_5783246172519972355[198] = 1;
   out_5783246172519972355[199] = 0;
   out_5783246172519972355[200] = 0;
   out_5783246172519972355[201] = 0;
   out_5783246172519972355[202] = 0;
   out_5783246172519972355[203] = 0;
   out_5783246172519972355[204] = 0;
   out_5783246172519972355[205] = 0;
   out_5783246172519972355[206] = 0;
   out_5783246172519972355[207] = 0;
   out_5783246172519972355[208] = 0;
   out_5783246172519972355[209] = 0;
   out_5783246172519972355[210] = 0;
   out_5783246172519972355[211] = 0;
   out_5783246172519972355[212] = 0;
   out_5783246172519972355[213] = 0;
   out_5783246172519972355[214] = 0;
   out_5783246172519972355[215] = 0;
   out_5783246172519972355[216] = 0;
   out_5783246172519972355[217] = 0;
   out_5783246172519972355[218] = 0;
   out_5783246172519972355[219] = 0;
   out_5783246172519972355[220] = 1;
   out_5783246172519972355[221] = 0;
   out_5783246172519972355[222] = 0;
   out_5783246172519972355[223] = 0;
   out_5783246172519972355[224] = 0;
   out_5783246172519972355[225] = 0;
   out_5783246172519972355[226] = 0;
   out_5783246172519972355[227] = 0;
   out_5783246172519972355[228] = 0;
   out_5783246172519972355[229] = 0;
   out_5783246172519972355[230] = 0;
   out_5783246172519972355[231] = 0;
   out_5783246172519972355[232] = 0;
   out_5783246172519972355[233] = 0;
   out_5783246172519972355[234] = 0;
   out_5783246172519972355[235] = 0;
   out_5783246172519972355[236] = 0;
   out_5783246172519972355[237] = 0;
   out_5783246172519972355[238] = 0;
   out_5783246172519972355[239] = 0;
   out_5783246172519972355[240] = 0;
   out_5783246172519972355[241] = 0;
   out_5783246172519972355[242] = 1;
   out_5783246172519972355[243] = 0;
   out_5783246172519972355[244] = 0;
   out_5783246172519972355[245] = 0;
   out_5783246172519972355[246] = 0;
   out_5783246172519972355[247] = 0;
   out_5783246172519972355[248] = 0;
   out_5783246172519972355[249] = 0;
   out_5783246172519972355[250] = 0;
   out_5783246172519972355[251] = 0;
   out_5783246172519972355[252] = 0;
   out_5783246172519972355[253] = 0;
   out_5783246172519972355[254] = 0;
   out_5783246172519972355[255] = 0;
   out_5783246172519972355[256] = 0;
   out_5783246172519972355[257] = 0;
   out_5783246172519972355[258] = 0;
   out_5783246172519972355[259] = 0;
   out_5783246172519972355[260] = 0;
   out_5783246172519972355[261] = 0;
   out_5783246172519972355[262] = 0;
   out_5783246172519972355[263] = 0;
   out_5783246172519972355[264] = 1;
   out_5783246172519972355[265] = 0;
   out_5783246172519972355[266] = 0;
   out_5783246172519972355[267] = 0;
   out_5783246172519972355[268] = 0;
   out_5783246172519972355[269] = 0;
   out_5783246172519972355[270] = 0;
   out_5783246172519972355[271] = 0;
   out_5783246172519972355[272] = 0;
   out_5783246172519972355[273] = 0;
   out_5783246172519972355[274] = 0;
   out_5783246172519972355[275] = 0;
   out_5783246172519972355[276] = 0;
   out_5783246172519972355[277] = 0;
   out_5783246172519972355[278] = 0;
   out_5783246172519972355[279] = 0;
   out_5783246172519972355[280] = 0;
   out_5783246172519972355[281] = 0;
   out_5783246172519972355[282] = 0;
   out_5783246172519972355[283] = 0;
   out_5783246172519972355[284] = 0;
   out_5783246172519972355[285] = 0;
   out_5783246172519972355[286] = 1;
   out_5783246172519972355[287] = 0;
   out_5783246172519972355[288] = 0;
   out_5783246172519972355[289] = 0;
   out_5783246172519972355[290] = 0;
   out_5783246172519972355[291] = 0;
   out_5783246172519972355[292] = 0;
   out_5783246172519972355[293] = 0;
   out_5783246172519972355[294] = 0;
   out_5783246172519972355[295] = 0;
   out_5783246172519972355[296] = 0;
   out_5783246172519972355[297] = 0;
   out_5783246172519972355[298] = 0;
   out_5783246172519972355[299] = 0;
   out_5783246172519972355[300] = 0;
   out_5783246172519972355[301] = 0;
   out_5783246172519972355[302] = 0;
   out_5783246172519972355[303] = 0;
   out_5783246172519972355[304] = 0;
   out_5783246172519972355[305] = 0;
   out_5783246172519972355[306] = 0;
   out_5783246172519972355[307] = 0;
   out_5783246172519972355[308] = 1;
   out_5783246172519972355[309] = 0;
   out_5783246172519972355[310] = 0;
   out_5783246172519972355[311] = 0;
   out_5783246172519972355[312] = 0;
   out_5783246172519972355[313] = 0;
   out_5783246172519972355[314] = 0;
   out_5783246172519972355[315] = 0;
   out_5783246172519972355[316] = 0;
   out_5783246172519972355[317] = 0;
   out_5783246172519972355[318] = 0;
   out_5783246172519972355[319] = 0;
   out_5783246172519972355[320] = 0;
   out_5783246172519972355[321] = 0;
   out_5783246172519972355[322] = 0;
   out_5783246172519972355[323] = 0;
   out_5783246172519972355[324] = 0;
   out_5783246172519972355[325] = 0;
   out_5783246172519972355[326] = 0;
   out_5783246172519972355[327] = 0;
   out_5783246172519972355[328] = 0;
   out_5783246172519972355[329] = 0;
   out_5783246172519972355[330] = 1;
   out_5783246172519972355[331] = 0;
   out_5783246172519972355[332] = 0;
   out_5783246172519972355[333] = 0;
   out_5783246172519972355[334] = 0;
   out_5783246172519972355[335] = 0;
   out_5783246172519972355[336] = 0;
   out_5783246172519972355[337] = 0;
   out_5783246172519972355[338] = 0;
   out_5783246172519972355[339] = 0;
   out_5783246172519972355[340] = 0;
   out_5783246172519972355[341] = 0;
   out_5783246172519972355[342] = 0;
   out_5783246172519972355[343] = 0;
   out_5783246172519972355[344] = 0;
   out_5783246172519972355[345] = 0;
   out_5783246172519972355[346] = 0;
   out_5783246172519972355[347] = 0;
   out_5783246172519972355[348] = 0;
   out_5783246172519972355[349] = 0;
   out_5783246172519972355[350] = 0;
   out_5783246172519972355[351] = 0;
   out_5783246172519972355[352] = 1;
   out_5783246172519972355[353] = 0;
   out_5783246172519972355[354] = 0;
   out_5783246172519972355[355] = 0;
   out_5783246172519972355[356] = 0;
   out_5783246172519972355[357] = 0;
   out_5783246172519972355[358] = 0;
   out_5783246172519972355[359] = 0;
   out_5783246172519972355[360] = 0;
   out_5783246172519972355[361] = 0;
   out_5783246172519972355[362] = 0;
   out_5783246172519972355[363] = 0;
   out_5783246172519972355[364] = 0;
   out_5783246172519972355[365] = 0;
   out_5783246172519972355[366] = 0;
   out_5783246172519972355[367] = 0;
   out_5783246172519972355[368] = 0;
   out_5783246172519972355[369] = 0;
   out_5783246172519972355[370] = 0;
   out_5783246172519972355[371] = 0;
   out_5783246172519972355[372] = 0;
   out_5783246172519972355[373] = 0;
   out_5783246172519972355[374] = 1;
   out_5783246172519972355[375] = 0;
   out_5783246172519972355[376] = 0;
   out_5783246172519972355[377] = 0;
   out_5783246172519972355[378] = 0;
   out_5783246172519972355[379] = 0;
   out_5783246172519972355[380] = 0;
   out_5783246172519972355[381] = 0;
   out_5783246172519972355[382] = 0;
   out_5783246172519972355[383] = 0;
   out_5783246172519972355[384] = 0;
   out_5783246172519972355[385] = 0;
   out_5783246172519972355[386] = 0;
   out_5783246172519972355[387] = 0;
   out_5783246172519972355[388] = 0;
   out_5783246172519972355[389] = 0;
   out_5783246172519972355[390] = 0;
   out_5783246172519972355[391] = 0;
   out_5783246172519972355[392] = 0;
   out_5783246172519972355[393] = 0;
   out_5783246172519972355[394] = 0;
   out_5783246172519972355[395] = 0;
   out_5783246172519972355[396] = 1;
   out_5783246172519972355[397] = 0;
   out_5783246172519972355[398] = 0;
   out_5783246172519972355[399] = 0;
   out_5783246172519972355[400] = 0;
   out_5783246172519972355[401] = 0;
   out_5783246172519972355[402] = 0;
   out_5783246172519972355[403] = 0;
   out_5783246172519972355[404] = 0;
   out_5783246172519972355[405] = 0;
   out_5783246172519972355[406] = 0;
   out_5783246172519972355[407] = 0;
   out_5783246172519972355[408] = 0;
   out_5783246172519972355[409] = 0;
   out_5783246172519972355[410] = 0;
   out_5783246172519972355[411] = 0;
   out_5783246172519972355[412] = 0;
   out_5783246172519972355[413] = 0;
   out_5783246172519972355[414] = 0;
   out_5783246172519972355[415] = 0;
   out_5783246172519972355[416] = 0;
   out_5783246172519972355[417] = 0;
   out_5783246172519972355[418] = 1;
   out_5783246172519972355[419] = 0;
   out_5783246172519972355[420] = 0;
   out_5783246172519972355[421] = 0;
   out_5783246172519972355[422] = 0;
   out_5783246172519972355[423] = 0;
   out_5783246172519972355[424] = 0;
   out_5783246172519972355[425] = 0;
   out_5783246172519972355[426] = 0;
   out_5783246172519972355[427] = 0;
   out_5783246172519972355[428] = 0;
   out_5783246172519972355[429] = 0;
   out_5783246172519972355[430] = 0;
   out_5783246172519972355[431] = 0;
   out_5783246172519972355[432] = 0;
   out_5783246172519972355[433] = 0;
   out_5783246172519972355[434] = 0;
   out_5783246172519972355[435] = 0;
   out_5783246172519972355[436] = 0;
   out_5783246172519972355[437] = 0;
   out_5783246172519972355[438] = 0;
   out_5783246172519972355[439] = 0;
   out_5783246172519972355[440] = 1;
}
void h_4(double *state, double *unused, double *out_1739730110711406788) {
   out_1739730110711406788[0] = state[10] + state[13];
   out_1739730110711406788[1] = state[11] + state[14];
   out_1739730110711406788[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8906693804938659649) {
   out_8906693804938659649[0] = 0;
   out_8906693804938659649[1] = 0;
   out_8906693804938659649[2] = 0;
   out_8906693804938659649[3] = 0;
   out_8906693804938659649[4] = 0;
   out_8906693804938659649[5] = 0;
   out_8906693804938659649[6] = 0;
   out_8906693804938659649[7] = 0;
   out_8906693804938659649[8] = 0;
   out_8906693804938659649[9] = 0;
   out_8906693804938659649[10] = 1;
   out_8906693804938659649[11] = 0;
   out_8906693804938659649[12] = 0;
   out_8906693804938659649[13] = 1;
   out_8906693804938659649[14] = 0;
   out_8906693804938659649[15] = 0;
   out_8906693804938659649[16] = 0;
   out_8906693804938659649[17] = 0;
   out_8906693804938659649[18] = 0;
   out_8906693804938659649[19] = 0;
   out_8906693804938659649[20] = 0;
   out_8906693804938659649[21] = 0;
   out_8906693804938659649[22] = 0;
   out_8906693804938659649[23] = 0;
   out_8906693804938659649[24] = 0;
   out_8906693804938659649[25] = 0;
   out_8906693804938659649[26] = 0;
   out_8906693804938659649[27] = 0;
   out_8906693804938659649[28] = 0;
   out_8906693804938659649[29] = 0;
   out_8906693804938659649[30] = 0;
   out_8906693804938659649[31] = 0;
   out_8906693804938659649[32] = 0;
   out_8906693804938659649[33] = 1;
   out_8906693804938659649[34] = 0;
   out_8906693804938659649[35] = 0;
   out_8906693804938659649[36] = 1;
   out_8906693804938659649[37] = 0;
   out_8906693804938659649[38] = 0;
   out_8906693804938659649[39] = 0;
   out_8906693804938659649[40] = 0;
   out_8906693804938659649[41] = 0;
   out_8906693804938659649[42] = 0;
   out_8906693804938659649[43] = 0;
   out_8906693804938659649[44] = 0;
   out_8906693804938659649[45] = 0;
   out_8906693804938659649[46] = 0;
   out_8906693804938659649[47] = 0;
   out_8906693804938659649[48] = 0;
   out_8906693804938659649[49] = 0;
   out_8906693804938659649[50] = 0;
   out_8906693804938659649[51] = 0;
   out_8906693804938659649[52] = 0;
   out_8906693804938659649[53] = 0;
   out_8906693804938659649[54] = 0;
   out_8906693804938659649[55] = 0;
   out_8906693804938659649[56] = 1;
   out_8906693804938659649[57] = 0;
   out_8906693804938659649[58] = 0;
   out_8906693804938659649[59] = 1;
   out_8906693804938659649[60] = 0;
   out_8906693804938659649[61] = 0;
   out_8906693804938659649[62] = 0;
   out_8906693804938659649[63] = 0;
   out_8906693804938659649[64] = 0;
   out_8906693804938659649[65] = 0;
}
void h_9(double *state, double *unused, double *out_2550531612128447609) {
   out_2550531612128447609[0] = state[10];
   out_2550531612128447609[1] = state[11];
   out_2550531612128447609[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1619474869674212179) {
   out_1619474869674212179[0] = 0;
   out_1619474869674212179[1] = 0;
   out_1619474869674212179[2] = 0;
   out_1619474869674212179[3] = 0;
   out_1619474869674212179[4] = 0;
   out_1619474869674212179[5] = 0;
   out_1619474869674212179[6] = 0;
   out_1619474869674212179[7] = 0;
   out_1619474869674212179[8] = 0;
   out_1619474869674212179[9] = 0;
   out_1619474869674212179[10] = 1;
   out_1619474869674212179[11] = 0;
   out_1619474869674212179[12] = 0;
   out_1619474869674212179[13] = 0;
   out_1619474869674212179[14] = 0;
   out_1619474869674212179[15] = 0;
   out_1619474869674212179[16] = 0;
   out_1619474869674212179[17] = 0;
   out_1619474869674212179[18] = 0;
   out_1619474869674212179[19] = 0;
   out_1619474869674212179[20] = 0;
   out_1619474869674212179[21] = 0;
   out_1619474869674212179[22] = 0;
   out_1619474869674212179[23] = 0;
   out_1619474869674212179[24] = 0;
   out_1619474869674212179[25] = 0;
   out_1619474869674212179[26] = 0;
   out_1619474869674212179[27] = 0;
   out_1619474869674212179[28] = 0;
   out_1619474869674212179[29] = 0;
   out_1619474869674212179[30] = 0;
   out_1619474869674212179[31] = 0;
   out_1619474869674212179[32] = 0;
   out_1619474869674212179[33] = 1;
   out_1619474869674212179[34] = 0;
   out_1619474869674212179[35] = 0;
   out_1619474869674212179[36] = 0;
   out_1619474869674212179[37] = 0;
   out_1619474869674212179[38] = 0;
   out_1619474869674212179[39] = 0;
   out_1619474869674212179[40] = 0;
   out_1619474869674212179[41] = 0;
   out_1619474869674212179[42] = 0;
   out_1619474869674212179[43] = 0;
   out_1619474869674212179[44] = 0;
   out_1619474869674212179[45] = 0;
   out_1619474869674212179[46] = 0;
   out_1619474869674212179[47] = 0;
   out_1619474869674212179[48] = 0;
   out_1619474869674212179[49] = 0;
   out_1619474869674212179[50] = 0;
   out_1619474869674212179[51] = 0;
   out_1619474869674212179[52] = 0;
   out_1619474869674212179[53] = 0;
   out_1619474869674212179[54] = 0;
   out_1619474869674212179[55] = 0;
   out_1619474869674212179[56] = 1;
   out_1619474869674212179[57] = 0;
   out_1619474869674212179[58] = 0;
   out_1619474869674212179[59] = 0;
   out_1619474869674212179[60] = 0;
   out_1619474869674212179[61] = 0;
   out_1619474869674212179[62] = 0;
   out_1619474869674212179[63] = 0;
   out_1619474869674212179[64] = 0;
   out_1619474869674212179[65] = 0;
}
void h_10(double *state, double *unused, double *out_5268326731581656940) {
   out_5268326731581656940[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5268326731581656940[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5268326731581656940[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7205924830989342717) {
   out_7205924830989342717[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7205924830989342717[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7205924830989342717[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7205924830989342717[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7205924830989342717[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7205924830989342717[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7205924830989342717[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7205924830989342717[7] = 0;
   out_7205924830989342717[8] = 0;
   out_7205924830989342717[9] = 0;
   out_7205924830989342717[10] = 0;
   out_7205924830989342717[11] = 0;
   out_7205924830989342717[12] = 0;
   out_7205924830989342717[13] = 0;
   out_7205924830989342717[14] = 0;
   out_7205924830989342717[15] = 0;
   out_7205924830989342717[16] = 1;
   out_7205924830989342717[17] = 0;
   out_7205924830989342717[18] = 0;
   out_7205924830989342717[19] = 1;
   out_7205924830989342717[20] = 0;
   out_7205924830989342717[21] = 0;
   out_7205924830989342717[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7205924830989342717[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7205924830989342717[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7205924830989342717[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7205924830989342717[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7205924830989342717[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7205924830989342717[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7205924830989342717[29] = 0;
   out_7205924830989342717[30] = 0;
   out_7205924830989342717[31] = 0;
   out_7205924830989342717[32] = 0;
   out_7205924830989342717[33] = 0;
   out_7205924830989342717[34] = 0;
   out_7205924830989342717[35] = 0;
   out_7205924830989342717[36] = 0;
   out_7205924830989342717[37] = 0;
   out_7205924830989342717[38] = 0;
   out_7205924830989342717[39] = 1;
   out_7205924830989342717[40] = 0;
   out_7205924830989342717[41] = 0;
   out_7205924830989342717[42] = 1;
   out_7205924830989342717[43] = 0;
   out_7205924830989342717[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7205924830989342717[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7205924830989342717[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7205924830989342717[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7205924830989342717[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7205924830989342717[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7205924830989342717[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7205924830989342717[51] = 0;
   out_7205924830989342717[52] = 0;
   out_7205924830989342717[53] = 0;
   out_7205924830989342717[54] = 0;
   out_7205924830989342717[55] = 0;
   out_7205924830989342717[56] = 0;
   out_7205924830989342717[57] = 0;
   out_7205924830989342717[58] = 0;
   out_7205924830989342717[59] = 0;
   out_7205924830989342717[60] = 0;
   out_7205924830989342717[61] = 0;
   out_7205924830989342717[62] = 1;
   out_7205924830989342717[63] = 0;
   out_7205924830989342717[64] = 0;
   out_7205924830989342717[65] = 1;
}
void h_12(double *state, double *unused, double *out_4913277232142462561) {
   out_4913277232142462561[0] = state[0];
   out_4913277232142462561[1] = state[1];
   out_4913277232142462561[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1239565491256209157) {
   out_1239565491256209157[0] = 1;
   out_1239565491256209157[1] = 0;
   out_1239565491256209157[2] = 0;
   out_1239565491256209157[3] = 0;
   out_1239565491256209157[4] = 0;
   out_1239565491256209157[5] = 0;
   out_1239565491256209157[6] = 0;
   out_1239565491256209157[7] = 0;
   out_1239565491256209157[8] = 0;
   out_1239565491256209157[9] = 0;
   out_1239565491256209157[10] = 0;
   out_1239565491256209157[11] = 0;
   out_1239565491256209157[12] = 0;
   out_1239565491256209157[13] = 0;
   out_1239565491256209157[14] = 0;
   out_1239565491256209157[15] = 0;
   out_1239565491256209157[16] = 0;
   out_1239565491256209157[17] = 0;
   out_1239565491256209157[18] = 0;
   out_1239565491256209157[19] = 0;
   out_1239565491256209157[20] = 0;
   out_1239565491256209157[21] = 0;
   out_1239565491256209157[22] = 0;
   out_1239565491256209157[23] = 1;
   out_1239565491256209157[24] = 0;
   out_1239565491256209157[25] = 0;
   out_1239565491256209157[26] = 0;
   out_1239565491256209157[27] = 0;
   out_1239565491256209157[28] = 0;
   out_1239565491256209157[29] = 0;
   out_1239565491256209157[30] = 0;
   out_1239565491256209157[31] = 0;
   out_1239565491256209157[32] = 0;
   out_1239565491256209157[33] = 0;
   out_1239565491256209157[34] = 0;
   out_1239565491256209157[35] = 0;
   out_1239565491256209157[36] = 0;
   out_1239565491256209157[37] = 0;
   out_1239565491256209157[38] = 0;
   out_1239565491256209157[39] = 0;
   out_1239565491256209157[40] = 0;
   out_1239565491256209157[41] = 0;
   out_1239565491256209157[42] = 0;
   out_1239565491256209157[43] = 0;
   out_1239565491256209157[44] = 0;
   out_1239565491256209157[45] = 0;
   out_1239565491256209157[46] = 1;
   out_1239565491256209157[47] = 0;
   out_1239565491256209157[48] = 0;
   out_1239565491256209157[49] = 0;
   out_1239565491256209157[50] = 0;
   out_1239565491256209157[51] = 0;
   out_1239565491256209157[52] = 0;
   out_1239565491256209157[53] = 0;
   out_1239565491256209157[54] = 0;
   out_1239565491256209157[55] = 0;
   out_1239565491256209157[56] = 0;
   out_1239565491256209157[57] = 0;
   out_1239565491256209157[58] = 0;
   out_1239565491256209157[59] = 0;
   out_1239565491256209157[60] = 0;
   out_1239565491256209157[61] = 0;
   out_1239565491256209157[62] = 0;
   out_1239565491256209157[63] = 0;
   out_1239565491256209157[64] = 0;
   out_1239565491256209157[65] = 0;
}
void h_35(double *state, double *unused, double *out_193399748642830307) {
   out_193399748642830307[0] = state[7];
   out_193399748642830307[1] = state[8];
   out_193399748642830307[2] = state[9];
}
void H_35(double *state, double *unused, double *out_5540031747566052273) {
   out_5540031747566052273[0] = 0;
   out_5540031747566052273[1] = 0;
   out_5540031747566052273[2] = 0;
   out_5540031747566052273[3] = 0;
   out_5540031747566052273[4] = 0;
   out_5540031747566052273[5] = 0;
   out_5540031747566052273[6] = 0;
   out_5540031747566052273[7] = 1;
   out_5540031747566052273[8] = 0;
   out_5540031747566052273[9] = 0;
   out_5540031747566052273[10] = 0;
   out_5540031747566052273[11] = 0;
   out_5540031747566052273[12] = 0;
   out_5540031747566052273[13] = 0;
   out_5540031747566052273[14] = 0;
   out_5540031747566052273[15] = 0;
   out_5540031747566052273[16] = 0;
   out_5540031747566052273[17] = 0;
   out_5540031747566052273[18] = 0;
   out_5540031747566052273[19] = 0;
   out_5540031747566052273[20] = 0;
   out_5540031747566052273[21] = 0;
   out_5540031747566052273[22] = 0;
   out_5540031747566052273[23] = 0;
   out_5540031747566052273[24] = 0;
   out_5540031747566052273[25] = 0;
   out_5540031747566052273[26] = 0;
   out_5540031747566052273[27] = 0;
   out_5540031747566052273[28] = 0;
   out_5540031747566052273[29] = 0;
   out_5540031747566052273[30] = 1;
   out_5540031747566052273[31] = 0;
   out_5540031747566052273[32] = 0;
   out_5540031747566052273[33] = 0;
   out_5540031747566052273[34] = 0;
   out_5540031747566052273[35] = 0;
   out_5540031747566052273[36] = 0;
   out_5540031747566052273[37] = 0;
   out_5540031747566052273[38] = 0;
   out_5540031747566052273[39] = 0;
   out_5540031747566052273[40] = 0;
   out_5540031747566052273[41] = 0;
   out_5540031747566052273[42] = 0;
   out_5540031747566052273[43] = 0;
   out_5540031747566052273[44] = 0;
   out_5540031747566052273[45] = 0;
   out_5540031747566052273[46] = 0;
   out_5540031747566052273[47] = 0;
   out_5540031747566052273[48] = 0;
   out_5540031747566052273[49] = 0;
   out_5540031747566052273[50] = 0;
   out_5540031747566052273[51] = 0;
   out_5540031747566052273[52] = 0;
   out_5540031747566052273[53] = 1;
   out_5540031747566052273[54] = 0;
   out_5540031747566052273[55] = 0;
   out_5540031747566052273[56] = 0;
   out_5540031747566052273[57] = 0;
   out_5540031747566052273[58] = 0;
   out_5540031747566052273[59] = 0;
   out_5540031747566052273[60] = 0;
   out_5540031747566052273[61] = 0;
   out_5540031747566052273[62] = 0;
   out_5540031747566052273[63] = 0;
   out_5540031747566052273[64] = 0;
   out_5540031747566052273[65] = 0;
}
void h_32(double *state, double *unused, double *out_5857892527151112579) {
   out_5857892527151112579[0] = state[3];
   out_5857892527151112579[1] = state[4];
   out_5857892527151112579[2] = state[5];
   out_5857892527151112579[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4289655705487222145) {
   out_4289655705487222145[0] = 0;
   out_4289655705487222145[1] = 0;
   out_4289655705487222145[2] = 0;
   out_4289655705487222145[3] = 1;
   out_4289655705487222145[4] = 0;
   out_4289655705487222145[5] = 0;
   out_4289655705487222145[6] = 0;
   out_4289655705487222145[7] = 0;
   out_4289655705487222145[8] = 0;
   out_4289655705487222145[9] = 0;
   out_4289655705487222145[10] = 0;
   out_4289655705487222145[11] = 0;
   out_4289655705487222145[12] = 0;
   out_4289655705487222145[13] = 0;
   out_4289655705487222145[14] = 0;
   out_4289655705487222145[15] = 0;
   out_4289655705487222145[16] = 0;
   out_4289655705487222145[17] = 0;
   out_4289655705487222145[18] = 0;
   out_4289655705487222145[19] = 0;
   out_4289655705487222145[20] = 0;
   out_4289655705487222145[21] = 0;
   out_4289655705487222145[22] = 0;
   out_4289655705487222145[23] = 0;
   out_4289655705487222145[24] = 0;
   out_4289655705487222145[25] = 0;
   out_4289655705487222145[26] = 1;
   out_4289655705487222145[27] = 0;
   out_4289655705487222145[28] = 0;
   out_4289655705487222145[29] = 0;
   out_4289655705487222145[30] = 0;
   out_4289655705487222145[31] = 0;
   out_4289655705487222145[32] = 0;
   out_4289655705487222145[33] = 0;
   out_4289655705487222145[34] = 0;
   out_4289655705487222145[35] = 0;
   out_4289655705487222145[36] = 0;
   out_4289655705487222145[37] = 0;
   out_4289655705487222145[38] = 0;
   out_4289655705487222145[39] = 0;
   out_4289655705487222145[40] = 0;
   out_4289655705487222145[41] = 0;
   out_4289655705487222145[42] = 0;
   out_4289655705487222145[43] = 0;
   out_4289655705487222145[44] = 0;
   out_4289655705487222145[45] = 0;
   out_4289655705487222145[46] = 0;
   out_4289655705487222145[47] = 0;
   out_4289655705487222145[48] = 0;
   out_4289655705487222145[49] = 1;
   out_4289655705487222145[50] = 0;
   out_4289655705487222145[51] = 0;
   out_4289655705487222145[52] = 0;
   out_4289655705487222145[53] = 0;
   out_4289655705487222145[54] = 0;
   out_4289655705487222145[55] = 0;
   out_4289655705487222145[56] = 0;
   out_4289655705487222145[57] = 0;
   out_4289655705487222145[58] = 0;
   out_4289655705487222145[59] = 0;
   out_4289655705487222145[60] = 0;
   out_4289655705487222145[61] = 0;
   out_4289655705487222145[62] = 0;
   out_4289655705487222145[63] = 0;
   out_4289655705487222145[64] = 0;
   out_4289655705487222145[65] = 0;
   out_4289655705487222145[66] = 0;
   out_4289655705487222145[67] = 0;
   out_4289655705487222145[68] = 0;
   out_4289655705487222145[69] = 0;
   out_4289655705487222145[70] = 0;
   out_4289655705487222145[71] = 0;
   out_4289655705487222145[72] = 1;
   out_4289655705487222145[73] = 0;
   out_4289655705487222145[74] = 0;
   out_4289655705487222145[75] = 0;
   out_4289655705487222145[76] = 0;
   out_4289655705487222145[77] = 0;
   out_4289655705487222145[78] = 0;
   out_4289655705487222145[79] = 0;
   out_4289655705487222145[80] = 0;
   out_4289655705487222145[81] = 0;
   out_4289655705487222145[82] = 0;
   out_4289655705487222145[83] = 0;
   out_4289655705487222145[84] = 0;
   out_4289655705487222145[85] = 0;
   out_4289655705487222145[86] = 0;
   out_4289655705487222145[87] = 0;
}
void h_13(double *state, double *unused, double *out_609001317878703207) {
   out_609001317878703207[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_609001317878703207[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_609001317878703207[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6566724207701057806) {
   out_6566724207701057806[0] = 0;
   out_6566724207701057806[1] = 0;
   out_6566724207701057806[2] = 0;
   out_6566724207701057806[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6566724207701057806[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6566724207701057806[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6566724207701057806[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6566724207701057806[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6566724207701057806[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6566724207701057806[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6566724207701057806[10] = 0;
   out_6566724207701057806[11] = 0;
   out_6566724207701057806[12] = 0;
   out_6566724207701057806[13] = 0;
   out_6566724207701057806[14] = 0;
   out_6566724207701057806[15] = 0;
   out_6566724207701057806[16] = 0;
   out_6566724207701057806[17] = 0;
   out_6566724207701057806[18] = 0;
   out_6566724207701057806[19] = 0;
   out_6566724207701057806[20] = 0;
   out_6566724207701057806[21] = 0;
   out_6566724207701057806[22] = 0;
   out_6566724207701057806[23] = 0;
   out_6566724207701057806[24] = 0;
   out_6566724207701057806[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6566724207701057806[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6566724207701057806[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6566724207701057806[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6566724207701057806[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6566724207701057806[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6566724207701057806[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6566724207701057806[32] = 0;
   out_6566724207701057806[33] = 0;
   out_6566724207701057806[34] = 0;
   out_6566724207701057806[35] = 0;
   out_6566724207701057806[36] = 0;
   out_6566724207701057806[37] = 0;
   out_6566724207701057806[38] = 0;
   out_6566724207701057806[39] = 0;
   out_6566724207701057806[40] = 0;
   out_6566724207701057806[41] = 0;
   out_6566724207701057806[42] = 0;
   out_6566724207701057806[43] = 0;
   out_6566724207701057806[44] = 0;
   out_6566724207701057806[45] = 0;
   out_6566724207701057806[46] = 0;
   out_6566724207701057806[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6566724207701057806[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6566724207701057806[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6566724207701057806[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6566724207701057806[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6566724207701057806[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6566724207701057806[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6566724207701057806[54] = 0;
   out_6566724207701057806[55] = 0;
   out_6566724207701057806[56] = 0;
   out_6566724207701057806[57] = 0;
   out_6566724207701057806[58] = 0;
   out_6566724207701057806[59] = 0;
   out_6566724207701057806[60] = 0;
   out_6566724207701057806[61] = 0;
   out_6566724207701057806[62] = 0;
   out_6566724207701057806[63] = 0;
   out_6566724207701057806[64] = 0;
   out_6566724207701057806[65] = 0;
}
void h_14(double *state, double *unused, double *out_2550531612128447609) {
   out_2550531612128447609[0] = state[10];
   out_2550531612128447609[1] = state[11];
   out_2550531612128447609[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1619474869674212179) {
   out_1619474869674212179[0] = 0;
   out_1619474869674212179[1] = 0;
   out_1619474869674212179[2] = 0;
   out_1619474869674212179[3] = 0;
   out_1619474869674212179[4] = 0;
   out_1619474869674212179[5] = 0;
   out_1619474869674212179[6] = 0;
   out_1619474869674212179[7] = 0;
   out_1619474869674212179[8] = 0;
   out_1619474869674212179[9] = 0;
   out_1619474869674212179[10] = 1;
   out_1619474869674212179[11] = 0;
   out_1619474869674212179[12] = 0;
   out_1619474869674212179[13] = 0;
   out_1619474869674212179[14] = 0;
   out_1619474869674212179[15] = 0;
   out_1619474869674212179[16] = 0;
   out_1619474869674212179[17] = 0;
   out_1619474869674212179[18] = 0;
   out_1619474869674212179[19] = 0;
   out_1619474869674212179[20] = 0;
   out_1619474869674212179[21] = 0;
   out_1619474869674212179[22] = 0;
   out_1619474869674212179[23] = 0;
   out_1619474869674212179[24] = 0;
   out_1619474869674212179[25] = 0;
   out_1619474869674212179[26] = 0;
   out_1619474869674212179[27] = 0;
   out_1619474869674212179[28] = 0;
   out_1619474869674212179[29] = 0;
   out_1619474869674212179[30] = 0;
   out_1619474869674212179[31] = 0;
   out_1619474869674212179[32] = 0;
   out_1619474869674212179[33] = 1;
   out_1619474869674212179[34] = 0;
   out_1619474869674212179[35] = 0;
   out_1619474869674212179[36] = 0;
   out_1619474869674212179[37] = 0;
   out_1619474869674212179[38] = 0;
   out_1619474869674212179[39] = 0;
   out_1619474869674212179[40] = 0;
   out_1619474869674212179[41] = 0;
   out_1619474869674212179[42] = 0;
   out_1619474869674212179[43] = 0;
   out_1619474869674212179[44] = 0;
   out_1619474869674212179[45] = 0;
   out_1619474869674212179[46] = 0;
   out_1619474869674212179[47] = 0;
   out_1619474869674212179[48] = 0;
   out_1619474869674212179[49] = 0;
   out_1619474869674212179[50] = 0;
   out_1619474869674212179[51] = 0;
   out_1619474869674212179[52] = 0;
   out_1619474869674212179[53] = 0;
   out_1619474869674212179[54] = 0;
   out_1619474869674212179[55] = 0;
   out_1619474869674212179[56] = 1;
   out_1619474869674212179[57] = 0;
   out_1619474869674212179[58] = 0;
   out_1619474869674212179[59] = 0;
   out_1619474869674212179[60] = 0;
   out_1619474869674212179[61] = 0;
   out_1619474869674212179[62] = 0;
   out_1619474869674212179[63] = 0;
   out_1619474869674212179[64] = 0;
   out_1619474869674212179[65] = 0;
}
void h_33(double *state, double *unused, double *out_1905300604682260553) {
   out_1905300604682260553[0] = state[16];
   out_1905300604682260553[1] = state[17];
   out_1905300604682260553[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4656554545707662156) {
   out_4656554545707662156[0] = 0;
   out_4656554545707662156[1] = 0;
   out_4656554545707662156[2] = 0;
   out_4656554545707662156[3] = 0;
   out_4656554545707662156[4] = 0;
   out_4656554545707662156[5] = 0;
   out_4656554545707662156[6] = 0;
   out_4656554545707662156[7] = 0;
   out_4656554545707662156[8] = 0;
   out_4656554545707662156[9] = 0;
   out_4656554545707662156[10] = 0;
   out_4656554545707662156[11] = 0;
   out_4656554545707662156[12] = 0;
   out_4656554545707662156[13] = 0;
   out_4656554545707662156[14] = 0;
   out_4656554545707662156[15] = 0;
   out_4656554545707662156[16] = 1;
   out_4656554545707662156[17] = 0;
   out_4656554545707662156[18] = 0;
   out_4656554545707662156[19] = 0;
   out_4656554545707662156[20] = 0;
   out_4656554545707662156[21] = 0;
   out_4656554545707662156[22] = 0;
   out_4656554545707662156[23] = 0;
   out_4656554545707662156[24] = 0;
   out_4656554545707662156[25] = 0;
   out_4656554545707662156[26] = 0;
   out_4656554545707662156[27] = 0;
   out_4656554545707662156[28] = 0;
   out_4656554545707662156[29] = 0;
   out_4656554545707662156[30] = 0;
   out_4656554545707662156[31] = 0;
   out_4656554545707662156[32] = 0;
   out_4656554545707662156[33] = 0;
   out_4656554545707662156[34] = 0;
   out_4656554545707662156[35] = 0;
   out_4656554545707662156[36] = 0;
   out_4656554545707662156[37] = 0;
   out_4656554545707662156[38] = 0;
   out_4656554545707662156[39] = 1;
   out_4656554545707662156[40] = 0;
   out_4656554545707662156[41] = 0;
   out_4656554545707662156[42] = 0;
   out_4656554545707662156[43] = 0;
   out_4656554545707662156[44] = 0;
   out_4656554545707662156[45] = 0;
   out_4656554545707662156[46] = 0;
   out_4656554545707662156[47] = 0;
   out_4656554545707662156[48] = 0;
   out_4656554545707662156[49] = 0;
   out_4656554545707662156[50] = 0;
   out_4656554545707662156[51] = 0;
   out_4656554545707662156[52] = 0;
   out_4656554545707662156[53] = 0;
   out_4656554545707662156[54] = 0;
   out_4656554545707662156[55] = 0;
   out_4656554545707662156[56] = 0;
   out_4656554545707662156[57] = 0;
   out_4656554545707662156[58] = 0;
   out_4656554545707662156[59] = 0;
   out_4656554545707662156[60] = 0;
   out_4656554545707662156[61] = 0;
   out_4656554545707662156[62] = 1;
   out_4656554545707662156[63] = 0;
   out_4656554545707662156[64] = 0;
   out_4656554545707662156[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5643343481595750987) {
  H(in_vec, out_5643343481595750987);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7981398626472992736) {
  err_fun(nom_x, delta_x, out_7981398626472992736);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_296744906813650483) {
  inv_err_fun(nom_x, true_x, out_296744906813650483);
}
void live_H_mod_fun(double *state, double *out_8170742335209521410) {
  H_mod_fun(state, out_8170742335209521410);
}
void live_f_fun(double *state, double dt, double *out_594400784426027615) {
  f_fun(state,  dt, out_594400784426027615);
}
void live_F_fun(double *state, double dt, double *out_5783246172519972355) {
  F_fun(state,  dt, out_5783246172519972355);
}
void live_h_4(double *state, double *unused, double *out_1739730110711406788) {
  h_4(state, unused, out_1739730110711406788);
}
void live_H_4(double *state, double *unused, double *out_8906693804938659649) {
  H_4(state, unused, out_8906693804938659649);
}
void live_h_9(double *state, double *unused, double *out_2550531612128447609) {
  h_9(state, unused, out_2550531612128447609);
}
void live_H_9(double *state, double *unused, double *out_1619474869674212179) {
  H_9(state, unused, out_1619474869674212179);
}
void live_h_10(double *state, double *unused, double *out_5268326731581656940) {
  h_10(state, unused, out_5268326731581656940);
}
void live_H_10(double *state, double *unused, double *out_7205924830989342717) {
  H_10(state, unused, out_7205924830989342717);
}
void live_h_12(double *state, double *unused, double *out_4913277232142462561) {
  h_12(state, unused, out_4913277232142462561);
}
void live_H_12(double *state, double *unused, double *out_1239565491256209157) {
  H_12(state, unused, out_1239565491256209157);
}
void live_h_35(double *state, double *unused, double *out_193399748642830307) {
  h_35(state, unused, out_193399748642830307);
}
void live_H_35(double *state, double *unused, double *out_5540031747566052273) {
  H_35(state, unused, out_5540031747566052273);
}
void live_h_32(double *state, double *unused, double *out_5857892527151112579) {
  h_32(state, unused, out_5857892527151112579);
}
void live_H_32(double *state, double *unused, double *out_4289655705487222145) {
  H_32(state, unused, out_4289655705487222145);
}
void live_h_13(double *state, double *unused, double *out_609001317878703207) {
  h_13(state, unused, out_609001317878703207);
}
void live_H_13(double *state, double *unused, double *out_6566724207701057806) {
  H_13(state, unused, out_6566724207701057806);
}
void live_h_14(double *state, double *unused, double *out_2550531612128447609) {
  h_14(state, unused, out_2550531612128447609);
}
void live_H_14(double *state, double *unused, double *out_1619474869674212179) {
  H_14(state, unused, out_1619474869674212179);
}
void live_h_33(double *state, double *unused, double *out_1905300604682260553) {
  h_33(state, unused, out_1905300604682260553);
}
void live_H_33(double *state, double *unused, double *out_4656554545707662156) {
  H_33(state, unused, out_4656554545707662156);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
