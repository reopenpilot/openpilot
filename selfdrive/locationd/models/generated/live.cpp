#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5099758661401554901) {
   out_5099758661401554901[0] = 0;
   out_5099758661401554901[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5099758661401554901[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5099758661401554901[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5099758661401554901[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5099758661401554901[5] = -sin(in_vec[1]);
   out_5099758661401554901[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5099758661401554901[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5099758661401554901[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5099758661401554901[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5099758661401554901[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5099758661401554901[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5099758661401554901[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5099758661401554901[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5099758661401554901[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5099758661401554901[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5099758661401554901[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5099758661401554901[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7711725958047008630) {
   out_7711725958047008630[0] = delta_x[0] + nom_x[0];
   out_7711725958047008630[1] = delta_x[1] + nom_x[1];
   out_7711725958047008630[2] = delta_x[2] + nom_x[2];
   out_7711725958047008630[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7711725958047008630[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7711725958047008630[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7711725958047008630[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7711725958047008630[7] = delta_x[6] + nom_x[7];
   out_7711725958047008630[8] = delta_x[7] + nom_x[8];
   out_7711725958047008630[9] = delta_x[8] + nom_x[9];
   out_7711725958047008630[10] = delta_x[9] + nom_x[10];
   out_7711725958047008630[11] = delta_x[10] + nom_x[11];
   out_7711725958047008630[12] = delta_x[11] + nom_x[12];
   out_7711725958047008630[13] = delta_x[12] + nom_x[13];
   out_7711725958047008630[14] = delta_x[13] + nom_x[14];
   out_7711725958047008630[15] = delta_x[14] + nom_x[15];
   out_7711725958047008630[16] = delta_x[15] + nom_x[16];
   out_7711725958047008630[17] = delta_x[16] + nom_x[17];
   out_7711725958047008630[18] = delta_x[17] + nom_x[18];
   out_7711725958047008630[19] = delta_x[18] + nom_x[19];
   out_7711725958047008630[20] = delta_x[19] + nom_x[20];
   out_7711725958047008630[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3807385099460836642) {
   out_3807385099460836642[0] = -nom_x[0] + true_x[0];
   out_3807385099460836642[1] = -nom_x[1] + true_x[1];
   out_3807385099460836642[2] = -nom_x[2] + true_x[2];
   out_3807385099460836642[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3807385099460836642[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3807385099460836642[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3807385099460836642[6] = -nom_x[7] + true_x[7];
   out_3807385099460836642[7] = -nom_x[8] + true_x[8];
   out_3807385099460836642[8] = -nom_x[9] + true_x[9];
   out_3807385099460836642[9] = -nom_x[10] + true_x[10];
   out_3807385099460836642[10] = -nom_x[11] + true_x[11];
   out_3807385099460836642[11] = -nom_x[12] + true_x[12];
   out_3807385099460836642[12] = -nom_x[13] + true_x[13];
   out_3807385099460836642[13] = -nom_x[14] + true_x[14];
   out_3807385099460836642[14] = -nom_x[15] + true_x[15];
   out_3807385099460836642[15] = -nom_x[16] + true_x[16];
   out_3807385099460836642[16] = -nom_x[17] + true_x[17];
   out_3807385099460836642[17] = -nom_x[18] + true_x[18];
   out_3807385099460836642[18] = -nom_x[19] + true_x[19];
   out_3807385099460836642[19] = -nom_x[20] + true_x[20];
   out_3807385099460836642[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4440383381032052806) {
   out_4440383381032052806[0] = 1.0;
   out_4440383381032052806[1] = 0;
   out_4440383381032052806[2] = 0;
   out_4440383381032052806[3] = 0;
   out_4440383381032052806[4] = 0;
   out_4440383381032052806[5] = 0;
   out_4440383381032052806[6] = 0;
   out_4440383381032052806[7] = 0;
   out_4440383381032052806[8] = 0;
   out_4440383381032052806[9] = 0;
   out_4440383381032052806[10] = 0;
   out_4440383381032052806[11] = 0;
   out_4440383381032052806[12] = 0;
   out_4440383381032052806[13] = 0;
   out_4440383381032052806[14] = 0;
   out_4440383381032052806[15] = 0;
   out_4440383381032052806[16] = 0;
   out_4440383381032052806[17] = 0;
   out_4440383381032052806[18] = 0;
   out_4440383381032052806[19] = 0;
   out_4440383381032052806[20] = 0;
   out_4440383381032052806[21] = 0;
   out_4440383381032052806[22] = 1.0;
   out_4440383381032052806[23] = 0;
   out_4440383381032052806[24] = 0;
   out_4440383381032052806[25] = 0;
   out_4440383381032052806[26] = 0;
   out_4440383381032052806[27] = 0;
   out_4440383381032052806[28] = 0;
   out_4440383381032052806[29] = 0;
   out_4440383381032052806[30] = 0;
   out_4440383381032052806[31] = 0;
   out_4440383381032052806[32] = 0;
   out_4440383381032052806[33] = 0;
   out_4440383381032052806[34] = 0;
   out_4440383381032052806[35] = 0;
   out_4440383381032052806[36] = 0;
   out_4440383381032052806[37] = 0;
   out_4440383381032052806[38] = 0;
   out_4440383381032052806[39] = 0;
   out_4440383381032052806[40] = 0;
   out_4440383381032052806[41] = 0;
   out_4440383381032052806[42] = 0;
   out_4440383381032052806[43] = 0;
   out_4440383381032052806[44] = 1.0;
   out_4440383381032052806[45] = 0;
   out_4440383381032052806[46] = 0;
   out_4440383381032052806[47] = 0;
   out_4440383381032052806[48] = 0;
   out_4440383381032052806[49] = 0;
   out_4440383381032052806[50] = 0;
   out_4440383381032052806[51] = 0;
   out_4440383381032052806[52] = 0;
   out_4440383381032052806[53] = 0;
   out_4440383381032052806[54] = 0;
   out_4440383381032052806[55] = 0;
   out_4440383381032052806[56] = 0;
   out_4440383381032052806[57] = 0;
   out_4440383381032052806[58] = 0;
   out_4440383381032052806[59] = 0;
   out_4440383381032052806[60] = 0;
   out_4440383381032052806[61] = 0;
   out_4440383381032052806[62] = 0;
   out_4440383381032052806[63] = 0;
   out_4440383381032052806[64] = 0;
   out_4440383381032052806[65] = 0;
   out_4440383381032052806[66] = -0.5*state[4];
   out_4440383381032052806[67] = -0.5*state[5];
   out_4440383381032052806[68] = -0.5*state[6];
   out_4440383381032052806[69] = 0;
   out_4440383381032052806[70] = 0;
   out_4440383381032052806[71] = 0;
   out_4440383381032052806[72] = 0;
   out_4440383381032052806[73] = 0;
   out_4440383381032052806[74] = 0;
   out_4440383381032052806[75] = 0;
   out_4440383381032052806[76] = 0;
   out_4440383381032052806[77] = 0;
   out_4440383381032052806[78] = 0;
   out_4440383381032052806[79] = 0;
   out_4440383381032052806[80] = 0;
   out_4440383381032052806[81] = 0;
   out_4440383381032052806[82] = 0;
   out_4440383381032052806[83] = 0;
   out_4440383381032052806[84] = 0;
   out_4440383381032052806[85] = 0;
   out_4440383381032052806[86] = 0;
   out_4440383381032052806[87] = 0.5*state[3];
   out_4440383381032052806[88] = 0.5*state[6];
   out_4440383381032052806[89] = -0.5*state[5];
   out_4440383381032052806[90] = 0;
   out_4440383381032052806[91] = 0;
   out_4440383381032052806[92] = 0;
   out_4440383381032052806[93] = 0;
   out_4440383381032052806[94] = 0;
   out_4440383381032052806[95] = 0;
   out_4440383381032052806[96] = 0;
   out_4440383381032052806[97] = 0;
   out_4440383381032052806[98] = 0;
   out_4440383381032052806[99] = 0;
   out_4440383381032052806[100] = 0;
   out_4440383381032052806[101] = 0;
   out_4440383381032052806[102] = 0;
   out_4440383381032052806[103] = 0;
   out_4440383381032052806[104] = 0;
   out_4440383381032052806[105] = 0;
   out_4440383381032052806[106] = 0;
   out_4440383381032052806[107] = 0;
   out_4440383381032052806[108] = -0.5*state[6];
   out_4440383381032052806[109] = 0.5*state[3];
   out_4440383381032052806[110] = 0.5*state[4];
   out_4440383381032052806[111] = 0;
   out_4440383381032052806[112] = 0;
   out_4440383381032052806[113] = 0;
   out_4440383381032052806[114] = 0;
   out_4440383381032052806[115] = 0;
   out_4440383381032052806[116] = 0;
   out_4440383381032052806[117] = 0;
   out_4440383381032052806[118] = 0;
   out_4440383381032052806[119] = 0;
   out_4440383381032052806[120] = 0;
   out_4440383381032052806[121] = 0;
   out_4440383381032052806[122] = 0;
   out_4440383381032052806[123] = 0;
   out_4440383381032052806[124] = 0;
   out_4440383381032052806[125] = 0;
   out_4440383381032052806[126] = 0;
   out_4440383381032052806[127] = 0;
   out_4440383381032052806[128] = 0;
   out_4440383381032052806[129] = 0.5*state[5];
   out_4440383381032052806[130] = -0.5*state[4];
   out_4440383381032052806[131] = 0.5*state[3];
   out_4440383381032052806[132] = 0;
   out_4440383381032052806[133] = 0;
   out_4440383381032052806[134] = 0;
   out_4440383381032052806[135] = 0;
   out_4440383381032052806[136] = 0;
   out_4440383381032052806[137] = 0;
   out_4440383381032052806[138] = 0;
   out_4440383381032052806[139] = 0;
   out_4440383381032052806[140] = 0;
   out_4440383381032052806[141] = 0;
   out_4440383381032052806[142] = 0;
   out_4440383381032052806[143] = 0;
   out_4440383381032052806[144] = 0;
   out_4440383381032052806[145] = 0;
   out_4440383381032052806[146] = 0;
   out_4440383381032052806[147] = 0;
   out_4440383381032052806[148] = 0;
   out_4440383381032052806[149] = 0;
   out_4440383381032052806[150] = 0;
   out_4440383381032052806[151] = 0;
   out_4440383381032052806[152] = 0;
   out_4440383381032052806[153] = 1.0;
   out_4440383381032052806[154] = 0;
   out_4440383381032052806[155] = 0;
   out_4440383381032052806[156] = 0;
   out_4440383381032052806[157] = 0;
   out_4440383381032052806[158] = 0;
   out_4440383381032052806[159] = 0;
   out_4440383381032052806[160] = 0;
   out_4440383381032052806[161] = 0;
   out_4440383381032052806[162] = 0;
   out_4440383381032052806[163] = 0;
   out_4440383381032052806[164] = 0;
   out_4440383381032052806[165] = 0;
   out_4440383381032052806[166] = 0;
   out_4440383381032052806[167] = 0;
   out_4440383381032052806[168] = 0;
   out_4440383381032052806[169] = 0;
   out_4440383381032052806[170] = 0;
   out_4440383381032052806[171] = 0;
   out_4440383381032052806[172] = 0;
   out_4440383381032052806[173] = 0;
   out_4440383381032052806[174] = 0;
   out_4440383381032052806[175] = 1.0;
   out_4440383381032052806[176] = 0;
   out_4440383381032052806[177] = 0;
   out_4440383381032052806[178] = 0;
   out_4440383381032052806[179] = 0;
   out_4440383381032052806[180] = 0;
   out_4440383381032052806[181] = 0;
   out_4440383381032052806[182] = 0;
   out_4440383381032052806[183] = 0;
   out_4440383381032052806[184] = 0;
   out_4440383381032052806[185] = 0;
   out_4440383381032052806[186] = 0;
   out_4440383381032052806[187] = 0;
   out_4440383381032052806[188] = 0;
   out_4440383381032052806[189] = 0;
   out_4440383381032052806[190] = 0;
   out_4440383381032052806[191] = 0;
   out_4440383381032052806[192] = 0;
   out_4440383381032052806[193] = 0;
   out_4440383381032052806[194] = 0;
   out_4440383381032052806[195] = 0;
   out_4440383381032052806[196] = 0;
   out_4440383381032052806[197] = 1.0;
   out_4440383381032052806[198] = 0;
   out_4440383381032052806[199] = 0;
   out_4440383381032052806[200] = 0;
   out_4440383381032052806[201] = 0;
   out_4440383381032052806[202] = 0;
   out_4440383381032052806[203] = 0;
   out_4440383381032052806[204] = 0;
   out_4440383381032052806[205] = 0;
   out_4440383381032052806[206] = 0;
   out_4440383381032052806[207] = 0;
   out_4440383381032052806[208] = 0;
   out_4440383381032052806[209] = 0;
   out_4440383381032052806[210] = 0;
   out_4440383381032052806[211] = 0;
   out_4440383381032052806[212] = 0;
   out_4440383381032052806[213] = 0;
   out_4440383381032052806[214] = 0;
   out_4440383381032052806[215] = 0;
   out_4440383381032052806[216] = 0;
   out_4440383381032052806[217] = 0;
   out_4440383381032052806[218] = 0;
   out_4440383381032052806[219] = 1.0;
   out_4440383381032052806[220] = 0;
   out_4440383381032052806[221] = 0;
   out_4440383381032052806[222] = 0;
   out_4440383381032052806[223] = 0;
   out_4440383381032052806[224] = 0;
   out_4440383381032052806[225] = 0;
   out_4440383381032052806[226] = 0;
   out_4440383381032052806[227] = 0;
   out_4440383381032052806[228] = 0;
   out_4440383381032052806[229] = 0;
   out_4440383381032052806[230] = 0;
   out_4440383381032052806[231] = 0;
   out_4440383381032052806[232] = 0;
   out_4440383381032052806[233] = 0;
   out_4440383381032052806[234] = 0;
   out_4440383381032052806[235] = 0;
   out_4440383381032052806[236] = 0;
   out_4440383381032052806[237] = 0;
   out_4440383381032052806[238] = 0;
   out_4440383381032052806[239] = 0;
   out_4440383381032052806[240] = 0;
   out_4440383381032052806[241] = 1.0;
   out_4440383381032052806[242] = 0;
   out_4440383381032052806[243] = 0;
   out_4440383381032052806[244] = 0;
   out_4440383381032052806[245] = 0;
   out_4440383381032052806[246] = 0;
   out_4440383381032052806[247] = 0;
   out_4440383381032052806[248] = 0;
   out_4440383381032052806[249] = 0;
   out_4440383381032052806[250] = 0;
   out_4440383381032052806[251] = 0;
   out_4440383381032052806[252] = 0;
   out_4440383381032052806[253] = 0;
   out_4440383381032052806[254] = 0;
   out_4440383381032052806[255] = 0;
   out_4440383381032052806[256] = 0;
   out_4440383381032052806[257] = 0;
   out_4440383381032052806[258] = 0;
   out_4440383381032052806[259] = 0;
   out_4440383381032052806[260] = 0;
   out_4440383381032052806[261] = 0;
   out_4440383381032052806[262] = 0;
   out_4440383381032052806[263] = 1.0;
   out_4440383381032052806[264] = 0;
   out_4440383381032052806[265] = 0;
   out_4440383381032052806[266] = 0;
   out_4440383381032052806[267] = 0;
   out_4440383381032052806[268] = 0;
   out_4440383381032052806[269] = 0;
   out_4440383381032052806[270] = 0;
   out_4440383381032052806[271] = 0;
   out_4440383381032052806[272] = 0;
   out_4440383381032052806[273] = 0;
   out_4440383381032052806[274] = 0;
   out_4440383381032052806[275] = 0;
   out_4440383381032052806[276] = 0;
   out_4440383381032052806[277] = 0;
   out_4440383381032052806[278] = 0;
   out_4440383381032052806[279] = 0;
   out_4440383381032052806[280] = 0;
   out_4440383381032052806[281] = 0;
   out_4440383381032052806[282] = 0;
   out_4440383381032052806[283] = 0;
   out_4440383381032052806[284] = 0;
   out_4440383381032052806[285] = 1.0;
   out_4440383381032052806[286] = 0;
   out_4440383381032052806[287] = 0;
   out_4440383381032052806[288] = 0;
   out_4440383381032052806[289] = 0;
   out_4440383381032052806[290] = 0;
   out_4440383381032052806[291] = 0;
   out_4440383381032052806[292] = 0;
   out_4440383381032052806[293] = 0;
   out_4440383381032052806[294] = 0;
   out_4440383381032052806[295] = 0;
   out_4440383381032052806[296] = 0;
   out_4440383381032052806[297] = 0;
   out_4440383381032052806[298] = 0;
   out_4440383381032052806[299] = 0;
   out_4440383381032052806[300] = 0;
   out_4440383381032052806[301] = 0;
   out_4440383381032052806[302] = 0;
   out_4440383381032052806[303] = 0;
   out_4440383381032052806[304] = 0;
   out_4440383381032052806[305] = 0;
   out_4440383381032052806[306] = 0;
   out_4440383381032052806[307] = 1.0;
   out_4440383381032052806[308] = 0;
   out_4440383381032052806[309] = 0;
   out_4440383381032052806[310] = 0;
   out_4440383381032052806[311] = 0;
   out_4440383381032052806[312] = 0;
   out_4440383381032052806[313] = 0;
   out_4440383381032052806[314] = 0;
   out_4440383381032052806[315] = 0;
   out_4440383381032052806[316] = 0;
   out_4440383381032052806[317] = 0;
   out_4440383381032052806[318] = 0;
   out_4440383381032052806[319] = 0;
   out_4440383381032052806[320] = 0;
   out_4440383381032052806[321] = 0;
   out_4440383381032052806[322] = 0;
   out_4440383381032052806[323] = 0;
   out_4440383381032052806[324] = 0;
   out_4440383381032052806[325] = 0;
   out_4440383381032052806[326] = 0;
   out_4440383381032052806[327] = 0;
   out_4440383381032052806[328] = 0;
   out_4440383381032052806[329] = 1.0;
   out_4440383381032052806[330] = 0;
   out_4440383381032052806[331] = 0;
   out_4440383381032052806[332] = 0;
   out_4440383381032052806[333] = 0;
   out_4440383381032052806[334] = 0;
   out_4440383381032052806[335] = 0;
   out_4440383381032052806[336] = 0;
   out_4440383381032052806[337] = 0;
   out_4440383381032052806[338] = 0;
   out_4440383381032052806[339] = 0;
   out_4440383381032052806[340] = 0;
   out_4440383381032052806[341] = 0;
   out_4440383381032052806[342] = 0;
   out_4440383381032052806[343] = 0;
   out_4440383381032052806[344] = 0;
   out_4440383381032052806[345] = 0;
   out_4440383381032052806[346] = 0;
   out_4440383381032052806[347] = 0;
   out_4440383381032052806[348] = 0;
   out_4440383381032052806[349] = 0;
   out_4440383381032052806[350] = 0;
   out_4440383381032052806[351] = 1.0;
   out_4440383381032052806[352] = 0;
   out_4440383381032052806[353] = 0;
   out_4440383381032052806[354] = 0;
   out_4440383381032052806[355] = 0;
   out_4440383381032052806[356] = 0;
   out_4440383381032052806[357] = 0;
   out_4440383381032052806[358] = 0;
   out_4440383381032052806[359] = 0;
   out_4440383381032052806[360] = 0;
   out_4440383381032052806[361] = 0;
   out_4440383381032052806[362] = 0;
   out_4440383381032052806[363] = 0;
   out_4440383381032052806[364] = 0;
   out_4440383381032052806[365] = 0;
   out_4440383381032052806[366] = 0;
   out_4440383381032052806[367] = 0;
   out_4440383381032052806[368] = 0;
   out_4440383381032052806[369] = 0;
   out_4440383381032052806[370] = 0;
   out_4440383381032052806[371] = 0;
   out_4440383381032052806[372] = 0;
   out_4440383381032052806[373] = 1.0;
   out_4440383381032052806[374] = 0;
   out_4440383381032052806[375] = 0;
   out_4440383381032052806[376] = 0;
   out_4440383381032052806[377] = 0;
   out_4440383381032052806[378] = 0;
   out_4440383381032052806[379] = 0;
   out_4440383381032052806[380] = 0;
   out_4440383381032052806[381] = 0;
   out_4440383381032052806[382] = 0;
   out_4440383381032052806[383] = 0;
   out_4440383381032052806[384] = 0;
   out_4440383381032052806[385] = 0;
   out_4440383381032052806[386] = 0;
   out_4440383381032052806[387] = 0;
   out_4440383381032052806[388] = 0;
   out_4440383381032052806[389] = 0;
   out_4440383381032052806[390] = 0;
   out_4440383381032052806[391] = 0;
   out_4440383381032052806[392] = 0;
   out_4440383381032052806[393] = 0;
   out_4440383381032052806[394] = 0;
   out_4440383381032052806[395] = 1.0;
   out_4440383381032052806[396] = 0;
   out_4440383381032052806[397] = 0;
   out_4440383381032052806[398] = 0;
   out_4440383381032052806[399] = 0;
   out_4440383381032052806[400] = 0;
   out_4440383381032052806[401] = 0;
   out_4440383381032052806[402] = 0;
   out_4440383381032052806[403] = 0;
   out_4440383381032052806[404] = 0;
   out_4440383381032052806[405] = 0;
   out_4440383381032052806[406] = 0;
   out_4440383381032052806[407] = 0;
   out_4440383381032052806[408] = 0;
   out_4440383381032052806[409] = 0;
   out_4440383381032052806[410] = 0;
   out_4440383381032052806[411] = 0;
   out_4440383381032052806[412] = 0;
   out_4440383381032052806[413] = 0;
   out_4440383381032052806[414] = 0;
   out_4440383381032052806[415] = 0;
   out_4440383381032052806[416] = 0;
   out_4440383381032052806[417] = 1.0;
   out_4440383381032052806[418] = 0;
   out_4440383381032052806[419] = 0;
   out_4440383381032052806[420] = 0;
   out_4440383381032052806[421] = 0;
   out_4440383381032052806[422] = 0;
   out_4440383381032052806[423] = 0;
   out_4440383381032052806[424] = 0;
   out_4440383381032052806[425] = 0;
   out_4440383381032052806[426] = 0;
   out_4440383381032052806[427] = 0;
   out_4440383381032052806[428] = 0;
   out_4440383381032052806[429] = 0;
   out_4440383381032052806[430] = 0;
   out_4440383381032052806[431] = 0;
   out_4440383381032052806[432] = 0;
   out_4440383381032052806[433] = 0;
   out_4440383381032052806[434] = 0;
   out_4440383381032052806[435] = 0;
   out_4440383381032052806[436] = 0;
   out_4440383381032052806[437] = 0;
   out_4440383381032052806[438] = 0;
   out_4440383381032052806[439] = 1.0;
   out_4440383381032052806[440] = 0;
   out_4440383381032052806[441] = 0;
   out_4440383381032052806[442] = 0;
   out_4440383381032052806[443] = 0;
   out_4440383381032052806[444] = 0;
   out_4440383381032052806[445] = 0;
   out_4440383381032052806[446] = 0;
   out_4440383381032052806[447] = 0;
   out_4440383381032052806[448] = 0;
   out_4440383381032052806[449] = 0;
   out_4440383381032052806[450] = 0;
   out_4440383381032052806[451] = 0;
   out_4440383381032052806[452] = 0;
   out_4440383381032052806[453] = 0;
   out_4440383381032052806[454] = 0;
   out_4440383381032052806[455] = 0;
   out_4440383381032052806[456] = 0;
   out_4440383381032052806[457] = 0;
   out_4440383381032052806[458] = 0;
   out_4440383381032052806[459] = 0;
   out_4440383381032052806[460] = 0;
   out_4440383381032052806[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8383486258681259757) {
   out_8383486258681259757[0] = dt*state[7] + state[0];
   out_8383486258681259757[1] = dt*state[8] + state[1];
   out_8383486258681259757[2] = dt*state[9] + state[2];
   out_8383486258681259757[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8383486258681259757[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8383486258681259757[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8383486258681259757[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8383486258681259757[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8383486258681259757[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8383486258681259757[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8383486258681259757[10] = state[10];
   out_8383486258681259757[11] = state[11];
   out_8383486258681259757[12] = state[12];
   out_8383486258681259757[13] = state[13];
   out_8383486258681259757[14] = state[14];
   out_8383486258681259757[15] = state[15];
   out_8383486258681259757[16] = state[16];
   out_8383486258681259757[17] = state[17];
   out_8383486258681259757[18] = state[18];
   out_8383486258681259757[19] = state[19];
   out_8383486258681259757[20] = state[20];
   out_8383486258681259757[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4922125120622165546) {
   out_4922125120622165546[0] = 1;
   out_4922125120622165546[1] = 0;
   out_4922125120622165546[2] = 0;
   out_4922125120622165546[3] = 0;
   out_4922125120622165546[4] = 0;
   out_4922125120622165546[5] = 0;
   out_4922125120622165546[6] = dt;
   out_4922125120622165546[7] = 0;
   out_4922125120622165546[8] = 0;
   out_4922125120622165546[9] = 0;
   out_4922125120622165546[10] = 0;
   out_4922125120622165546[11] = 0;
   out_4922125120622165546[12] = 0;
   out_4922125120622165546[13] = 0;
   out_4922125120622165546[14] = 0;
   out_4922125120622165546[15] = 0;
   out_4922125120622165546[16] = 0;
   out_4922125120622165546[17] = 0;
   out_4922125120622165546[18] = 0;
   out_4922125120622165546[19] = 0;
   out_4922125120622165546[20] = 0;
   out_4922125120622165546[21] = 0;
   out_4922125120622165546[22] = 1;
   out_4922125120622165546[23] = 0;
   out_4922125120622165546[24] = 0;
   out_4922125120622165546[25] = 0;
   out_4922125120622165546[26] = 0;
   out_4922125120622165546[27] = 0;
   out_4922125120622165546[28] = dt;
   out_4922125120622165546[29] = 0;
   out_4922125120622165546[30] = 0;
   out_4922125120622165546[31] = 0;
   out_4922125120622165546[32] = 0;
   out_4922125120622165546[33] = 0;
   out_4922125120622165546[34] = 0;
   out_4922125120622165546[35] = 0;
   out_4922125120622165546[36] = 0;
   out_4922125120622165546[37] = 0;
   out_4922125120622165546[38] = 0;
   out_4922125120622165546[39] = 0;
   out_4922125120622165546[40] = 0;
   out_4922125120622165546[41] = 0;
   out_4922125120622165546[42] = 0;
   out_4922125120622165546[43] = 0;
   out_4922125120622165546[44] = 1;
   out_4922125120622165546[45] = 0;
   out_4922125120622165546[46] = 0;
   out_4922125120622165546[47] = 0;
   out_4922125120622165546[48] = 0;
   out_4922125120622165546[49] = 0;
   out_4922125120622165546[50] = dt;
   out_4922125120622165546[51] = 0;
   out_4922125120622165546[52] = 0;
   out_4922125120622165546[53] = 0;
   out_4922125120622165546[54] = 0;
   out_4922125120622165546[55] = 0;
   out_4922125120622165546[56] = 0;
   out_4922125120622165546[57] = 0;
   out_4922125120622165546[58] = 0;
   out_4922125120622165546[59] = 0;
   out_4922125120622165546[60] = 0;
   out_4922125120622165546[61] = 0;
   out_4922125120622165546[62] = 0;
   out_4922125120622165546[63] = 0;
   out_4922125120622165546[64] = 0;
   out_4922125120622165546[65] = 0;
   out_4922125120622165546[66] = 1;
   out_4922125120622165546[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4922125120622165546[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4922125120622165546[69] = 0;
   out_4922125120622165546[70] = 0;
   out_4922125120622165546[71] = 0;
   out_4922125120622165546[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4922125120622165546[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4922125120622165546[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4922125120622165546[75] = 0;
   out_4922125120622165546[76] = 0;
   out_4922125120622165546[77] = 0;
   out_4922125120622165546[78] = 0;
   out_4922125120622165546[79] = 0;
   out_4922125120622165546[80] = 0;
   out_4922125120622165546[81] = 0;
   out_4922125120622165546[82] = 0;
   out_4922125120622165546[83] = 0;
   out_4922125120622165546[84] = 0;
   out_4922125120622165546[85] = 0;
   out_4922125120622165546[86] = 0;
   out_4922125120622165546[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4922125120622165546[88] = 1;
   out_4922125120622165546[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4922125120622165546[90] = 0;
   out_4922125120622165546[91] = 0;
   out_4922125120622165546[92] = 0;
   out_4922125120622165546[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4922125120622165546[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4922125120622165546[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4922125120622165546[96] = 0;
   out_4922125120622165546[97] = 0;
   out_4922125120622165546[98] = 0;
   out_4922125120622165546[99] = 0;
   out_4922125120622165546[100] = 0;
   out_4922125120622165546[101] = 0;
   out_4922125120622165546[102] = 0;
   out_4922125120622165546[103] = 0;
   out_4922125120622165546[104] = 0;
   out_4922125120622165546[105] = 0;
   out_4922125120622165546[106] = 0;
   out_4922125120622165546[107] = 0;
   out_4922125120622165546[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4922125120622165546[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4922125120622165546[110] = 1;
   out_4922125120622165546[111] = 0;
   out_4922125120622165546[112] = 0;
   out_4922125120622165546[113] = 0;
   out_4922125120622165546[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4922125120622165546[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4922125120622165546[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4922125120622165546[117] = 0;
   out_4922125120622165546[118] = 0;
   out_4922125120622165546[119] = 0;
   out_4922125120622165546[120] = 0;
   out_4922125120622165546[121] = 0;
   out_4922125120622165546[122] = 0;
   out_4922125120622165546[123] = 0;
   out_4922125120622165546[124] = 0;
   out_4922125120622165546[125] = 0;
   out_4922125120622165546[126] = 0;
   out_4922125120622165546[127] = 0;
   out_4922125120622165546[128] = 0;
   out_4922125120622165546[129] = 0;
   out_4922125120622165546[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4922125120622165546[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4922125120622165546[132] = 1;
   out_4922125120622165546[133] = 0;
   out_4922125120622165546[134] = 0;
   out_4922125120622165546[135] = 0;
   out_4922125120622165546[136] = 0;
   out_4922125120622165546[137] = 0;
   out_4922125120622165546[138] = 0;
   out_4922125120622165546[139] = 0;
   out_4922125120622165546[140] = 0;
   out_4922125120622165546[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4922125120622165546[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4922125120622165546[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4922125120622165546[144] = 0;
   out_4922125120622165546[145] = 0;
   out_4922125120622165546[146] = 0;
   out_4922125120622165546[147] = 0;
   out_4922125120622165546[148] = 0;
   out_4922125120622165546[149] = 0;
   out_4922125120622165546[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4922125120622165546[151] = 0;
   out_4922125120622165546[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4922125120622165546[153] = 0;
   out_4922125120622165546[154] = 1;
   out_4922125120622165546[155] = 0;
   out_4922125120622165546[156] = 0;
   out_4922125120622165546[157] = 0;
   out_4922125120622165546[158] = 0;
   out_4922125120622165546[159] = 0;
   out_4922125120622165546[160] = 0;
   out_4922125120622165546[161] = 0;
   out_4922125120622165546[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4922125120622165546[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4922125120622165546[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4922125120622165546[165] = 0;
   out_4922125120622165546[166] = 0;
   out_4922125120622165546[167] = 0;
   out_4922125120622165546[168] = 0;
   out_4922125120622165546[169] = 0;
   out_4922125120622165546[170] = 0;
   out_4922125120622165546[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4922125120622165546[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4922125120622165546[173] = 0;
   out_4922125120622165546[174] = 0;
   out_4922125120622165546[175] = 0;
   out_4922125120622165546[176] = 1;
   out_4922125120622165546[177] = 0;
   out_4922125120622165546[178] = 0;
   out_4922125120622165546[179] = 0;
   out_4922125120622165546[180] = 0;
   out_4922125120622165546[181] = 0;
   out_4922125120622165546[182] = 0;
   out_4922125120622165546[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4922125120622165546[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4922125120622165546[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4922125120622165546[186] = 0;
   out_4922125120622165546[187] = 0;
   out_4922125120622165546[188] = 0;
   out_4922125120622165546[189] = 0;
   out_4922125120622165546[190] = 0;
   out_4922125120622165546[191] = 0;
   out_4922125120622165546[192] = 0;
   out_4922125120622165546[193] = 0;
   out_4922125120622165546[194] = 0;
   out_4922125120622165546[195] = 0;
   out_4922125120622165546[196] = 0;
   out_4922125120622165546[197] = 0;
   out_4922125120622165546[198] = 1;
   out_4922125120622165546[199] = 0;
   out_4922125120622165546[200] = 0;
   out_4922125120622165546[201] = 0;
   out_4922125120622165546[202] = 0;
   out_4922125120622165546[203] = 0;
   out_4922125120622165546[204] = 0;
   out_4922125120622165546[205] = 0;
   out_4922125120622165546[206] = 0;
   out_4922125120622165546[207] = 0;
   out_4922125120622165546[208] = 0;
   out_4922125120622165546[209] = 0;
   out_4922125120622165546[210] = 0;
   out_4922125120622165546[211] = 0;
   out_4922125120622165546[212] = 0;
   out_4922125120622165546[213] = 0;
   out_4922125120622165546[214] = 0;
   out_4922125120622165546[215] = 0;
   out_4922125120622165546[216] = 0;
   out_4922125120622165546[217] = 0;
   out_4922125120622165546[218] = 0;
   out_4922125120622165546[219] = 0;
   out_4922125120622165546[220] = 1;
   out_4922125120622165546[221] = 0;
   out_4922125120622165546[222] = 0;
   out_4922125120622165546[223] = 0;
   out_4922125120622165546[224] = 0;
   out_4922125120622165546[225] = 0;
   out_4922125120622165546[226] = 0;
   out_4922125120622165546[227] = 0;
   out_4922125120622165546[228] = 0;
   out_4922125120622165546[229] = 0;
   out_4922125120622165546[230] = 0;
   out_4922125120622165546[231] = 0;
   out_4922125120622165546[232] = 0;
   out_4922125120622165546[233] = 0;
   out_4922125120622165546[234] = 0;
   out_4922125120622165546[235] = 0;
   out_4922125120622165546[236] = 0;
   out_4922125120622165546[237] = 0;
   out_4922125120622165546[238] = 0;
   out_4922125120622165546[239] = 0;
   out_4922125120622165546[240] = 0;
   out_4922125120622165546[241] = 0;
   out_4922125120622165546[242] = 1;
   out_4922125120622165546[243] = 0;
   out_4922125120622165546[244] = 0;
   out_4922125120622165546[245] = 0;
   out_4922125120622165546[246] = 0;
   out_4922125120622165546[247] = 0;
   out_4922125120622165546[248] = 0;
   out_4922125120622165546[249] = 0;
   out_4922125120622165546[250] = 0;
   out_4922125120622165546[251] = 0;
   out_4922125120622165546[252] = 0;
   out_4922125120622165546[253] = 0;
   out_4922125120622165546[254] = 0;
   out_4922125120622165546[255] = 0;
   out_4922125120622165546[256] = 0;
   out_4922125120622165546[257] = 0;
   out_4922125120622165546[258] = 0;
   out_4922125120622165546[259] = 0;
   out_4922125120622165546[260] = 0;
   out_4922125120622165546[261] = 0;
   out_4922125120622165546[262] = 0;
   out_4922125120622165546[263] = 0;
   out_4922125120622165546[264] = 1;
   out_4922125120622165546[265] = 0;
   out_4922125120622165546[266] = 0;
   out_4922125120622165546[267] = 0;
   out_4922125120622165546[268] = 0;
   out_4922125120622165546[269] = 0;
   out_4922125120622165546[270] = 0;
   out_4922125120622165546[271] = 0;
   out_4922125120622165546[272] = 0;
   out_4922125120622165546[273] = 0;
   out_4922125120622165546[274] = 0;
   out_4922125120622165546[275] = 0;
   out_4922125120622165546[276] = 0;
   out_4922125120622165546[277] = 0;
   out_4922125120622165546[278] = 0;
   out_4922125120622165546[279] = 0;
   out_4922125120622165546[280] = 0;
   out_4922125120622165546[281] = 0;
   out_4922125120622165546[282] = 0;
   out_4922125120622165546[283] = 0;
   out_4922125120622165546[284] = 0;
   out_4922125120622165546[285] = 0;
   out_4922125120622165546[286] = 1;
   out_4922125120622165546[287] = 0;
   out_4922125120622165546[288] = 0;
   out_4922125120622165546[289] = 0;
   out_4922125120622165546[290] = 0;
   out_4922125120622165546[291] = 0;
   out_4922125120622165546[292] = 0;
   out_4922125120622165546[293] = 0;
   out_4922125120622165546[294] = 0;
   out_4922125120622165546[295] = 0;
   out_4922125120622165546[296] = 0;
   out_4922125120622165546[297] = 0;
   out_4922125120622165546[298] = 0;
   out_4922125120622165546[299] = 0;
   out_4922125120622165546[300] = 0;
   out_4922125120622165546[301] = 0;
   out_4922125120622165546[302] = 0;
   out_4922125120622165546[303] = 0;
   out_4922125120622165546[304] = 0;
   out_4922125120622165546[305] = 0;
   out_4922125120622165546[306] = 0;
   out_4922125120622165546[307] = 0;
   out_4922125120622165546[308] = 1;
   out_4922125120622165546[309] = 0;
   out_4922125120622165546[310] = 0;
   out_4922125120622165546[311] = 0;
   out_4922125120622165546[312] = 0;
   out_4922125120622165546[313] = 0;
   out_4922125120622165546[314] = 0;
   out_4922125120622165546[315] = 0;
   out_4922125120622165546[316] = 0;
   out_4922125120622165546[317] = 0;
   out_4922125120622165546[318] = 0;
   out_4922125120622165546[319] = 0;
   out_4922125120622165546[320] = 0;
   out_4922125120622165546[321] = 0;
   out_4922125120622165546[322] = 0;
   out_4922125120622165546[323] = 0;
   out_4922125120622165546[324] = 0;
   out_4922125120622165546[325] = 0;
   out_4922125120622165546[326] = 0;
   out_4922125120622165546[327] = 0;
   out_4922125120622165546[328] = 0;
   out_4922125120622165546[329] = 0;
   out_4922125120622165546[330] = 1;
   out_4922125120622165546[331] = 0;
   out_4922125120622165546[332] = 0;
   out_4922125120622165546[333] = 0;
   out_4922125120622165546[334] = 0;
   out_4922125120622165546[335] = 0;
   out_4922125120622165546[336] = 0;
   out_4922125120622165546[337] = 0;
   out_4922125120622165546[338] = 0;
   out_4922125120622165546[339] = 0;
   out_4922125120622165546[340] = 0;
   out_4922125120622165546[341] = 0;
   out_4922125120622165546[342] = 0;
   out_4922125120622165546[343] = 0;
   out_4922125120622165546[344] = 0;
   out_4922125120622165546[345] = 0;
   out_4922125120622165546[346] = 0;
   out_4922125120622165546[347] = 0;
   out_4922125120622165546[348] = 0;
   out_4922125120622165546[349] = 0;
   out_4922125120622165546[350] = 0;
   out_4922125120622165546[351] = 0;
   out_4922125120622165546[352] = 1;
   out_4922125120622165546[353] = 0;
   out_4922125120622165546[354] = 0;
   out_4922125120622165546[355] = 0;
   out_4922125120622165546[356] = 0;
   out_4922125120622165546[357] = 0;
   out_4922125120622165546[358] = 0;
   out_4922125120622165546[359] = 0;
   out_4922125120622165546[360] = 0;
   out_4922125120622165546[361] = 0;
   out_4922125120622165546[362] = 0;
   out_4922125120622165546[363] = 0;
   out_4922125120622165546[364] = 0;
   out_4922125120622165546[365] = 0;
   out_4922125120622165546[366] = 0;
   out_4922125120622165546[367] = 0;
   out_4922125120622165546[368] = 0;
   out_4922125120622165546[369] = 0;
   out_4922125120622165546[370] = 0;
   out_4922125120622165546[371] = 0;
   out_4922125120622165546[372] = 0;
   out_4922125120622165546[373] = 0;
   out_4922125120622165546[374] = 1;
   out_4922125120622165546[375] = 0;
   out_4922125120622165546[376] = 0;
   out_4922125120622165546[377] = 0;
   out_4922125120622165546[378] = 0;
   out_4922125120622165546[379] = 0;
   out_4922125120622165546[380] = 0;
   out_4922125120622165546[381] = 0;
   out_4922125120622165546[382] = 0;
   out_4922125120622165546[383] = 0;
   out_4922125120622165546[384] = 0;
   out_4922125120622165546[385] = 0;
   out_4922125120622165546[386] = 0;
   out_4922125120622165546[387] = 0;
   out_4922125120622165546[388] = 0;
   out_4922125120622165546[389] = 0;
   out_4922125120622165546[390] = 0;
   out_4922125120622165546[391] = 0;
   out_4922125120622165546[392] = 0;
   out_4922125120622165546[393] = 0;
   out_4922125120622165546[394] = 0;
   out_4922125120622165546[395] = 0;
   out_4922125120622165546[396] = 1;
   out_4922125120622165546[397] = 0;
   out_4922125120622165546[398] = 0;
   out_4922125120622165546[399] = 0;
   out_4922125120622165546[400] = 0;
   out_4922125120622165546[401] = 0;
   out_4922125120622165546[402] = 0;
   out_4922125120622165546[403] = 0;
   out_4922125120622165546[404] = 0;
   out_4922125120622165546[405] = 0;
   out_4922125120622165546[406] = 0;
   out_4922125120622165546[407] = 0;
   out_4922125120622165546[408] = 0;
   out_4922125120622165546[409] = 0;
   out_4922125120622165546[410] = 0;
   out_4922125120622165546[411] = 0;
   out_4922125120622165546[412] = 0;
   out_4922125120622165546[413] = 0;
   out_4922125120622165546[414] = 0;
   out_4922125120622165546[415] = 0;
   out_4922125120622165546[416] = 0;
   out_4922125120622165546[417] = 0;
   out_4922125120622165546[418] = 1;
   out_4922125120622165546[419] = 0;
   out_4922125120622165546[420] = 0;
   out_4922125120622165546[421] = 0;
   out_4922125120622165546[422] = 0;
   out_4922125120622165546[423] = 0;
   out_4922125120622165546[424] = 0;
   out_4922125120622165546[425] = 0;
   out_4922125120622165546[426] = 0;
   out_4922125120622165546[427] = 0;
   out_4922125120622165546[428] = 0;
   out_4922125120622165546[429] = 0;
   out_4922125120622165546[430] = 0;
   out_4922125120622165546[431] = 0;
   out_4922125120622165546[432] = 0;
   out_4922125120622165546[433] = 0;
   out_4922125120622165546[434] = 0;
   out_4922125120622165546[435] = 0;
   out_4922125120622165546[436] = 0;
   out_4922125120622165546[437] = 0;
   out_4922125120622165546[438] = 0;
   out_4922125120622165546[439] = 0;
   out_4922125120622165546[440] = 1;
}
void h_4(double *state, double *unused, double *out_4632288348100940368) {
   out_4632288348100940368[0] = state[10] + state[13];
   out_4632288348100940368[1] = state[11] + state[14];
   out_4632288348100940368[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4062080113147034978) {
   out_4062080113147034978[0] = 0;
   out_4062080113147034978[1] = 0;
   out_4062080113147034978[2] = 0;
   out_4062080113147034978[3] = 0;
   out_4062080113147034978[4] = 0;
   out_4062080113147034978[5] = 0;
   out_4062080113147034978[6] = 0;
   out_4062080113147034978[7] = 0;
   out_4062080113147034978[8] = 0;
   out_4062080113147034978[9] = 0;
   out_4062080113147034978[10] = 1;
   out_4062080113147034978[11] = 0;
   out_4062080113147034978[12] = 0;
   out_4062080113147034978[13] = 1;
   out_4062080113147034978[14] = 0;
   out_4062080113147034978[15] = 0;
   out_4062080113147034978[16] = 0;
   out_4062080113147034978[17] = 0;
   out_4062080113147034978[18] = 0;
   out_4062080113147034978[19] = 0;
   out_4062080113147034978[20] = 0;
   out_4062080113147034978[21] = 0;
   out_4062080113147034978[22] = 0;
   out_4062080113147034978[23] = 0;
   out_4062080113147034978[24] = 0;
   out_4062080113147034978[25] = 0;
   out_4062080113147034978[26] = 0;
   out_4062080113147034978[27] = 0;
   out_4062080113147034978[28] = 0;
   out_4062080113147034978[29] = 0;
   out_4062080113147034978[30] = 0;
   out_4062080113147034978[31] = 0;
   out_4062080113147034978[32] = 0;
   out_4062080113147034978[33] = 1;
   out_4062080113147034978[34] = 0;
   out_4062080113147034978[35] = 0;
   out_4062080113147034978[36] = 1;
   out_4062080113147034978[37] = 0;
   out_4062080113147034978[38] = 0;
   out_4062080113147034978[39] = 0;
   out_4062080113147034978[40] = 0;
   out_4062080113147034978[41] = 0;
   out_4062080113147034978[42] = 0;
   out_4062080113147034978[43] = 0;
   out_4062080113147034978[44] = 0;
   out_4062080113147034978[45] = 0;
   out_4062080113147034978[46] = 0;
   out_4062080113147034978[47] = 0;
   out_4062080113147034978[48] = 0;
   out_4062080113147034978[49] = 0;
   out_4062080113147034978[50] = 0;
   out_4062080113147034978[51] = 0;
   out_4062080113147034978[52] = 0;
   out_4062080113147034978[53] = 0;
   out_4062080113147034978[54] = 0;
   out_4062080113147034978[55] = 0;
   out_4062080113147034978[56] = 1;
   out_4062080113147034978[57] = 0;
   out_4062080113147034978[58] = 0;
   out_4062080113147034978[59] = 1;
   out_4062080113147034978[60] = 0;
   out_4062080113147034978[61] = 0;
   out_4062080113147034978[62] = 0;
   out_4062080113147034978[63] = 0;
   out_4062080113147034978[64] = 0;
   out_4062080113147034978[65] = 0;
}
void h_9(double *state, double *unused, double *out_7946719621628069263) {
   out_7946719621628069263[0] = state[10];
   out_7946719621628069263[1] = state[11];
   out_7946719621628069263[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4303269759776625623) {
   out_4303269759776625623[0] = 0;
   out_4303269759776625623[1] = 0;
   out_4303269759776625623[2] = 0;
   out_4303269759776625623[3] = 0;
   out_4303269759776625623[4] = 0;
   out_4303269759776625623[5] = 0;
   out_4303269759776625623[6] = 0;
   out_4303269759776625623[7] = 0;
   out_4303269759776625623[8] = 0;
   out_4303269759776625623[9] = 0;
   out_4303269759776625623[10] = 1;
   out_4303269759776625623[11] = 0;
   out_4303269759776625623[12] = 0;
   out_4303269759776625623[13] = 0;
   out_4303269759776625623[14] = 0;
   out_4303269759776625623[15] = 0;
   out_4303269759776625623[16] = 0;
   out_4303269759776625623[17] = 0;
   out_4303269759776625623[18] = 0;
   out_4303269759776625623[19] = 0;
   out_4303269759776625623[20] = 0;
   out_4303269759776625623[21] = 0;
   out_4303269759776625623[22] = 0;
   out_4303269759776625623[23] = 0;
   out_4303269759776625623[24] = 0;
   out_4303269759776625623[25] = 0;
   out_4303269759776625623[26] = 0;
   out_4303269759776625623[27] = 0;
   out_4303269759776625623[28] = 0;
   out_4303269759776625623[29] = 0;
   out_4303269759776625623[30] = 0;
   out_4303269759776625623[31] = 0;
   out_4303269759776625623[32] = 0;
   out_4303269759776625623[33] = 1;
   out_4303269759776625623[34] = 0;
   out_4303269759776625623[35] = 0;
   out_4303269759776625623[36] = 0;
   out_4303269759776625623[37] = 0;
   out_4303269759776625623[38] = 0;
   out_4303269759776625623[39] = 0;
   out_4303269759776625623[40] = 0;
   out_4303269759776625623[41] = 0;
   out_4303269759776625623[42] = 0;
   out_4303269759776625623[43] = 0;
   out_4303269759776625623[44] = 0;
   out_4303269759776625623[45] = 0;
   out_4303269759776625623[46] = 0;
   out_4303269759776625623[47] = 0;
   out_4303269759776625623[48] = 0;
   out_4303269759776625623[49] = 0;
   out_4303269759776625623[50] = 0;
   out_4303269759776625623[51] = 0;
   out_4303269759776625623[52] = 0;
   out_4303269759776625623[53] = 0;
   out_4303269759776625623[54] = 0;
   out_4303269759776625623[55] = 0;
   out_4303269759776625623[56] = 1;
   out_4303269759776625623[57] = 0;
   out_4303269759776625623[58] = 0;
   out_4303269759776625623[59] = 0;
   out_4303269759776625623[60] = 0;
   out_4303269759776625623[61] = 0;
   out_4303269759776625623[62] = 0;
   out_4303269759776625623[63] = 0;
   out_4303269759776625623[64] = 0;
   out_4303269759776625623[65] = 0;
}
void h_10(double *state, double *unused, double *out_9070267269219038090) {
   out_9070267269219038090[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_9070267269219038090[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_9070267269219038090[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6266268232505384868) {
   out_6266268232505384868[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6266268232505384868[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6266268232505384868[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6266268232505384868[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6266268232505384868[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6266268232505384868[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6266268232505384868[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6266268232505384868[7] = 0;
   out_6266268232505384868[8] = 0;
   out_6266268232505384868[9] = 0;
   out_6266268232505384868[10] = 0;
   out_6266268232505384868[11] = 0;
   out_6266268232505384868[12] = 0;
   out_6266268232505384868[13] = 0;
   out_6266268232505384868[14] = 0;
   out_6266268232505384868[15] = 0;
   out_6266268232505384868[16] = 1;
   out_6266268232505384868[17] = 0;
   out_6266268232505384868[18] = 0;
   out_6266268232505384868[19] = 1;
   out_6266268232505384868[20] = 0;
   out_6266268232505384868[21] = 0;
   out_6266268232505384868[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6266268232505384868[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6266268232505384868[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6266268232505384868[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6266268232505384868[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6266268232505384868[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6266268232505384868[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6266268232505384868[29] = 0;
   out_6266268232505384868[30] = 0;
   out_6266268232505384868[31] = 0;
   out_6266268232505384868[32] = 0;
   out_6266268232505384868[33] = 0;
   out_6266268232505384868[34] = 0;
   out_6266268232505384868[35] = 0;
   out_6266268232505384868[36] = 0;
   out_6266268232505384868[37] = 0;
   out_6266268232505384868[38] = 0;
   out_6266268232505384868[39] = 1;
   out_6266268232505384868[40] = 0;
   out_6266268232505384868[41] = 0;
   out_6266268232505384868[42] = 1;
   out_6266268232505384868[43] = 0;
   out_6266268232505384868[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6266268232505384868[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6266268232505384868[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6266268232505384868[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6266268232505384868[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6266268232505384868[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6266268232505384868[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6266268232505384868[51] = 0;
   out_6266268232505384868[52] = 0;
   out_6266268232505384868[53] = 0;
   out_6266268232505384868[54] = 0;
   out_6266268232505384868[55] = 0;
   out_6266268232505384868[56] = 0;
   out_6266268232505384868[57] = 0;
   out_6266268232505384868[58] = 0;
   out_6266268232505384868[59] = 0;
   out_6266268232505384868[60] = 0;
   out_6266268232505384868[61] = 0;
   out_6266268232505384868[62] = 1;
   out_6266268232505384868[63] = 0;
   out_6266268232505384868[64] = 0;
   out_6266268232505384868[65] = 1;
}
void h_12(double *state, double *unused, double *out_5179379990878026910) {
   out_5179379990878026910[0] = state[0];
   out_5179379990878026910[1] = state[1];
   out_5179379990878026910[2] = state[2];
}
void H_12(double *state, double *unused, double *out_9081536521178996773) {
   out_9081536521178996773[0] = 1;
   out_9081536521178996773[1] = 0;
   out_9081536521178996773[2] = 0;
   out_9081536521178996773[3] = 0;
   out_9081536521178996773[4] = 0;
   out_9081536521178996773[5] = 0;
   out_9081536521178996773[6] = 0;
   out_9081536521178996773[7] = 0;
   out_9081536521178996773[8] = 0;
   out_9081536521178996773[9] = 0;
   out_9081536521178996773[10] = 0;
   out_9081536521178996773[11] = 0;
   out_9081536521178996773[12] = 0;
   out_9081536521178996773[13] = 0;
   out_9081536521178996773[14] = 0;
   out_9081536521178996773[15] = 0;
   out_9081536521178996773[16] = 0;
   out_9081536521178996773[17] = 0;
   out_9081536521178996773[18] = 0;
   out_9081536521178996773[19] = 0;
   out_9081536521178996773[20] = 0;
   out_9081536521178996773[21] = 0;
   out_9081536521178996773[22] = 0;
   out_9081536521178996773[23] = 1;
   out_9081536521178996773[24] = 0;
   out_9081536521178996773[25] = 0;
   out_9081536521178996773[26] = 0;
   out_9081536521178996773[27] = 0;
   out_9081536521178996773[28] = 0;
   out_9081536521178996773[29] = 0;
   out_9081536521178996773[30] = 0;
   out_9081536521178996773[31] = 0;
   out_9081536521178996773[32] = 0;
   out_9081536521178996773[33] = 0;
   out_9081536521178996773[34] = 0;
   out_9081536521178996773[35] = 0;
   out_9081536521178996773[36] = 0;
   out_9081536521178996773[37] = 0;
   out_9081536521178996773[38] = 0;
   out_9081536521178996773[39] = 0;
   out_9081536521178996773[40] = 0;
   out_9081536521178996773[41] = 0;
   out_9081536521178996773[42] = 0;
   out_9081536521178996773[43] = 0;
   out_9081536521178996773[44] = 0;
   out_9081536521178996773[45] = 0;
   out_9081536521178996773[46] = 1;
   out_9081536521178996773[47] = 0;
   out_9081536521178996773[48] = 0;
   out_9081536521178996773[49] = 0;
   out_9081536521178996773[50] = 0;
   out_9081536521178996773[51] = 0;
   out_9081536521178996773[52] = 0;
   out_9081536521178996773[53] = 0;
   out_9081536521178996773[54] = 0;
   out_9081536521178996773[55] = 0;
   out_9081536521178996773[56] = 0;
   out_9081536521178996773[57] = 0;
   out_9081536521178996773[58] = 0;
   out_9081536521178996773[59] = 0;
   out_9081536521178996773[60] = 0;
   out_9081536521178996773[61] = 0;
   out_9081536521178996773[62] = 0;
   out_9081536521178996773[63] = 0;
   out_9081536521178996773[64] = 0;
   out_9081536521178996773[65] = 0;
}
void h_35(double *state, double *unused, double *out_430099957447387131) {
   out_430099957447387131[0] = state[7];
   out_430099957447387131[1] = state[8];
   out_430099957447387131[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6619644520205541134) {
   out_6619644520205541134[0] = 0;
   out_6619644520205541134[1] = 0;
   out_6619644520205541134[2] = 0;
   out_6619644520205541134[3] = 0;
   out_6619644520205541134[4] = 0;
   out_6619644520205541134[5] = 0;
   out_6619644520205541134[6] = 0;
   out_6619644520205541134[7] = 1;
   out_6619644520205541134[8] = 0;
   out_6619644520205541134[9] = 0;
   out_6619644520205541134[10] = 0;
   out_6619644520205541134[11] = 0;
   out_6619644520205541134[12] = 0;
   out_6619644520205541134[13] = 0;
   out_6619644520205541134[14] = 0;
   out_6619644520205541134[15] = 0;
   out_6619644520205541134[16] = 0;
   out_6619644520205541134[17] = 0;
   out_6619644520205541134[18] = 0;
   out_6619644520205541134[19] = 0;
   out_6619644520205541134[20] = 0;
   out_6619644520205541134[21] = 0;
   out_6619644520205541134[22] = 0;
   out_6619644520205541134[23] = 0;
   out_6619644520205541134[24] = 0;
   out_6619644520205541134[25] = 0;
   out_6619644520205541134[26] = 0;
   out_6619644520205541134[27] = 0;
   out_6619644520205541134[28] = 0;
   out_6619644520205541134[29] = 0;
   out_6619644520205541134[30] = 1;
   out_6619644520205541134[31] = 0;
   out_6619644520205541134[32] = 0;
   out_6619644520205541134[33] = 0;
   out_6619644520205541134[34] = 0;
   out_6619644520205541134[35] = 0;
   out_6619644520205541134[36] = 0;
   out_6619644520205541134[37] = 0;
   out_6619644520205541134[38] = 0;
   out_6619644520205541134[39] = 0;
   out_6619644520205541134[40] = 0;
   out_6619644520205541134[41] = 0;
   out_6619644520205541134[42] = 0;
   out_6619644520205541134[43] = 0;
   out_6619644520205541134[44] = 0;
   out_6619644520205541134[45] = 0;
   out_6619644520205541134[46] = 0;
   out_6619644520205541134[47] = 0;
   out_6619644520205541134[48] = 0;
   out_6619644520205541134[49] = 0;
   out_6619644520205541134[50] = 0;
   out_6619644520205541134[51] = 0;
   out_6619644520205541134[52] = 0;
   out_6619644520205541134[53] = 1;
   out_6619644520205541134[54] = 0;
   out_6619644520205541134[55] = 0;
   out_6619644520205541134[56] = 0;
   out_6619644520205541134[57] = 0;
   out_6619644520205541134[58] = 0;
   out_6619644520205541134[59] = 0;
   out_6619644520205541134[60] = 0;
   out_6619644520205541134[61] = 0;
   out_6619644520205541134[62] = 0;
   out_6619644520205541134[63] = 0;
   out_6619644520205541134[64] = 0;
   out_6619644520205541134[65] = 0;
}
void h_32(double *state, double *unused, double *out_5337202528533963606) {
   out_5337202528533963606[0] = state[3];
   out_5337202528533963606[1] = state[4];
   out_5337202528533963606[2] = state[5];
   out_5337202528533963606[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8940618130655555986) {
   out_8940618130655555986[0] = 0;
   out_8940618130655555986[1] = 0;
   out_8940618130655555986[2] = 0;
   out_8940618130655555986[3] = 1;
   out_8940618130655555986[4] = 0;
   out_8940618130655555986[5] = 0;
   out_8940618130655555986[6] = 0;
   out_8940618130655555986[7] = 0;
   out_8940618130655555986[8] = 0;
   out_8940618130655555986[9] = 0;
   out_8940618130655555986[10] = 0;
   out_8940618130655555986[11] = 0;
   out_8940618130655555986[12] = 0;
   out_8940618130655555986[13] = 0;
   out_8940618130655555986[14] = 0;
   out_8940618130655555986[15] = 0;
   out_8940618130655555986[16] = 0;
   out_8940618130655555986[17] = 0;
   out_8940618130655555986[18] = 0;
   out_8940618130655555986[19] = 0;
   out_8940618130655555986[20] = 0;
   out_8940618130655555986[21] = 0;
   out_8940618130655555986[22] = 0;
   out_8940618130655555986[23] = 0;
   out_8940618130655555986[24] = 0;
   out_8940618130655555986[25] = 0;
   out_8940618130655555986[26] = 1;
   out_8940618130655555986[27] = 0;
   out_8940618130655555986[28] = 0;
   out_8940618130655555986[29] = 0;
   out_8940618130655555986[30] = 0;
   out_8940618130655555986[31] = 0;
   out_8940618130655555986[32] = 0;
   out_8940618130655555986[33] = 0;
   out_8940618130655555986[34] = 0;
   out_8940618130655555986[35] = 0;
   out_8940618130655555986[36] = 0;
   out_8940618130655555986[37] = 0;
   out_8940618130655555986[38] = 0;
   out_8940618130655555986[39] = 0;
   out_8940618130655555986[40] = 0;
   out_8940618130655555986[41] = 0;
   out_8940618130655555986[42] = 0;
   out_8940618130655555986[43] = 0;
   out_8940618130655555986[44] = 0;
   out_8940618130655555986[45] = 0;
   out_8940618130655555986[46] = 0;
   out_8940618130655555986[47] = 0;
   out_8940618130655555986[48] = 0;
   out_8940618130655555986[49] = 1;
   out_8940618130655555986[50] = 0;
   out_8940618130655555986[51] = 0;
   out_8940618130655555986[52] = 0;
   out_8940618130655555986[53] = 0;
   out_8940618130655555986[54] = 0;
   out_8940618130655555986[55] = 0;
   out_8940618130655555986[56] = 0;
   out_8940618130655555986[57] = 0;
   out_8940618130655555986[58] = 0;
   out_8940618130655555986[59] = 0;
   out_8940618130655555986[60] = 0;
   out_8940618130655555986[61] = 0;
   out_8940618130655555986[62] = 0;
   out_8940618130655555986[63] = 0;
   out_8940618130655555986[64] = 0;
   out_8940618130655555986[65] = 0;
   out_8940618130655555986[66] = 0;
   out_8940618130655555986[67] = 0;
   out_8940618130655555986[68] = 0;
   out_8940618130655555986[69] = 0;
   out_8940618130655555986[70] = 0;
   out_8940618130655555986[71] = 0;
   out_8940618130655555986[72] = 1;
   out_8940618130655555986[73] = 0;
   out_8940618130655555986[74] = 0;
   out_8940618130655555986[75] = 0;
   out_8940618130655555986[76] = 0;
   out_8940618130655555986[77] = 0;
   out_8940618130655555986[78] = 0;
   out_8940618130655555986[79] = 0;
   out_8940618130655555986[80] = 0;
   out_8940618130655555986[81] = 0;
   out_8940618130655555986[82] = 0;
   out_8940618130655555986[83] = 0;
   out_8940618130655555986[84] = 0;
   out_8940618130655555986[85] = 0;
   out_8940618130655555986[86] = 0;
   out_8940618130655555986[87] = 0;
}
void h_13(double *state, double *unused, double *out_8801062151714371050) {
   out_8801062151714371050[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8801062151714371050[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8801062151714371050[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_747577663814051635) {
   out_747577663814051635[0] = 0;
   out_747577663814051635[1] = 0;
   out_747577663814051635[2] = 0;
   out_747577663814051635[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_747577663814051635[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_747577663814051635[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_747577663814051635[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_747577663814051635[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_747577663814051635[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_747577663814051635[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_747577663814051635[10] = 0;
   out_747577663814051635[11] = 0;
   out_747577663814051635[12] = 0;
   out_747577663814051635[13] = 0;
   out_747577663814051635[14] = 0;
   out_747577663814051635[15] = 0;
   out_747577663814051635[16] = 0;
   out_747577663814051635[17] = 0;
   out_747577663814051635[18] = 0;
   out_747577663814051635[19] = 0;
   out_747577663814051635[20] = 0;
   out_747577663814051635[21] = 0;
   out_747577663814051635[22] = 0;
   out_747577663814051635[23] = 0;
   out_747577663814051635[24] = 0;
   out_747577663814051635[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_747577663814051635[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_747577663814051635[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_747577663814051635[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_747577663814051635[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_747577663814051635[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_747577663814051635[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_747577663814051635[32] = 0;
   out_747577663814051635[33] = 0;
   out_747577663814051635[34] = 0;
   out_747577663814051635[35] = 0;
   out_747577663814051635[36] = 0;
   out_747577663814051635[37] = 0;
   out_747577663814051635[38] = 0;
   out_747577663814051635[39] = 0;
   out_747577663814051635[40] = 0;
   out_747577663814051635[41] = 0;
   out_747577663814051635[42] = 0;
   out_747577663814051635[43] = 0;
   out_747577663814051635[44] = 0;
   out_747577663814051635[45] = 0;
   out_747577663814051635[46] = 0;
   out_747577663814051635[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_747577663814051635[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_747577663814051635[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_747577663814051635[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_747577663814051635[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_747577663814051635[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_747577663814051635[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_747577663814051635[54] = 0;
   out_747577663814051635[55] = 0;
   out_747577663814051635[56] = 0;
   out_747577663814051635[57] = 0;
   out_747577663814051635[58] = 0;
   out_747577663814051635[59] = 0;
   out_747577663814051635[60] = 0;
   out_747577663814051635[61] = 0;
   out_747577663814051635[62] = 0;
   out_747577663814051635[63] = 0;
   out_747577663814051635[64] = 0;
   out_747577663814051635[65] = 0;
}
void h_14(double *state, double *unused, double *out_7946719621628069263) {
   out_7946719621628069263[0] = state[10];
   out_7946719621628069263[1] = state[11];
   out_7946719621628069263[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4303269759776625623) {
   out_4303269759776625623[0] = 0;
   out_4303269759776625623[1] = 0;
   out_4303269759776625623[2] = 0;
   out_4303269759776625623[3] = 0;
   out_4303269759776625623[4] = 0;
   out_4303269759776625623[5] = 0;
   out_4303269759776625623[6] = 0;
   out_4303269759776625623[7] = 0;
   out_4303269759776625623[8] = 0;
   out_4303269759776625623[9] = 0;
   out_4303269759776625623[10] = 1;
   out_4303269759776625623[11] = 0;
   out_4303269759776625623[12] = 0;
   out_4303269759776625623[13] = 0;
   out_4303269759776625623[14] = 0;
   out_4303269759776625623[15] = 0;
   out_4303269759776625623[16] = 0;
   out_4303269759776625623[17] = 0;
   out_4303269759776625623[18] = 0;
   out_4303269759776625623[19] = 0;
   out_4303269759776625623[20] = 0;
   out_4303269759776625623[21] = 0;
   out_4303269759776625623[22] = 0;
   out_4303269759776625623[23] = 0;
   out_4303269759776625623[24] = 0;
   out_4303269759776625623[25] = 0;
   out_4303269759776625623[26] = 0;
   out_4303269759776625623[27] = 0;
   out_4303269759776625623[28] = 0;
   out_4303269759776625623[29] = 0;
   out_4303269759776625623[30] = 0;
   out_4303269759776625623[31] = 0;
   out_4303269759776625623[32] = 0;
   out_4303269759776625623[33] = 1;
   out_4303269759776625623[34] = 0;
   out_4303269759776625623[35] = 0;
   out_4303269759776625623[36] = 0;
   out_4303269759776625623[37] = 0;
   out_4303269759776625623[38] = 0;
   out_4303269759776625623[39] = 0;
   out_4303269759776625623[40] = 0;
   out_4303269759776625623[41] = 0;
   out_4303269759776625623[42] = 0;
   out_4303269759776625623[43] = 0;
   out_4303269759776625623[44] = 0;
   out_4303269759776625623[45] = 0;
   out_4303269759776625623[46] = 0;
   out_4303269759776625623[47] = 0;
   out_4303269759776625623[48] = 0;
   out_4303269759776625623[49] = 0;
   out_4303269759776625623[50] = 0;
   out_4303269759776625623[51] = 0;
   out_4303269759776625623[52] = 0;
   out_4303269759776625623[53] = 0;
   out_4303269759776625623[54] = 0;
   out_4303269759776625623[55] = 0;
   out_4303269759776625623[56] = 1;
   out_4303269759776625623[57] = 0;
   out_4303269759776625623[58] = 0;
   out_4303269759776625623[59] = 0;
   out_4303269759776625623[60] = 0;
   out_4303269759776625623[61] = 0;
   out_4303269759776625623[62] = 0;
   out_4303269759776625623[63] = 0;
   out_4303269759776625623[64] = 0;
   out_4303269759776625623[65] = 0;
}
void h_33(double *state, double *unused, double *out_7166062652725206260) {
   out_7166062652725206260[0] = state[16];
   out_7166062652725206260[1] = state[17];
   out_7166062652725206260[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3469087515566683530) {
   out_3469087515566683530[0] = 0;
   out_3469087515566683530[1] = 0;
   out_3469087515566683530[2] = 0;
   out_3469087515566683530[3] = 0;
   out_3469087515566683530[4] = 0;
   out_3469087515566683530[5] = 0;
   out_3469087515566683530[6] = 0;
   out_3469087515566683530[7] = 0;
   out_3469087515566683530[8] = 0;
   out_3469087515566683530[9] = 0;
   out_3469087515566683530[10] = 0;
   out_3469087515566683530[11] = 0;
   out_3469087515566683530[12] = 0;
   out_3469087515566683530[13] = 0;
   out_3469087515566683530[14] = 0;
   out_3469087515566683530[15] = 0;
   out_3469087515566683530[16] = 1;
   out_3469087515566683530[17] = 0;
   out_3469087515566683530[18] = 0;
   out_3469087515566683530[19] = 0;
   out_3469087515566683530[20] = 0;
   out_3469087515566683530[21] = 0;
   out_3469087515566683530[22] = 0;
   out_3469087515566683530[23] = 0;
   out_3469087515566683530[24] = 0;
   out_3469087515566683530[25] = 0;
   out_3469087515566683530[26] = 0;
   out_3469087515566683530[27] = 0;
   out_3469087515566683530[28] = 0;
   out_3469087515566683530[29] = 0;
   out_3469087515566683530[30] = 0;
   out_3469087515566683530[31] = 0;
   out_3469087515566683530[32] = 0;
   out_3469087515566683530[33] = 0;
   out_3469087515566683530[34] = 0;
   out_3469087515566683530[35] = 0;
   out_3469087515566683530[36] = 0;
   out_3469087515566683530[37] = 0;
   out_3469087515566683530[38] = 0;
   out_3469087515566683530[39] = 1;
   out_3469087515566683530[40] = 0;
   out_3469087515566683530[41] = 0;
   out_3469087515566683530[42] = 0;
   out_3469087515566683530[43] = 0;
   out_3469087515566683530[44] = 0;
   out_3469087515566683530[45] = 0;
   out_3469087515566683530[46] = 0;
   out_3469087515566683530[47] = 0;
   out_3469087515566683530[48] = 0;
   out_3469087515566683530[49] = 0;
   out_3469087515566683530[50] = 0;
   out_3469087515566683530[51] = 0;
   out_3469087515566683530[52] = 0;
   out_3469087515566683530[53] = 0;
   out_3469087515566683530[54] = 0;
   out_3469087515566683530[55] = 0;
   out_3469087515566683530[56] = 0;
   out_3469087515566683530[57] = 0;
   out_3469087515566683530[58] = 0;
   out_3469087515566683530[59] = 0;
   out_3469087515566683530[60] = 0;
   out_3469087515566683530[61] = 0;
   out_3469087515566683530[62] = 1;
   out_3469087515566683530[63] = 0;
   out_3469087515566683530[64] = 0;
   out_3469087515566683530[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5099758661401554901) {
  H(in_vec, out_5099758661401554901);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7711725958047008630) {
  err_fun(nom_x, delta_x, out_7711725958047008630);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3807385099460836642) {
  inv_err_fun(nom_x, true_x, out_3807385099460836642);
}
void live_H_mod_fun(double *state, double *out_4440383381032052806) {
  H_mod_fun(state, out_4440383381032052806);
}
void live_f_fun(double *state, double dt, double *out_8383486258681259757) {
  f_fun(state,  dt, out_8383486258681259757);
}
void live_F_fun(double *state, double dt, double *out_4922125120622165546) {
  F_fun(state,  dt, out_4922125120622165546);
}
void live_h_4(double *state, double *unused, double *out_4632288348100940368) {
  h_4(state, unused, out_4632288348100940368);
}
void live_H_4(double *state, double *unused, double *out_4062080113147034978) {
  H_4(state, unused, out_4062080113147034978);
}
void live_h_9(double *state, double *unused, double *out_7946719621628069263) {
  h_9(state, unused, out_7946719621628069263);
}
void live_H_9(double *state, double *unused, double *out_4303269759776625623) {
  H_9(state, unused, out_4303269759776625623);
}
void live_h_10(double *state, double *unused, double *out_9070267269219038090) {
  h_10(state, unused, out_9070267269219038090);
}
void live_H_10(double *state, double *unused, double *out_6266268232505384868) {
  H_10(state, unused, out_6266268232505384868);
}
void live_h_12(double *state, double *unused, double *out_5179379990878026910) {
  h_12(state, unused, out_5179379990878026910);
}
void live_H_12(double *state, double *unused, double *out_9081536521178996773) {
  H_12(state, unused, out_9081536521178996773);
}
void live_h_35(double *state, double *unused, double *out_430099957447387131) {
  h_35(state, unused, out_430099957447387131);
}
void live_H_35(double *state, double *unused, double *out_6619644520205541134) {
  H_35(state, unused, out_6619644520205541134);
}
void live_h_32(double *state, double *unused, double *out_5337202528533963606) {
  h_32(state, unused, out_5337202528533963606);
}
void live_H_32(double *state, double *unused, double *out_8940618130655555986) {
  H_32(state, unused, out_8940618130655555986);
}
void live_h_13(double *state, double *unused, double *out_8801062151714371050) {
  h_13(state, unused, out_8801062151714371050);
}
void live_H_13(double *state, double *unused, double *out_747577663814051635) {
  H_13(state, unused, out_747577663814051635);
}
void live_h_14(double *state, double *unused, double *out_7946719621628069263) {
  h_14(state, unused, out_7946719621628069263);
}
void live_H_14(double *state, double *unused, double *out_4303269759776625623) {
  H_14(state, unused, out_4303269759776625623);
}
void live_h_33(double *state, double *unused, double *out_7166062652725206260) {
  h_33(state, unused, out_7166062652725206260);
}
void live_H_33(double *state, double *unused, double *out_3469087515566683530) {
  H_33(state, unused, out_3469087515566683530);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
