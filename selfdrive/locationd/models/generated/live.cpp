#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3524224465509537113) {
   out_3524224465509537113[0] = 0;
   out_3524224465509537113[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3524224465509537113[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3524224465509537113[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3524224465509537113[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3524224465509537113[5] = -sin(in_vec[1]);
   out_3524224465509537113[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3524224465509537113[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3524224465509537113[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3524224465509537113[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3524224465509537113[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3524224465509537113[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3524224465509537113[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3524224465509537113[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3524224465509537113[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3524224465509537113[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3524224465509537113[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3524224465509537113[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4841558462618834983) {
   out_4841558462618834983[0] = delta_x[0] + nom_x[0];
   out_4841558462618834983[1] = delta_x[1] + nom_x[1];
   out_4841558462618834983[2] = delta_x[2] + nom_x[2];
   out_4841558462618834983[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4841558462618834983[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4841558462618834983[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4841558462618834983[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4841558462618834983[7] = delta_x[6] + nom_x[7];
   out_4841558462618834983[8] = delta_x[7] + nom_x[8];
   out_4841558462618834983[9] = delta_x[8] + nom_x[9];
   out_4841558462618834983[10] = delta_x[9] + nom_x[10];
   out_4841558462618834983[11] = delta_x[10] + nom_x[11];
   out_4841558462618834983[12] = delta_x[11] + nom_x[12];
   out_4841558462618834983[13] = delta_x[12] + nom_x[13];
   out_4841558462618834983[14] = delta_x[13] + nom_x[14];
   out_4841558462618834983[15] = delta_x[14] + nom_x[15];
   out_4841558462618834983[16] = delta_x[15] + nom_x[16];
   out_4841558462618834983[17] = delta_x[16] + nom_x[17];
   out_4841558462618834983[18] = delta_x[17] + nom_x[18];
   out_4841558462618834983[19] = delta_x[18] + nom_x[19];
   out_4841558462618834983[20] = delta_x[19] + nom_x[20];
   out_4841558462618834983[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1788365292828347538) {
   out_1788365292828347538[0] = -nom_x[0] + true_x[0];
   out_1788365292828347538[1] = -nom_x[1] + true_x[1];
   out_1788365292828347538[2] = -nom_x[2] + true_x[2];
   out_1788365292828347538[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1788365292828347538[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1788365292828347538[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1788365292828347538[6] = -nom_x[7] + true_x[7];
   out_1788365292828347538[7] = -nom_x[8] + true_x[8];
   out_1788365292828347538[8] = -nom_x[9] + true_x[9];
   out_1788365292828347538[9] = -nom_x[10] + true_x[10];
   out_1788365292828347538[10] = -nom_x[11] + true_x[11];
   out_1788365292828347538[11] = -nom_x[12] + true_x[12];
   out_1788365292828347538[12] = -nom_x[13] + true_x[13];
   out_1788365292828347538[13] = -nom_x[14] + true_x[14];
   out_1788365292828347538[14] = -nom_x[15] + true_x[15];
   out_1788365292828347538[15] = -nom_x[16] + true_x[16];
   out_1788365292828347538[16] = -nom_x[17] + true_x[17];
   out_1788365292828347538[17] = -nom_x[18] + true_x[18];
   out_1788365292828347538[18] = -nom_x[19] + true_x[19];
   out_1788365292828347538[19] = -nom_x[20] + true_x[20];
   out_1788365292828347538[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7204932196825224923) {
   out_7204932196825224923[0] = 1.0;
   out_7204932196825224923[1] = 0;
   out_7204932196825224923[2] = 0;
   out_7204932196825224923[3] = 0;
   out_7204932196825224923[4] = 0;
   out_7204932196825224923[5] = 0;
   out_7204932196825224923[6] = 0;
   out_7204932196825224923[7] = 0;
   out_7204932196825224923[8] = 0;
   out_7204932196825224923[9] = 0;
   out_7204932196825224923[10] = 0;
   out_7204932196825224923[11] = 0;
   out_7204932196825224923[12] = 0;
   out_7204932196825224923[13] = 0;
   out_7204932196825224923[14] = 0;
   out_7204932196825224923[15] = 0;
   out_7204932196825224923[16] = 0;
   out_7204932196825224923[17] = 0;
   out_7204932196825224923[18] = 0;
   out_7204932196825224923[19] = 0;
   out_7204932196825224923[20] = 0;
   out_7204932196825224923[21] = 0;
   out_7204932196825224923[22] = 1.0;
   out_7204932196825224923[23] = 0;
   out_7204932196825224923[24] = 0;
   out_7204932196825224923[25] = 0;
   out_7204932196825224923[26] = 0;
   out_7204932196825224923[27] = 0;
   out_7204932196825224923[28] = 0;
   out_7204932196825224923[29] = 0;
   out_7204932196825224923[30] = 0;
   out_7204932196825224923[31] = 0;
   out_7204932196825224923[32] = 0;
   out_7204932196825224923[33] = 0;
   out_7204932196825224923[34] = 0;
   out_7204932196825224923[35] = 0;
   out_7204932196825224923[36] = 0;
   out_7204932196825224923[37] = 0;
   out_7204932196825224923[38] = 0;
   out_7204932196825224923[39] = 0;
   out_7204932196825224923[40] = 0;
   out_7204932196825224923[41] = 0;
   out_7204932196825224923[42] = 0;
   out_7204932196825224923[43] = 0;
   out_7204932196825224923[44] = 1.0;
   out_7204932196825224923[45] = 0;
   out_7204932196825224923[46] = 0;
   out_7204932196825224923[47] = 0;
   out_7204932196825224923[48] = 0;
   out_7204932196825224923[49] = 0;
   out_7204932196825224923[50] = 0;
   out_7204932196825224923[51] = 0;
   out_7204932196825224923[52] = 0;
   out_7204932196825224923[53] = 0;
   out_7204932196825224923[54] = 0;
   out_7204932196825224923[55] = 0;
   out_7204932196825224923[56] = 0;
   out_7204932196825224923[57] = 0;
   out_7204932196825224923[58] = 0;
   out_7204932196825224923[59] = 0;
   out_7204932196825224923[60] = 0;
   out_7204932196825224923[61] = 0;
   out_7204932196825224923[62] = 0;
   out_7204932196825224923[63] = 0;
   out_7204932196825224923[64] = 0;
   out_7204932196825224923[65] = 0;
   out_7204932196825224923[66] = -0.5*state[4];
   out_7204932196825224923[67] = -0.5*state[5];
   out_7204932196825224923[68] = -0.5*state[6];
   out_7204932196825224923[69] = 0;
   out_7204932196825224923[70] = 0;
   out_7204932196825224923[71] = 0;
   out_7204932196825224923[72] = 0;
   out_7204932196825224923[73] = 0;
   out_7204932196825224923[74] = 0;
   out_7204932196825224923[75] = 0;
   out_7204932196825224923[76] = 0;
   out_7204932196825224923[77] = 0;
   out_7204932196825224923[78] = 0;
   out_7204932196825224923[79] = 0;
   out_7204932196825224923[80] = 0;
   out_7204932196825224923[81] = 0;
   out_7204932196825224923[82] = 0;
   out_7204932196825224923[83] = 0;
   out_7204932196825224923[84] = 0;
   out_7204932196825224923[85] = 0;
   out_7204932196825224923[86] = 0;
   out_7204932196825224923[87] = 0.5*state[3];
   out_7204932196825224923[88] = 0.5*state[6];
   out_7204932196825224923[89] = -0.5*state[5];
   out_7204932196825224923[90] = 0;
   out_7204932196825224923[91] = 0;
   out_7204932196825224923[92] = 0;
   out_7204932196825224923[93] = 0;
   out_7204932196825224923[94] = 0;
   out_7204932196825224923[95] = 0;
   out_7204932196825224923[96] = 0;
   out_7204932196825224923[97] = 0;
   out_7204932196825224923[98] = 0;
   out_7204932196825224923[99] = 0;
   out_7204932196825224923[100] = 0;
   out_7204932196825224923[101] = 0;
   out_7204932196825224923[102] = 0;
   out_7204932196825224923[103] = 0;
   out_7204932196825224923[104] = 0;
   out_7204932196825224923[105] = 0;
   out_7204932196825224923[106] = 0;
   out_7204932196825224923[107] = 0;
   out_7204932196825224923[108] = -0.5*state[6];
   out_7204932196825224923[109] = 0.5*state[3];
   out_7204932196825224923[110] = 0.5*state[4];
   out_7204932196825224923[111] = 0;
   out_7204932196825224923[112] = 0;
   out_7204932196825224923[113] = 0;
   out_7204932196825224923[114] = 0;
   out_7204932196825224923[115] = 0;
   out_7204932196825224923[116] = 0;
   out_7204932196825224923[117] = 0;
   out_7204932196825224923[118] = 0;
   out_7204932196825224923[119] = 0;
   out_7204932196825224923[120] = 0;
   out_7204932196825224923[121] = 0;
   out_7204932196825224923[122] = 0;
   out_7204932196825224923[123] = 0;
   out_7204932196825224923[124] = 0;
   out_7204932196825224923[125] = 0;
   out_7204932196825224923[126] = 0;
   out_7204932196825224923[127] = 0;
   out_7204932196825224923[128] = 0;
   out_7204932196825224923[129] = 0.5*state[5];
   out_7204932196825224923[130] = -0.5*state[4];
   out_7204932196825224923[131] = 0.5*state[3];
   out_7204932196825224923[132] = 0;
   out_7204932196825224923[133] = 0;
   out_7204932196825224923[134] = 0;
   out_7204932196825224923[135] = 0;
   out_7204932196825224923[136] = 0;
   out_7204932196825224923[137] = 0;
   out_7204932196825224923[138] = 0;
   out_7204932196825224923[139] = 0;
   out_7204932196825224923[140] = 0;
   out_7204932196825224923[141] = 0;
   out_7204932196825224923[142] = 0;
   out_7204932196825224923[143] = 0;
   out_7204932196825224923[144] = 0;
   out_7204932196825224923[145] = 0;
   out_7204932196825224923[146] = 0;
   out_7204932196825224923[147] = 0;
   out_7204932196825224923[148] = 0;
   out_7204932196825224923[149] = 0;
   out_7204932196825224923[150] = 0;
   out_7204932196825224923[151] = 0;
   out_7204932196825224923[152] = 0;
   out_7204932196825224923[153] = 1.0;
   out_7204932196825224923[154] = 0;
   out_7204932196825224923[155] = 0;
   out_7204932196825224923[156] = 0;
   out_7204932196825224923[157] = 0;
   out_7204932196825224923[158] = 0;
   out_7204932196825224923[159] = 0;
   out_7204932196825224923[160] = 0;
   out_7204932196825224923[161] = 0;
   out_7204932196825224923[162] = 0;
   out_7204932196825224923[163] = 0;
   out_7204932196825224923[164] = 0;
   out_7204932196825224923[165] = 0;
   out_7204932196825224923[166] = 0;
   out_7204932196825224923[167] = 0;
   out_7204932196825224923[168] = 0;
   out_7204932196825224923[169] = 0;
   out_7204932196825224923[170] = 0;
   out_7204932196825224923[171] = 0;
   out_7204932196825224923[172] = 0;
   out_7204932196825224923[173] = 0;
   out_7204932196825224923[174] = 0;
   out_7204932196825224923[175] = 1.0;
   out_7204932196825224923[176] = 0;
   out_7204932196825224923[177] = 0;
   out_7204932196825224923[178] = 0;
   out_7204932196825224923[179] = 0;
   out_7204932196825224923[180] = 0;
   out_7204932196825224923[181] = 0;
   out_7204932196825224923[182] = 0;
   out_7204932196825224923[183] = 0;
   out_7204932196825224923[184] = 0;
   out_7204932196825224923[185] = 0;
   out_7204932196825224923[186] = 0;
   out_7204932196825224923[187] = 0;
   out_7204932196825224923[188] = 0;
   out_7204932196825224923[189] = 0;
   out_7204932196825224923[190] = 0;
   out_7204932196825224923[191] = 0;
   out_7204932196825224923[192] = 0;
   out_7204932196825224923[193] = 0;
   out_7204932196825224923[194] = 0;
   out_7204932196825224923[195] = 0;
   out_7204932196825224923[196] = 0;
   out_7204932196825224923[197] = 1.0;
   out_7204932196825224923[198] = 0;
   out_7204932196825224923[199] = 0;
   out_7204932196825224923[200] = 0;
   out_7204932196825224923[201] = 0;
   out_7204932196825224923[202] = 0;
   out_7204932196825224923[203] = 0;
   out_7204932196825224923[204] = 0;
   out_7204932196825224923[205] = 0;
   out_7204932196825224923[206] = 0;
   out_7204932196825224923[207] = 0;
   out_7204932196825224923[208] = 0;
   out_7204932196825224923[209] = 0;
   out_7204932196825224923[210] = 0;
   out_7204932196825224923[211] = 0;
   out_7204932196825224923[212] = 0;
   out_7204932196825224923[213] = 0;
   out_7204932196825224923[214] = 0;
   out_7204932196825224923[215] = 0;
   out_7204932196825224923[216] = 0;
   out_7204932196825224923[217] = 0;
   out_7204932196825224923[218] = 0;
   out_7204932196825224923[219] = 1.0;
   out_7204932196825224923[220] = 0;
   out_7204932196825224923[221] = 0;
   out_7204932196825224923[222] = 0;
   out_7204932196825224923[223] = 0;
   out_7204932196825224923[224] = 0;
   out_7204932196825224923[225] = 0;
   out_7204932196825224923[226] = 0;
   out_7204932196825224923[227] = 0;
   out_7204932196825224923[228] = 0;
   out_7204932196825224923[229] = 0;
   out_7204932196825224923[230] = 0;
   out_7204932196825224923[231] = 0;
   out_7204932196825224923[232] = 0;
   out_7204932196825224923[233] = 0;
   out_7204932196825224923[234] = 0;
   out_7204932196825224923[235] = 0;
   out_7204932196825224923[236] = 0;
   out_7204932196825224923[237] = 0;
   out_7204932196825224923[238] = 0;
   out_7204932196825224923[239] = 0;
   out_7204932196825224923[240] = 0;
   out_7204932196825224923[241] = 1.0;
   out_7204932196825224923[242] = 0;
   out_7204932196825224923[243] = 0;
   out_7204932196825224923[244] = 0;
   out_7204932196825224923[245] = 0;
   out_7204932196825224923[246] = 0;
   out_7204932196825224923[247] = 0;
   out_7204932196825224923[248] = 0;
   out_7204932196825224923[249] = 0;
   out_7204932196825224923[250] = 0;
   out_7204932196825224923[251] = 0;
   out_7204932196825224923[252] = 0;
   out_7204932196825224923[253] = 0;
   out_7204932196825224923[254] = 0;
   out_7204932196825224923[255] = 0;
   out_7204932196825224923[256] = 0;
   out_7204932196825224923[257] = 0;
   out_7204932196825224923[258] = 0;
   out_7204932196825224923[259] = 0;
   out_7204932196825224923[260] = 0;
   out_7204932196825224923[261] = 0;
   out_7204932196825224923[262] = 0;
   out_7204932196825224923[263] = 1.0;
   out_7204932196825224923[264] = 0;
   out_7204932196825224923[265] = 0;
   out_7204932196825224923[266] = 0;
   out_7204932196825224923[267] = 0;
   out_7204932196825224923[268] = 0;
   out_7204932196825224923[269] = 0;
   out_7204932196825224923[270] = 0;
   out_7204932196825224923[271] = 0;
   out_7204932196825224923[272] = 0;
   out_7204932196825224923[273] = 0;
   out_7204932196825224923[274] = 0;
   out_7204932196825224923[275] = 0;
   out_7204932196825224923[276] = 0;
   out_7204932196825224923[277] = 0;
   out_7204932196825224923[278] = 0;
   out_7204932196825224923[279] = 0;
   out_7204932196825224923[280] = 0;
   out_7204932196825224923[281] = 0;
   out_7204932196825224923[282] = 0;
   out_7204932196825224923[283] = 0;
   out_7204932196825224923[284] = 0;
   out_7204932196825224923[285] = 1.0;
   out_7204932196825224923[286] = 0;
   out_7204932196825224923[287] = 0;
   out_7204932196825224923[288] = 0;
   out_7204932196825224923[289] = 0;
   out_7204932196825224923[290] = 0;
   out_7204932196825224923[291] = 0;
   out_7204932196825224923[292] = 0;
   out_7204932196825224923[293] = 0;
   out_7204932196825224923[294] = 0;
   out_7204932196825224923[295] = 0;
   out_7204932196825224923[296] = 0;
   out_7204932196825224923[297] = 0;
   out_7204932196825224923[298] = 0;
   out_7204932196825224923[299] = 0;
   out_7204932196825224923[300] = 0;
   out_7204932196825224923[301] = 0;
   out_7204932196825224923[302] = 0;
   out_7204932196825224923[303] = 0;
   out_7204932196825224923[304] = 0;
   out_7204932196825224923[305] = 0;
   out_7204932196825224923[306] = 0;
   out_7204932196825224923[307] = 1.0;
   out_7204932196825224923[308] = 0;
   out_7204932196825224923[309] = 0;
   out_7204932196825224923[310] = 0;
   out_7204932196825224923[311] = 0;
   out_7204932196825224923[312] = 0;
   out_7204932196825224923[313] = 0;
   out_7204932196825224923[314] = 0;
   out_7204932196825224923[315] = 0;
   out_7204932196825224923[316] = 0;
   out_7204932196825224923[317] = 0;
   out_7204932196825224923[318] = 0;
   out_7204932196825224923[319] = 0;
   out_7204932196825224923[320] = 0;
   out_7204932196825224923[321] = 0;
   out_7204932196825224923[322] = 0;
   out_7204932196825224923[323] = 0;
   out_7204932196825224923[324] = 0;
   out_7204932196825224923[325] = 0;
   out_7204932196825224923[326] = 0;
   out_7204932196825224923[327] = 0;
   out_7204932196825224923[328] = 0;
   out_7204932196825224923[329] = 1.0;
   out_7204932196825224923[330] = 0;
   out_7204932196825224923[331] = 0;
   out_7204932196825224923[332] = 0;
   out_7204932196825224923[333] = 0;
   out_7204932196825224923[334] = 0;
   out_7204932196825224923[335] = 0;
   out_7204932196825224923[336] = 0;
   out_7204932196825224923[337] = 0;
   out_7204932196825224923[338] = 0;
   out_7204932196825224923[339] = 0;
   out_7204932196825224923[340] = 0;
   out_7204932196825224923[341] = 0;
   out_7204932196825224923[342] = 0;
   out_7204932196825224923[343] = 0;
   out_7204932196825224923[344] = 0;
   out_7204932196825224923[345] = 0;
   out_7204932196825224923[346] = 0;
   out_7204932196825224923[347] = 0;
   out_7204932196825224923[348] = 0;
   out_7204932196825224923[349] = 0;
   out_7204932196825224923[350] = 0;
   out_7204932196825224923[351] = 1.0;
   out_7204932196825224923[352] = 0;
   out_7204932196825224923[353] = 0;
   out_7204932196825224923[354] = 0;
   out_7204932196825224923[355] = 0;
   out_7204932196825224923[356] = 0;
   out_7204932196825224923[357] = 0;
   out_7204932196825224923[358] = 0;
   out_7204932196825224923[359] = 0;
   out_7204932196825224923[360] = 0;
   out_7204932196825224923[361] = 0;
   out_7204932196825224923[362] = 0;
   out_7204932196825224923[363] = 0;
   out_7204932196825224923[364] = 0;
   out_7204932196825224923[365] = 0;
   out_7204932196825224923[366] = 0;
   out_7204932196825224923[367] = 0;
   out_7204932196825224923[368] = 0;
   out_7204932196825224923[369] = 0;
   out_7204932196825224923[370] = 0;
   out_7204932196825224923[371] = 0;
   out_7204932196825224923[372] = 0;
   out_7204932196825224923[373] = 1.0;
   out_7204932196825224923[374] = 0;
   out_7204932196825224923[375] = 0;
   out_7204932196825224923[376] = 0;
   out_7204932196825224923[377] = 0;
   out_7204932196825224923[378] = 0;
   out_7204932196825224923[379] = 0;
   out_7204932196825224923[380] = 0;
   out_7204932196825224923[381] = 0;
   out_7204932196825224923[382] = 0;
   out_7204932196825224923[383] = 0;
   out_7204932196825224923[384] = 0;
   out_7204932196825224923[385] = 0;
   out_7204932196825224923[386] = 0;
   out_7204932196825224923[387] = 0;
   out_7204932196825224923[388] = 0;
   out_7204932196825224923[389] = 0;
   out_7204932196825224923[390] = 0;
   out_7204932196825224923[391] = 0;
   out_7204932196825224923[392] = 0;
   out_7204932196825224923[393] = 0;
   out_7204932196825224923[394] = 0;
   out_7204932196825224923[395] = 1.0;
   out_7204932196825224923[396] = 0;
   out_7204932196825224923[397] = 0;
   out_7204932196825224923[398] = 0;
   out_7204932196825224923[399] = 0;
   out_7204932196825224923[400] = 0;
   out_7204932196825224923[401] = 0;
   out_7204932196825224923[402] = 0;
   out_7204932196825224923[403] = 0;
   out_7204932196825224923[404] = 0;
   out_7204932196825224923[405] = 0;
   out_7204932196825224923[406] = 0;
   out_7204932196825224923[407] = 0;
   out_7204932196825224923[408] = 0;
   out_7204932196825224923[409] = 0;
   out_7204932196825224923[410] = 0;
   out_7204932196825224923[411] = 0;
   out_7204932196825224923[412] = 0;
   out_7204932196825224923[413] = 0;
   out_7204932196825224923[414] = 0;
   out_7204932196825224923[415] = 0;
   out_7204932196825224923[416] = 0;
   out_7204932196825224923[417] = 1.0;
   out_7204932196825224923[418] = 0;
   out_7204932196825224923[419] = 0;
   out_7204932196825224923[420] = 0;
   out_7204932196825224923[421] = 0;
   out_7204932196825224923[422] = 0;
   out_7204932196825224923[423] = 0;
   out_7204932196825224923[424] = 0;
   out_7204932196825224923[425] = 0;
   out_7204932196825224923[426] = 0;
   out_7204932196825224923[427] = 0;
   out_7204932196825224923[428] = 0;
   out_7204932196825224923[429] = 0;
   out_7204932196825224923[430] = 0;
   out_7204932196825224923[431] = 0;
   out_7204932196825224923[432] = 0;
   out_7204932196825224923[433] = 0;
   out_7204932196825224923[434] = 0;
   out_7204932196825224923[435] = 0;
   out_7204932196825224923[436] = 0;
   out_7204932196825224923[437] = 0;
   out_7204932196825224923[438] = 0;
   out_7204932196825224923[439] = 1.0;
   out_7204932196825224923[440] = 0;
   out_7204932196825224923[441] = 0;
   out_7204932196825224923[442] = 0;
   out_7204932196825224923[443] = 0;
   out_7204932196825224923[444] = 0;
   out_7204932196825224923[445] = 0;
   out_7204932196825224923[446] = 0;
   out_7204932196825224923[447] = 0;
   out_7204932196825224923[448] = 0;
   out_7204932196825224923[449] = 0;
   out_7204932196825224923[450] = 0;
   out_7204932196825224923[451] = 0;
   out_7204932196825224923[452] = 0;
   out_7204932196825224923[453] = 0;
   out_7204932196825224923[454] = 0;
   out_7204932196825224923[455] = 0;
   out_7204932196825224923[456] = 0;
   out_7204932196825224923[457] = 0;
   out_7204932196825224923[458] = 0;
   out_7204932196825224923[459] = 0;
   out_7204932196825224923[460] = 0;
   out_7204932196825224923[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6161481681065345003) {
   out_6161481681065345003[0] = dt*state[7] + state[0];
   out_6161481681065345003[1] = dt*state[8] + state[1];
   out_6161481681065345003[2] = dt*state[9] + state[2];
   out_6161481681065345003[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6161481681065345003[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6161481681065345003[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6161481681065345003[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6161481681065345003[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6161481681065345003[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6161481681065345003[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6161481681065345003[10] = state[10];
   out_6161481681065345003[11] = state[11];
   out_6161481681065345003[12] = state[12];
   out_6161481681065345003[13] = state[13];
   out_6161481681065345003[14] = state[14];
   out_6161481681065345003[15] = state[15];
   out_6161481681065345003[16] = state[16];
   out_6161481681065345003[17] = state[17];
   out_6161481681065345003[18] = state[18];
   out_6161481681065345003[19] = state[19];
   out_6161481681065345003[20] = state[20];
   out_6161481681065345003[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2769967596659218891) {
   out_2769967596659218891[0] = 1;
   out_2769967596659218891[1] = 0;
   out_2769967596659218891[2] = 0;
   out_2769967596659218891[3] = 0;
   out_2769967596659218891[4] = 0;
   out_2769967596659218891[5] = 0;
   out_2769967596659218891[6] = dt;
   out_2769967596659218891[7] = 0;
   out_2769967596659218891[8] = 0;
   out_2769967596659218891[9] = 0;
   out_2769967596659218891[10] = 0;
   out_2769967596659218891[11] = 0;
   out_2769967596659218891[12] = 0;
   out_2769967596659218891[13] = 0;
   out_2769967596659218891[14] = 0;
   out_2769967596659218891[15] = 0;
   out_2769967596659218891[16] = 0;
   out_2769967596659218891[17] = 0;
   out_2769967596659218891[18] = 0;
   out_2769967596659218891[19] = 0;
   out_2769967596659218891[20] = 0;
   out_2769967596659218891[21] = 0;
   out_2769967596659218891[22] = 1;
   out_2769967596659218891[23] = 0;
   out_2769967596659218891[24] = 0;
   out_2769967596659218891[25] = 0;
   out_2769967596659218891[26] = 0;
   out_2769967596659218891[27] = 0;
   out_2769967596659218891[28] = dt;
   out_2769967596659218891[29] = 0;
   out_2769967596659218891[30] = 0;
   out_2769967596659218891[31] = 0;
   out_2769967596659218891[32] = 0;
   out_2769967596659218891[33] = 0;
   out_2769967596659218891[34] = 0;
   out_2769967596659218891[35] = 0;
   out_2769967596659218891[36] = 0;
   out_2769967596659218891[37] = 0;
   out_2769967596659218891[38] = 0;
   out_2769967596659218891[39] = 0;
   out_2769967596659218891[40] = 0;
   out_2769967596659218891[41] = 0;
   out_2769967596659218891[42] = 0;
   out_2769967596659218891[43] = 0;
   out_2769967596659218891[44] = 1;
   out_2769967596659218891[45] = 0;
   out_2769967596659218891[46] = 0;
   out_2769967596659218891[47] = 0;
   out_2769967596659218891[48] = 0;
   out_2769967596659218891[49] = 0;
   out_2769967596659218891[50] = dt;
   out_2769967596659218891[51] = 0;
   out_2769967596659218891[52] = 0;
   out_2769967596659218891[53] = 0;
   out_2769967596659218891[54] = 0;
   out_2769967596659218891[55] = 0;
   out_2769967596659218891[56] = 0;
   out_2769967596659218891[57] = 0;
   out_2769967596659218891[58] = 0;
   out_2769967596659218891[59] = 0;
   out_2769967596659218891[60] = 0;
   out_2769967596659218891[61] = 0;
   out_2769967596659218891[62] = 0;
   out_2769967596659218891[63] = 0;
   out_2769967596659218891[64] = 0;
   out_2769967596659218891[65] = 0;
   out_2769967596659218891[66] = 1;
   out_2769967596659218891[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2769967596659218891[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2769967596659218891[69] = 0;
   out_2769967596659218891[70] = 0;
   out_2769967596659218891[71] = 0;
   out_2769967596659218891[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2769967596659218891[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2769967596659218891[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2769967596659218891[75] = 0;
   out_2769967596659218891[76] = 0;
   out_2769967596659218891[77] = 0;
   out_2769967596659218891[78] = 0;
   out_2769967596659218891[79] = 0;
   out_2769967596659218891[80] = 0;
   out_2769967596659218891[81] = 0;
   out_2769967596659218891[82] = 0;
   out_2769967596659218891[83] = 0;
   out_2769967596659218891[84] = 0;
   out_2769967596659218891[85] = 0;
   out_2769967596659218891[86] = 0;
   out_2769967596659218891[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2769967596659218891[88] = 1;
   out_2769967596659218891[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2769967596659218891[90] = 0;
   out_2769967596659218891[91] = 0;
   out_2769967596659218891[92] = 0;
   out_2769967596659218891[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2769967596659218891[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2769967596659218891[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2769967596659218891[96] = 0;
   out_2769967596659218891[97] = 0;
   out_2769967596659218891[98] = 0;
   out_2769967596659218891[99] = 0;
   out_2769967596659218891[100] = 0;
   out_2769967596659218891[101] = 0;
   out_2769967596659218891[102] = 0;
   out_2769967596659218891[103] = 0;
   out_2769967596659218891[104] = 0;
   out_2769967596659218891[105] = 0;
   out_2769967596659218891[106] = 0;
   out_2769967596659218891[107] = 0;
   out_2769967596659218891[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2769967596659218891[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2769967596659218891[110] = 1;
   out_2769967596659218891[111] = 0;
   out_2769967596659218891[112] = 0;
   out_2769967596659218891[113] = 0;
   out_2769967596659218891[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2769967596659218891[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2769967596659218891[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2769967596659218891[117] = 0;
   out_2769967596659218891[118] = 0;
   out_2769967596659218891[119] = 0;
   out_2769967596659218891[120] = 0;
   out_2769967596659218891[121] = 0;
   out_2769967596659218891[122] = 0;
   out_2769967596659218891[123] = 0;
   out_2769967596659218891[124] = 0;
   out_2769967596659218891[125] = 0;
   out_2769967596659218891[126] = 0;
   out_2769967596659218891[127] = 0;
   out_2769967596659218891[128] = 0;
   out_2769967596659218891[129] = 0;
   out_2769967596659218891[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2769967596659218891[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2769967596659218891[132] = 1;
   out_2769967596659218891[133] = 0;
   out_2769967596659218891[134] = 0;
   out_2769967596659218891[135] = 0;
   out_2769967596659218891[136] = 0;
   out_2769967596659218891[137] = 0;
   out_2769967596659218891[138] = 0;
   out_2769967596659218891[139] = 0;
   out_2769967596659218891[140] = 0;
   out_2769967596659218891[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2769967596659218891[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2769967596659218891[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2769967596659218891[144] = 0;
   out_2769967596659218891[145] = 0;
   out_2769967596659218891[146] = 0;
   out_2769967596659218891[147] = 0;
   out_2769967596659218891[148] = 0;
   out_2769967596659218891[149] = 0;
   out_2769967596659218891[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2769967596659218891[151] = 0;
   out_2769967596659218891[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2769967596659218891[153] = 0;
   out_2769967596659218891[154] = 1;
   out_2769967596659218891[155] = 0;
   out_2769967596659218891[156] = 0;
   out_2769967596659218891[157] = 0;
   out_2769967596659218891[158] = 0;
   out_2769967596659218891[159] = 0;
   out_2769967596659218891[160] = 0;
   out_2769967596659218891[161] = 0;
   out_2769967596659218891[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2769967596659218891[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2769967596659218891[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2769967596659218891[165] = 0;
   out_2769967596659218891[166] = 0;
   out_2769967596659218891[167] = 0;
   out_2769967596659218891[168] = 0;
   out_2769967596659218891[169] = 0;
   out_2769967596659218891[170] = 0;
   out_2769967596659218891[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2769967596659218891[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2769967596659218891[173] = 0;
   out_2769967596659218891[174] = 0;
   out_2769967596659218891[175] = 0;
   out_2769967596659218891[176] = 1;
   out_2769967596659218891[177] = 0;
   out_2769967596659218891[178] = 0;
   out_2769967596659218891[179] = 0;
   out_2769967596659218891[180] = 0;
   out_2769967596659218891[181] = 0;
   out_2769967596659218891[182] = 0;
   out_2769967596659218891[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2769967596659218891[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2769967596659218891[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2769967596659218891[186] = 0;
   out_2769967596659218891[187] = 0;
   out_2769967596659218891[188] = 0;
   out_2769967596659218891[189] = 0;
   out_2769967596659218891[190] = 0;
   out_2769967596659218891[191] = 0;
   out_2769967596659218891[192] = 0;
   out_2769967596659218891[193] = 0;
   out_2769967596659218891[194] = 0;
   out_2769967596659218891[195] = 0;
   out_2769967596659218891[196] = 0;
   out_2769967596659218891[197] = 0;
   out_2769967596659218891[198] = 1;
   out_2769967596659218891[199] = 0;
   out_2769967596659218891[200] = 0;
   out_2769967596659218891[201] = 0;
   out_2769967596659218891[202] = 0;
   out_2769967596659218891[203] = 0;
   out_2769967596659218891[204] = 0;
   out_2769967596659218891[205] = 0;
   out_2769967596659218891[206] = 0;
   out_2769967596659218891[207] = 0;
   out_2769967596659218891[208] = 0;
   out_2769967596659218891[209] = 0;
   out_2769967596659218891[210] = 0;
   out_2769967596659218891[211] = 0;
   out_2769967596659218891[212] = 0;
   out_2769967596659218891[213] = 0;
   out_2769967596659218891[214] = 0;
   out_2769967596659218891[215] = 0;
   out_2769967596659218891[216] = 0;
   out_2769967596659218891[217] = 0;
   out_2769967596659218891[218] = 0;
   out_2769967596659218891[219] = 0;
   out_2769967596659218891[220] = 1;
   out_2769967596659218891[221] = 0;
   out_2769967596659218891[222] = 0;
   out_2769967596659218891[223] = 0;
   out_2769967596659218891[224] = 0;
   out_2769967596659218891[225] = 0;
   out_2769967596659218891[226] = 0;
   out_2769967596659218891[227] = 0;
   out_2769967596659218891[228] = 0;
   out_2769967596659218891[229] = 0;
   out_2769967596659218891[230] = 0;
   out_2769967596659218891[231] = 0;
   out_2769967596659218891[232] = 0;
   out_2769967596659218891[233] = 0;
   out_2769967596659218891[234] = 0;
   out_2769967596659218891[235] = 0;
   out_2769967596659218891[236] = 0;
   out_2769967596659218891[237] = 0;
   out_2769967596659218891[238] = 0;
   out_2769967596659218891[239] = 0;
   out_2769967596659218891[240] = 0;
   out_2769967596659218891[241] = 0;
   out_2769967596659218891[242] = 1;
   out_2769967596659218891[243] = 0;
   out_2769967596659218891[244] = 0;
   out_2769967596659218891[245] = 0;
   out_2769967596659218891[246] = 0;
   out_2769967596659218891[247] = 0;
   out_2769967596659218891[248] = 0;
   out_2769967596659218891[249] = 0;
   out_2769967596659218891[250] = 0;
   out_2769967596659218891[251] = 0;
   out_2769967596659218891[252] = 0;
   out_2769967596659218891[253] = 0;
   out_2769967596659218891[254] = 0;
   out_2769967596659218891[255] = 0;
   out_2769967596659218891[256] = 0;
   out_2769967596659218891[257] = 0;
   out_2769967596659218891[258] = 0;
   out_2769967596659218891[259] = 0;
   out_2769967596659218891[260] = 0;
   out_2769967596659218891[261] = 0;
   out_2769967596659218891[262] = 0;
   out_2769967596659218891[263] = 0;
   out_2769967596659218891[264] = 1;
   out_2769967596659218891[265] = 0;
   out_2769967596659218891[266] = 0;
   out_2769967596659218891[267] = 0;
   out_2769967596659218891[268] = 0;
   out_2769967596659218891[269] = 0;
   out_2769967596659218891[270] = 0;
   out_2769967596659218891[271] = 0;
   out_2769967596659218891[272] = 0;
   out_2769967596659218891[273] = 0;
   out_2769967596659218891[274] = 0;
   out_2769967596659218891[275] = 0;
   out_2769967596659218891[276] = 0;
   out_2769967596659218891[277] = 0;
   out_2769967596659218891[278] = 0;
   out_2769967596659218891[279] = 0;
   out_2769967596659218891[280] = 0;
   out_2769967596659218891[281] = 0;
   out_2769967596659218891[282] = 0;
   out_2769967596659218891[283] = 0;
   out_2769967596659218891[284] = 0;
   out_2769967596659218891[285] = 0;
   out_2769967596659218891[286] = 1;
   out_2769967596659218891[287] = 0;
   out_2769967596659218891[288] = 0;
   out_2769967596659218891[289] = 0;
   out_2769967596659218891[290] = 0;
   out_2769967596659218891[291] = 0;
   out_2769967596659218891[292] = 0;
   out_2769967596659218891[293] = 0;
   out_2769967596659218891[294] = 0;
   out_2769967596659218891[295] = 0;
   out_2769967596659218891[296] = 0;
   out_2769967596659218891[297] = 0;
   out_2769967596659218891[298] = 0;
   out_2769967596659218891[299] = 0;
   out_2769967596659218891[300] = 0;
   out_2769967596659218891[301] = 0;
   out_2769967596659218891[302] = 0;
   out_2769967596659218891[303] = 0;
   out_2769967596659218891[304] = 0;
   out_2769967596659218891[305] = 0;
   out_2769967596659218891[306] = 0;
   out_2769967596659218891[307] = 0;
   out_2769967596659218891[308] = 1;
   out_2769967596659218891[309] = 0;
   out_2769967596659218891[310] = 0;
   out_2769967596659218891[311] = 0;
   out_2769967596659218891[312] = 0;
   out_2769967596659218891[313] = 0;
   out_2769967596659218891[314] = 0;
   out_2769967596659218891[315] = 0;
   out_2769967596659218891[316] = 0;
   out_2769967596659218891[317] = 0;
   out_2769967596659218891[318] = 0;
   out_2769967596659218891[319] = 0;
   out_2769967596659218891[320] = 0;
   out_2769967596659218891[321] = 0;
   out_2769967596659218891[322] = 0;
   out_2769967596659218891[323] = 0;
   out_2769967596659218891[324] = 0;
   out_2769967596659218891[325] = 0;
   out_2769967596659218891[326] = 0;
   out_2769967596659218891[327] = 0;
   out_2769967596659218891[328] = 0;
   out_2769967596659218891[329] = 0;
   out_2769967596659218891[330] = 1;
   out_2769967596659218891[331] = 0;
   out_2769967596659218891[332] = 0;
   out_2769967596659218891[333] = 0;
   out_2769967596659218891[334] = 0;
   out_2769967596659218891[335] = 0;
   out_2769967596659218891[336] = 0;
   out_2769967596659218891[337] = 0;
   out_2769967596659218891[338] = 0;
   out_2769967596659218891[339] = 0;
   out_2769967596659218891[340] = 0;
   out_2769967596659218891[341] = 0;
   out_2769967596659218891[342] = 0;
   out_2769967596659218891[343] = 0;
   out_2769967596659218891[344] = 0;
   out_2769967596659218891[345] = 0;
   out_2769967596659218891[346] = 0;
   out_2769967596659218891[347] = 0;
   out_2769967596659218891[348] = 0;
   out_2769967596659218891[349] = 0;
   out_2769967596659218891[350] = 0;
   out_2769967596659218891[351] = 0;
   out_2769967596659218891[352] = 1;
   out_2769967596659218891[353] = 0;
   out_2769967596659218891[354] = 0;
   out_2769967596659218891[355] = 0;
   out_2769967596659218891[356] = 0;
   out_2769967596659218891[357] = 0;
   out_2769967596659218891[358] = 0;
   out_2769967596659218891[359] = 0;
   out_2769967596659218891[360] = 0;
   out_2769967596659218891[361] = 0;
   out_2769967596659218891[362] = 0;
   out_2769967596659218891[363] = 0;
   out_2769967596659218891[364] = 0;
   out_2769967596659218891[365] = 0;
   out_2769967596659218891[366] = 0;
   out_2769967596659218891[367] = 0;
   out_2769967596659218891[368] = 0;
   out_2769967596659218891[369] = 0;
   out_2769967596659218891[370] = 0;
   out_2769967596659218891[371] = 0;
   out_2769967596659218891[372] = 0;
   out_2769967596659218891[373] = 0;
   out_2769967596659218891[374] = 1;
   out_2769967596659218891[375] = 0;
   out_2769967596659218891[376] = 0;
   out_2769967596659218891[377] = 0;
   out_2769967596659218891[378] = 0;
   out_2769967596659218891[379] = 0;
   out_2769967596659218891[380] = 0;
   out_2769967596659218891[381] = 0;
   out_2769967596659218891[382] = 0;
   out_2769967596659218891[383] = 0;
   out_2769967596659218891[384] = 0;
   out_2769967596659218891[385] = 0;
   out_2769967596659218891[386] = 0;
   out_2769967596659218891[387] = 0;
   out_2769967596659218891[388] = 0;
   out_2769967596659218891[389] = 0;
   out_2769967596659218891[390] = 0;
   out_2769967596659218891[391] = 0;
   out_2769967596659218891[392] = 0;
   out_2769967596659218891[393] = 0;
   out_2769967596659218891[394] = 0;
   out_2769967596659218891[395] = 0;
   out_2769967596659218891[396] = 1;
   out_2769967596659218891[397] = 0;
   out_2769967596659218891[398] = 0;
   out_2769967596659218891[399] = 0;
   out_2769967596659218891[400] = 0;
   out_2769967596659218891[401] = 0;
   out_2769967596659218891[402] = 0;
   out_2769967596659218891[403] = 0;
   out_2769967596659218891[404] = 0;
   out_2769967596659218891[405] = 0;
   out_2769967596659218891[406] = 0;
   out_2769967596659218891[407] = 0;
   out_2769967596659218891[408] = 0;
   out_2769967596659218891[409] = 0;
   out_2769967596659218891[410] = 0;
   out_2769967596659218891[411] = 0;
   out_2769967596659218891[412] = 0;
   out_2769967596659218891[413] = 0;
   out_2769967596659218891[414] = 0;
   out_2769967596659218891[415] = 0;
   out_2769967596659218891[416] = 0;
   out_2769967596659218891[417] = 0;
   out_2769967596659218891[418] = 1;
   out_2769967596659218891[419] = 0;
   out_2769967596659218891[420] = 0;
   out_2769967596659218891[421] = 0;
   out_2769967596659218891[422] = 0;
   out_2769967596659218891[423] = 0;
   out_2769967596659218891[424] = 0;
   out_2769967596659218891[425] = 0;
   out_2769967596659218891[426] = 0;
   out_2769967596659218891[427] = 0;
   out_2769967596659218891[428] = 0;
   out_2769967596659218891[429] = 0;
   out_2769967596659218891[430] = 0;
   out_2769967596659218891[431] = 0;
   out_2769967596659218891[432] = 0;
   out_2769967596659218891[433] = 0;
   out_2769967596659218891[434] = 0;
   out_2769967596659218891[435] = 0;
   out_2769967596659218891[436] = 0;
   out_2769967596659218891[437] = 0;
   out_2769967596659218891[438] = 0;
   out_2769967596659218891[439] = 0;
   out_2769967596659218891[440] = 1;
}
void h_4(double *state, double *unused, double *out_1333471928980887589) {
   out_1333471928980887589[0] = state[10] + state[13];
   out_1333471928980887589[1] = state[11] + state[14];
   out_1333471928980887589[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8623365502685525078) {
   out_8623365502685525078[0] = 0;
   out_8623365502685525078[1] = 0;
   out_8623365502685525078[2] = 0;
   out_8623365502685525078[3] = 0;
   out_8623365502685525078[4] = 0;
   out_8623365502685525078[5] = 0;
   out_8623365502685525078[6] = 0;
   out_8623365502685525078[7] = 0;
   out_8623365502685525078[8] = 0;
   out_8623365502685525078[9] = 0;
   out_8623365502685525078[10] = 1;
   out_8623365502685525078[11] = 0;
   out_8623365502685525078[12] = 0;
   out_8623365502685525078[13] = 1;
   out_8623365502685525078[14] = 0;
   out_8623365502685525078[15] = 0;
   out_8623365502685525078[16] = 0;
   out_8623365502685525078[17] = 0;
   out_8623365502685525078[18] = 0;
   out_8623365502685525078[19] = 0;
   out_8623365502685525078[20] = 0;
   out_8623365502685525078[21] = 0;
   out_8623365502685525078[22] = 0;
   out_8623365502685525078[23] = 0;
   out_8623365502685525078[24] = 0;
   out_8623365502685525078[25] = 0;
   out_8623365502685525078[26] = 0;
   out_8623365502685525078[27] = 0;
   out_8623365502685525078[28] = 0;
   out_8623365502685525078[29] = 0;
   out_8623365502685525078[30] = 0;
   out_8623365502685525078[31] = 0;
   out_8623365502685525078[32] = 0;
   out_8623365502685525078[33] = 1;
   out_8623365502685525078[34] = 0;
   out_8623365502685525078[35] = 0;
   out_8623365502685525078[36] = 1;
   out_8623365502685525078[37] = 0;
   out_8623365502685525078[38] = 0;
   out_8623365502685525078[39] = 0;
   out_8623365502685525078[40] = 0;
   out_8623365502685525078[41] = 0;
   out_8623365502685525078[42] = 0;
   out_8623365502685525078[43] = 0;
   out_8623365502685525078[44] = 0;
   out_8623365502685525078[45] = 0;
   out_8623365502685525078[46] = 0;
   out_8623365502685525078[47] = 0;
   out_8623365502685525078[48] = 0;
   out_8623365502685525078[49] = 0;
   out_8623365502685525078[50] = 0;
   out_8623365502685525078[51] = 0;
   out_8623365502685525078[52] = 0;
   out_8623365502685525078[53] = 0;
   out_8623365502685525078[54] = 0;
   out_8623365502685525078[55] = 0;
   out_8623365502685525078[56] = 1;
   out_8623365502685525078[57] = 0;
   out_8623365502685525078[58] = 0;
   out_8623365502685525078[59] = 1;
   out_8623365502685525078[60] = 0;
   out_8623365502685525078[61] = 0;
   out_8623365502685525078[62] = 0;
   out_8623365502685525078[63] = 0;
   out_8623365502685525078[64] = 0;
   out_8623365502685525078[65] = 0;
}
void h_9(double *state, double *unused, double *out_7687274584415314923) {
   out_7687274584415314923[0] = state[10];
   out_7687274584415314923[1] = state[11];
   out_7687274584415314923[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2536159635759579068) {
   out_2536159635759579068[0] = 0;
   out_2536159635759579068[1] = 0;
   out_2536159635759579068[2] = 0;
   out_2536159635759579068[3] = 0;
   out_2536159635759579068[4] = 0;
   out_2536159635759579068[5] = 0;
   out_2536159635759579068[6] = 0;
   out_2536159635759579068[7] = 0;
   out_2536159635759579068[8] = 0;
   out_2536159635759579068[9] = 0;
   out_2536159635759579068[10] = 1;
   out_2536159635759579068[11] = 0;
   out_2536159635759579068[12] = 0;
   out_2536159635759579068[13] = 0;
   out_2536159635759579068[14] = 0;
   out_2536159635759579068[15] = 0;
   out_2536159635759579068[16] = 0;
   out_2536159635759579068[17] = 0;
   out_2536159635759579068[18] = 0;
   out_2536159635759579068[19] = 0;
   out_2536159635759579068[20] = 0;
   out_2536159635759579068[21] = 0;
   out_2536159635759579068[22] = 0;
   out_2536159635759579068[23] = 0;
   out_2536159635759579068[24] = 0;
   out_2536159635759579068[25] = 0;
   out_2536159635759579068[26] = 0;
   out_2536159635759579068[27] = 0;
   out_2536159635759579068[28] = 0;
   out_2536159635759579068[29] = 0;
   out_2536159635759579068[30] = 0;
   out_2536159635759579068[31] = 0;
   out_2536159635759579068[32] = 0;
   out_2536159635759579068[33] = 1;
   out_2536159635759579068[34] = 0;
   out_2536159635759579068[35] = 0;
   out_2536159635759579068[36] = 0;
   out_2536159635759579068[37] = 0;
   out_2536159635759579068[38] = 0;
   out_2536159635759579068[39] = 0;
   out_2536159635759579068[40] = 0;
   out_2536159635759579068[41] = 0;
   out_2536159635759579068[42] = 0;
   out_2536159635759579068[43] = 0;
   out_2536159635759579068[44] = 0;
   out_2536159635759579068[45] = 0;
   out_2536159635759579068[46] = 0;
   out_2536159635759579068[47] = 0;
   out_2536159635759579068[48] = 0;
   out_2536159635759579068[49] = 0;
   out_2536159635759579068[50] = 0;
   out_2536159635759579068[51] = 0;
   out_2536159635759579068[52] = 0;
   out_2536159635759579068[53] = 0;
   out_2536159635759579068[54] = 0;
   out_2536159635759579068[55] = 0;
   out_2536159635759579068[56] = 1;
   out_2536159635759579068[57] = 0;
   out_2536159635759579068[58] = 0;
   out_2536159635759579068[59] = 0;
   out_2536159635759579068[60] = 0;
   out_2536159635759579068[61] = 0;
   out_2536159635759579068[62] = 0;
   out_2536159635759579068[63] = 0;
   out_2536159635759579068[64] = 0;
   out_2536159635759579068[65] = 0;
}
void h_10(double *state, double *unused, double *out_3192518349000482278) {
   out_3192518349000482278[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3192518349000482278[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3192518349000482278[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6903079679676235414) {
   out_6903079679676235414[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6903079679676235414[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6903079679676235414[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6903079679676235414[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6903079679676235414[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6903079679676235414[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6903079679676235414[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6903079679676235414[7] = 0;
   out_6903079679676235414[8] = 0;
   out_6903079679676235414[9] = 0;
   out_6903079679676235414[10] = 0;
   out_6903079679676235414[11] = 0;
   out_6903079679676235414[12] = 0;
   out_6903079679676235414[13] = 0;
   out_6903079679676235414[14] = 0;
   out_6903079679676235414[15] = 0;
   out_6903079679676235414[16] = 1;
   out_6903079679676235414[17] = 0;
   out_6903079679676235414[18] = 0;
   out_6903079679676235414[19] = 1;
   out_6903079679676235414[20] = 0;
   out_6903079679676235414[21] = 0;
   out_6903079679676235414[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6903079679676235414[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6903079679676235414[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6903079679676235414[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6903079679676235414[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6903079679676235414[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6903079679676235414[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6903079679676235414[29] = 0;
   out_6903079679676235414[30] = 0;
   out_6903079679676235414[31] = 0;
   out_6903079679676235414[32] = 0;
   out_6903079679676235414[33] = 0;
   out_6903079679676235414[34] = 0;
   out_6903079679676235414[35] = 0;
   out_6903079679676235414[36] = 0;
   out_6903079679676235414[37] = 0;
   out_6903079679676235414[38] = 0;
   out_6903079679676235414[39] = 1;
   out_6903079679676235414[40] = 0;
   out_6903079679676235414[41] = 0;
   out_6903079679676235414[42] = 1;
   out_6903079679676235414[43] = 0;
   out_6903079679676235414[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6903079679676235414[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6903079679676235414[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6903079679676235414[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6903079679676235414[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6903079679676235414[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6903079679676235414[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6903079679676235414[51] = 0;
   out_6903079679676235414[52] = 0;
   out_6903079679676235414[53] = 0;
   out_6903079679676235414[54] = 0;
   out_6903079679676235414[55] = 0;
   out_6903079679676235414[56] = 0;
   out_6903079679676235414[57] = 0;
   out_6903079679676235414[58] = 0;
   out_6903079679676235414[59] = 0;
   out_6903079679676235414[60] = 0;
   out_6903079679676235414[61] = 0;
   out_6903079679676235414[62] = 1;
   out_6903079679676235414[63] = 0;
   out_6903079679676235414[64] = 0;
   out_6903079679676235414[65] = 1;
}
void h_12(double *state, double *unused, double *out_4397812839724453125) {
   out_4397812839724453125[0] = state[0];
   out_4397812839724453125[1] = state[1];
   out_4397812839724453125[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2242107125642792082) {
   out_2242107125642792082[0] = 1;
   out_2242107125642792082[1] = 0;
   out_2242107125642792082[2] = 0;
   out_2242107125642792082[3] = 0;
   out_2242107125642792082[4] = 0;
   out_2242107125642792082[5] = 0;
   out_2242107125642792082[6] = 0;
   out_2242107125642792082[7] = 0;
   out_2242107125642792082[8] = 0;
   out_2242107125642792082[9] = 0;
   out_2242107125642792082[10] = 0;
   out_2242107125642792082[11] = 0;
   out_2242107125642792082[12] = 0;
   out_2242107125642792082[13] = 0;
   out_2242107125642792082[14] = 0;
   out_2242107125642792082[15] = 0;
   out_2242107125642792082[16] = 0;
   out_2242107125642792082[17] = 0;
   out_2242107125642792082[18] = 0;
   out_2242107125642792082[19] = 0;
   out_2242107125642792082[20] = 0;
   out_2242107125642792082[21] = 0;
   out_2242107125642792082[22] = 0;
   out_2242107125642792082[23] = 1;
   out_2242107125642792082[24] = 0;
   out_2242107125642792082[25] = 0;
   out_2242107125642792082[26] = 0;
   out_2242107125642792082[27] = 0;
   out_2242107125642792082[28] = 0;
   out_2242107125642792082[29] = 0;
   out_2242107125642792082[30] = 0;
   out_2242107125642792082[31] = 0;
   out_2242107125642792082[32] = 0;
   out_2242107125642792082[33] = 0;
   out_2242107125642792082[34] = 0;
   out_2242107125642792082[35] = 0;
   out_2242107125642792082[36] = 0;
   out_2242107125642792082[37] = 0;
   out_2242107125642792082[38] = 0;
   out_2242107125642792082[39] = 0;
   out_2242107125642792082[40] = 0;
   out_2242107125642792082[41] = 0;
   out_2242107125642792082[42] = 0;
   out_2242107125642792082[43] = 0;
   out_2242107125642792082[44] = 0;
   out_2242107125642792082[45] = 0;
   out_2242107125642792082[46] = 1;
   out_2242107125642792082[47] = 0;
   out_2242107125642792082[48] = 0;
   out_2242107125642792082[49] = 0;
   out_2242107125642792082[50] = 0;
   out_2242107125642792082[51] = 0;
   out_2242107125642792082[52] = 0;
   out_2242107125642792082[53] = 0;
   out_2242107125642792082[54] = 0;
   out_2242107125642792082[55] = 0;
   out_2242107125642792082[56] = 0;
   out_2242107125642792082[57] = 0;
   out_2242107125642792082[58] = 0;
   out_2242107125642792082[59] = 0;
   out_2242107125642792082[60] = 0;
   out_2242107125642792082[61] = 0;
   out_2242107125642792082[62] = 0;
   out_2242107125642792082[63] = 0;
   out_2242107125642792082[64] = 0;
   out_2242107125642792082[65] = 0;
}
void h_35(double *state, double *unused, double *out_6283775479775719537) {
   out_6283775479775719537[0] = state[7];
   out_6283775479775719537[1] = state[8];
   out_6283775479775719537[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2058359130667051034) {
   out_2058359130667051034[0] = 0;
   out_2058359130667051034[1] = 0;
   out_2058359130667051034[2] = 0;
   out_2058359130667051034[3] = 0;
   out_2058359130667051034[4] = 0;
   out_2058359130667051034[5] = 0;
   out_2058359130667051034[6] = 0;
   out_2058359130667051034[7] = 1;
   out_2058359130667051034[8] = 0;
   out_2058359130667051034[9] = 0;
   out_2058359130667051034[10] = 0;
   out_2058359130667051034[11] = 0;
   out_2058359130667051034[12] = 0;
   out_2058359130667051034[13] = 0;
   out_2058359130667051034[14] = 0;
   out_2058359130667051034[15] = 0;
   out_2058359130667051034[16] = 0;
   out_2058359130667051034[17] = 0;
   out_2058359130667051034[18] = 0;
   out_2058359130667051034[19] = 0;
   out_2058359130667051034[20] = 0;
   out_2058359130667051034[21] = 0;
   out_2058359130667051034[22] = 0;
   out_2058359130667051034[23] = 0;
   out_2058359130667051034[24] = 0;
   out_2058359130667051034[25] = 0;
   out_2058359130667051034[26] = 0;
   out_2058359130667051034[27] = 0;
   out_2058359130667051034[28] = 0;
   out_2058359130667051034[29] = 0;
   out_2058359130667051034[30] = 1;
   out_2058359130667051034[31] = 0;
   out_2058359130667051034[32] = 0;
   out_2058359130667051034[33] = 0;
   out_2058359130667051034[34] = 0;
   out_2058359130667051034[35] = 0;
   out_2058359130667051034[36] = 0;
   out_2058359130667051034[37] = 0;
   out_2058359130667051034[38] = 0;
   out_2058359130667051034[39] = 0;
   out_2058359130667051034[40] = 0;
   out_2058359130667051034[41] = 0;
   out_2058359130667051034[42] = 0;
   out_2058359130667051034[43] = 0;
   out_2058359130667051034[44] = 0;
   out_2058359130667051034[45] = 0;
   out_2058359130667051034[46] = 0;
   out_2058359130667051034[47] = 0;
   out_2058359130667051034[48] = 0;
   out_2058359130667051034[49] = 0;
   out_2058359130667051034[50] = 0;
   out_2058359130667051034[51] = 0;
   out_2058359130667051034[52] = 0;
   out_2058359130667051034[53] = 1;
   out_2058359130667051034[54] = 0;
   out_2058359130667051034[55] = 0;
   out_2058359130667051034[56] = 0;
   out_2058359130667051034[57] = 0;
   out_2058359130667051034[58] = 0;
   out_2058359130667051034[59] = 0;
   out_2058359130667051034[60] = 0;
   out_2058359130667051034[61] = 0;
   out_2058359130667051034[62] = 0;
   out_2058359130667051034[63] = 0;
   out_2058359130667051034[64] = 0;
   out_2058359130667051034[65] = 0;
}
void h_32(double *state, double *unused, double *out_4308168376843047634) {
   out_4308168376843047634[0] = state[3];
   out_4308168376843047634[1] = state[4];
   out_4308168376843047634[2] = state[5];
   out_4308168376843047634[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8101556023362318764) {
   out_8101556023362318764[0] = 0;
   out_8101556023362318764[1] = 0;
   out_8101556023362318764[2] = 0;
   out_8101556023362318764[3] = 1;
   out_8101556023362318764[4] = 0;
   out_8101556023362318764[5] = 0;
   out_8101556023362318764[6] = 0;
   out_8101556023362318764[7] = 0;
   out_8101556023362318764[8] = 0;
   out_8101556023362318764[9] = 0;
   out_8101556023362318764[10] = 0;
   out_8101556023362318764[11] = 0;
   out_8101556023362318764[12] = 0;
   out_8101556023362318764[13] = 0;
   out_8101556023362318764[14] = 0;
   out_8101556023362318764[15] = 0;
   out_8101556023362318764[16] = 0;
   out_8101556023362318764[17] = 0;
   out_8101556023362318764[18] = 0;
   out_8101556023362318764[19] = 0;
   out_8101556023362318764[20] = 0;
   out_8101556023362318764[21] = 0;
   out_8101556023362318764[22] = 0;
   out_8101556023362318764[23] = 0;
   out_8101556023362318764[24] = 0;
   out_8101556023362318764[25] = 0;
   out_8101556023362318764[26] = 1;
   out_8101556023362318764[27] = 0;
   out_8101556023362318764[28] = 0;
   out_8101556023362318764[29] = 0;
   out_8101556023362318764[30] = 0;
   out_8101556023362318764[31] = 0;
   out_8101556023362318764[32] = 0;
   out_8101556023362318764[33] = 0;
   out_8101556023362318764[34] = 0;
   out_8101556023362318764[35] = 0;
   out_8101556023362318764[36] = 0;
   out_8101556023362318764[37] = 0;
   out_8101556023362318764[38] = 0;
   out_8101556023362318764[39] = 0;
   out_8101556023362318764[40] = 0;
   out_8101556023362318764[41] = 0;
   out_8101556023362318764[42] = 0;
   out_8101556023362318764[43] = 0;
   out_8101556023362318764[44] = 0;
   out_8101556023362318764[45] = 0;
   out_8101556023362318764[46] = 0;
   out_8101556023362318764[47] = 0;
   out_8101556023362318764[48] = 0;
   out_8101556023362318764[49] = 1;
   out_8101556023362318764[50] = 0;
   out_8101556023362318764[51] = 0;
   out_8101556023362318764[52] = 0;
   out_8101556023362318764[53] = 0;
   out_8101556023362318764[54] = 0;
   out_8101556023362318764[55] = 0;
   out_8101556023362318764[56] = 0;
   out_8101556023362318764[57] = 0;
   out_8101556023362318764[58] = 0;
   out_8101556023362318764[59] = 0;
   out_8101556023362318764[60] = 0;
   out_8101556023362318764[61] = 0;
   out_8101556023362318764[62] = 0;
   out_8101556023362318764[63] = 0;
   out_8101556023362318764[64] = 0;
   out_8101556023362318764[65] = 0;
   out_8101556023362318764[66] = 0;
   out_8101556023362318764[67] = 0;
   out_8101556023362318764[68] = 0;
   out_8101556023362318764[69] = 0;
   out_8101556023362318764[70] = 0;
   out_8101556023362318764[71] = 0;
   out_8101556023362318764[72] = 1;
   out_8101556023362318764[73] = 0;
   out_8101556023362318764[74] = 0;
   out_8101556023362318764[75] = 0;
   out_8101556023362318764[76] = 0;
   out_8101556023362318764[77] = 0;
   out_8101556023362318764[78] = 0;
   out_8101556023362318764[79] = 0;
   out_8101556023362318764[80] = 0;
   out_8101556023362318764[81] = 0;
   out_8101556023362318764[82] = 0;
   out_8101556023362318764[83] = 0;
   out_8101556023362318764[84] = 0;
   out_8101556023362318764[85] = 0;
   out_8101556023362318764[86] = 0;
   out_8101556023362318764[87] = 0;
}
void h_13(double *state, double *unused, double *out_1515899786468243092) {
   out_1515899786468243092[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1515899786468243092[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1515899786468243092[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8695684081455215083) {
   out_8695684081455215083[0] = 0;
   out_8695684081455215083[1] = 0;
   out_8695684081455215083[2] = 0;
   out_8695684081455215083[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8695684081455215083[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8695684081455215083[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8695684081455215083[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8695684081455215083[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8695684081455215083[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8695684081455215083[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8695684081455215083[10] = 0;
   out_8695684081455215083[11] = 0;
   out_8695684081455215083[12] = 0;
   out_8695684081455215083[13] = 0;
   out_8695684081455215083[14] = 0;
   out_8695684081455215083[15] = 0;
   out_8695684081455215083[16] = 0;
   out_8695684081455215083[17] = 0;
   out_8695684081455215083[18] = 0;
   out_8695684081455215083[19] = 0;
   out_8695684081455215083[20] = 0;
   out_8695684081455215083[21] = 0;
   out_8695684081455215083[22] = 0;
   out_8695684081455215083[23] = 0;
   out_8695684081455215083[24] = 0;
   out_8695684081455215083[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8695684081455215083[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8695684081455215083[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8695684081455215083[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8695684081455215083[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8695684081455215083[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8695684081455215083[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8695684081455215083[32] = 0;
   out_8695684081455215083[33] = 0;
   out_8695684081455215083[34] = 0;
   out_8695684081455215083[35] = 0;
   out_8695684081455215083[36] = 0;
   out_8695684081455215083[37] = 0;
   out_8695684081455215083[38] = 0;
   out_8695684081455215083[39] = 0;
   out_8695684081455215083[40] = 0;
   out_8695684081455215083[41] = 0;
   out_8695684081455215083[42] = 0;
   out_8695684081455215083[43] = 0;
   out_8695684081455215083[44] = 0;
   out_8695684081455215083[45] = 0;
   out_8695684081455215083[46] = 0;
   out_8695684081455215083[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8695684081455215083[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8695684081455215083[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8695684081455215083[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8695684081455215083[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8695684081455215083[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8695684081455215083[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8695684081455215083[54] = 0;
   out_8695684081455215083[55] = 0;
   out_8695684081455215083[56] = 0;
   out_8695684081455215083[57] = 0;
   out_8695684081455215083[58] = 0;
   out_8695684081455215083[59] = 0;
   out_8695684081455215083[60] = 0;
   out_8695684081455215083[61] = 0;
   out_8695684081455215083[62] = 0;
   out_8695684081455215083[63] = 0;
   out_8695684081455215083[64] = 0;
   out_8695684081455215083[65] = 0;
}
void h_14(double *state, double *unused, double *out_7687274584415314923) {
   out_7687274584415314923[0] = state[10];
   out_7687274584415314923[1] = state[11];
   out_7687274584415314923[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2536159635759579068) {
   out_2536159635759579068[0] = 0;
   out_2536159635759579068[1] = 0;
   out_2536159635759579068[2] = 0;
   out_2536159635759579068[3] = 0;
   out_2536159635759579068[4] = 0;
   out_2536159635759579068[5] = 0;
   out_2536159635759579068[6] = 0;
   out_2536159635759579068[7] = 0;
   out_2536159635759579068[8] = 0;
   out_2536159635759579068[9] = 0;
   out_2536159635759579068[10] = 1;
   out_2536159635759579068[11] = 0;
   out_2536159635759579068[12] = 0;
   out_2536159635759579068[13] = 0;
   out_2536159635759579068[14] = 0;
   out_2536159635759579068[15] = 0;
   out_2536159635759579068[16] = 0;
   out_2536159635759579068[17] = 0;
   out_2536159635759579068[18] = 0;
   out_2536159635759579068[19] = 0;
   out_2536159635759579068[20] = 0;
   out_2536159635759579068[21] = 0;
   out_2536159635759579068[22] = 0;
   out_2536159635759579068[23] = 0;
   out_2536159635759579068[24] = 0;
   out_2536159635759579068[25] = 0;
   out_2536159635759579068[26] = 0;
   out_2536159635759579068[27] = 0;
   out_2536159635759579068[28] = 0;
   out_2536159635759579068[29] = 0;
   out_2536159635759579068[30] = 0;
   out_2536159635759579068[31] = 0;
   out_2536159635759579068[32] = 0;
   out_2536159635759579068[33] = 1;
   out_2536159635759579068[34] = 0;
   out_2536159635759579068[35] = 0;
   out_2536159635759579068[36] = 0;
   out_2536159635759579068[37] = 0;
   out_2536159635759579068[38] = 0;
   out_2536159635759579068[39] = 0;
   out_2536159635759579068[40] = 0;
   out_2536159635759579068[41] = 0;
   out_2536159635759579068[42] = 0;
   out_2536159635759579068[43] = 0;
   out_2536159635759579068[44] = 0;
   out_2536159635759579068[45] = 0;
   out_2536159635759579068[46] = 0;
   out_2536159635759579068[47] = 0;
   out_2536159635759579068[48] = 0;
   out_2536159635759579068[49] = 0;
   out_2536159635759579068[50] = 0;
   out_2536159635759579068[51] = 0;
   out_2536159635759579068[52] = 0;
   out_2536159635759579068[53] = 0;
   out_2536159635759579068[54] = 0;
   out_2536159635759579068[55] = 0;
   out_2536159635759579068[56] = 1;
   out_2536159635759579068[57] = 0;
   out_2536159635759579068[58] = 0;
   out_2536159635759579068[59] = 0;
   out_2536159635759579068[60] = 0;
   out_2536159635759579068[61] = 0;
   out_2536159635759579068[62] = 0;
   out_2536159635759579068[63] = 0;
   out_2536159635759579068[64] = 0;
   out_2536159635759579068[65] = 0;
}
void h_33(double *state, double *unused, double *out_526630750331052794) {
   out_526630750331052794[0] = state[16];
   out_526630750331052794[1] = state[17];
   out_526630750331052794[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1092197873971806570) {
   out_1092197873971806570[0] = 0;
   out_1092197873971806570[1] = 0;
   out_1092197873971806570[2] = 0;
   out_1092197873971806570[3] = 0;
   out_1092197873971806570[4] = 0;
   out_1092197873971806570[5] = 0;
   out_1092197873971806570[6] = 0;
   out_1092197873971806570[7] = 0;
   out_1092197873971806570[8] = 0;
   out_1092197873971806570[9] = 0;
   out_1092197873971806570[10] = 0;
   out_1092197873971806570[11] = 0;
   out_1092197873971806570[12] = 0;
   out_1092197873971806570[13] = 0;
   out_1092197873971806570[14] = 0;
   out_1092197873971806570[15] = 0;
   out_1092197873971806570[16] = 1;
   out_1092197873971806570[17] = 0;
   out_1092197873971806570[18] = 0;
   out_1092197873971806570[19] = 0;
   out_1092197873971806570[20] = 0;
   out_1092197873971806570[21] = 0;
   out_1092197873971806570[22] = 0;
   out_1092197873971806570[23] = 0;
   out_1092197873971806570[24] = 0;
   out_1092197873971806570[25] = 0;
   out_1092197873971806570[26] = 0;
   out_1092197873971806570[27] = 0;
   out_1092197873971806570[28] = 0;
   out_1092197873971806570[29] = 0;
   out_1092197873971806570[30] = 0;
   out_1092197873971806570[31] = 0;
   out_1092197873971806570[32] = 0;
   out_1092197873971806570[33] = 0;
   out_1092197873971806570[34] = 0;
   out_1092197873971806570[35] = 0;
   out_1092197873971806570[36] = 0;
   out_1092197873971806570[37] = 0;
   out_1092197873971806570[38] = 0;
   out_1092197873971806570[39] = 1;
   out_1092197873971806570[40] = 0;
   out_1092197873971806570[41] = 0;
   out_1092197873971806570[42] = 0;
   out_1092197873971806570[43] = 0;
   out_1092197873971806570[44] = 0;
   out_1092197873971806570[45] = 0;
   out_1092197873971806570[46] = 0;
   out_1092197873971806570[47] = 0;
   out_1092197873971806570[48] = 0;
   out_1092197873971806570[49] = 0;
   out_1092197873971806570[50] = 0;
   out_1092197873971806570[51] = 0;
   out_1092197873971806570[52] = 0;
   out_1092197873971806570[53] = 0;
   out_1092197873971806570[54] = 0;
   out_1092197873971806570[55] = 0;
   out_1092197873971806570[56] = 0;
   out_1092197873971806570[57] = 0;
   out_1092197873971806570[58] = 0;
   out_1092197873971806570[59] = 0;
   out_1092197873971806570[60] = 0;
   out_1092197873971806570[61] = 0;
   out_1092197873971806570[62] = 1;
   out_1092197873971806570[63] = 0;
   out_1092197873971806570[64] = 0;
   out_1092197873971806570[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3524224465509537113) {
  H(in_vec, out_3524224465509537113);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4841558462618834983) {
  err_fun(nom_x, delta_x, out_4841558462618834983);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1788365292828347538) {
  inv_err_fun(nom_x, true_x, out_1788365292828347538);
}
void live_H_mod_fun(double *state, double *out_7204932196825224923) {
  H_mod_fun(state, out_7204932196825224923);
}
void live_f_fun(double *state, double dt, double *out_6161481681065345003) {
  f_fun(state,  dt, out_6161481681065345003);
}
void live_F_fun(double *state, double dt, double *out_2769967596659218891) {
  F_fun(state,  dt, out_2769967596659218891);
}
void live_h_4(double *state, double *unused, double *out_1333471928980887589) {
  h_4(state, unused, out_1333471928980887589);
}
void live_H_4(double *state, double *unused, double *out_8623365502685525078) {
  H_4(state, unused, out_8623365502685525078);
}
void live_h_9(double *state, double *unused, double *out_7687274584415314923) {
  h_9(state, unused, out_7687274584415314923);
}
void live_H_9(double *state, double *unused, double *out_2536159635759579068) {
  H_9(state, unused, out_2536159635759579068);
}
void live_h_10(double *state, double *unused, double *out_3192518349000482278) {
  h_10(state, unused, out_3192518349000482278);
}
void live_H_10(double *state, double *unused, double *out_6903079679676235414) {
  H_10(state, unused, out_6903079679676235414);
}
void live_h_12(double *state, double *unused, double *out_4397812839724453125) {
  h_12(state, unused, out_4397812839724453125);
}
void live_H_12(double *state, double *unused, double *out_2242107125642792082) {
  H_12(state, unused, out_2242107125642792082);
}
void live_h_35(double *state, double *unused, double *out_6283775479775719537) {
  h_35(state, unused, out_6283775479775719537);
}
void live_H_35(double *state, double *unused, double *out_2058359130667051034) {
  H_35(state, unused, out_2058359130667051034);
}
void live_h_32(double *state, double *unused, double *out_4308168376843047634) {
  h_32(state, unused, out_4308168376843047634);
}
void live_H_32(double *state, double *unused, double *out_8101556023362318764) {
  H_32(state, unused, out_8101556023362318764);
}
void live_h_13(double *state, double *unused, double *out_1515899786468243092) {
  h_13(state, unused, out_1515899786468243092);
}
void live_H_13(double *state, double *unused, double *out_8695684081455215083) {
  H_13(state, unused, out_8695684081455215083);
}
void live_h_14(double *state, double *unused, double *out_7687274584415314923) {
  h_14(state, unused, out_7687274584415314923);
}
void live_H_14(double *state, double *unused, double *out_2536159635759579068) {
  H_14(state, unused, out_2536159635759579068);
}
void live_h_33(double *state, double *unused, double *out_526630750331052794) {
  h_33(state, unused, out_526630750331052794);
}
void live_H_33(double *state, double *unused, double *out_1092197873971806570) {
  H_33(state, unused, out_1092197873971806570);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
