#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1965639361288013725) {
   out_1965639361288013725[0] = 0;
   out_1965639361288013725[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1965639361288013725[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1965639361288013725[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1965639361288013725[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1965639361288013725[5] = -sin(in_vec[1]);
   out_1965639361288013725[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1965639361288013725[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1965639361288013725[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1965639361288013725[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1965639361288013725[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1965639361288013725[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1965639361288013725[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1965639361288013725[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1965639361288013725[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1965639361288013725[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1965639361288013725[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1965639361288013725[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5199172378396509024) {
   out_5199172378396509024[0] = delta_x[0] + nom_x[0];
   out_5199172378396509024[1] = delta_x[1] + nom_x[1];
   out_5199172378396509024[2] = delta_x[2] + nom_x[2];
   out_5199172378396509024[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5199172378396509024[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5199172378396509024[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5199172378396509024[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5199172378396509024[7] = delta_x[6] + nom_x[7];
   out_5199172378396509024[8] = delta_x[7] + nom_x[8];
   out_5199172378396509024[9] = delta_x[8] + nom_x[9];
   out_5199172378396509024[10] = delta_x[9] + nom_x[10];
   out_5199172378396509024[11] = delta_x[10] + nom_x[11];
   out_5199172378396509024[12] = delta_x[11] + nom_x[12];
   out_5199172378396509024[13] = delta_x[12] + nom_x[13];
   out_5199172378396509024[14] = delta_x[13] + nom_x[14];
   out_5199172378396509024[15] = delta_x[14] + nom_x[15];
   out_5199172378396509024[16] = delta_x[15] + nom_x[16];
   out_5199172378396509024[17] = delta_x[16] + nom_x[17];
   out_5199172378396509024[18] = delta_x[17] + nom_x[18];
   out_5199172378396509024[19] = delta_x[18] + nom_x[19];
   out_5199172378396509024[20] = delta_x[19] + nom_x[20];
   out_5199172378396509024[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2952380910721125403) {
   out_2952380910721125403[0] = -nom_x[0] + true_x[0];
   out_2952380910721125403[1] = -nom_x[1] + true_x[1];
   out_2952380910721125403[2] = -nom_x[2] + true_x[2];
   out_2952380910721125403[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2952380910721125403[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2952380910721125403[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2952380910721125403[6] = -nom_x[7] + true_x[7];
   out_2952380910721125403[7] = -nom_x[8] + true_x[8];
   out_2952380910721125403[8] = -nom_x[9] + true_x[9];
   out_2952380910721125403[9] = -nom_x[10] + true_x[10];
   out_2952380910721125403[10] = -nom_x[11] + true_x[11];
   out_2952380910721125403[11] = -nom_x[12] + true_x[12];
   out_2952380910721125403[12] = -nom_x[13] + true_x[13];
   out_2952380910721125403[13] = -nom_x[14] + true_x[14];
   out_2952380910721125403[14] = -nom_x[15] + true_x[15];
   out_2952380910721125403[15] = -nom_x[16] + true_x[16];
   out_2952380910721125403[16] = -nom_x[17] + true_x[17];
   out_2952380910721125403[17] = -nom_x[18] + true_x[18];
   out_2952380910721125403[18] = -nom_x[19] + true_x[19];
   out_2952380910721125403[19] = -nom_x[20] + true_x[20];
   out_2952380910721125403[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5096821251984911957) {
   out_5096821251984911957[0] = 1.0;
   out_5096821251984911957[1] = 0;
   out_5096821251984911957[2] = 0;
   out_5096821251984911957[3] = 0;
   out_5096821251984911957[4] = 0;
   out_5096821251984911957[5] = 0;
   out_5096821251984911957[6] = 0;
   out_5096821251984911957[7] = 0;
   out_5096821251984911957[8] = 0;
   out_5096821251984911957[9] = 0;
   out_5096821251984911957[10] = 0;
   out_5096821251984911957[11] = 0;
   out_5096821251984911957[12] = 0;
   out_5096821251984911957[13] = 0;
   out_5096821251984911957[14] = 0;
   out_5096821251984911957[15] = 0;
   out_5096821251984911957[16] = 0;
   out_5096821251984911957[17] = 0;
   out_5096821251984911957[18] = 0;
   out_5096821251984911957[19] = 0;
   out_5096821251984911957[20] = 0;
   out_5096821251984911957[21] = 0;
   out_5096821251984911957[22] = 1.0;
   out_5096821251984911957[23] = 0;
   out_5096821251984911957[24] = 0;
   out_5096821251984911957[25] = 0;
   out_5096821251984911957[26] = 0;
   out_5096821251984911957[27] = 0;
   out_5096821251984911957[28] = 0;
   out_5096821251984911957[29] = 0;
   out_5096821251984911957[30] = 0;
   out_5096821251984911957[31] = 0;
   out_5096821251984911957[32] = 0;
   out_5096821251984911957[33] = 0;
   out_5096821251984911957[34] = 0;
   out_5096821251984911957[35] = 0;
   out_5096821251984911957[36] = 0;
   out_5096821251984911957[37] = 0;
   out_5096821251984911957[38] = 0;
   out_5096821251984911957[39] = 0;
   out_5096821251984911957[40] = 0;
   out_5096821251984911957[41] = 0;
   out_5096821251984911957[42] = 0;
   out_5096821251984911957[43] = 0;
   out_5096821251984911957[44] = 1.0;
   out_5096821251984911957[45] = 0;
   out_5096821251984911957[46] = 0;
   out_5096821251984911957[47] = 0;
   out_5096821251984911957[48] = 0;
   out_5096821251984911957[49] = 0;
   out_5096821251984911957[50] = 0;
   out_5096821251984911957[51] = 0;
   out_5096821251984911957[52] = 0;
   out_5096821251984911957[53] = 0;
   out_5096821251984911957[54] = 0;
   out_5096821251984911957[55] = 0;
   out_5096821251984911957[56] = 0;
   out_5096821251984911957[57] = 0;
   out_5096821251984911957[58] = 0;
   out_5096821251984911957[59] = 0;
   out_5096821251984911957[60] = 0;
   out_5096821251984911957[61] = 0;
   out_5096821251984911957[62] = 0;
   out_5096821251984911957[63] = 0;
   out_5096821251984911957[64] = 0;
   out_5096821251984911957[65] = 0;
   out_5096821251984911957[66] = -0.5*state[4];
   out_5096821251984911957[67] = -0.5*state[5];
   out_5096821251984911957[68] = -0.5*state[6];
   out_5096821251984911957[69] = 0;
   out_5096821251984911957[70] = 0;
   out_5096821251984911957[71] = 0;
   out_5096821251984911957[72] = 0;
   out_5096821251984911957[73] = 0;
   out_5096821251984911957[74] = 0;
   out_5096821251984911957[75] = 0;
   out_5096821251984911957[76] = 0;
   out_5096821251984911957[77] = 0;
   out_5096821251984911957[78] = 0;
   out_5096821251984911957[79] = 0;
   out_5096821251984911957[80] = 0;
   out_5096821251984911957[81] = 0;
   out_5096821251984911957[82] = 0;
   out_5096821251984911957[83] = 0;
   out_5096821251984911957[84] = 0;
   out_5096821251984911957[85] = 0;
   out_5096821251984911957[86] = 0;
   out_5096821251984911957[87] = 0.5*state[3];
   out_5096821251984911957[88] = 0.5*state[6];
   out_5096821251984911957[89] = -0.5*state[5];
   out_5096821251984911957[90] = 0;
   out_5096821251984911957[91] = 0;
   out_5096821251984911957[92] = 0;
   out_5096821251984911957[93] = 0;
   out_5096821251984911957[94] = 0;
   out_5096821251984911957[95] = 0;
   out_5096821251984911957[96] = 0;
   out_5096821251984911957[97] = 0;
   out_5096821251984911957[98] = 0;
   out_5096821251984911957[99] = 0;
   out_5096821251984911957[100] = 0;
   out_5096821251984911957[101] = 0;
   out_5096821251984911957[102] = 0;
   out_5096821251984911957[103] = 0;
   out_5096821251984911957[104] = 0;
   out_5096821251984911957[105] = 0;
   out_5096821251984911957[106] = 0;
   out_5096821251984911957[107] = 0;
   out_5096821251984911957[108] = -0.5*state[6];
   out_5096821251984911957[109] = 0.5*state[3];
   out_5096821251984911957[110] = 0.5*state[4];
   out_5096821251984911957[111] = 0;
   out_5096821251984911957[112] = 0;
   out_5096821251984911957[113] = 0;
   out_5096821251984911957[114] = 0;
   out_5096821251984911957[115] = 0;
   out_5096821251984911957[116] = 0;
   out_5096821251984911957[117] = 0;
   out_5096821251984911957[118] = 0;
   out_5096821251984911957[119] = 0;
   out_5096821251984911957[120] = 0;
   out_5096821251984911957[121] = 0;
   out_5096821251984911957[122] = 0;
   out_5096821251984911957[123] = 0;
   out_5096821251984911957[124] = 0;
   out_5096821251984911957[125] = 0;
   out_5096821251984911957[126] = 0;
   out_5096821251984911957[127] = 0;
   out_5096821251984911957[128] = 0;
   out_5096821251984911957[129] = 0.5*state[5];
   out_5096821251984911957[130] = -0.5*state[4];
   out_5096821251984911957[131] = 0.5*state[3];
   out_5096821251984911957[132] = 0;
   out_5096821251984911957[133] = 0;
   out_5096821251984911957[134] = 0;
   out_5096821251984911957[135] = 0;
   out_5096821251984911957[136] = 0;
   out_5096821251984911957[137] = 0;
   out_5096821251984911957[138] = 0;
   out_5096821251984911957[139] = 0;
   out_5096821251984911957[140] = 0;
   out_5096821251984911957[141] = 0;
   out_5096821251984911957[142] = 0;
   out_5096821251984911957[143] = 0;
   out_5096821251984911957[144] = 0;
   out_5096821251984911957[145] = 0;
   out_5096821251984911957[146] = 0;
   out_5096821251984911957[147] = 0;
   out_5096821251984911957[148] = 0;
   out_5096821251984911957[149] = 0;
   out_5096821251984911957[150] = 0;
   out_5096821251984911957[151] = 0;
   out_5096821251984911957[152] = 0;
   out_5096821251984911957[153] = 1.0;
   out_5096821251984911957[154] = 0;
   out_5096821251984911957[155] = 0;
   out_5096821251984911957[156] = 0;
   out_5096821251984911957[157] = 0;
   out_5096821251984911957[158] = 0;
   out_5096821251984911957[159] = 0;
   out_5096821251984911957[160] = 0;
   out_5096821251984911957[161] = 0;
   out_5096821251984911957[162] = 0;
   out_5096821251984911957[163] = 0;
   out_5096821251984911957[164] = 0;
   out_5096821251984911957[165] = 0;
   out_5096821251984911957[166] = 0;
   out_5096821251984911957[167] = 0;
   out_5096821251984911957[168] = 0;
   out_5096821251984911957[169] = 0;
   out_5096821251984911957[170] = 0;
   out_5096821251984911957[171] = 0;
   out_5096821251984911957[172] = 0;
   out_5096821251984911957[173] = 0;
   out_5096821251984911957[174] = 0;
   out_5096821251984911957[175] = 1.0;
   out_5096821251984911957[176] = 0;
   out_5096821251984911957[177] = 0;
   out_5096821251984911957[178] = 0;
   out_5096821251984911957[179] = 0;
   out_5096821251984911957[180] = 0;
   out_5096821251984911957[181] = 0;
   out_5096821251984911957[182] = 0;
   out_5096821251984911957[183] = 0;
   out_5096821251984911957[184] = 0;
   out_5096821251984911957[185] = 0;
   out_5096821251984911957[186] = 0;
   out_5096821251984911957[187] = 0;
   out_5096821251984911957[188] = 0;
   out_5096821251984911957[189] = 0;
   out_5096821251984911957[190] = 0;
   out_5096821251984911957[191] = 0;
   out_5096821251984911957[192] = 0;
   out_5096821251984911957[193] = 0;
   out_5096821251984911957[194] = 0;
   out_5096821251984911957[195] = 0;
   out_5096821251984911957[196] = 0;
   out_5096821251984911957[197] = 1.0;
   out_5096821251984911957[198] = 0;
   out_5096821251984911957[199] = 0;
   out_5096821251984911957[200] = 0;
   out_5096821251984911957[201] = 0;
   out_5096821251984911957[202] = 0;
   out_5096821251984911957[203] = 0;
   out_5096821251984911957[204] = 0;
   out_5096821251984911957[205] = 0;
   out_5096821251984911957[206] = 0;
   out_5096821251984911957[207] = 0;
   out_5096821251984911957[208] = 0;
   out_5096821251984911957[209] = 0;
   out_5096821251984911957[210] = 0;
   out_5096821251984911957[211] = 0;
   out_5096821251984911957[212] = 0;
   out_5096821251984911957[213] = 0;
   out_5096821251984911957[214] = 0;
   out_5096821251984911957[215] = 0;
   out_5096821251984911957[216] = 0;
   out_5096821251984911957[217] = 0;
   out_5096821251984911957[218] = 0;
   out_5096821251984911957[219] = 1.0;
   out_5096821251984911957[220] = 0;
   out_5096821251984911957[221] = 0;
   out_5096821251984911957[222] = 0;
   out_5096821251984911957[223] = 0;
   out_5096821251984911957[224] = 0;
   out_5096821251984911957[225] = 0;
   out_5096821251984911957[226] = 0;
   out_5096821251984911957[227] = 0;
   out_5096821251984911957[228] = 0;
   out_5096821251984911957[229] = 0;
   out_5096821251984911957[230] = 0;
   out_5096821251984911957[231] = 0;
   out_5096821251984911957[232] = 0;
   out_5096821251984911957[233] = 0;
   out_5096821251984911957[234] = 0;
   out_5096821251984911957[235] = 0;
   out_5096821251984911957[236] = 0;
   out_5096821251984911957[237] = 0;
   out_5096821251984911957[238] = 0;
   out_5096821251984911957[239] = 0;
   out_5096821251984911957[240] = 0;
   out_5096821251984911957[241] = 1.0;
   out_5096821251984911957[242] = 0;
   out_5096821251984911957[243] = 0;
   out_5096821251984911957[244] = 0;
   out_5096821251984911957[245] = 0;
   out_5096821251984911957[246] = 0;
   out_5096821251984911957[247] = 0;
   out_5096821251984911957[248] = 0;
   out_5096821251984911957[249] = 0;
   out_5096821251984911957[250] = 0;
   out_5096821251984911957[251] = 0;
   out_5096821251984911957[252] = 0;
   out_5096821251984911957[253] = 0;
   out_5096821251984911957[254] = 0;
   out_5096821251984911957[255] = 0;
   out_5096821251984911957[256] = 0;
   out_5096821251984911957[257] = 0;
   out_5096821251984911957[258] = 0;
   out_5096821251984911957[259] = 0;
   out_5096821251984911957[260] = 0;
   out_5096821251984911957[261] = 0;
   out_5096821251984911957[262] = 0;
   out_5096821251984911957[263] = 1.0;
   out_5096821251984911957[264] = 0;
   out_5096821251984911957[265] = 0;
   out_5096821251984911957[266] = 0;
   out_5096821251984911957[267] = 0;
   out_5096821251984911957[268] = 0;
   out_5096821251984911957[269] = 0;
   out_5096821251984911957[270] = 0;
   out_5096821251984911957[271] = 0;
   out_5096821251984911957[272] = 0;
   out_5096821251984911957[273] = 0;
   out_5096821251984911957[274] = 0;
   out_5096821251984911957[275] = 0;
   out_5096821251984911957[276] = 0;
   out_5096821251984911957[277] = 0;
   out_5096821251984911957[278] = 0;
   out_5096821251984911957[279] = 0;
   out_5096821251984911957[280] = 0;
   out_5096821251984911957[281] = 0;
   out_5096821251984911957[282] = 0;
   out_5096821251984911957[283] = 0;
   out_5096821251984911957[284] = 0;
   out_5096821251984911957[285] = 1.0;
   out_5096821251984911957[286] = 0;
   out_5096821251984911957[287] = 0;
   out_5096821251984911957[288] = 0;
   out_5096821251984911957[289] = 0;
   out_5096821251984911957[290] = 0;
   out_5096821251984911957[291] = 0;
   out_5096821251984911957[292] = 0;
   out_5096821251984911957[293] = 0;
   out_5096821251984911957[294] = 0;
   out_5096821251984911957[295] = 0;
   out_5096821251984911957[296] = 0;
   out_5096821251984911957[297] = 0;
   out_5096821251984911957[298] = 0;
   out_5096821251984911957[299] = 0;
   out_5096821251984911957[300] = 0;
   out_5096821251984911957[301] = 0;
   out_5096821251984911957[302] = 0;
   out_5096821251984911957[303] = 0;
   out_5096821251984911957[304] = 0;
   out_5096821251984911957[305] = 0;
   out_5096821251984911957[306] = 0;
   out_5096821251984911957[307] = 1.0;
   out_5096821251984911957[308] = 0;
   out_5096821251984911957[309] = 0;
   out_5096821251984911957[310] = 0;
   out_5096821251984911957[311] = 0;
   out_5096821251984911957[312] = 0;
   out_5096821251984911957[313] = 0;
   out_5096821251984911957[314] = 0;
   out_5096821251984911957[315] = 0;
   out_5096821251984911957[316] = 0;
   out_5096821251984911957[317] = 0;
   out_5096821251984911957[318] = 0;
   out_5096821251984911957[319] = 0;
   out_5096821251984911957[320] = 0;
   out_5096821251984911957[321] = 0;
   out_5096821251984911957[322] = 0;
   out_5096821251984911957[323] = 0;
   out_5096821251984911957[324] = 0;
   out_5096821251984911957[325] = 0;
   out_5096821251984911957[326] = 0;
   out_5096821251984911957[327] = 0;
   out_5096821251984911957[328] = 0;
   out_5096821251984911957[329] = 1.0;
   out_5096821251984911957[330] = 0;
   out_5096821251984911957[331] = 0;
   out_5096821251984911957[332] = 0;
   out_5096821251984911957[333] = 0;
   out_5096821251984911957[334] = 0;
   out_5096821251984911957[335] = 0;
   out_5096821251984911957[336] = 0;
   out_5096821251984911957[337] = 0;
   out_5096821251984911957[338] = 0;
   out_5096821251984911957[339] = 0;
   out_5096821251984911957[340] = 0;
   out_5096821251984911957[341] = 0;
   out_5096821251984911957[342] = 0;
   out_5096821251984911957[343] = 0;
   out_5096821251984911957[344] = 0;
   out_5096821251984911957[345] = 0;
   out_5096821251984911957[346] = 0;
   out_5096821251984911957[347] = 0;
   out_5096821251984911957[348] = 0;
   out_5096821251984911957[349] = 0;
   out_5096821251984911957[350] = 0;
   out_5096821251984911957[351] = 1.0;
   out_5096821251984911957[352] = 0;
   out_5096821251984911957[353] = 0;
   out_5096821251984911957[354] = 0;
   out_5096821251984911957[355] = 0;
   out_5096821251984911957[356] = 0;
   out_5096821251984911957[357] = 0;
   out_5096821251984911957[358] = 0;
   out_5096821251984911957[359] = 0;
   out_5096821251984911957[360] = 0;
   out_5096821251984911957[361] = 0;
   out_5096821251984911957[362] = 0;
   out_5096821251984911957[363] = 0;
   out_5096821251984911957[364] = 0;
   out_5096821251984911957[365] = 0;
   out_5096821251984911957[366] = 0;
   out_5096821251984911957[367] = 0;
   out_5096821251984911957[368] = 0;
   out_5096821251984911957[369] = 0;
   out_5096821251984911957[370] = 0;
   out_5096821251984911957[371] = 0;
   out_5096821251984911957[372] = 0;
   out_5096821251984911957[373] = 1.0;
   out_5096821251984911957[374] = 0;
   out_5096821251984911957[375] = 0;
   out_5096821251984911957[376] = 0;
   out_5096821251984911957[377] = 0;
   out_5096821251984911957[378] = 0;
   out_5096821251984911957[379] = 0;
   out_5096821251984911957[380] = 0;
   out_5096821251984911957[381] = 0;
   out_5096821251984911957[382] = 0;
   out_5096821251984911957[383] = 0;
   out_5096821251984911957[384] = 0;
   out_5096821251984911957[385] = 0;
   out_5096821251984911957[386] = 0;
   out_5096821251984911957[387] = 0;
   out_5096821251984911957[388] = 0;
   out_5096821251984911957[389] = 0;
   out_5096821251984911957[390] = 0;
   out_5096821251984911957[391] = 0;
   out_5096821251984911957[392] = 0;
   out_5096821251984911957[393] = 0;
   out_5096821251984911957[394] = 0;
   out_5096821251984911957[395] = 1.0;
   out_5096821251984911957[396] = 0;
   out_5096821251984911957[397] = 0;
   out_5096821251984911957[398] = 0;
   out_5096821251984911957[399] = 0;
   out_5096821251984911957[400] = 0;
   out_5096821251984911957[401] = 0;
   out_5096821251984911957[402] = 0;
   out_5096821251984911957[403] = 0;
   out_5096821251984911957[404] = 0;
   out_5096821251984911957[405] = 0;
   out_5096821251984911957[406] = 0;
   out_5096821251984911957[407] = 0;
   out_5096821251984911957[408] = 0;
   out_5096821251984911957[409] = 0;
   out_5096821251984911957[410] = 0;
   out_5096821251984911957[411] = 0;
   out_5096821251984911957[412] = 0;
   out_5096821251984911957[413] = 0;
   out_5096821251984911957[414] = 0;
   out_5096821251984911957[415] = 0;
   out_5096821251984911957[416] = 0;
   out_5096821251984911957[417] = 1.0;
   out_5096821251984911957[418] = 0;
   out_5096821251984911957[419] = 0;
   out_5096821251984911957[420] = 0;
   out_5096821251984911957[421] = 0;
   out_5096821251984911957[422] = 0;
   out_5096821251984911957[423] = 0;
   out_5096821251984911957[424] = 0;
   out_5096821251984911957[425] = 0;
   out_5096821251984911957[426] = 0;
   out_5096821251984911957[427] = 0;
   out_5096821251984911957[428] = 0;
   out_5096821251984911957[429] = 0;
   out_5096821251984911957[430] = 0;
   out_5096821251984911957[431] = 0;
   out_5096821251984911957[432] = 0;
   out_5096821251984911957[433] = 0;
   out_5096821251984911957[434] = 0;
   out_5096821251984911957[435] = 0;
   out_5096821251984911957[436] = 0;
   out_5096821251984911957[437] = 0;
   out_5096821251984911957[438] = 0;
   out_5096821251984911957[439] = 1.0;
   out_5096821251984911957[440] = 0;
   out_5096821251984911957[441] = 0;
   out_5096821251984911957[442] = 0;
   out_5096821251984911957[443] = 0;
   out_5096821251984911957[444] = 0;
   out_5096821251984911957[445] = 0;
   out_5096821251984911957[446] = 0;
   out_5096821251984911957[447] = 0;
   out_5096821251984911957[448] = 0;
   out_5096821251984911957[449] = 0;
   out_5096821251984911957[450] = 0;
   out_5096821251984911957[451] = 0;
   out_5096821251984911957[452] = 0;
   out_5096821251984911957[453] = 0;
   out_5096821251984911957[454] = 0;
   out_5096821251984911957[455] = 0;
   out_5096821251984911957[456] = 0;
   out_5096821251984911957[457] = 0;
   out_5096821251984911957[458] = 0;
   out_5096821251984911957[459] = 0;
   out_5096821251984911957[460] = 0;
   out_5096821251984911957[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3537200419085443625) {
   out_3537200419085443625[0] = dt*state[7] + state[0];
   out_3537200419085443625[1] = dt*state[8] + state[1];
   out_3537200419085443625[2] = dt*state[9] + state[2];
   out_3537200419085443625[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3537200419085443625[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3537200419085443625[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3537200419085443625[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3537200419085443625[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3537200419085443625[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3537200419085443625[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3537200419085443625[10] = state[10];
   out_3537200419085443625[11] = state[11];
   out_3537200419085443625[12] = state[12];
   out_3537200419085443625[13] = state[13];
   out_3537200419085443625[14] = state[14];
   out_3537200419085443625[15] = state[15];
   out_3537200419085443625[16] = state[16];
   out_3537200419085443625[17] = state[17];
   out_3537200419085443625[18] = state[18];
   out_3537200419085443625[19] = state[19];
   out_3537200419085443625[20] = state[20];
   out_3537200419085443625[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4868595806798075065) {
   out_4868595806798075065[0] = 1;
   out_4868595806798075065[1] = 0;
   out_4868595806798075065[2] = 0;
   out_4868595806798075065[3] = 0;
   out_4868595806798075065[4] = 0;
   out_4868595806798075065[5] = 0;
   out_4868595806798075065[6] = dt;
   out_4868595806798075065[7] = 0;
   out_4868595806798075065[8] = 0;
   out_4868595806798075065[9] = 0;
   out_4868595806798075065[10] = 0;
   out_4868595806798075065[11] = 0;
   out_4868595806798075065[12] = 0;
   out_4868595806798075065[13] = 0;
   out_4868595806798075065[14] = 0;
   out_4868595806798075065[15] = 0;
   out_4868595806798075065[16] = 0;
   out_4868595806798075065[17] = 0;
   out_4868595806798075065[18] = 0;
   out_4868595806798075065[19] = 0;
   out_4868595806798075065[20] = 0;
   out_4868595806798075065[21] = 0;
   out_4868595806798075065[22] = 1;
   out_4868595806798075065[23] = 0;
   out_4868595806798075065[24] = 0;
   out_4868595806798075065[25] = 0;
   out_4868595806798075065[26] = 0;
   out_4868595806798075065[27] = 0;
   out_4868595806798075065[28] = dt;
   out_4868595806798075065[29] = 0;
   out_4868595806798075065[30] = 0;
   out_4868595806798075065[31] = 0;
   out_4868595806798075065[32] = 0;
   out_4868595806798075065[33] = 0;
   out_4868595806798075065[34] = 0;
   out_4868595806798075065[35] = 0;
   out_4868595806798075065[36] = 0;
   out_4868595806798075065[37] = 0;
   out_4868595806798075065[38] = 0;
   out_4868595806798075065[39] = 0;
   out_4868595806798075065[40] = 0;
   out_4868595806798075065[41] = 0;
   out_4868595806798075065[42] = 0;
   out_4868595806798075065[43] = 0;
   out_4868595806798075065[44] = 1;
   out_4868595806798075065[45] = 0;
   out_4868595806798075065[46] = 0;
   out_4868595806798075065[47] = 0;
   out_4868595806798075065[48] = 0;
   out_4868595806798075065[49] = 0;
   out_4868595806798075065[50] = dt;
   out_4868595806798075065[51] = 0;
   out_4868595806798075065[52] = 0;
   out_4868595806798075065[53] = 0;
   out_4868595806798075065[54] = 0;
   out_4868595806798075065[55] = 0;
   out_4868595806798075065[56] = 0;
   out_4868595806798075065[57] = 0;
   out_4868595806798075065[58] = 0;
   out_4868595806798075065[59] = 0;
   out_4868595806798075065[60] = 0;
   out_4868595806798075065[61] = 0;
   out_4868595806798075065[62] = 0;
   out_4868595806798075065[63] = 0;
   out_4868595806798075065[64] = 0;
   out_4868595806798075065[65] = 0;
   out_4868595806798075065[66] = 1;
   out_4868595806798075065[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4868595806798075065[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4868595806798075065[69] = 0;
   out_4868595806798075065[70] = 0;
   out_4868595806798075065[71] = 0;
   out_4868595806798075065[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4868595806798075065[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4868595806798075065[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4868595806798075065[75] = 0;
   out_4868595806798075065[76] = 0;
   out_4868595806798075065[77] = 0;
   out_4868595806798075065[78] = 0;
   out_4868595806798075065[79] = 0;
   out_4868595806798075065[80] = 0;
   out_4868595806798075065[81] = 0;
   out_4868595806798075065[82] = 0;
   out_4868595806798075065[83] = 0;
   out_4868595806798075065[84] = 0;
   out_4868595806798075065[85] = 0;
   out_4868595806798075065[86] = 0;
   out_4868595806798075065[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4868595806798075065[88] = 1;
   out_4868595806798075065[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4868595806798075065[90] = 0;
   out_4868595806798075065[91] = 0;
   out_4868595806798075065[92] = 0;
   out_4868595806798075065[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4868595806798075065[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4868595806798075065[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4868595806798075065[96] = 0;
   out_4868595806798075065[97] = 0;
   out_4868595806798075065[98] = 0;
   out_4868595806798075065[99] = 0;
   out_4868595806798075065[100] = 0;
   out_4868595806798075065[101] = 0;
   out_4868595806798075065[102] = 0;
   out_4868595806798075065[103] = 0;
   out_4868595806798075065[104] = 0;
   out_4868595806798075065[105] = 0;
   out_4868595806798075065[106] = 0;
   out_4868595806798075065[107] = 0;
   out_4868595806798075065[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4868595806798075065[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4868595806798075065[110] = 1;
   out_4868595806798075065[111] = 0;
   out_4868595806798075065[112] = 0;
   out_4868595806798075065[113] = 0;
   out_4868595806798075065[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4868595806798075065[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4868595806798075065[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4868595806798075065[117] = 0;
   out_4868595806798075065[118] = 0;
   out_4868595806798075065[119] = 0;
   out_4868595806798075065[120] = 0;
   out_4868595806798075065[121] = 0;
   out_4868595806798075065[122] = 0;
   out_4868595806798075065[123] = 0;
   out_4868595806798075065[124] = 0;
   out_4868595806798075065[125] = 0;
   out_4868595806798075065[126] = 0;
   out_4868595806798075065[127] = 0;
   out_4868595806798075065[128] = 0;
   out_4868595806798075065[129] = 0;
   out_4868595806798075065[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4868595806798075065[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4868595806798075065[132] = 1;
   out_4868595806798075065[133] = 0;
   out_4868595806798075065[134] = 0;
   out_4868595806798075065[135] = 0;
   out_4868595806798075065[136] = 0;
   out_4868595806798075065[137] = 0;
   out_4868595806798075065[138] = 0;
   out_4868595806798075065[139] = 0;
   out_4868595806798075065[140] = 0;
   out_4868595806798075065[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4868595806798075065[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4868595806798075065[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4868595806798075065[144] = 0;
   out_4868595806798075065[145] = 0;
   out_4868595806798075065[146] = 0;
   out_4868595806798075065[147] = 0;
   out_4868595806798075065[148] = 0;
   out_4868595806798075065[149] = 0;
   out_4868595806798075065[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4868595806798075065[151] = 0;
   out_4868595806798075065[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4868595806798075065[153] = 0;
   out_4868595806798075065[154] = 1;
   out_4868595806798075065[155] = 0;
   out_4868595806798075065[156] = 0;
   out_4868595806798075065[157] = 0;
   out_4868595806798075065[158] = 0;
   out_4868595806798075065[159] = 0;
   out_4868595806798075065[160] = 0;
   out_4868595806798075065[161] = 0;
   out_4868595806798075065[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4868595806798075065[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4868595806798075065[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4868595806798075065[165] = 0;
   out_4868595806798075065[166] = 0;
   out_4868595806798075065[167] = 0;
   out_4868595806798075065[168] = 0;
   out_4868595806798075065[169] = 0;
   out_4868595806798075065[170] = 0;
   out_4868595806798075065[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4868595806798075065[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4868595806798075065[173] = 0;
   out_4868595806798075065[174] = 0;
   out_4868595806798075065[175] = 0;
   out_4868595806798075065[176] = 1;
   out_4868595806798075065[177] = 0;
   out_4868595806798075065[178] = 0;
   out_4868595806798075065[179] = 0;
   out_4868595806798075065[180] = 0;
   out_4868595806798075065[181] = 0;
   out_4868595806798075065[182] = 0;
   out_4868595806798075065[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4868595806798075065[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4868595806798075065[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4868595806798075065[186] = 0;
   out_4868595806798075065[187] = 0;
   out_4868595806798075065[188] = 0;
   out_4868595806798075065[189] = 0;
   out_4868595806798075065[190] = 0;
   out_4868595806798075065[191] = 0;
   out_4868595806798075065[192] = 0;
   out_4868595806798075065[193] = 0;
   out_4868595806798075065[194] = 0;
   out_4868595806798075065[195] = 0;
   out_4868595806798075065[196] = 0;
   out_4868595806798075065[197] = 0;
   out_4868595806798075065[198] = 1;
   out_4868595806798075065[199] = 0;
   out_4868595806798075065[200] = 0;
   out_4868595806798075065[201] = 0;
   out_4868595806798075065[202] = 0;
   out_4868595806798075065[203] = 0;
   out_4868595806798075065[204] = 0;
   out_4868595806798075065[205] = 0;
   out_4868595806798075065[206] = 0;
   out_4868595806798075065[207] = 0;
   out_4868595806798075065[208] = 0;
   out_4868595806798075065[209] = 0;
   out_4868595806798075065[210] = 0;
   out_4868595806798075065[211] = 0;
   out_4868595806798075065[212] = 0;
   out_4868595806798075065[213] = 0;
   out_4868595806798075065[214] = 0;
   out_4868595806798075065[215] = 0;
   out_4868595806798075065[216] = 0;
   out_4868595806798075065[217] = 0;
   out_4868595806798075065[218] = 0;
   out_4868595806798075065[219] = 0;
   out_4868595806798075065[220] = 1;
   out_4868595806798075065[221] = 0;
   out_4868595806798075065[222] = 0;
   out_4868595806798075065[223] = 0;
   out_4868595806798075065[224] = 0;
   out_4868595806798075065[225] = 0;
   out_4868595806798075065[226] = 0;
   out_4868595806798075065[227] = 0;
   out_4868595806798075065[228] = 0;
   out_4868595806798075065[229] = 0;
   out_4868595806798075065[230] = 0;
   out_4868595806798075065[231] = 0;
   out_4868595806798075065[232] = 0;
   out_4868595806798075065[233] = 0;
   out_4868595806798075065[234] = 0;
   out_4868595806798075065[235] = 0;
   out_4868595806798075065[236] = 0;
   out_4868595806798075065[237] = 0;
   out_4868595806798075065[238] = 0;
   out_4868595806798075065[239] = 0;
   out_4868595806798075065[240] = 0;
   out_4868595806798075065[241] = 0;
   out_4868595806798075065[242] = 1;
   out_4868595806798075065[243] = 0;
   out_4868595806798075065[244] = 0;
   out_4868595806798075065[245] = 0;
   out_4868595806798075065[246] = 0;
   out_4868595806798075065[247] = 0;
   out_4868595806798075065[248] = 0;
   out_4868595806798075065[249] = 0;
   out_4868595806798075065[250] = 0;
   out_4868595806798075065[251] = 0;
   out_4868595806798075065[252] = 0;
   out_4868595806798075065[253] = 0;
   out_4868595806798075065[254] = 0;
   out_4868595806798075065[255] = 0;
   out_4868595806798075065[256] = 0;
   out_4868595806798075065[257] = 0;
   out_4868595806798075065[258] = 0;
   out_4868595806798075065[259] = 0;
   out_4868595806798075065[260] = 0;
   out_4868595806798075065[261] = 0;
   out_4868595806798075065[262] = 0;
   out_4868595806798075065[263] = 0;
   out_4868595806798075065[264] = 1;
   out_4868595806798075065[265] = 0;
   out_4868595806798075065[266] = 0;
   out_4868595806798075065[267] = 0;
   out_4868595806798075065[268] = 0;
   out_4868595806798075065[269] = 0;
   out_4868595806798075065[270] = 0;
   out_4868595806798075065[271] = 0;
   out_4868595806798075065[272] = 0;
   out_4868595806798075065[273] = 0;
   out_4868595806798075065[274] = 0;
   out_4868595806798075065[275] = 0;
   out_4868595806798075065[276] = 0;
   out_4868595806798075065[277] = 0;
   out_4868595806798075065[278] = 0;
   out_4868595806798075065[279] = 0;
   out_4868595806798075065[280] = 0;
   out_4868595806798075065[281] = 0;
   out_4868595806798075065[282] = 0;
   out_4868595806798075065[283] = 0;
   out_4868595806798075065[284] = 0;
   out_4868595806798075065[285] = 0;
   out_4868595806798075065[286] = 1;
   out_4868595806798075065[287] = 0;
   out_4868595806798075065[288] = 0;
   out_4868595806798075065[289] = 0;
   out_4868595806798075065[290] = 0;
   out_4868595806798075065[291] = 0;
   out_4868595806798075065[292] = 0;
   out_4868595806798075065[293] = 0;
   out_4868595806798075065[294] = 0;
   out_4868595806798075065[295] = 0;
   out_4868595806798075065[296] = 0;
   out_4868595806798075065[297] = 0;
   out_4868595806798075065[298] = 0;
   out_4868595806798075065[299] = 0;
   out_4868595806798075065[300] = 0;
   out_4868595806798075065[301] = 0;
   out_4868595806798075065[302] = 0;
   out_4868595806798075065[303] = 0;
   out_4868595806798075065[304] = 0;
   out_4868595806798075065[305] = 0;
   out_4868595806798075065[306] = 0;
   out_4868595806798075065[307] = 0;
   out_4868595806798075065[308] = 1;
   out_4868595806798075065[309] = 0;
   out_4868595806798075065[310] = 0;
   out_4868595806798075065[311] = 0;
   out_4868595806798075065[312] = 0;
   out_4868595806798075065[313] = 0;
   out_4868595806798075065[314] = 0;
   out_4868595806798075065[315] = 0;
   out_4868595806798075065[316] = 0;
   out_4868595806798075065[317] = 0;
   out_4868595806798075065[318] = 0;
   out_4868595806798075065[319] = 0;
   out_4868595806798075065[320] = 0;
   out_4868595806798075065[321] = 0;
   out_4868595806798075065[322] = 0;
   out_4868595806798075065[323] = 0;
   out_4868595806798075065[324] = 0;
   out_4868595806798075065[325] = 0;
   out_4868595806798075065[326] = 0;
   out_4868595806798075065[327] = 0;
   out_4868595806798075065[328] = 0;
   out_4868595806798075065[329] = 0;
   out_4868595806798075065[330] = 1;
   out_4868595806798075065[331] = 0;
   out_4868595806798075065[332] = 0;
   out_4868595806798075065[333] = 0;
   out_4868595806798075065[334] = 0;
   out_4868595806798075065[335] = 0;
   out_4868595806798075065[336] = 0;
   out_4868595806798075065[337] = 0;
   out_4868595806798075065[338] = 0;
   out_4868595806798075065[339] = 0;
   out_4868595806798075065[340] = 0;
   out_4868595806798075065[341] = 0;
   out_4868595806798075065[342] = 0;
   out_4868595806798075065[343] = 0;
   out_4868595806798075065[344] = 0;
   out_4868595806798075065[345] = 0;
   out_4868595806798075065[346] = 0;
   out_4868595806798075065[347] = 0;
   out_4868595806798075065[348] = 0;
   out_4868595806798075065[349] = 0;
   out_4868595806798075065[350] = 0;
   out_4868595806798075065[351] = 0;
   out_4868595806798075065[352] = 1;
   out_4868595806798075065[353] = 0;
   out_4868595806798075065[354] = 0;
   out_4868595806798075065[355] = 0;
   out_4868595806798075065[356] = 0;
   out_4868595806798075065[357] = 0;
   out_4868595806798075065[358] = 0;
   out_4868595806798075065[359] = 0;
   out_4868595806798075065[360] = 0;
   out_4868595806798075065[361] = 0;
   out_4868595806798075065[362] = 0;
   out_4868595806798075065[363] = 0;
   out_4868595806798075065[364] = 0;
   out_4868595806798075065[365] = 0;
   out_4868595806798075065[366] = 0;
   out_4868595806798075065[367] = 0;
   out_4868595806798075065[368] = 0;
   out_4868595806798075065[369] = 0;
   out_4868595806798075065[370] = 0;
   out_4868595806798075065[371] = 0;
   out_4868595806798075065[372] = 0;
   out_4868595806798075065[373] = 0;
   out_4868595806798075065[374] = 1;
   out_4868595806798075065[375] = 0;
   out_4868595806798075065[376] = 0;
   out_4868595806798075065[377] = 0;
   out_4868595806798075065[378] = 0;
   out_4868595806798075065[379] = 0;
   out_4868595806798075065[380] = 0;
   out_4868595806798075065[381] = 0;
   out_4868595806798075065[382] = 0;
   out_4868595806798075065[383] = 0;
   out_4868595806798075065[384] = 0;
   out_4868595806798075065[385] = 0;
   out_4868595806798075065[386] = 0;
   out_4868595806798075065[387] = 0;
   out_4868595806798075065[388] = 0;
   out_4868595806798075065[389] = 0;
   out_4868595806798075065[390] = 0;
   out_4868595806798075065[391] = 0;
   out_4868595806798075065[392] = 0;
   out_4868595806798075065[393] = 0;
   out_4868595806798075065[394] = 0;
   out_4868595806798075065[395] = 0;
   out_4868595806798075065[396] = 1;
   out_4868595806798075065[397] = 0;
   out_4868595806798075065[398] = 0;
   out_4868595806798075065[399] = 0;
   out_4868595806798075065[400] = 0;
   out_4868595806798075065[401] = 0;
   out_4868595806798075065[402] = 0;
   out_4868595806798075065[403] = 0;
   out_4868595806798075065[404] = 0;
   out_4868595806798075065[405] = 0;
   out_4868595806798075065[406] = 0;
   out_4868595806798075065[407] = 0;
   out_4868595806798075065[408] = 0;
   out_4868595806798075065[409] = 0;
   out_4868595806798075065[410] = 0;
   out_4868595806798075065[411] = 0;
   out_4868595806798075065[412] = 0;
   out_4868595806798075065[413] = 0;
   out_4868595806798075065[414] = 0;
   out_4868595806798075065[415] = 0;
   out_4868595806798075065[416] = 0;
   out_4868595806798075065[417] = 0;
   out_4868595806798075065[418] = 1;
   out_4868595806798075065[419] = 0;
   out_4868595806798075065[420] = 0;
   out_4868595806798075065[421] = 0;
   out_4868595806798075065[422] = 0;
   out_4868595806798075065[423] = 0;
   out_4868595806798075065[424] = 0;
   out_4868595806798075065[425] = 0;
   out_4868595806798075065[426] = 0;
   out_4868595806798075065[427] = 0;
   out_4868595806798075065[428] = 0;
   out_4868595806798075065[429] = 0;
   out_4868595806798075065[430] = 0;
   out_4868595806798075065[431] = 0;
   out_4868595806798075065[432] = 0;
   out_4868595806798075065[433] = 0;
   out_4868595806798075065[434] = 0;
   out_4868595806798075065[435] = 0;
   out_4868595806798075065[436] = 0;
   out_4868595806798075065[437] = 0;
   out_4868595806798075065[438] = 0;
   out_4868595806798075065[439] = 0;
   out_4868595806798075065[440] = 1;
}
void h_4(double *state, double *unused, double *out_7570804151136260595) {
   out_7570804151136260595[0] = state[10] + state[13];
   out_7570804151136260595[1] = state[11] + state[14];
   out_7570804151136260595[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2382807001725344315) {
   out_2382807001725344315[0] = 0;
   out_2382807001725344315[1] = 0;
   out_2382807001725344315[2] = 0;
   out_2382807001725344315[3] = 0;
   out_2382807001725344315[4] = 0;
   out_2382807001725344315[5] = 0;
   out_2382807001725344315[6] = 0;
   out_2382807001725344315[7] = 0;
   out_2382807001725344315[8] = 0;
   out_2382807001725344315[9] = 0;
   out_2382807001725344315[10] = 1;
   out_2382807001725344315[11] = 0;
   out_2382807001725344315[12] = 0;
   out_2382807001725344315[13] = 1;
   out_2382807001725344315[14] = 0;
   out_2382807001725344315[15] = 0;
   out_2382807001725344315[16] = 0;
   out_2382807001725344315[17] = 0;
   out_2382807001725344315[18] = 0;
   out_2382807001725344315[19] = 0;
   out_2382807001725344315[20] = 0;
   out_2382807001725344315[21] = 0;
   out_2382807001725344315[22] = 0;
   out_2382807001725344315[23] = 0;
   out_2382807001725344315[24] = 0;
   out_2382807001725344315[25] = 0;
   out_2382807001725344315[26] = 0;
   out_2382807001725344315[27] = 0;
   out_2382807001725344315[28] = 0;
   out_2382807001725344315[29] = 0;
   out_2382807001725344315[30] = 0;
   out_2382807001725344315[31] = 0;
   out_2382807001725344315[32] = 0;
   out_2382807001725344315[33] = 1;
   out_2382807001725344315[34] = 0;
   out_2382807001725344315[35] = 0;
   out_2382807001725344315[36] = 1;
   out_2382807001725344315[37] = 0;
   out_2382807001725344315[38] = 0;
   out_2382807001725344315[39] = 0;
   out_2382807001725344315[40] = 0;
   out_2382807001725344315[41] = 0;
   out_2382807001725344315[42] = 0;
   out_2382807001725344315[43] = 0;
   out_2382807001725344315[44] = 0;
   out_2382807001725344315[45] = 0;
   out_2382807001725344315[46] = 0;
   out_2382807001725344315[47] = 0;
   out_2382807001725344315[48] = 0;
   out_2382807001725344315[49] = 0;
   out_2382807001725344315[50] = 0;
   out_2382807001725344315[51] = 0;
   out_2382807001725344315[52] = 0;
   out_2382807001725344315[53] = 0;
   out_2382807001725344315[54] = 0;
   out_2382807001725344315[55] = 0;
   out_2382807001725344315[56] = 1;
   out_2382807001725344315[57] = 0;
   out_2382807001725344315[58] = 0;
   out_2382807001725344315[59] = 1;
   out_2382807001725344315[60] = 0;
   out_2382807001725344315[61] = 0;
   out_2382807001725344315[62] = 0;
   out_2382807001725344315[63] = 0;
   out_2382807001725344315[64] = 0;
   out_2382807001725344315[65] = 0;
}
void h_9(double *state, double *unused, double *out_3545536123264320855) {
   out_3545536123264320855[0] = state[10];
   out_3545536123264320855[1] = state[11];
   out_3545536123264320855[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8776718136719759831) {
   out_8776718136719759831[0] = 0;
   out_8776718136719759831[1] = 0;
   out_8776718136719759831[2] = 0;
   out_8776718136719759831[3] = 0;
   out_8776718136719759831[4] = 0;
   out_8776718136719759831[5] = 0;
   out_8776718136719759831[6] = 0;
   out_8776718136719759831[7] = 0;
   out_8776718136719759831[8] = 0;
   out_8776718136719759831[9] = 0;
   out_8776718136719759831[10] = 1;
   out_8776718136719759831[11] = 0;
   out_8776718136719759831[12] = 0;
   out_8776718136719759831[13] = 0;
   out_8776718136719759831[14] = 0;
   out_8776718136719759831[15] = 0;
   out_8776718136719759831[16] = 0;
   out_8776718136719759831[17] = 0;
   out_8776718136719759831[18] = 0;
   out_8776718136719759831[19] = 0;
   out_8776718136719759831[20] = 0;
   out_8776718136719759831[21] = 0;
   out_8776718136719759831[22] = 0;
   out_8776718136719759831[23] = 0;
   out_8776718136719759831[24] = 0;
   out_8776718136719759831[25] = 0;
   out_8776718136719759831[26] = 0;
   out_8776718136719759831[27] = 0;
   out_8776718136719759831[28] = 0;
   out_8776718136719759831[29] = 0;
   out_8776718136719759831[30] = 0;
   out_8776718136719759831[31] = 0;
   out_8776718136719759831[32] = 0;
   out_8776718136719759831[33] = 1;
   out_8776718136719759831[34] = 0;
   out_8776718136719759831[35] = 0;
   out_8776718136719759831[36] = 0;
   out_8776718136719759831[37] = 0;
   out_8776718136719759831[38] = 0;
   out_8776718136719759831[39] = 0;
   out_8776718136719759831[40] = 0;
   out_8776718136719759831[41] = 0;
   out_8776718136719759831[42] = 0;
   out_8776718136719759831[43] = 0;
   out_8776718136719759831[44] = 0;
   out_8776718136719759831[45] = 0;
   out_8776718136719759831[46] = 0;
   out_8776718136719759831[47] = 0;
   out_8776718136719759831[48] = 0;
   out_8776718136719759831[49] = 0;
   out_8776718136719759831[50] = 0;
   out_8776718136719759831[51] = 0;
   out_8776718136719759831[52] = 0;
   out_8776718136719759831[53] = 0;
   out_8776718136719759831[54] = 0;
   out_8776718136719759831[55] = 0;
   out_8776718136719759831[56] = 1;
   out_8776718136719759831[57] = 0;
   out_8776718136719759831[58] = 0;
   out_8776718136719759831[59] = 0;
   out_8776718136719759831[60] = 0;
   out_8776718136719759831[61] = 0;
   out_8776718136719759831[62] = 0;
   out_8776718136719759831[63] = 0;
   out_8776718136719759831[64] = 0;
   out_8776718136719759831[65] = 0;
}
void h_10(double *state, double *unused, double *out_8220659860749883277) {
   out_8220659860749883277[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8220659860749883277[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8220659860749883277[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8907832640427688895) {
   out_8907832640427688895[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8907832640427688895[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8907832640427688895[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8907832640427688895[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8907832640427688895[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8907832640427688895[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8907832640427688895[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8907832640427688895[7] = 0;
   out_8907832640427688895[8] = 0;
   out_8907832640427688895[9] = 0;
   out_8907832640427688895[10] = 0;
   out_8907832640427688895[11] = 0;
   out_8907832640427688895[12] = 0;
   out_8907832640427688895[13] = 0;
   out_8907832640427688895[14] = 0;
   out_8907832640427688895[15] = 0;
   out_8907832640427688895[16] = 1;
   out_8907832640427688895[17] = 0;
   out_8907832640427688895[18] = 0;
   out_8907832640427688895[19] = 1;
   out_8907832640427688895[20] = 0;
   out_8907832640427688895[21] = 0;
   out_8907832640427688895[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8907832640427688895[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8907832640427688895[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8907832640427688895[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8907832640427688895[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8907832640427688895[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8907832640427688895[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8907832640427688895[29] = 0;
   out_8907832640427688895[30] = 0;
   out_8907832640427688895[31] = 0;
   out_8907832640427688895[32] = 0;
   out_8907832640427688895[33] = 0;
   out_8907832640427688895[34] = 0;
   out_8907832640427688895[35] = 0;
   out_8907832640427688895[36] = 0;
   out_8907832640427688895[37] = 0;
   out_8907832640427688895[38] = 0;
   out_8907832640427688895[39] = 1;
   out_8907832640427688895[40] = 0;
   out_8907832640427688895[41] = 0;
   out_8907832640427688895[42] = 1;
   out_8907832640427688895[43] = 0;
   out_8907832640427688895[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8907832640427688895[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8907832640427688895[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8907832640427688895[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8907832640427688895[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8907832640427688895[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8907832640427688895[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8907832640427688895[51] = 0;
   out_8907832640427688895[52] = 0;
   out_8907832640427688895[53] = 0;
   out_8907832640427688895[54] = 0;
   out_8907832640427688895[55] = 0;
   out_8907832640427688895[56] = 0;
   out_8907832640427688895[57] = 0;
   out_8907832640427688895[58] = 0;
   out_8907832640427688895[59] = 0;
   out_8907832640427688895[60] = 0;
   out_8907832640427688895[61] = 0;
   out_8907832640427688895[62] = 1;
   out_8907832640427688895[63] = 0;
   out_8907832640427688895[64] = 0;
   out_8907832640427688895[65] = 1;
}
void h_12(double *state, double *unused, double *out_3198950031623364815) {
   out_3198950031623364815[0] = state[0];
   out_3198950031623364815[1] = state[1];
   out_3198950031623364815[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3998451375317388681) {
   out_3998451375317388681[0] = 1;
   out_3998451375317388681[1] = 0;
   out_3998451375317388681[2] = 0;
   out_3998451375317388681[3] = 0;
   out_3998451375317388681[4] = 0;
   out_3998451375317388681[5] = 0;
   out_3998451375317388681[6] = 0;
   out_3998451375317388681[7] = 0;
   out_3998451375317388681[8] = 0;
   out_3998451375317388681[9] = 0;
   out_3998451375317388681[10] = 0;
   out_3998451375317388681[11] = 0;
   out_3998451375317388681[12] = 0;
   out_3998451375317388681[13] = 0;
   out_3998451375317388681[14] = 0;
   out_3998451375317388681[15] = 0;
   out_3998451375317388681[16] = 0;
   out_3998451375317388681[17] = 0;
   out_3998451375317388681[18] = 0;
   out_3998451375317388681[19] = 0;
   out_3998451375317388681[20] = 0;
   out_3998451375317388681[21] = 0;
   out_3998451375317388681[22] = 0;
   out_3998451375317388681[23] = 1;
   out_3998451375317388681[24] = 0;
   out_3998451375317388681[25] = 0;
   out_3998451375317388681[26] = 0;
   out_3998451375317388681[27] = 0;
   out_3998451375317388681[28] = 0;
   out_3998451375317388681[29] = 0;
   out_3998451375317388681[30] = 0;
   out_3998451375317388681[31] = 0;
   out_3998451375317388681[32] = 0;
   out_3998451375317388681[33] = 0;
   out_3998451375317388681[34] = 0;
   out_3998451375317388681[35] = 0;
   out_3998451375317388681[36] = 0;
   out_3998451375317388681[37] = 0;
   out_3998451375317388681[38] = 0;
   out_3998451375317388681[39] = 0;
   out_3998451375317388681[40] = 0;
   out_3998451375317388681[41] = 0;
   out_3998451375317388681[42] = 0;
   out_3998451375317388681[43] = 0;
   out_3998451375317388681[44] = 0;
   out_3998451375317388681[45] = 0;
   out_3998451375317388681[46] = 1;
   out_3998451375317388681[47] = 0;
   out_3998451375317388681[48] = 0;
   out_3998451375317388681[49] = 0;
   out_3998451375317388681[50] = 0;
   out_3998451375317388681[51] = 0;
   out_3998451375317388681[52] = 0;
   out_3998451375317388681[53] = 0;
   out_3998451375317388681[54] = 0;
   out_3998451375317388681[55] = 0;
   out_3998451375317388681[56] = 0;
   out_3998451375317388681[57] = 0;
   out_3998451375317388681[58] = 0;
   out_3998451375317388681[59] = 0;
   out_3998451375317388681[60] = 0;
   out_3998451375317388681[61] = 0;
   out_3998451375317388681[62] = 0;
   out_3998451375317388681[63] = 0;
   out_3998451375317388681[64] = 0;
   out_3998451375317388681[65] = 0;
}
void h_35(double *state, double *unused, double *out_7612977089408799391) {
   out_7612977089408799391[0] = state[7];
   out_7612977089408799391[1] = state[8];
   out_7612977089408799391[2] = state[9];
}
void H_35(double *state, double *unused, double *out_5651245725976743100) {
   out_5651245725976743100[0] = 0;
   out_5651245725976743100[1] = 0;
   out_5651245725976743100[2] = 0;
   out_5651245725976743100[3] = 0;
   out_5651245725976743100[4] = 0;
   out_5651245725976743100[5] = 0;
   out_5651245725976743100[6] = 0;
   out_5651245725976743100[7] = 1;
   out_5651245725976743100[8] = 0;
   out_5651245725976743100[9] = 0;
   out_5651245725976743100[10] = 0;
   out_5651245725976743100[11] = 0;
   out_5651245725976743100[12] = 0;
   out_5651245725976743100[13] = 0;
   out_5651245725976743100[14] = 0;
   out_5651245725976743100[15] = 0;
   out_5651245725976743100[16] = 0;
   out_5651245725976743100[17] = 0;
   out_5651245725976743100[18] = 0;
   out_5651245725976743100[19] = 0;
   out_5651245725976743100[20] = 0;
   out_5651245725976743100[21] = 0;
   out_5651245725976743100[22] = 0;
   out_5651245725976743100[23] = 0;
   out_5651245725976743100[24] = 0;
   out_5651245725976743100[25] = 0;
   out_5651245725976743100[26] = 0;
   out_5651245725976743100[27] = 0;
   out_5651245725976743100[28] = 0;
   out_5651245725976743100[29] = 0;
   out_5651245725976743100[30] = 1;
   out_5651245725976743100[31] = 0;
   out_5651245725976743100[32] = 0;
   out_5651245725976743100[33] = 0;
   out_5651245725976743100[34] = 0;
   out_5651245725976743100[35] = 0;
   out_5651245725976743100[36] = 0;
   out_5651245725976743100[37] = 0;
   out_5651245725976743100[38] = 0;
   out_5651245725976743100[39] = 0;
   out_5651245725976743100[40] = 0;
   out_5651245725976743100[41] = 0;
   out_5651245725976743100[42] = 0;
   out_5651245725976743100[43] = 0;
   out_5651245725976743100[44] = 0;
   out_5651245725976743100[45] = 0;
   out_5651245725976743100[46] = 0;
   out_5651245725976743100[47] = 0;
   out_5651245725976743100[48] = 0;
   out_5651245725976743100[49] = 0;
   out_5651245725976743100[50] = 0;
   out_5651245725976743100[51] = 0;
   out_5651245725976743100[52] = 0;
   out_5651245725976743100[53] = 1;
   out_5651245725976743100[54] = 0;
   out_5651245725976743100[55] = 0;
   out_5651245725976743100[56] = 0;
   out_5651245725976743100[57] = 0;
   out_5651245725976743100[58] = 0;
   out_5651245725976743100[59] = 0;
   out_5651245725976743100[60] = 0;
   out_5651245725976743100[61] = 0;
   out_5651245725976743100[62] = 0;
   out_5651245725976743100[63] = 0;
   out_5651245725976743100[64] = 0;
   out_5651245725976743100[65] = 0;
}
void h_32(double *state, double *unused, double *out_445124408325912041) {
   out_445124408325912041[0] = state[3];
   out_445124408325912041[1] = state[4];
   out_445124408325912041[2] = state[5];
   out_445124408325912041[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2294955996994783757) {
   out_2294955996994783757[0] = 0;
   out_2294955996994783757[1] = 0;
   out_2294955996994783757[2] = 0;
   out_2294955996994783757[3] = 1;
   out_2294955996994783757[4] = 0;
   out_2294955996994783757[5] = 0;
   out_2294955996994783757[6] = 0;
   out_2294955996994783757[7] = 0;
   out_2294955996994783757[8] = 0;
   out_2294955996994783757[9] = 0;
   out_2294955996994783757[10] = 0;
   out_2294955996994783757[11] = 0;
   out_2294955996994783757[12] = 0;
   out_2294955996994783757[13] = 0;
   out_2294955996994783757[14] = 0;
   out_2294955996994783757[15] = 0;
   out_2294955996994783757[16] = 0;
   out_2294955996994783757[17] = 0;
   out_2294955996994783757[18] = 0;
   out_2294955996994783757[19] = 0;
   out_2294955996994783757[20] = 0;
   out_2294955996994783757[21] = 0;
   out_2294955996994783757[22] = 0;
   out_2294955996994783757[23] = 0;
   out_2294955996994783757[24] = 0;
   out_2294955996994783757[25] = 0;
   out_2294955996994783757[26] = 1;
   out_2294955996994783757[27] = 0;
   out_2294955996994783757[28] = 0;
   out_2294955996994783757[29] = 0;
   out_2294955996994783757[30] = 0;
   out_2294955996994783757[31] = 0;
   out_2294955996994783757[32] = 0;
   out_2294955996994783757[33] = 0;
   out_2294955996994783757[34] = 0;
   out_2294955996994783757[35] = 0;
   out_2294955996994783757[36] = 0;
   out_2294955996994783757[37] = 0;
   out_2294955996994783757[38] = 0;
   out_2294955996994783757[39] = 0;
   out_2294955996994783757[40] = 0;
   out_2294955996994783757[41] = 0;
   out_2294955996994783757[42] = 0;
   out_2294955996994783757[43] = 0;
   out_2294955996994783757[44] = 0;
   out_2294955996994783757[45] = 0;
   out_2294955996994783757[46] = 0;
   out_2294955996994783757[47] = 0;
   out_2294955996994783757[48] = 0;
   out_2294955996994783757[49] = 1;
   out_2294955996994783757[50] = 0;
   out_2294955996994783757[51] = 0;
   out_2294955996994783757[52] = 0;
   out_2294955996994783757[53] = 0;
   out_2294955996994783757[54] = 0;
   out_2294955996994783757[55] = 0;
   out_2294955996994783757[56] = 0;
   out_2294955996994783757[57] = 0;
   out_2294955996994783757[58] = 0;
   out_2294955996994783757[59] = 0;
   out_2294955996994783757[60] = 0;
   out_2294955996994783757[61] = 0;
   out_2294955996994783757[62] = 0;
   out_2294955996994783757[63] = 0;
   out_2294955996994783757[64] = 0;
   out_2294955996994783757[65] = 0;
   out_2294955996994783757[66] = 0;
   out_2294955996994783757[67] = 0;
   out_2294955996994783757[68] = 0;
   out_2294955996994783757[69] = 0;
   out_2294955996994783757[70] = 0;
   out_2294955996994783757[71] = 0;
   out_2294955996994783757[72] = 1;
   out_2294955996994783757[73] = 0;
   out_2294955996994783757[74] = 0;
   out_2294955996994783757[75] = 0;
   out_2294955996994783757[76] = 0;
   out_2294955996994783757[77] = 0;
   out_2294955996994783757[78] = 0;
   out_2294955996994783757[79] = 0;
   out_2294955996994783757[80] = 0;
   out_2294955996994783757[81] = 0;
   out_2294955996994783757[82] = 0;
   out_2294955996994783757[83] = 0;
   out_2294955996994783757[84] = 0;
   out_2294955996994783757[85] = 0;
   out_2294955996994783757[86] = 0;
   out_2294955996994783757[87] = 0;
}
void h_13(double *state, double *unused, double *out_2321214207381065649) {
   out_2321214207381065649[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2321214207381065649[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2321214207381065649[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_3609520538520451582) {
   out_3609520538520451582[0] = 0;
   out_3609520538520451582[1] = 0;
   out_3609520538520451582[2] = 0;
   out_3609520538520451582[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3609520538520451582[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3609520538520451582[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_3609520538520451582[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3609520538520451582[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_3609520538520451582[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_3609520538520451582[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_3609520538520451582[10] = 0;
   out_3609520538520451582[11] = 0;
   out_3609520538520451582[12] = 0;
   out_3609520538520451582[13] = 0;
   out_3609520538520451582[14] = 0;
   out_3609520538520451582[15] = 0;
   out_3609520538520451582[16] = 0;
   out_3609520538520451582[17] = 0;
   out_3609520538520451582[18] = 0;
   out_3609520538520451582[19] = 0;
   out_3609520538520451582[20] = 0;
   out_3609520538520451582[21] = 0;
   out_3609520538520451582[22] = 0;
   out_3609520538520451582[23] = 0;
   out_3609520538520451582[24] = 0;
   out_3609520538520451582[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3609520538520451582[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3609520538520451582[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3609520538520451582[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_3609520538520451582[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_3609520538520451582[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_3609520538520451582[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_3609520538520451582[32] = 0;
   out_3609520538520451582[33] = 0;
   out_3609520538520451582[34] = 0;
   out_3609520538520451582[35] = 0;
   out_3609520538520451582[36] = 0;
   out_3609520538520451582[37] = 0;
   out_3609520538520451582[38] = 0;
   out_3609520538520451582[39] = 0;
   out_3609520538520451582[40] = 0;
   out_3609520538520451582[41] = 0;
   out_3609520538520451582[42] = 0;
   out_3609520538520451582[43] = 0;
   out_3609520538520451582[44] = 0;
   out_3609520538520451582[45] = 0;
   out_3609520538520451582[46] = 0;
   out_3609520538520451582[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3609520538520451582[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_3609520538520451582[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3609520538520451582[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3609520538520451582[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_3609520538520451582[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_3609520538520451582[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_3609520538520451582[54] = 0;
   out_3609520538520451582[55] = 0;
   out_3609520538520451582[56] = 0;
   out_3609520538520451582[57] = 0;
   out_3609520538520451582[58] = 0;
   out_3609520538520451582[59] = 0;
   out_3609520538520451582[60] = 0;
   out_3609520538520451582[61] = 0;
   out_3609520538520451582[62] = 0;
   out_3609520538520451582[63] = 0;
   out_3609520538520451582[64] = 0;
   out_3609520538520451582[65] = 0;
}
void h_14(double *state, double *unused, double *out_3545536123264320855) {
   out_3545536123264320855[0] = state[10];
   out_3545536123264320855[1] = state[11];
   out_3545536123264320855[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8776718136719759831) {
   out_8776718136719759831[0] = 0;
   out_8776718136719759831[1] = 0;
   out_8776718136719759831[2] = 0;
   out_8776718136719759831[3] = 0;
   out_8776718136719759831[4] = 0;
   out_8776718136719759831[5] = 0;
   out_8776718136719759831[6] = 0;
   out_8776718136719759831[7] = 0;
   out_8776718136719759831[8] = 0;
   out_8776718136719759831[9] = 0;
   out_8776718136719759831[10] = 1;
   out_8776718136719759831[11] = 0;
   out_8776718136719759831[12] = 0;
   out_8776718136719759831[13] = 0;
   out_8776718136719759831[14] = 0;
   out_8776718136719759831[15] = 0;
   out_8776718136719759831[16] = 0;
   out_8776718136719759831[17] = 0;
   out_8776718136719759831[18] = 0;
   out_8776718136719759831[19] = 0;
   out_8776718136719759831[20] = 0;
   out_8776718136719759831[21] = 0;
   out_8776718136719759831[22] = 0;
   out_8776718136719759831[23] = 0;
   out_8776718136719759831[24] = 0;
   out_8776718136719759831[25] = 0;
   out_8776718136719759831[26] = 0;
   out_8776718136719759831[27] = 0;
   out_8776718136719759831[28] = 0;
   out_8776718136719759831[29] = 0;
   out_8776718136719759831[30] = 0;
   out_8776718136719759831[31] = 0;
   out_8776718136719759831[32] = 0;
   out_8776718136719759831[33] = 1;
   out_8776718136719759831[34] = 0;
   out_8776718136719759831[35] = 0;
   out_8776718136719759831[36] = 0;
   out_8776718136719759831[37] = 0;
   out_8776718136719759831[38] = 0;
   out_8776718136719759831[39] = 0;
   out_8776718136719759831[40] = 0;
   out_8776718136719759831[41] = 0;
   out_8776718136719759831[42] = 0;
   out_8776718136719759831[43] = 0;
   out_8776718136719759831[44] = 0;
   out_8776718136719759831[45] = 0;
   out_8776718136719759831[46] = 0;
   out_8776718136719759831[47] = 0;
   out_8776718136719759831[48] = 0;
   out_8776718136719759831[49] = 0;
   out_8776718136719759831[50] = 0;
   out_8776718136719759831[51] = 0;
   out_8776718136719759831[52] = 0;
   out_8776718136719759831[53] = 0;
   out_8776718136719759831[54] = 0;
   out_8776718136719759831[55] = 0;
   out_8776718136719759831[56] = 1;
   out_8776718136719759831[57] = 0;
   out_8776718136719759831[58] = 0;
   out_8776718136719759831[59] = 0;
   out_8776718136719759831[60] = 0;
   out_8776718136719759831[61] = 0;
   out_8776718136719759831[62] = 0;
   out_8776718136719759831[63] = 0;
   out_8776718136719759831[64] = 0;
   out_8776718136719759831[65] = 0;
}
void h_33(double *state, double *unused, double *out_8305058630017610017) {
   out_8305058630017610017[0] = state[16];
   out_8305058630017610017[1] = state[17];
   out_8305058630017610017[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2500688721337885496) {
   out_2500688721337885496[0] = 0;
   out_2500688721337885496[1] = 0;
   out_2500688721337885496[2] = 0;
   out_2500688721337885496[3] = 0;
   out_2500688721337885496[4] = 0;
   out_2500688721337885496[5] = 0;
   out_2500688721337885496[6] = 0;
   out_2500688721337885496[7] = 0;
   out_2500688721337885496[8] = 0;
   out_2500688721337885496[9] = 0;
   out_2500688721337885496[10] = 0;
   out_2500688721337885496[11] = 0;
   out_2500688721337885496[12] = 0;
   out_2500688721337885496[13] = 0;
   out_2500688721337885496[14] = 0;
   out_2500688721337885496[15] = 0;
   out_2500688721337885496[16] = 1;
   out_2500688721337885496[17] = 0;
   out_2500688721337885496[18] = 0;
   out_2500688721337885496[19] = 0;
   out_2500688721337885496[20] = 0;
   out_2500688721337885496[21] = 0;
   out_2500688721337885496[22] = 0;
   out_2500688721337885496[23] = 0;
   out_2500688721337885496[24] = 0;
   out_2500688721337885496[25] = 0;
   out_2500688721337885496[26] = 0;
   out_2500688721337885496[27] = 0;
   out_2500688721337885496[28] = 0;
   out_2500688721337885496[29] = 0;
   out_2500688721337885496[30] = 0;
   out_2500688721337885496[31] = 0;
   out_2500688721337885496[32] = 0;
   out_2500688721337885496[33] = 0;
   out_2500688721337885496[34] = 0;
   out_2500688721337885496[35] = 0;
   out_2500688721337885496[36] = 0;
   out_2500688721337885496[37] = 0;
   out_2500688721337885496[38] = 0;
   out_2500688721337885496[39] = 1;
   out_2500688721337885496[40] = 0;
   out_2500688721337885496[41] = 0;
   out_2500688721337885496[42] = 0;
   out_2500688721337885496[43] = 0;
   out_2500688721337885496[44] = 0;
   out_2500688721337885496[45] = 0;
   out_2500688721337885496[46] = 0;
   out_2500688721337885496[47] = 0;
   out_2500688721337885496[48] = 0;
   out_2500688721337885496[49] = 0;
   out_2500688721337885496[50] = 0;
   out_2500688721337885496[51] = 0;
   out_2500688721337885496[52] = 0;
   out_2500688721337885496[53] = 0;
   out_2500688721337885496[54] = 0;
   out_2500688721337885496[55] = 0;
   out_2500688721337885496[56] = 0;
   out_2500688721337885496[57] = 0;
   out_2500688721337885496[58] = 0;
   out_2500688721337885496[59] = 0;
   out_2500688721337885496[60] = 0;
   out_2500688721337885496[61] = 0;
   out_2500688721337885496[62] = 1;
   out_2500688721337885496[63] = 0;
   out_2500688721337885496[64] = 0;
   out_2500688721337885496[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1965639361288013725) {
  H(in_vec, out_1965639361288013725);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5199172378396509024) {
  err_fun(nom_x, delta_x, out_5199172378396509024);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2952380910721125403) {
  inv_err_fun(nom_x, true_x, out_2952380910721125403);
}
void live_H_mod_fun(double *state, double *out_5096821251984911957) {
  H_mod_fun(state, out_5096821251984911957);
}
void live_f_fun(double *state, double dt, double *out_3537200419085443625) {
  f_fun(state,  dt, out_3537200419085443625);
}
void live_F_fun(double *state, double dt, double *out_4868595806798075065) {
  F_fun(state,  dt, out_4868595806798075065);
}
void live_h_4(double *state, double *unused, double *out_7570804151136260595) {
  h_4(state, unused, out_7570804151136260595);
}
void live_H_4(double *state, double *unused, double *out_2382807001725344315) {
  H_4(state, unused, out_2382807001725344315);
}
void live_h_9(double *state, double *unused, double *out_3545536123264320855) {
  h_9(state, unused, out_3545536123264320855);
}
void live_H_9(double *state, double *unused, double *out_8776718136719759831) {
  H_9(state, unused, out_8776718136719759831);
}
void live_h_10(double *state, double *unused, double *out_8220659860749883277) {
  h_10(state, unused, out_8220659860749883277);
}
void live_H_10(double *state, double *unused, double *out_8907832640427688895) {
  H_10(state, unused, out_8907832640427688895);
}
void live_h_12(double *state, double *unused, double *out_3198950031623364815) {
  h_12(state, unused, out_3198950031623364815);
}
void live_H_12(double *state, double *unused, double *out_3998451375317388681) {
  H_12(state, unused, out_3998451375317388681);
}
void live_h_35(double *state, double *unused, double *out_7612977089408799391) {
  h_35(state, unused, out_7612977089408799391);
}
void live_H_35(double *state, double *unused, double *out_5651245725976743100) {
  H_35(state, unused, out_5651245725976743100);
}
void live_h_32(double *state, double *unused, double *out_445124408325912041) {
  h_32(state, unused, out_445124408325912041);
}
void live_H_32(double *state, double *unused, double *out_2294955996994783757) {
  H_32(state, unused, out_2294955996994783757);
}
void live_h_13(double *state, double *unused, double *out_2321214207381065649) {
  h_13(state, unused, out_2321214207381065649);
}
void live_H_13(double *state, double *unused, double *out_3609520538520451582) {
  H_13(state, unused, out_3609520538520451582);
}
void live_h_14(double *state, double *unused, double *out_3545536123264320855) {
  h_14(state, unused, out_3545536123264320855);
}
void live_H_14(double *state, double *unused, double *out_8776718136719759831) {
  H_14(state, unused, out_8776718136719759831);
}
void live_h_33(double *state, double *unused, double *out_8305058630017610017) {
  h_33(state, unused, out_8305058630017610017);
}
void live_H_33(double *state, double *unused, double *out_2500688721337885496) {
  H_33(state, unused, out_2500688721337885496);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
