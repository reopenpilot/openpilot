#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3154584760600041274) {
   out_3154584760600041274[0] = 0;
   out_3154584760600041274[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3154584760600041274[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3154584760600041274[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3154584760600041274[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3154584760600041274[5] = -sin(in_vec[1]);
   out_3154584760600041274[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3154584760600041274[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3154584760600041274[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3154584760600041274[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3154584760600041274[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3154584760600041274[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3154584760600041274[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3154584760600041274[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3154584760600041274[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3154584760600041274[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3154584760600041274[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3154584760600041274[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_499696621566390633) {
   out_499696621566390633[0] = delta_x[0] + nom_x[0];
   out_499696621566390633[1] = delta_x[1] + nom_x[1];
   out_499696621566390633[2] = delta_x[2] + nom_x[2];
   out_499696621566390633[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_499696621566390633[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_499696621566390633[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_499696621566390633[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_499696621566390633[7] = delta_x[6] + nom_x[7];
   out_499696621566390633[8] = delta_x[7] + nom_x[8];
   out_499696621566390633[9] = delta_x[8] + nom_x[9];
   out_499696621566390633[10] = delta_x[9] + nom_x[10];
   out_499696621566390633[11] = delta_x[10] + nom_x[11];
   out_499696621566390633[12] = delta_x[11] + nom_x[12];
   out_499696621566390633[13] = delta_x[12] + nom_x[13];
   out_499696621566390633[14] = delta_x[13] + nom_x[14];
   out_499696621566390633[15] = delta_x[14] + nom_x[15];
   out_499696621566390633[16] = delta_x[15] + nom_x[16];
   out_499696621566390633[17] = delta_x[16] + nom_x[17];
   out_499696621566390633[18] = delta_x[17] + nom_x[18];
   out_499696621566390633[19] = delta_x[18] + nom_x[19];
   out_499696621566390633[20] = delta_x[19] + nom_x[20];
   out_499696621566390633[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5386185119904310606) {
   out_5386185119904310606[0] = -nom_x[0] + true_x[0];
   out_5386185119904310606[1] = -nom_x[1] + true_x[1];
   out_5386185119904310606[2] = -nom_x[2] + true_x[2];
   out_5386185119904310606[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5386185119904310606[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5386185119904310606[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5386185119904310606[6] = -nom_x[7] + true_x[7];
   out_5386185119904310606[7] = -nom_x[8] + true_x[8];
   out_5386185119904310606[8] = -nom_x[9] + true_x[9];
   out_5386185119904310606[9] = -nom_x[10] + true_x[10];
   out_5386185119904310606[10] = -nom_x[11] + true_x[11];
   out_5386185119904310606[11] = -nom_x[12] + true_x[12];
   out_5386185119904310606[12] = -nom_x[13] + true_x[13];
   out_5386185119904310606[13] = -nom_x[14] + true_x[14];
   out_5386185119904310606[14] = -nom_x[15] + true_x[15];
   out_5386185119904310606[15] = -nom_x[16] + true_x[16];
   out_5386185119904310606[16] = -nom_x[17] + true_x[17];
   out_5386185119904310606[17] = -nom_x[18] + true_x[18];
   out_5386185119904310606[18] = -nom_x[19] + true_x[19];
   out_5386185119904310606[19] = -nom_x[20] + true_x[20];
   out_5386185119904310606[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7854240377413656417) {
   out_7854240377413656417[0] = 1.0;
   out_7854240377413656417[1] = 0;
   out_7854240377413656417[2] = 0;
   out_7854240377413656417[3] = 0;
   out_7854240377413656417[4] = 0;
   out_7854240377413656417[5] = 0;
   out_7854240377413656417[6] = 0;
   out_7854240377413656417[7] = 0;
   out_7854240377413656417[8] = 0;
   out_7854240377413656417[9] = 0;
   out_7854240377413656417[10] = 0;
   out_7854240377413656417[11] = 0;
   out_7854240377413656417[12] = 0;
   out_7854240377413656417[13] = 0;
   out_7854240377413656417[14] = 0;
   out_7854240377413656417[15] = 0;
   out_7854240377413656417[16] = 0;
   out_7854240377413656417[17] = 0;
   out_7854240377413656417[18] = 0;
   out_7854240377413656417[19] = 0;
   out_7854240377413656417[20] = 0;
   out_7854240377413656417[21] = 0;
   out_7854240377413656417[22] = 1.0;
   out_7854240377413656417[23] = 0;
   out_7854240377413656417[24] = 0;
   out_7854240377413656417[25] = 0;
   out_7854240377413656417[26] = 0;
   out_7854240377413656417[27] = 0;
   out_7854240377413656417[28] = 0;
   out_7854240377413656417[29] = 0;
   out_7854240377413656417[30] = 0;
   out_7854240377413656417[31] = 0;
   out_7854240377413656417[32] = 0;
   out_7854240377413656417[33] = 0;
   out_7854240377413656417[34] = 0;
   out_7854240377413656417[35] = 0;
   out_7854240377413656417[36] = 0;
   out_7854240377413656417[37] = 0;
   out_7854240377413656417[38] = 0;
   out_7854240377413656417[39] = 0;
   out_7854240377413656417[40] = 0;
   out_7854240377413656417[41] = 0;
   out_7854240377413656417[42] = 0;
   out_7854240377413656417[43] = 0;
   out_7854240377413656417[44] = 1.0;
   out_7854240377413656417[45] = 0;
   out_7854240377413656417[46] = 0;
   out_7854240377413656417[47] = 0;
   out_7854240377413656417[48] = 0;
   out_7854240377413656417[49] = 0;
   out_7854240377413656417[50] = 0;
   out_7854240377413656417[51] = 0;
   out_7854240377413656417[52] = 0;
   out_7854240377413656417[53] = 0;
   out_7854240377413656417[54] = 0;
   out_7854240377413656417[55] = 0;
   out_7854240377413656417[56] = 0;
   out_7854240377413656417[57] = 0;
   out_7854240377413656417[58] = 0;
   out_7854240377413656417[59] = 0;
   out_7854240377413656417[60] = 0;
   out_7854240377413656417[61] = 0;
   out_7854240377413656417[62] = 0;
   out_7854240377413656417[63] = 0;
   out_7854240377413656417[64] = 0;
   out_7854240377413656417[65] = 0;
   out_7854240377413656417[66] = -0.5*state[4];
   out_7854240377413656417[67] = -0.5*state[5];
   out_7854240377413656417[68] = -0.5*state[6];
   out_7854240377413656417[69] = 0;
   out_7854240377413656417[70] = 0;
   out_7854240377413656417[71] = 0;
   out_7854240377413656417[72] = 0;
   out_7854240377413656417[73] = 0;
   out_7854240377413656417[74] = 0;
   out_7854240377413656417[75] = 0;
   out_7854240377413656417[76] = 0;
   out_7854240377413656417[77] = 0;
   out_7854240377413656417[78] = 0;
   out_7854240377413656417[79] = 0;
   out_7854240377413656417[80] = 0;
   out_7854240377413656417[81] = 0;
   out_7854240377413656417[82] = 0;
   out_7854240377413656417[83] = 0;
   out_7854240377413656417[84] = 0;
   out_7854240377413656417[85] = 0;
   out_7854240377413656417[86] = 0;
   out_7854240377413656417[87] = 0.5*state[3];
   out_7854240377413656417[88] = 0.5*state[6];
   out_7854240377413656417[89] = -0.5*state[5];
   out_7854240377413656417[90] = 0;
   out_7854240377413656417[91] = 0;
   out_7854240377413656417[92] = 0;
   out_7854240377413656417[93] = 0;
   out_7854240377413656417[94] = 0;
   out_7854240377413656417[95] = 0;
   out_7854240377413656417[96] = 0;
   out_7854240377413656417[97] = 0;
   out_7854240377413656417[98] = 0;
   out_7854240377413656417[99] = 0;
   out_7854240377413656417[100] = 0;
   out_7854240377413656417[101] = 0;
   out_7854240377413656417[102] = 0;
   out_7854240377413656417[103] = 0;
   out_7854240377413656417[104] = 0;
   out_7854240377413656417[105] = 0;
   out_7854240377413656417[106] = 0;
   out_7854240377413656417[107] = 0;
   out_7854240377413656417[108] = -0.5*state[6];
   out_7854240377413656417[109] = 0.5*state[3];
   out_7854240377413656417[110] = 0.5*state[4];
   out_7854240377413656417[111] = 0;
   out_7854240377413656417[112] = 0;
   out_7854240377413656417[113] = 0;
   out_7854240377413656417[114] = 0;
   out_7854240377413656417[115] = 0;
   out_7854240377413656417[116] = 0;
   out_7854240377413656417[117] = 0;
   out_7854240377413656417[118] = 0;
   out_7854240377413656417[119] = 0;
   out_7854240377413656417[120] = 0;
   out_7854240377413656417[121] = 0;
   out_7854240377413656417[122] = 0;
   out_7854240377413656417[123] = 0;
   out_7854240377413656417[124] = 0;
   out_7854240377413656417[125] = 0;
   out_7854240377413656417[126] = 0;
   out_7854240377413656417[127] = 0;
   out_7854240377413656417[128] = 0;
   out_7854240377413656417[129] = 0.5*state[5];
   out_7854240377413656417[130] = -0.5*state[4];
   out_7854240377413656417[131] = 0.5*state[3];
   out_7854240377413656417[132] = 0;
   out_7854240377413656417[133] = 0;
   out_7854240377413656417[134] = 0;
   out_7854240377413656417[135] = 0;
   out_7854240377413656417[136] = 0;
   out_7854240377413656417[137] = 0;
   out_7854240377413656417[138] = 0;
   out_7854240377413656417[139] = 0;
   out_7854240377413656417[140] = 0;
   out_7854240377413656417[141] = 0;
   out_7854240377413656417[142] = 0;
   out_7854240377413656417[143] = 0;
   out_7854240377413656417[144] = 0;
   out_7854240377413656417[145] = 0;
   out_7854240377413656417[146] = 0;
   out_7854240377413656417[147] = 0;
   out_7854240377413656417[148] = 0;
   out_7854240377413656417[149] = 0;
   out_7854240377413656417[150] = 0;
   out_7854240377413656417[151] = 0;
   out_7854240377413656417[152] = 0;
   out_7854240377413656417[153] = 1.0;
   out_7854240377413656417[154] = 0;
   out_7854240377413656417[155] = 0;
   out_7854240377413656417[156] = 0;
   out_7854240377413656417[157] = 0;
   out_7854240377413656417[158] = 0;
   out_7854240377413656417[159] = 0;
   out_7854240377413656417[160] = 0;
   out_7854240377413656417[161] = 0;
   out_7854240377413656417[162] = 0;
   out_7854240377413656417[163] = 0;
   out_7854240377413656417[164] = 0;
   out_7854240377413656417[165] = 0;
   out_7854240377413656417[166] = 0;
   out_7854240377413656417[167] = 0;
   out_7854240377413656417[168] = 0;
   out_7854240377413656417[169] = 0;
   out_7854240377413656417[170] = 0;
   out_7854240377413656417[171] = 0;
   out_7854240377413656417[172] = 0;
   out_7854240377413656417[173] = 0;
   out_7854240377413656417[174] = 0;
   out_7854240377413656417[175] = 1.0;
   out_7854240377413656417[176] = 0;
   out_7854240377413656417[177] = 0;
   out_7854240377413656417[178] = 0;
   out_7854240377413656417[179] = 0;
   out_7854240377413656417[180] = 0;
   out_7854240377413656417[181] = 0;
   out_7854240377413656417[182] = 0;
   out_7854240377413656417[183] = 0;
   out_7854240377413656417[184] = 0;
   out_7854240377413656417[185] = 0;
   out_7854240377413656417[186] = 0;
   out_7854240377413656417[187] = 0;
   out_7854240377413656417[188] = 0;
   out_7854240377413656417[189] = 0;
   out_7854240377413656417[190] = 0;
   out_7854240377413656417[191] = 0;
   out_7854240377413656417[192] = 0;
   out_7854240377413656417[193] = 0;
   out_7854240377413656417[194] = 0;
   out_7854240377413656417[195] = 0;
   out_7854240377413656417[196] = 0;
   out_7854240377413656417[197] = 1.0;
   out_7854240377413656417[198] = 0;
   out_7854240377413656417[199] = 0;
   out_7854240377413656417[200] = 0;
   out_7854240377413656417[201] = 0;
   out_7854240377413656417[202] = 0;
   out_7854240377413656417[203] = 0;
   out_7854240377413656417[204] = 0;
   out_7854240377413656417[205] = 0;
   out_7854240377413656417[206] = 0;
   out_7854240377413656417[207] = 0;
   out_7854240377413656417[208] = 0;
   out_7854240377413656417[209] = 0;
   out_7854240377413656417[210] = 0;
   out_7854240377413656417[211] = 0;
   out_7854240377413656417[212] = 0;
   out_7854240377413656417[213] = 0;
   out_7854240377413656417[214] = 0;
   out_7854240377413656417[215] = 0;
   out_7854240377413656417[216] = 0;
   out_7854240377413656417[217] = 0;
   out_7854240377413656417[218] = 0;
   out_7854240377413656417[219] = 1.0;
   out_7854240377413656417[220] = 0;
   out_7854240377413656417[221] = 0;
   out_7854240377413656417[222] = 0;
   out_7854240377413656417[223] = 0;
   out_7854240377413656417[224] = 0;
   out_7854240377413656417[225] = 0;
   out_7854240377413656417[226] = 0;
   out_7854240377413656417[227] = 0;
   out_7854240377413656417[228] = 0;
   out_7854240377413656417[229] = 0;
   out_7854240377413656417[230] = 0;
   out_7854240377413656417[231] = 0;
   out_7854240377413656417[232] = 0;
   out_7854240377413656417[233] = 0;
   out_7854240377413656417[234] = 0;
   out_7854240377413656417[235] = 0;
   out_7854240377413656417[236] = 0;
   out_7854240377413656417[237] = 0;
   out_7854240377413656417[238] = 0;
   out_7854240377413656417[239] = 0;
   out_7854240377413656417[240] = 0;
   out_7854240377413656417[241] = 1.0;
   out_7854240377413656417[242] = 0;
   out_7854240377413656417[243] = 0;
   out_7854240377413656417[244] = 0;
   out_7854240377413656417[245] = 0;
   out_7854240377413656417[246] = 0;
   out_7854240377413656417[247] = 0;
   out_7854240377413656417[248] = 0;
   out_7854240377413656417[249] = 0;
   out_7854240377413656417[250] = 0;
   out_7854240377413656417[251] = 0;
   out_7854240377413656417[252] = 0;
   out_7854240377413656417[253] = 0;
   out_7854240377413656417[254] = 0;
   out_7854240377413656417[255] = 0;
   out_7854240377413656417[256] = 0;
   out_7854240377413656417[257] = 0;
   out_7854240377413656417[258] = 0;
   out_7854240377413656417[259] = 0;
   out_7854240377413656417[260] = 0;
   out_7854240377413656417[261] = 0;
   out_7854240377413656417[262] = 0;
   out_7854240377413656417[263] = 1.0;
   out_7854240377413656417[264] = 0;
   out_7854240377413656417[265] = 0;
   out_7854240377413656417[266] = 0;
   out_7854240377413656417[267] = 0;
   out_7854240377413656417[268] = 0;
   out_7854240377413656417[269] = 0;
   out_7854240377413656417[270] = 0;
   out_7854240377413656417[271] = 0;
   out_7854240377413656417[272] = 0;
   out_7854240377413656417[273] = 0;
   out_7854240377413656417[274] = 0;
   out_7854240377413656417[275] = 0;
   out_7854240377413656417[276] = 0;
   out_7854240377413656417[277] = 0;
   out_7854240377413656417[278] = 0;
   out_7854240377413656417[279] = 0;
   out_7854240377413656417[280] = 0;
   out_7854240377413656417[281] = 0;
   out_7854240377413656417[282] = 0;
   out_7854240377413656417[283] = 0;
   out_7854240377413656417[284] = 0;
   out_7854240377413656417[285] = 1.0;
   out_7854240377413656417[286] = 0;
   out_7854240377413656417[287] = 0;
   out_7854240377413656417[288] = 0;
   out_7854240377413656417[289] = 0;
   out_7854240377413656417[290] = 0;
   out_7854240377413656417[291] = 0;
   out_7854240377413656417[292] = 0;
   out_7854240377413656417[293] = 0;
   out_7854240377413656417[294] = 0;
   out_7854240377413656417[295] = 0;
   out_7854240377413656417[296] = 0;
   out_7854240377413656417[297] = 0;
   out_7854240377413656417[298] = 0;
   out_7854240377413656417[299] = 0;
   out_7854240377413656417[300] = 0;
   out_7854240377413656417[301] = 0;
   out_7854240377413656417[302] = 0;
   out_7854240377413656417[303] = 0;
   out_7854240377413656417[304] = 0;
   out_7854240377413656417[305] = 0;
   out_7854240377413656417[306] = 0;
   out_7854240377413656417[307] = 1.0;
   out_7854240377413656417[308] = 0;
   out_7854240377413656417[309] = 0;
   out_7854240377413656417[310] = 0;
   out_7854240377413656417[311] = 0;
   out_7854240377413656417[312] = 0;
   out_7854240377413656417[313] = 0;
   out_7854240377413656417[314] = 0;
   out_7854240377413656417[315] = 0;
   out_7854240377413656417[316] = 0;
   out_7854240377413656417[317] = 0;
   out_7854240377413656417[318] = 0;
   out_7854240377413656417[319] = 0;
   out_7854240377413656417[320] = 0;
   out_7854240377413656417[321] = 0;
   out_7854240377413656417[322] = 0;
   out_7854240377413656417[323] = 0;
   out_7854240377413656417[324] = 0;
   out_7854240377413656417[325] = 0;
   out_7854240377413656417[326] = 0;
   out_7854240377413656417[327] = 0;
   out_7854240377413656417[328] = 0;
   out_7854240377413656417[329] = 1.0;
   out_7854240377413656417[330] = 0;
   out_7854240377413656417[331] = 0;
   out_7854240377413656417[332] = 0;
   out_7854240377413656417[333] = 0;
   out_7854240377413656417[334] = 0;
   out_7854240377413656417[335] = 0;
   out_7854240377413656417[336] = 0;
   out_7854240377413656417[337] = 0;
   out_7854240377413656417[338] = 0;
   out_7854240377413656417[339] = 0;
   out_7854240377413656417[340] = 0;
   out_7854240377413656417[341] = 0;
   out_7854240377413656417[342] = 0;
   out_7854240377413656417[343] = 0;
   out_7854240377413656417[344] = 0;
   out_7854240377413656417[345] = 0;
   out_7854240377413656417[346] = 0;
   out_7854240377413656417[347] = 0;
   out_7854240377413656417[348] = 0;
   out_7854240377413656417[349] = 0;
   out_7854240377413656417[350] = 0;
   out_7854240377413656417[351] = 1.0;
   out_7854240377413656417[352] = 0;
   out_7854240377413656417[353] = 0;
   out_7854240377413656417[354] = 0;
   out_7854240377413656417[355] = 0;
   out_7854240377413656417[356] = 0;
   out_7854240377413656417[357] = 0;
   out_7854240377413656417[358] = 0;
   out_7854240377413656417[359] = 0;
   out_7854240377413656417[360] = 0;
   out_7854240377413656417[361] = 0;
   out_7854240377413656417[362] = 0;
   out_7854240377413656417[363] = 0;
   out_7854240377413656417[364] = 0;
   out_7854240377413656417[365] = 0;
   out_7854240377413656417[366] = 0;
   out_7854240377413656417[367] = 0;
   out_7854240377413656417[368] = 0;
   out_7854240377413656417[369] = 0;
   out_7854240377413656417[370] = 0;
   out_7854240377413656417[371] = 0;
   out_7854240377413656417[372] = 0;
   out_7854240377413656417[373] = 1.0;
   out_7854240377413656417[374] = 0;
   out_7854240377413656417[375] = 0;
   out_7854240377413656417[376] = 0;
   out_7854240377413656417[377] = 0;
   out_7854240377413656417[378] = 0;
   out_7854240377413656417[379] = 0;
   out_7854240377413656417[380] = 0;
   out_7854240377413656417[381] = 0;
   out_7854240377413656417[382] = 0;
   out_7854240377413656417[383] = 0;
   out_7854240377413656417[384] = 0;
   out_7854240377413656417[385] = 0;
   out_7854240377413656417[386] = 0;
   out_7854240377413656417[387] = 0;
   out_7854240377413656417[388] = 0;
   out_7854240377413656417[389] = 0;
   out_7854240377413656417[390] = 0;
   out_7854240377413656417[391] = 0;
   out_7854240377413656417[392] = 0;
   out_7854240377413656417[393] = 0;
   out_7854240377413656417[394] = 0;
   out_7854240377413656417[395] = 1.0;
   out_7854240377413656417[396] = 0;
   out_7854240377413656417[397] = 0;
   out_7854240377413656417[398] = 0;
   out_7854240377413656417[399] = 0;
   out_7854240377413656417[400] = 0;
   out_7854240377413656417[401] = 0;
   out_7854240377413656417[402] = 0;
   out_7854240377413656417[403] = 0;
   out_7854240377413656417[404] = 0;
   out_7854240377413656417[405] = 0;
   out_7854240377413656417[406] = 0;
   out_7854240377413656417[407] = 0;
   out_7854240377413656417[408] = 0;
   out_7854240377413656417[409] = 0;
   out_7854240377413656417[410] = 0;
   out_7854240377413656417[411] = 0;
   out_7854240377413656417[412] = 0;
   out_7854240377413656417[413] = 0;
   out_7854240377413656417[414] = 0;
   out_7854240377413656417[415] = 0;
   out_7854240377413656417[416] = 0;
   out_7854240377413656417[417] = 1.0;
   out_7854240377413656417[418] = 0;
   out_7854240377413656417[419] = 0;
   out_7854240377413656417[420] = 0;
   out_7854240377413656417[421] = 0;
   out_7854240377413656417[422] = 0;
   out_7854240377413656417[423] = 0;
   out_7854240377413656417[424] = 0;
   out_7854240377413656417[425] = 0;
   out_7854240377413656417[426] = 0;
   out_7854240377413656417[427] = 0;
   out_7854240377413656417[428] = 0;
   out_7854240377413656417[429] = 0;
   out_7854240377413656417[430] = 0;
   out_7854240377413656417[431] = 0;
   out_7854240377413656417[432] = 0;
   out_7854240377413656417[433] = 0;
   out_7854240377413656417[434] = 0;
   out_7854240377413656417[435] = 0;
   out_7854240377413656417[436] = 0;
   out_7854240377413656417[437] = 0;
   out_7854240377413656417[438] = 0;
   out_7854240377413656417[439] = 1.0;
   out_7854240377413656417[440] = 0;
   out_7854240377413656417[441] = 0;
   out_7854240377413656417[442] = 0;
   out_7854240377413656417[443] = 0;
   out_7854240377413656417[444] = 0;
   out_7854240377413656417[445] = 0;
   out_7854240377413656417[446] = 0;
   out_7854240377413656417[447] = 0;
   out_7854240377413656417[448] = 0;
   out_7854240377413656417[449] = 0;
   out_7854240377413656417[450] = 0;
   out_7854240377413656417[451] = 0;
   out_7854240377413656417[452] = 0;
   out_7854240377413656417[453] = 0;
   out_7854240377413656417[454] = 0;
   out_7854240377413656417[455] = 0;
   out_7854240377413656417[456] = 0;
   out_7854240377413656417[457] = 0;
   out_7854240377413656417[458] = 0;
   out_7854240377413656417[459] = 0;
   out_7854240377413656417[460] = 0;
   out_7854240377413656417[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_257173274347066590) {
   out_257173274347066590[0] = dt*state[7] + state[0];
   out_257173274347066590[1] = dt*state[8] + state[1];
   out_257173274347066590[2] = dt*state[9] + state[2];
   out_257173274347066590[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_257173274347066590[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_257173274347066590[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_257173274347066590[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_257173274347066590[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_257173274347066590[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_257173274347066590[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_257173274347066590[10] = state[10];
   out_257173274347066590[11] = state[11];
   out_257173274347066590[12] = state[12];
   out_257173274347066590[13] = state[13];
   out_257173274347066590[14] = state[14];
   out_257173274347066590[15] = state[15];
   out_257173274347066590[16] = state[16];
   out_257173274347066590[17] = state[17];
   out_257173274347066590[18] = state[18];
   out_257173274347066590[19] = state[19];
   out_257173274347066590[20] = state[20];
   out_257173274347066590[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7929489797627526687) {
   out_7929489797627526687[0] = 1;
   out_7929489797627526687[1] = 0;
   out_7929489797627526687[2] = 0;
   out_7929489797627526687[3] = 0;
   out_7929489797627526687[4] = 0;
   out_7929489797627526687[5] = 0;
   out_7929489797627526687[6] = dt;
   out_7929489797627526687[7] = 0;
   out_7929489797627526687[8] = 0;
   out_7929489797627526687[9] = 0;
   out_7929489797627526687[10] = 0;
   out_7929489797627526687[11] = 0;
   out_7929489797627526687[12] = 0;
   out_7929489797627526687[13] = 0;
   out_7929489797627526687[14] = 0;
   out_7929489797627526687[15] = 0;
   out_7929489797627526687[16] = 0;
   out_7929489797627526687[17] = 0;
   out_7929489797627526687[18] = 0;
   out_7929489797627526687[19] = 0;
   out_7929489797627526687[20] = 0;
   out_7929489797627526687[21] = 0;
   out_7929489797627526687[22] = 1;
   out_7929489797627526687[23] = 0;
   out_7929489797627526687[24] = 0;
   out_7929489797627526687[25] = 0;
   out_7929489797627526687[26] = 0;
   out_7929489797627526687[27] = 0;
   out_7929489797627526687[28] = dt;
   out_7929489797627526687[29] = 0;
   out_7929489797627526687[30] = 0;
   out_7929489797627526687[31] = 0;
   out_7929489797627526687[32] = 0;
   out_7929489797627526687[33] = 0;
   out_7929489797627526687[34] = 0;
   out_7929489797627526687[35] = 0;
   out_7929489797627526687[36] = 0;
   out_7929489797627526687[37] = 0;
   out_7929489797627526687[38] = 0;
   out_7929489797627526687[39] = 0;
   out_7929489797627526687[40] = 0;
   out_7929489797627526687[41] = 0;
   out_7929489797627526687[42] = 0;
   out_7929489797627526687[43] = 0;
   out_7929489797627526687[44] = 1;
   out_7929489797627526687[45] = 0;
   out_7929489797627526687[46] = 0;
   out_7929489797627526687[47] = 0;
   out_7929489797627526687[48] = 0;
   out_7929489797627526687[49] = 0;
   out_7929489797627526687[50] = dt;
   out_7929489797627526687[51] = 0;
   out_7929489797627526687[52] = 0;
   out_7929489797627526687[53] = 0;
   out_7929489797627526687[54] = 0;
   out_7929489797627526687[55] = 0;
   out_7929489797627526687[56] = 0;
   out_7929489797627526687[57] = 0;
   out_7929489797627526687[58] = 0;
   out_7929489797627526687[59] = 0;
   out_7929489797627526687[60] = 0;
   out_7929489797627526687[61] = 0;
   out_7929489797627526687[62] = 0;
   out_7929489797627526687[63] = 0;
   out_7929489797627526687[64] = 0;
   out_7929489797627526687[65] = 0;
   out_7929489797627526687[66] = 1;
   out_7929489797627526687[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7929489797627526687[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7929489797627526687[69] = 0;
   out_7929489797627526687[70] = 0;
   out_7929489797627526687[71] = 0;
   out_7929489797627526687[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7929489797627526687[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7929489797627526687[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7929489797627526687[75] = 0;
   out_7929489797627526687[76] = 0;
   out_7929489797627526687[77] = 0;
   out_7929489797627526687[78] = 0;
   out_7929489797627526687[79] = 0;
   out_7929489797627526687[80] = 0;
   out_7929489797627526687[81] = 0;
   out_7929489797627526687[82] = 0;
   out_7929489797627526687[83] = 0;
   out_7929489797627526687[84] = 0;
   out_7929489797627526687[85] = 0;
   out_7929489797627526687[86] = 0;
   out_7929489797627526687[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7929489797627526687[88] = 1;
   out_7929489797627526687[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7929489797627526687[90] = 0;
   out_7929489797627526687[91] = 0;
   out_7929489797627526687[92] = 0;
   out_7929489797627526687[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7929489797627526687[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7929489797627526687[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7929489797627526687[96] = 0;
   out_7929489797627526687[97] = 0;
   out_7929489797627526687[98] = 0;
   out_7929489797627526687[99] = 0;
   out_7929489797627526687[100] = 0;
   out_7929489797627526687[101] = 0;
   out_7929489797627526687[102] = 0;
   out_7929489797627526687[103] = 0;
   out_7929489797627526687[104] = 0;
   out_7929489797627526687[105] = 0;
   out_7929489797627526687[106] = 0;
   out_7929489797627526687[107] = 0;
   out_7929489797627526687[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7929489797627526687[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7929489797627526687[110] = 1;
   out_7929489797627526687[111] = 0;
   out_7929489797627526687[112] = 0;
   out_7929489797627526687[113] = 0;
   out_7929489797627526687[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7929489797627526687[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7929489797627526687[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7929489797627526687[117] = 0;
   out_7929489797627526687[118] = 0;
   out_7929489797627526687[119] = 0;
   out_7929489797627526687[120] = 0;
   out_7929489797627526687[121] = 0;
   out_7929489797627526687[122] = 0;
   out_7929489797627526687[123] = 0;
   out_7929489797627526687[124] = 0;
   out_7929489797627526687[125] = 0;
   out_7929489797627526687[126] = 0;
   out_7929489797627526687[127] = 0;
   out_7929489797627526687[128] = 0;
   out_7929489797627526687[129] = 0;
   out_7929489797627526687[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7929489797627526687[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7929489797627526687[132] = 1;
   out_7929489797627526687[133] = 0;
   out_7929489797627526687[134] = 0;
   out_7929489797627526687[135] = 0;
   out_7929489797627526687[136] = 0;
   out_7929489797627526687[137] = 0;
   out_7929489797627526687[138] = 0;
   out_7929489797627526687[139] = 0;
   out_7929489797627526687[140] = 0;
   out_7929489797627526687[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7929489797627526687[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7929489797627526687[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7929489797627526687[144] = 0;
   out_7929489797627526687[145] = 0;
   out_7929489797627526687[146] = 0;
   out_7929489797627526687[147] = 0;
   out_7929489797627526687[148] = 0;
   out_7929489797627526687[149] = 0;
   out_7929489797627526687[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7929489797627526687[151] = 0;
   out_7929489797627526687[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7929489797627526687[153] = 0;
   out_7929489797627526687[154] = 1;
   out_7929489797627526687[155] = 0;
   out_7929489797627526687[156] = 0;
   out_7929489797627526687[157] = 0;
   out_7929489797627526687[158] = 0;
   out_7929489797627526687[159] = 0;
   out_7929489797627526687[160] = 0;
   out_7929489797627526687[161] = 0;
   out_7929489797627526687[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7929489797627526687[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7929489797627526687[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7929489797627526687[165] = 0;
   out_7929489797627526687[166] = 0;
   out_7929489797627526687[167] = 0;
   out_7929489797627526687[168] = 0;
   out_7929489797627526687[169] = 0;
   out_7929489797627526687[170] = 0;
   out_7929489797627526687[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7929489797627526687[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7929489797627526687[173] = 0;
   out_7929489797627526687[174] = 0;
   out_7929489797627526687[175] = 0;
   out_7929489797627526687[176] = 1;
   out_7929489797627526687[177] = 0;
   out_7929489797627526687[178] = 0;
   out_7929489797627526687[179] = 0;
   out_7929489797627526687[180] = 0;
   out_7929489797627526687[181] = 0;
   out_7929489797627526687[182] = 0;
   out_7929489797627526687[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7929489797627526687[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7929489797627526687[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7929489797627526687[186] = 0;
   out_7929489797627526687[187] = 0;
   out_7929489797627526687[188] = 0;
   out_7929489797627526687[189] = 0;
   out_7929489797627526687[190] = 0;
   out_7929489797627526687[191] = 0;
   out_7929489797627526687[192] = 0;
   out_7929489797627526687[193] = 0;
   out_7929489797627526687[194] = 0;
   out_7929489797627526687[195] = 0;
   out_7929489797627526687[196] = 0;
   out_7929489797627526687[197] = 0;
   out_7929489797627526687[198] = 1;
   out_7929489797627526687[199] = 0;
   out_7929489797627526687[200] = 0;
   out_7929489797627526687[201] = 0;
   out_7929489797627526687[202] = 0;
   out_7929489797627526687[203] = 0;
   out_7929489797627526687[204] = 0;
   out_7929489797627526687[205] = 0;
   out_7929489797627526687[206] = 0;
   out_7929489797627526687[207] = 0;
   out_7929489797627526687[208] = 0;
   out_7929489797627526687[209] = 0;
   out_7929489797627526687[210] = 0;
   out_7929489797627526687[211] = 0;
   out_7929489797627526687[212] = 0;
   out_7929489797627526687[213] = 0;
   out_7929489797627526687[214] = 0;
   out_7929489797627526687[215] = 0;
   out_7929489797627526687[216] = 0;
   out_7929489797627526687[217] = 0;
   out_7929489797627526687[218] = 0;
   out_7929489797627526687[219] = 0;
   out_7929489797627526687[220] = 1;
   out_7929489797627526687[221] = 0;
   out_7929489797627526687[222] = 0;
   out_7929489797627526687[223] = 0;
   out_7929489797627526687[224] = 0;
   out_7929489797627526687[225] = 0;
   out_7929489797627526687[226] = 0;
   out_7929489797627526687[227] = 0;
   out_7929489797627526687[228] = 0;
   out_7929489797627526687[229] = 0;
   out_7929489797627526687[230] = 0;
   out_7929489797627526687[231] = 0;
   out_7929489797627526687[232] = 0;
   out_7929489797627526687[233] = 0;
   out_7929489797627526687[234] = 0;
   out_7929489797627526687[235] = 0;
   out_7929489797627526687[236] = 0;
   out_7929489797627526687[237] = 0;
   out_7929489797627526687[238] = 0;
   out_7929489797627526687[239] = 0;
   out_7929489797627526687[240] = 0;
   out_7929489797627526687[241] = 0;
   out_7929489797627526687[242] = 1;
   out_7929489797627526687[243] = 0;
   out_7929489797627526687[244] = 0;
   out_7929489797627526687[245] = 0;
   out_7929489797627526687[246] = 0;
   out_7929489797627526687[247] = 0;
   out_7929489797627526687[248] = 0;
   out_7929489797627526687[249] = 0;
   out_7929489797627526687[250] = 0;
   out_7929489797627526687[251] = 0;
   out_7929489797627526687[252] = 0;
   out_7929489797627526687[253] = 0;
   out_7929489797627526687[254] = 0;
   out_7929489797627526687[255] = 0;
   out_7929489797627526687[256] = 0;
   out_7929489797627526687[257] = 0;
   out_7929489797627526687[258] = 0;
   out_7929489797627526687[259] = 0;
   out_7929489797627526687[260] = 0;
   out_7929489797627526687[261] = 0;
   out_7929489797627526687[262] = 0;
   out_7929489797627526687[263] = 0;
   out_7929489797627526687[264] = 1;
   out_7929489797627526687[265] = 0;
   out_7929489797627526687[266] = 0;
   out_7929489797627526687[267] = 0;
   out_7929489797627526687[268] = 0;
   out_7929489797627526687[269] = 0;
   out_7929489797627526687[270] = 0;
   out_7929489797627526687[271] = 0;
   out_7929489797627526687[272] = 0;
   out_7929489797627526687[273] = 0;
   out_7929489797627526687[274] = 0;
   out_7929489797627526687[275] = 0;
   out_7929489797627526687[276] = 0;
   out_7929489797627526687[277] = 0;
   out_7929489797627526687[278] = 0;
   out_7929489797627526687[279] = 0;
   out_7929489797627526687[280] = 0;
   out_7929489797627526687[281] = 0;
   out_7929489797627526687[282] = 0;
   out_7929489797627526687[283] = 0;
   out_7929489797627526687[284] = 0;
   out_7929489797627526687[285] = 0;
   out_7929489797627526687[286] = 1;
   out_7929489797627526687[287] = 0;
   out_7929489797627526687[288] = 0;
   out_7929489797627526687[289] = 0;
   out_7929489797627526687[290] = 0;
   out_7929489797627526687[291] = 0;
   out_7929489797627526687[292] = 0;
   out_7929489797627526687[293] = 0;
   out_7929489797627526687[294] = 0;
   out_7929489797627526687[295] = 0;
   out_7929489797627526687[296] = 0;
   out_7929489797627526687[297] = 0;
   out_7929489797627526687[298] = 0;
   out_7929489797627526687[299] = 0;
   out_7929489797627526687[300] = 0;
   out_7929489797627526687[301] = 0;
   out_7929489797627526687[302] = 0;
   out_7929489797627526687[303] = 0;
   out_7929489797627526687[304] = 0;
   out_7929489797627526687[305] = 0;
   out_7929489797627526687[306] = 0;
   out_7929489797627526687[307] = 0;
   out_7929489797627526687[308] = 1;
   out_7929489797627526687[309] = 0;
   out_7929489797627526687[310] = 0;
   out_7929489797627526687[311] = 0;
   out_7929489797627526687[312] = 0;
   out_7929489797627526687[313] = 0;
   out_7929489797627526687[314] = 0;
   out_7929489797627526687[315] = 0;
   out_7929489797627526687[316] = 0;
   out_7929489797627526687[317] = 0;
   out_7929489797627526687[318] = 0;
   out_7929489797627526687[319] = 0;
   out_7929489797627526687[320] = 0;
   out_7929489797627526687[321] = 0;
   out_7929489797627526687[322] = 0;
   out_7929489797627526687[323] = 0;
   out_7929489797627526687[324] = 0;
   out_7929489797627526687[325] = 0;
   out_7929489797627526687[326] = 0;
   out_7929489797627526687[327] = 0;
   out_7929489797627526687[328] = 0;
   out_7929489797627526687[329] = 0;
   out_7929489797627526687[330] = 1;
   out_7929489797627526687[331] = 0;
   out_7929489797627526687[332] = 0;
   out_7929489797627526687[333] = 0;
   out_7929489797627526687[334] = 0;
   out_7929489797627526687[335] = 0;
   out_7929489797627526687[336] = 0;
   out_7929489797627526687[337] = 0;
   out_7929489797627526687[338] = 0;
   out_7929489797627526687[339] = 0;
   out_7929489797627526687[340] = 0;
   out_7929489797627526687[341] = 0;
   out_7929489797627526687[342] = 0;
   out_7929489797627526687[343] = 0;
   out_7929489797627526687[344] = 0;
   out_7929489797627526687[345] = 0;
   out_7929489797627526687[346] = 0;
   out_7929489797627526687[347] = 0;
   out_7929489797627526687[348] = 0;
   out_7929489797627526687[349] = 0;
   out_7929489797627526687[350] = 0;
   out_7929489797627526687[351] = 0;
   out_7929489797627526687[352] = 1;
   out_7929489797627526687[353] = 0;
   out_7929489797627526687[354] = 0;
   out_7929489797627526687[355] = 0;
   out_7929489797627526687[356] = 0;
   out_7929489797627526687[357] = 0;
   out_7929489797627526687[358] = 0;
   out_7929489797627526687[359] = 0;
   out_7929489797627526687[360] = 0;
   out_7929489797627526687[361] = 0;
   out_7929489797627526687[362] = 0;
   out_7929489797627526687[363] = 0;
   out_7929489797627526687[364] = 0;
   out_7929489797627526687[365] = 0;
   out_7929489797627526687[366] = 0;
   out_7929489797627526687[367] = 0;
   out_7929489797627526687[368] = 0;
   out_7929489797627526687[369] = 0;
   out_7929489797627526687[370] = 0;
   out_7929489797627526687[371] = 0;
   out_7929489797627526687[372] = 0;
   out_7929489797627526687[373] = 0;
   out_7929489797627526687[374] = 1;
   out_7929489797627526687[375] = 0;
   out_7929489797627526687[376] = 0;
   out_7929489797627526687[377] = 0;
   out_7929489797627526687[378] = 0;
   out_7929489797627526687[379] = 0;
   out_7929489797627526687[380] = 0;
   out_7929489797627526687[381] = 0;
   out_7929489797627526687[382] = 0;
   out_7929489797627526687[383] = 0;
   out_7929489797627526687[384] = 0;
   out_7929489797627526687[385] = 0;
   out_7929489797627526687[386] = 0;
   out_7929489797627526687[387] = 0;
   out_7929489797627526687[388] = 0;
   out_7929489797627526687[389] = 0;
   out_7929489797627526687[390] = 0;
   out_7929489797627526687[391] = 0;
   out_7929489797627526687[392] = 0;
   out_7929489797627526687[393] = 0;
   out_7929489797627526687[394] = 0;
   out_7929489797627526687[395] = 0;
   out_7929489797627526687[396] = 1;
   out_7929489797627526687[397] = 0;
   out_7929489797627526687[398] = 0;
   out_7929489797627526687[399] = 0;
   out_7929489797627526687[400] = 0;
   out_7929489797627526687[401] = 0;
   out_7929489797627526687[402] = 0;
   out_7929489797627526687[403] = 0;
   out_7929489797627526687[404] = 0;
   out_7929489797627526687[405] = 0;
   out_7929489797627526687[406] = 0;
   out_7929489797627526687[407] = 0;
   out_7929489797627526687[408] = 0;
   out_7929489797627526687[409] = 0;
   out_7929489797627526687[410] = 0;
   out_7929489797627526687[411] = 0;
   out_7929489797627526687[412] = 0;
   out_7929489797627526687[413] = 0;
   out_7929489797627526687[414] = 0;
   out_7929489797627526687[415] = 0;
   out_7929489797627526687[416] = 0;
   out_7929489797627526687[417] = 0;
   out_7929489797627526687[418] = 1;
   out_7929489797627526687[419] = 0;
   out_7929489797627526687[420] = 0;
   out_7929489797627526687[421] = 0;
   out_7929489797627526687[422] = 0;
   out_7929489797627526687[423] = 0;
   out_7929489797627526687[424] = 0;
   out_7929489797627526687[425] = 0;
   out_7929489797627526687[426] = 0;
   out_7929489797627526687[427] = 0;
   out_7929489797627526687[428] = 0;
   out_7929489797627526687[429] = 0;
   out_7929489797627526687[430] = 0;
   out_7929489797627526687[431] = 0;
   out_7929489797627526687[432] = 0;
   out_7929489797627526687[433] = 0;
   out_7929489797627526687[434] = 0;
   out_7929489797627526687[435] = 0;
   out_7929489797627526687[436] = 0;
   out_7929489797627526687[437] = 0;
   out_7929489797627526687[438] = 0;
   out_7929489797627526687[439] = 0;
   out_7929489797627526687[440] = 1;
}
void h_4(double *state, double *unused, double *out_7853819560131254472) {
   out_7853819560131254472[0] = state[10] + state[13];
   out_7853819560131254472[1] = state[11] + state[14];
   out_7853819560131254472[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6802630376509229689) {
   out_6802630376509229689[0] = 0;
   out_6802630376509229689[1] = 0;
   out_6802630376509229689[2] = 0;
   out_6802630376509229689[3] = 0;
   out_6802630376509229689[4] = 0;
   out_6802630376509229689[5] = 0;
   out_6802630376509229689[6] = 0;
   out_6802630376509229689[7] = 0;
   out_6802630376509229689[8] = 0;
   out_6802630376509229689[9] = 0;
   out_6802630376509229689[10] = 1;
   out_6802630376509229689[11] = 0;
   out_6802630376509229689[12] = 0;
   out_6802630376509229689[13] = 1;
   out_6802630376509229689[14] = 0;
   out_6802630376509229689[15] = 0;
   out_6802630376509229689[16] = 0;
   out_6802630376509229689[17] = 0;
   out_6802630376509229689[18] = 0;
   out_6802630376509229689[19] = 0;
   out_6802630376509229689[20] = 0;
   out_6802630376509229689[21] = 0;
   out_6802630376509229689[22] = 0;
   out_6802630376509229689[23] = 0;
   out_6802630376509229689[24] = 0;
   out_6802630376509229689[25] = 0;
   out_6802630376509229689[26] = 0;
   out_6802630376509229689[27] = 0;
   out_6802630376509229689[28] = 0;
   out_6802630376509229689[29] = 0;
   out_6802630376509229689[30] = 0;
   out_6802630376509229689[31] = 0;
   out_6802630376509229689[32] = 0;
   out_6802630376509229689[33] = 1;
   out_6802630376509229689[34] = 0;
   out_6802630376509229689[35] = 0;
   out_6802630376509229689[36] = 1;
   out_6802630376509229689[37] = 0;
   out_6802630376509229689[38] = 0;
   out_6802630376509229689[39] = 0;
   out_6802630376509229689[40] = 0;
   out_6802630376509229689[41] = 0;
   out_6802630376509229689[42] = 0;
   out_6802630376509229689[43] = 0;
   out_6802630376509229689[44] = 0;
   out_6802630376509229689[45] = 0;
   out_6802630376509229689[46] = 0;
   out_6802630376509229689[47] = 0;
   out_6802630376509229689[48] = 0;
   out_6802630376509229689[49] = 0;
   out_6802630376509229689[50] = 0;
   out_6802630376509229689[51] = 0;
   out_6802630376509229689[52] = 0;
   out_6802630376509229689[53] = 0;
   out_6802630376509229689[54] = 0;
   out_6802630376509229689[55] = 0;
   out_6802630376509229689[56] = 1;
   out_6802630376509229689[57] = 0;
   out_6802630376509229689[58] = 0;
   out_6802630376509229689[59] = 1;
   out_6802630376509229689[60] = 0;
   out_6802630376509229689[61] = 0;
   out_6802630376509229689[62] = 0;
   out_6802630376509229689[63] = 0;
   out_6802630376509229689[64] = 0;
   out_6802630376509229689[65] = 0;
}
void h_9(double *state, double *unused, double *out_8951576141250406804) {
   out_8951576141250406804[0] = state[10];
   out_8951576141250406804[1] = state[11];
   out_8951576141250406804[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6561440729879639044) {
   out_6561440729879639044[0] = 0;
   out_6561440729879639044[1] = 0;
   out_6561440729879639044[2] = 0;
   out_6561440729879639044[3] = 0;
   out_6561440729879639044[4] = 0;
   out_6561440729879639044[5] = 0;
   out_6561440729879639044[6] = 0;
   out_6561440729879639044[7] = 0;
   out_6561440729879639044[8] = 0;
   out_6561440729879639044[9] = 0;
   out_6561440729879639044[10] = 1;
   out_6561440729879639044[11] = 0;
   out_6561440729879639044[12] = 0;
   out_6561440729879639044[13] = 0;
   out_6561440729879639044[14] = 0;
   out_6561440729879639044[15] = 0;
   out_6561440729879639044[16] = 0;
   out_6561440729879639044[17] = 0;
   out_6561440729879639044[18] = 0;
   out_6561440729879639044[19] = 0;
   out_6561440729879639044[20] = 0;
   out_6561440729879639044[21] = 0;
   out_6561440729879639044[22] = 0;
   out_6561440729879639044[23] = 0;
   out_6561440729879639044[24] = 0;
   out_6561440729879639044[25] = 0;
   out_6561440729879639044[26] = 0;
   out_6561440729879639044[27] = 0;
   out_6561440729879639044[28] = 0;
   out_6561440729879639044[29] = 0;
   out_6561440729879639044[30] = 0;
   out_6561440729879639044[31] = 0;
   out_6561440729879639044[32] = 0;
   out_6561440729879639044[33] = 1;
   out_6561440729879639044[34] = 0;
   out_6561440729879639044[35] = 0;
   out_6561440729879639044[36] = 0;
   out_6561440729879639044[37] = 0;
   out_6561440729879639044[38] = 0;
   out_6561440729879639044[39] = 0;
   out_6561440729879639044[40] = 0;
   out_6561440729879639044[41] = 0;
   out_6561440729879639044[42] = 0;
   out_6561440729879639044[43] = 0;
   out_6561440729879639044[44] = 0;
   out_6561440729879639044[45] = 0;
   out_6561440729879639044[46] = 0;
   out_6561440729879639044[47] = 0;
   out_6561440729879639044[48] = 0;
   out_6561440729879639044[49] = 0;
   out_6561440729879639044[50] = 0;
   out_6561440729879639044[51] = 0;
   out_6561440729879639044[52] = 0;
   out_6561440729879639044[53] = 0;
   out_6561440729879639044[54] = 0;
   out_6561440729879639044[55] = 0;
   out_6561440729879639044[56] = 1;
   out_6561440729879639044[57] = 0;
   out_6561440729879639044[58] = 0;
   out_6561440729879639044[59] = 0;
   out_6561440729879639044[60] = 0;
   out_6561440729879639044[61] = 0;
   out_6561440729879639044[62] = 0;
   out_6561440729879639044[63] = 0;
   out_6561440729879639044[64] = 0;
   out_6561440729879639044[65] = 0;
}
void h_10(double *state, double *unused, double *out_2112607427912099688) {
   out_2112607427912099688[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2112607427912099688[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2112607427912099688[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8588655292876077276) {
   out_8588655292876077276[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8588655292876077276[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8588655292876077276[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8588655292876077276[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8588655292876077276[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8588655292876077276[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8588655292876077276[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8588655292876077276[7] = 0;
   out_8588655292876077276[8] = 0;
   out_8588655292876077276[9] = 0;
   out_8588655292876077276[10] = 0;
   out_8588655292876077276[11] = 0;
   out_8588655292876077276[12] = 0;
   out_8588655292876077276[13] = 0;
   out_8588655292876077276[14] = 0;
   out_8588655292876077276[15] = 0;
   out_8588655292876077276[16] = 1;
   out_8588655292876077276[17] = 0;
   out_8588655292876077276[18] = 0;
   out_8588655292876077276[19] = 1;
   out_8588655292876077276[20] = 0;
   out_8588655292876077276[21] = 0;
   out_8588655292876077276[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8588655292876077276[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8588655292876077276[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8588655292876077276[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8588655292876077276[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8588655292876077276[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8588655292876077276[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8588655292876077276[29] = 0;
   out_8588655292876077276[30] = 0;
   out_8588655292876077276[31] = 0;
   out_8588655292876077276[32] = 0;
   out_8588655292876077276[33] = 0;
   out_8588655292876077276[34] = 0;
   out_8588655292876077276[35] = 0;
   out_8588655292876077276[36] = 0;
   out_8588655292876077276[37] = 0;
   out_8588655292876077276[38] = 0;
   out_8588655292876077276[39] = 1;
   out_8588655292876077276[40] = 0;
   out_8588655292876077276[41] = 0;
   out_8588655292876077276[42] = 1;
   out_8588655292876077276[43] = 0;
   out_8588655292876077276[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8588655292876077276[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8588655292876077276[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8588655292876077276[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8588655292876077276[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8588655292876077276[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8588655292876077276[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8588655292876077276[51] = 0;
   out_8588655292876077276[52] = 0;
   out_8588655292876077276[53] = 0;
   out_8588655292876077276[54] = 0;
   out_8588655292876077276[55] = 0;
   out_8588655292876077276[56] = 0;
   out_8588655292876077276[57] = 0;
   out_8588655292876077276[58] = 0;
   out_8588655292876077276[59] = 0;
   out_8588655292876077276[60] = 0;
   out_8588655292876077276[61] = 0;
   out_8588655292876077276[62] = 1;
   out_8588655292876077276[63] = 0;
   out_8588655292876077276[64] = 0;
   out_8588655292876077276[65] = 1;
}
void h_12(double *state, double *unused, double *out_3750146674103585823) {
   out_3750146674103585823[0] = state[0];
   out_3750146674103585823[1] = state[1];
   out_3750146674103585823[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1783173968477267894) {
   out_1783173968477267894[0] = 1;
   out_1783173968477267894[1] = 0;
   out_1783173968477267894[2] = 0;
   out_1783173968477267894[3] = 0;
   out_1783173968477267894[4] = 0;
   out_1783173968477267894[5] = 0;
   out_1783173968477267894[6] = 0;
   out_1783173968477267894[7] = 0;
   out_1783173968477267894[8] = 0;
   out_1783173968477267894[9] = 0;
   out_1783173968477267894[10] = 0;
   out_1783173968477267894[11] = 0;
   out_1783173968477267894[12] = 0;
   out_1783173968477267894[13] = 0;
   out_1783173968477267894[14] = 0;
   out_1783173968477267894[15] = 0;
   out_1783173968477267894[16] = 0;
   out_1783173968477267894[17] = 0;
   out_1783173968477267894[18] = 0;
   out_1783173968477267894[19] = 0;
   out_1783173968477267894[20] = 0;
   out_1783173968477267894[21] = 0;
   out_1783173968477267894[22] = 0;
   out_1783173968477267894[23] = 1;
   out_1783173968477267894[24] = 0;
   out_1783173968477267894[25] = 0;
   out_1783173968477267894[26] = 0;
   out_1783173968477267894[27] = 0;
   out_1783173968477267894[28] = 0;
   out_1783173968477267894[29] = 0;
   out_1783173968477267894[30] = 0;
   out_1783173968477267894[31] = 0;
   out_1783173968477267894[32] = 0;
   out_1783173968477267894[33] = 0;
   out_1783173968477267894[34] = 0;
   out_1783173968477267894[35] = 0;
   out_1783173968477267894[36] = 0;
   out_1783173968477267894[37] = 0;
   out_1783173968477267894[38] = 0;
   out_1783173968477267894[39] = 0;
   out_1783173968477267894[40] = 0;
   out_1783173968477267894[41] = 0;
   out_1783173968477267894[42] = 0;
   out_1783173968477267894[43] = 0;
   out_1783173968477267894[44] = 0;
   out_1783173968477267894[45] = 0;
   out_1783173968477267894[46] = 1;
   out_1783173968477267894[47] = 0;
   out_1783173968477267894[48] = 0;
   out_1783173968477267894[49] = 0;
   out_1783173968477267894[50] = 0;
   out_1783173968477267894[51] = 0;
   out_1783173968477267894[52] = 0;
   out_1783173968477267894[53] = 0;
   out_1783173968477267894[54] = 0;
   out_1783173968477267894[55] = 0;
   out_1783173968477267894[56] = 0;
   out_1783173968477267894[57] = 0;
   out_1783173968477267894[58] = 0;
   out_1783173968477267894[59] = 0;
   out_1783173968477267894[60] = 0;
   out_1783173968477267894[61] = 0;
   out_1783173968477267894[62] = 0;
   out_1783173968477267894[63] = 0;
   out_1783173968477267894[64] = 0;
   out_1783173968477267894[65] = 0;
}
void h_35(double *state, double *unused, double *out_885809011437945856) {
   out_885809011437945856[0] = state[7];
   out_885809011437945856[1] = state[8];
   out_885809011437945856[2] = state[9];
}
void H_35(double *state, double *unused, double *out_962389063847745815) {
   out_962389063847745815[0] = 0;
   out_962389063847745815[1] = 0;
   out_962389063847745815[2] = 0;
   out_962389063847745815[3] = 0;
   out_962389063847745815[4] = 0;
   out_962389063847745815[5] = 0;
   out_962389063847745815[6] = 0;
   out_962389063847745815[7] = 1;
   out_962389063847745815[8] = 0;
   out_962389063847745815[9] = 0;
   out_962389063847745815[10] = 0;
   out_962389063847745815[11] = 0;
   out_962389063847745815[12] = 0;
   out_962389063847745815[13] = 0;
   out_962389063847745815[14] = 0;
   out_962389063847745815[15] = 0;
   out_962389063847745815[16] = 0;
   out_962389063847745815[17] = 0;
   out_962389063847745815[18] = 0;
   out_962389063847745815[19] = 0;
   out_962389063847745815[20] = 0;
   out_962389063847745815[21] = 0;
   out_962389063847745815[22] = 0;
   out_962389063847745815[23] = 0;
   out_962389063847745815[24] = 0;
   out_962389063847745815[25] = 0;
   out_962389063847745815[26] = 0;
   out_962389063847745815[27] = 0;
   out_962389063847745815[28] = 0;
   out_962389063847745815[29] = 0;
   out_962389063847745815[30] = 1;
   out_962389063847745815[31] = 0;
   out_962389063847745815[32] = 0;
   out_962389063847745815[33] = 0;
   out_962389063847745815[34] = 0;
   out_962389063847745815[35] = 0;
   out_962389063847745815[36] = 0;
   out_962389063847745815[37] = 0;
   out_962389063847745815[38] = 0;
   out_962389063847745815[39] = 0;
   out_962389063847745815[40] = 0;
   out_962389063847745815[41] = 0;
   out_962389063847745815[42] = 0;
   out_962389063847745815[43] = 0;
   out_962389063847745815[44] = 0;
   out_962389063847745815[45] = 0;
   out_962389063847745815[46] = 0;
   out_962389063847745815[47] = 0;
   out_962389063847745815[48] = 0;
   out_962389063847745815[49] = 0;
   out_962389063847745815[50] = 0;
   out_962389063847745815[51] = 0;
   out_962389063847745815[52] = 0;
   out_962389063847745815[53] = 1;
   out_962389063847745815[54] = 0;
   out_962389063847745815[55] = 0;
   out_962389063847745815[56] = 0;
   out_962389063847745815[57] = 0;
   out_962389063847745815[58] = 0;
   out_962389063847745815[59] = 0;
   out_962389063847745815[60] = 0;
   out_962389063847745815[61] = 0;
   out_962389063847745815[62] = 0;
   out_962389063847745815[63] = 0;
   out_962389063847745815[64] = 0;
   out_962389063847745815[65] = 0;
}
void h_32(double *state, double *unused, double *out_1649781089655372121) {
   out_1649781089655372121[0] = state[3];
   out_1649781089655372121[1] = state[4];
   out_1649781089655372121[2] = state[5];
   out_1649781089655372121[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8095911250878812947) {
   out_8095911250878812947[0] = 0;
   out_8095911250878812947[1] = 0;
   out_8095911250878812947[2] = 0;
   out_8095911250878812947[3] = 1;
   out_8095911250878812947[4] = 0;
   out_8095911250878812947[5] = 0;
   out_8095911250878812947[6] = 0;
   out_8095911250878812947[7] = 0;
   out_8095911250878812947[8] = 0;
   out_8095911250878812947[9] = 0;
   out_8095911250878812947[10] = 0;
   out_8095911250878812947[11] = 0;
   out_8095911250878812947[12] = 0;
   out_8095911250878812947[13] = 0;
   out_8095911250878812947[14] = 0;
   out_8095911250878812947[15] = 0;
   out_8095911250878812947[16] = 0;
   out_8095911250878812947[17] = 0;
   out_8095911250878812947[18] = 0;
   out_8095911250878812947[19] = 0;
   out_8095911250878812947[20] = 0;
   out_8095911250878812947[21] = 0;
   out_8095911250878812947[22] = 0;
   out_8095911250878812947[23] = 0;
   out_8095911250878812947[24] = 0;
   out_8095911250878812947[25] = 0;
   out_8095911250878812947[26] = 1;
   out_8095911250878812947[27] = 0;
   out_8095911250878812947[28] = 0;
   out_8095911250878812947[29] = 0;
   out_8095911250878812947[30] = 0;
   out_8095911250878812947[31] = 0;
   out_8095911250878812947[32] = 0;
   out_8095911250878812947[33] = 0;
   out_8095911250878812947[34] = 0;
   out_8095911250878812947[35] = 0;
   out_8095911250878812947[36] = 0;
   out_8095911250878812947[37] = 0;
   out_8095911250878812947[38] = 0;
   out_8095911250878812947[39] = 0;
   out_8095911250878812947[40] = 0;
   out_8095911250878812947[41] = 0;
   out_8095911250878812947[42] = 0;
   out_8095911250878812947[43] = 0;
   out_8095911250878812947[44] = 0;
   out_8095911250878812947[45] = 0;
   out_8095911250878812947[46] = 0;
   out_8095911250878812947[47] = 0;
   out_8095911250878812947[48] = 0;
   out_8095911250878812947[49] = 1;
   out_8095911250878812947[50] = 0;
   out_8095911250878812947[51] = 0;
   out_8095911250878812947[52] = 0;
   out_8095911250878812947[53] = 0;
   out_8095911250878812947[54] = 0;
   out_8095911250878812947[55] = 0;
   out_8095911250878812947[56] = 0;
   out_8095911250878812947[57] = 0;
   out_8095911250878812947[58] = 0;
   out_8095911250878812947[59] = 0;
   out_8095911250878812947[60] = 0;
   out_8095911250878812947[61] = 0;
   out_8095911250878812947[62] = 0;
   out_8095911250878812947[63] = 0;
   out_8095911250878812947[64] = 0;
   out_8095911250878812947[65] = 0;
   out_8095911250878812947[66] = 0;
   out_8095911250878812947[67] = 0;
   out_8095911250878812947[68] = 0;
   out_8095911250878812947[69] = 0;
   out_8095911250878812947[70] = 0;
   out_8095911250878812947[71] = 0;
   out_8095911250878812947[72] = 1;
   out_8095911250878812947[73] = 0;
   out_8095911250878812947[74] = 0;
   out_8095911250878812947[75] = 0;
   out_8095911250878812947[76] = 0;
   out_8095911250878812947[77] = 0;
   out_8095911250878812947[78] = 0;
   out_8095911250878812947[79] = 0;
   out_8095911250878812947[80] = 0;
   out_8095911250878812947[81] = 0;
   out_8095911250878812947[82] = 0;
   out_8095911250878812947[83] = 0;
   out_8095911250878812947[84] = 0;
   out_8095911250878812947[85] = 0;
   out_8095911250878812947[86] = 0;
   out_8095911250878812947[87] = 0;
}
void h_13(double *state, double *unused, double *out_1629860254600375211) {
   out_1629860254600375211[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1629860254600375211[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1629860254600375211[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2668557706713025900) {
   out_2668557706713025900[0] = 0;
   out_2668557706713025900[1] = 0;
   out_2668557706713025900[2] = 0;
   out_2668557706713025900[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2668557706713025900[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2668557706713025900[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2668557706713025900[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2668557706713025900[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2668557706713025900[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2668557706713025900[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2668557706713025900[10] = 0;
   out_2668557706713025900[11] = 0;
   out_2668557706713025900[12] = 0;
   out_2668557706713025900[13] = 0;
   out_2668557706713025900[14] = 0;
   out_2668557706713025900[15] = 0;
   out_2668557706713025900[16] = 0;
   out_2668557706713025900[17] = 0;
   out_2668557706713025900[18] = 0;
   out_2668557706713025900[19] = 0;
   out_2668557706713025900[20] = 0;
   out_2668557706713025900[21] = 0;
   out_2668557706713025900[22] = 0;
   out_2668557706713025900[23] = 0;
   out_2668557706713025900[24] = 0;
   out_2668557706713025900[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2668557706713025900[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2668557706713025900[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2668557706713025900[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2668557706713025900[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2668557706713025900[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2668557706713025900[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2668557706713025900[32] = 0;
   out_2668557706713025900[33] = 0;
   out_2668557706713025900[34] = 0;
   out_2668557706713025900[35] = 0;
   out_2668557706713025900[36] = 0;
   out_2668557706713025900[37] = 0;
   out_2668557706713025900[38] = 0;
   out_2668557706713025900[39] = 0;
   out_2668557706713025900[40] = 0;
   out_2668557706713025900[41] = 0;
   out_2668557706713025900[42] = 0;
   out_2668557706713025900[43] = 0;
   out_2668557706713025900[44] = 0;
   out_2668557706713025900[45] = 0;
   out_2668557706713025900[46] = 0;
   out_2668557706713025900[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2668557706713025900[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2668557706713025900[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2668557706713025900[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2668557706713025900[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2668557706713025900[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2668557706713025900[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2668557706713025900[54] = 0;
   out_2668557706713025900[55] = 0;
   out_2668557706713025900[56] = 0;
   out_2668557706713025900[57] = 0;
   out_2668557706713025900[58] = 0;
   out_2668557706713025900[59] = 0;
   out_2668557706713025900[60] = 0;
   out_2668557706713025900[61] = 0;
   out_2668557706713025900[62] = 0;
   out_2668557706713025900[63] = 0;
   out_2668557706713025900[64] = 0;
   out_2668557706713025900[65] = 0;
}
void h_14(double *state, double *unused, double *out_8951576141250406804) {
   out_8951576141250406804[0] = state[10];
   out_8951576141250406804[1] = state[11];
   out_8951576141250406804[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6561440729879639044) {
   out_6561440729879639044[0] = 0;
   out_6561440729879639044[1] = 0;
   out_6561440729879639044[2] = 0;
   out_6561440729879639044[3] = 0;
   out_6561440729879639044[4] = 0;
   out_6561440729879639044[5] = 0;
   out_6561440729879639044[6] = 0;
   out_6561440729879639044[7] = 0;
   out_6561440729879639044[8] = 0;
   out_6561440729879639044[9] = 0;
   out_6561440729879639044[10] = 1;
   out_6561440729879639044[11] = 0;
   out_6561440729879639044[12] = 0;
   out_6561440729879639044[13] = 0;
   out_6561440729879639044[14] = 0;
   out_6561440729879639044[15] = 0;
   out_6561440729879639044[16] = 0;
   out_6561440729879639044[17] = 0;
   out_6561440729879639044[18] = 0;
   out_6561440729879639044[19] = 0;
   out_6561440729879639044[20] = 0;
   out_6561440729879639044[21] = 0;
   out_6561440729879639044[22] = 0;
   out_6561440729879639044[23] = 0;
   out_6561440729879639044[24] = 0;
   out_6561440729879639044[25] = 0;
   out_6561440729879639044[26] = 0;
   out_6561440729879639044[27] = 0;
   out_6561440729879639044[28] = 0;
   out_6561440729879639044[29] = 0;
   out_6561440729879639044[30] = 0;
   out_6561440729879639044[31] = 0;
   out_6561440729879639044[32] = 0;
   out_6561440729879639044[33] = 1;
   out_6561440729879639044[34] = 0;
   out_6561440729879639044[35] = 0;
   out_6561440729879639044[36] = 0;
   out_6561440729879639044[37] = 0;
   out_6561440729879639044[38] = 0;
   out_6561440729879639044[39] = 0;
   out_6561440729879639044[40] = 0;
   out_6561440729879639044[41] = 0;
   out_6561440729879639044[42] = 0;
   out_6561440729879639044[43] = 0;
   out_6561440729879639044[44] = 0;
   out_6561440729879639044[45] = 0;
   out_6561440729879639044[46] = 0;
   out_6561440729879639044[47] = 0;
   out_6561440729879639044[48] = 0;
   out_6561440729879639044[49] = 0;
   out_6561440729879639044[50] = 0;
   out_6561440729879639044[51] = 0;
   out_6561440729879639044[52] = 0;
   out_6561440729879639044[53] = 0;
   out_6561440729879639044[54] = 0;
   out_6561440729879639044[55] = 0;
   out_6561440729879639044[56] = 1;
   out_6561440729879639044[57] = 0;
   out_6561440729879639044[58] = 0;
   out_6561440729879639044[59] = 0;
   out_6561440729879639044[60] = 0;
   out_6561440729879639044[61] = 0;
   out_6561440729879639044[62] = 0;
   out_6561440729879639044[63] = 0;
   out_6561440729879639044[64] = 0;
   out_6561440729879639044[65] = 0;
}
void h_33(double *state, double *unused, double *out_2963071134127392902) {
   out_2963071134127392902[0] = state[16];
   out_2963071134127392902[1] = state[17];
   out_2963071134127392902[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4112946068486603419) {
   out_4112946068486603419[0] = 0;
   out_4112946068486603419[1] = 0;
   out_4112946068486603419[2] = 0;
   out_4112946068486603419[3] = 0;
   out_4112946068486603419[4] = 0;
   out_4112946068486603419[5] = 0;
   out_4112946068486603419[6] = 0;
   out_4112946068486603419[7] = 0;
   out_4112946068486603419[8] = 0;
   out_4112946068486603419[9] = 0;
   out_4112946068486603419[10] = 0;
   out_4112946068486603419[11] = 0;
   out_4112946068486603419[12] = 0;
   out_4112946068486603419[13] = 0;
   out_4112946068486603419[14] = 0;
   out_4112946068486603419[15] = 0;
   out_4112946068486603419[16] = 1;
   out_4112946068486603419[17] = 0;
   out_4112946068486603419[18] = 0;
   out_4112946068486603419[19] = 0;
   out_4112946068486603419[20] = 0;
   out_4112946068486603419[21] = 0;
   out_4112946068486603419[22] = 0;
   out_4112946068486603419[23] = 0;
   out_4112946068486603419[24] = 0;
   out_4112946068486603419[25] = 0;
   out_4112946068486603419[26] = 0;
   out_4112946068486603419[27] = 0;
   out_4112946068486603419[28] = 0;
   out_4112946068486603419[29] = 0;
   out_4112946068486603419[30] = 0;
   out_4112946068486603419[31] = 0;
   out_4112946068486603419[32] = 0;
   out_4112946068486603419[33] = 0;
   out_4112946068486603419[34] = 0;
   out_4112946068486603419[35] = 0;
   out_4112946068486603419[36] = 0;
   out_4112946068486603419[37] = 0;
   out_4112946068486603419[38] = 0;
   out_4112946068486603419[39] = 1;
   out_4112946068486603419[40] = 0;
   out_4112946068486603419[41] = 0;
   out_4112946068486603419[42] = 0;
   out_4112946068486603419[43] = 0;
   out_4112946068486603419[44] = 0;
   out_4112946068486603419[45] = 0;
   out_4112946068486603419[46] = 0;
   out_4112946068486603419[47] = 0;
   out_4112946068486603419[48] = 0;
   out_4112946068486603419[49] = 0;
   out_4112946068486603419[50] = 0;
   out_4112946068486603419[51] = 0;
   out_4112946068486603419[52] = 0;
   out_4112946068486603419[53] = 0;
   out_4112946068486603419[54] = 0;
   out_4112946068486603419[55] = 0;
   out_4112946068486603419[56] = 0;
   out_4112946068486603419[57] = 0;
   out_4112946068486603419[58] = 0;
   out_4112946068486603419[59] = 0;
   out_4112946068486603419[60] = 0;
   out_4112946068486603419[61] = 0;
   out_4112946068486603419[62] = 1;
   out_4112946068486603419[63] = 0;
   out_4112946068486603419[64] = 0;
   out_4112946068486603419[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3154584760600041274) {
  H(in_vec, out_3154584760600041274);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_499696621566390633) {
  err_fun(nom_x, delta_x, out_499696621566390633);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5386185119904310606) {
  inv_err_fun(nom_x, true_x, out_5386185119904310606);
}
void live_H_mod_fun(double *state, double *out_7854240377413656417) {
  H_mod_fun(state, out_7854240377413656417);
}
void live_f_fun(double *state, double dt, double *out_257173274347066590) {
  f_fun(state,  dt, out_257173274347066590);
}
void live_F_fun(double *state, double dt, double *out_7929489797627526687) {
  F_fun(state,  dt, out_7929489797627526687);
}
void live_h_4(double *state, double *unused, double *out_7853819560131254472) {
  h_4(state, unused, out_7853819560131254472);
}
void live_H_4(double *state, double *unused, double *out_6802630376509229689) {
  H_4(state, unused, out_6802630376509229689);
}
void live_h_9(double *state, double *unused, double *out_8951576141250406804) {
  h_9(state, unused, out_8951576141250406804);
}
void live_H_9(double *state, double *unused, double *out_6561440729879639044) {
  H_9(state, unused, out_6561440729879639044);
}
void live_h_10(double *state, double *unused, double *out_2112607427912099688) {
  h_10(state, unused, out_2112607427912099688);
}
void live_H_10(double *state, double *unused, double *out_8588655292876077276) {
  H_10(state, unused, out_8588655292876077276);
}
void live_h_12(double *state, double *unused, double *out_3750146674103585823) {
  h_12(state, unused, out_3750146674103585823);
}
void live_H_12(double *state, double *unused, double *out_1783173968477267894) {
  H_12(state, unused, out_1783173968477267894);
}
void live_h_35(double *state, double *unused, double *out_885809011437945856) {
  h_35(state, unused, out_885809011437945856);
}
void live_H_35(double *state, double *unused, double *out_962389063847745815) {
  H_35(state, unused, out_962389063847745815);
}
void live_h_32(double *state, double *unused, double *out_1649781089655372121) {
  h_32(state, unused, out_1649781089655372121);
}
void live_H_32(double *state, double *unused, double *out_8095911250878812947) {
  H_32(state, unused, out_8095911250878812947);
}
void live_h_13(double *state, double *unused, double *out_1629860254600375211) {
  h_13(state, unused, out_1629860254600375211);
}
void live_H_13(double *state, double *unused, double *out_2668557706713025900) {
  H_13(state, unused, out_2668557706713025900);
}
void live_h_14(double *state, double *unused, double *out_8951576141250406804) {
  h_14(state, unused, out_8951576141250406804);
}
void live_H_14(double *state, double *unused, double *out_6561440729879639044) {
  H_14(state, unused, out_6561440729879639044);
}
void live_h_33(double *state, double *unused, double *out_2963071134127392902) {
  h_33(state, unused, out_2963071134127392902);
}
void live_H_33(double *state, double *unused, double *out_4112946068486603419) {
  H_33(state, unused, out_4112946068486603419);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
