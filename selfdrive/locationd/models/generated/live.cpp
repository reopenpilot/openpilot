#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4410141019639958913) {
   out_4410141019639958913[0] = 0;
   out_4410141019639958913[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4410141019639958913[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4410141019639958913[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4410141019639958913[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4410141019639958913[5] = -sin(in_vec[1]);
   out_4410141019639958913[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4410141019639958913[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4410141019639958913[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4410141019639958913[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4410141019639958913[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4410141019639958913[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4410141019639958913[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4410141019639958913[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4410141019639958913[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4410141019639958913[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4410141019639958913[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4410141019639958913[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4904440510055037559) {
   out_4904440510055037559[0] = delta_x[0] + nom_x[0];
   out_4904440510055037559[1] = delta_x[1] + nom_x[1];
   out_4904440510055037559[2] = delta_x[2] + nom_x[2];
   out_4904440510055037559[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4904440510055037559[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4904440510055037559[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4904440510055037559[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4904440510055037559[7] = delta_x[6] + nom_x[7];
   out_4904440510055037559[8] = delta_x[7] + nom_x[8];
   out_4904440510055037559[9] = delta_x[8] + nom_x[9];
   out_4904440510055037559[10] = delta_x[9] + nom_x[10];
   out_4904440510055037559[11] = delta_x[10] + nom_x[11];
   out_4904440510055037559[12] = delta_x[11] + nom_x[12];
   out_4904440510055037559[13] = delta_x[12] + nom_x[13];
   out_4904440510055037559[14] = delta_x[13] + nom_x[14];
   out_4904440510055037559[15] = delta_x[14] + nom_x[15];
   out_4904440510055037559[16] = delta_x[15] + nom_x[16];
   out_4904440510055037559[17] = delta_x[16] + nom_x[17];
   out_4904440510055037559[18] = delta_x[17] + nom_x[18];
   out_4904440510055037559[19] = delta_x[18] + nom_x[19];
   out_4904440510055037559[20] = delta_x[19] + nom_x[20];
   out_4904440510055037559[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7489252523258488207) {
   out_7489252523258488207[0] = -nom_x[0] + true_x[0];
   out_7489252523258488207[1] = -nom_x[1] + true_x[1];
   out_7489252523258488207[2] = -nom_x[2] + true_x[2];
   out_7489252523258488207[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7489252523258488207[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7489252523258488207[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7489252523258488207[6] = -nom_x[7] + true_x[7];
   out_7489252523258488207[7] = -nom_x[8] + true_x[8];
   out_7489252523258488207[8] = -nom_x[9] + true_x[9];
   out_7489252523258488207[9] = -nom_x[10] + true_x[10];
   out_7489252523258488207[10] = -nom_x[11] + true_x[11];
   out_7489252523258488207[11] = -nom_x[12] + true_x[12];
   out_7489252523258488207[12] = -nom_x[13] + true_x[13];
   out_7489252523258488207[13] = -nom_x[14] + true_x[14];
   out_7489252523258488207[14] = -nom_x[15] + true_x[15];
   out_7489252523258488207[15] = -nom_x[16] + true_x[16];
   out_7489252523258488207[16] = -nom_x[17] + true_x[17];
   out_7489252523258488207[17] = -nom_x[18] + true_x[18];
   out_7489252523258488207[18] = -nom_x[19] + true_x[19];
   out_7489252523258488207[19] = -nom_x[20] + true_x[20];
   out_7489252523258488207[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4628860677358369012) {
   out_4628860677358369012[0] = 1.0;
   out_4628860677358369012[1] = 0;
   out_4628860677358369012[2] = 0;
   out_4628860677358369012[3] = 0;
   out_4628860677358369012[4] = 0;
   out_4628860677358369012[5] = 0;
   out_4628860677358369012[6] = 0;
   out_4628860677358369012[7] = 0;
   out_4628860677358369012[8] = 0;
   out_4628860677358369012[9] = 0;
   out_4628860677358369012[10] = 0;
   out_4628860677358369012[11] = 0;
   out_4628860677358369012[12] = 0;
   out_4628860677358369012[13] = 0;
   out_4628860677358369012[14] = 0;
   out_4628860677358369012[15] = 0;
   out_4628860677358369012[16] = 0;
   out_4628860677358369012[17] = 0;
   out_4628860677358369012[18] = 0;
   out_4628860677358369012[19] = 0;
   out_4628860677358369012[20] = 0;
   out_4628860677358369012[21] = 0;
   out_4628860677358369012[22] = 1.0;
   out_4628860677358369012[23] = 0;
   out_4628860677358369012[24] = 0;
   out_4628860677358369012[25] = 0;
   out_4628860677358369012[26] = 0;
   out_4628860677358369012[27] = 0;
   out_4628860677358369012[28] = 0;
   out_4628860677358369012[29] = 0;
   out_4628860677358369012[30] = 0;
   out_4628860677358369012[31] = 0;
   out_4628860677358369012[32] = 0;
   out_4628860677358369012[33] = 0;
   out_4628860677358369012[34] = 0;
   out_4628860677358369012[35] = 0;
   out_4628860677358369012[36] = 0;
   out_4628860677358369012[37] = 0;
   out_4628860677358369012[38] = 0;
   out_4628860677358369012[39] = 0;
   out_4628860677358369012[40] = 0;
   out_4628860677358369012[41] = 0;
   out_4628860677358369012[42] = 0;
   out_4628860677358369012[43] = 0;
   out_4628860677358369012[44] = 1.0;
   out_4628860677358369012[45] = 0;
   out_4628860677358369012[46] = 0;
   out_4628860677358369012[47] = 0;
   out_4628860677358369012[48] = 0;
   out_4628860677358369012[49] = 0;
   out_4628860677358369012[50] = 0;
   out_4628860677358369012[51] = 0;
   out_4628860677358369012[52] = 0;
   out_4628860677358369012[53] = 0;
   out_4628860677358369012[54] = 0;
   out_4628860677358369012[55] = 0;
   out_4628860677358369012[56] = 0;
   out_4628860677358369012[57] = 0;
   out_4628860677358369012[58] = 0;
   out_4628860677358369012[59] = 0;
   out_4628860677358369012[60] = 0;
   out_4628860677358369012[61] = 0;
   out_4628860677358369012[62] = 0;
   out_4628860677358369012[63] = 0;
   out_4628860677358369012[64] = 0;
   out_4628860677358369012[65] = 0;
   out_4628860677358369012[66] = -0.5*state[4];
   out_4628860677358369012[67] = -0.5*state[5];
   out_4628860677358369012[68] = -0.5*state[6];
   out_4628860677358369012[69] = 0;
   out_4628860677358369012[70] = 0;
   out_4628860677358369012[71] = 0;
   out_4628860677358369012[72] = 0;
   out_4628860677358369012[73] = 0;
   out_4628860677358369012[74] = 0;
   out_4628860677358369012[75] = 0;
   out_4628860677358369012[76] = 0;
   out_4628860677358369012[77] = 0;
   out_4628860677358369012[78] = 0;
   out_4628860677358369012[79] = 0;
   out_4628860677358369012[80] = 0;
   out_4628860677358369012[81] = 0;
   out_4628860677358369012[82] = 0;
   out_4628860677358369012[83] = 0;
   out_4628860677358369012[84] = 0;
   out_4628860677358369012[85] = 0;
   out_4628860677358369012[86] = 0;
   out_4628860677358369012[87] = 0.5*state[3];
   out_4628860677358369012[88] = 0.5*state[6];
   out_4628860677358369012[89] = -0.5*state[5];
   out_4628860677358369012[90] = 0;
   out_4628860677358369012[91] = 0;
   out_4628860677358369012[92] = 0;
   out_4628860677358369012[93] = 0;
   out_4628860677358369012[94] = 0;
   out_4628860677358369012[95] = 0;
   out_4628860677358369012[96] = 0;
   out_4628860677358369012[97] = 0;
   out_4628860677358369012[98] = 0;
   out_4628860677358369012[99] = 0;
   out_4628860677358369012[100] = 0;
   out_4628860677358369012[101] = 0;
   out_4628860677358369012[102] = 0;
   out_4628860677358369012[103] = 0;
   out_4628860677358369012[104] = 0;
   out_4628860677358369012[105] = 0;
   out_4628860677358369012[106] = 0;
   out_4628860677358369012[107] = 0;
   out_4628860677358369012[108] = -0.5*state[6];
   out_4628860677358369012[109] = 0.5*state[3];
   out_4628860677358369012[110] = 0.5*state[4];
   out_4628860677358369012[111] = 0;
   out_4628860677358369012[112] = 0;
   out_4628860677358369012[113] = 0;
   out_4628860677358369012[114] = 0;
   out_4628860677358369012[115] = 0;
   out_4628860677358369012[116] = 0;
   out_4628860677358369012[117] = 0;
   out_4628860677358369012[118] = 0;
   out_4628860677358369012[119] = 0;
   out_4628860677358369012[120] = 0;
   out_4628860677358369012[121] = 0;
   out_4628860677358369012[122] = 0;
   out_4628860677358369012[123] = 0;
   out_4628860677358369012[124] = 0;
   out_4628860677358369012[125] = 0;
   out_4628860677358369012[126] = 0;
   out_4628860677358369012[127] = 0;
   out_4628860677358369012[128] = 0;
   out_4628860677358369012[129] = 0.5*state[5];
   out_4628860677358369012[130] = -0.5*state[4];
   out_4628860677358369012[131] = 0.5*state[3];
   out_4628860677358369012[132] = 0;
   out_4628860677358369012[133] = 0;
   out_4628860677358369012[134] = 0;
   out_4628860677358369012[135] = 0;
   out_4628860677358369012[136] = 0;
   out_4628860677358369012[137] = 0;
   out_4628860677358369012[138] = 0;
   out_4628860677358369012[139] = 0;
   out_4628860677358369012[140] = 0;
   out_4628860677358369012[141] = 0;
   out_4628860677358369012[142] = 0;
   out_4628860677358369012[143] = 0;
   out_4628860677358369012[144] = 0;
   out_4628860677358369012[145] = 0;
   out_4628860677358369012[146] = 0;
   out_4628860677358369012[147] = 0;
   out_4628860677358369012[148] = 0;
   out_4628860677358369012[149] = 0;
   out_4628860677358369012[150] = 0;
   out_4628860677358369012[151] = 0;
   out_4628860677358369012[152] = 0;
   out_4628860677358369012[153] = 1.0;
   out_4628860677358369012[154] = 0;
   out_4628860677358369012[155] = 0;
   out_4628860677358369012[156] = 0;
   out_4628860677358369012[157] = 0;
   out_4628860677358369012[158] = 0;
   out_4628860677358369012[159] = 0;
   out_4628860677358369012[160] = 0;
   out_4628860677358369012[161] = 0;
   out_4628860677358369012[162] = 0;
   out_4628860677358369012[163] = 0;
   out_4628860677358369012[164] = 0;
   out_4628860677358369012[165] = 0;
   out_4628860677358369012[166] = 0;
   out_4628860677358369012[167] = 0;
   out_4628860677358369012[168] = 0;
   out_4628860677358369012[169] = 0;
   out_4628860677358369012[170] = 0;
   out_4628860677358369012[171] = 0;
   out_4628860677358369012[172] = 0;
   out_4628860677358369012[173] = 0;
   out_4628860677358369012[174] = 0;
   out_4628860677358369012[175] = 1.0;
   out_4628860677358369012[176] = 0;
   out_4628860677358369012[177] = 0;
   out_4628860677358369012[178] = 0;
   out_4628860677358369012[179] = 0;
   out_4628860677358369012[180] = 0;
   out_4628860677358369012[181] = 0;
   out_4628860677358369012[182] = 0;
   out_4628860677358369012[183] = 0;
   out_4628860677358369012[184] = 0;
   out_4628860677358369012[185] = 0;
   out_4628860677358369012[186] = 0;
   out_4628860677358369012[187] = 0;
   out_4628860677358369012[188] = 0;
   out_4628860677358369012[189] = 0;
   out_4628860677358369012[190] = 0;
   out_4628860677358369012[191] = 0;
   out_4628860677358369012[192] = 0;
   out_4628860677358369012[193] = 0;
   out_4628860677358369012[194] = 0;
   out_4628860677358369012[195] = 0;
   out_4628860677358369012[196] = 0;
   out_4628860677358369012[197] = 1.0;
   out_4628860677358369012[198] = 0;
   out_4628860677358369012[199] = 0;
   out_4628860677358369012[200] = 0;
   out_4628860677358369012[201] = 0;
   out_4628860677358369012[202] = 0;
   out_4628860677358369012[203] = 0;
   out_4628860677358369012[204] = 0;
   out_4628860677358369012[205] = 0;
   out_4628860677358369012[206] = 0;
   out_4628860677358369012[207] = 0;
   out_4628860677358369012[208] = 0;
   out_4628860677358369012[209] = 0;
   out_4628860677358369012[210] = 0;
   out_4628860677358369012[211] = 0;
   out_4628860677358369012[212] = 0;
   out_4628860677358369012[213] = 0;
   out_4628860677358369012[214] = 0;
   out_4628860677358369012[215] = 0;
   out_4628860677358369012[216] = 0;
   out_4628860677358369012[217] = 0;
   out_4628860677358369012[218] = 0;
   out_4628860677358369012[219] = 1.0;
   out_4628860677358369012[220] = 0;
   out_4628860677358369012[221] = 0;
   out_4628860677358369012[222] = 0;
   out_4628860677358369012[223] = 0;
   out_4628860677358369012[224] = 0;
   out_4628860677358369012[225] = 0;
   out_4628860677358369012[226] = 0;
   out_4628860677358369012[227] = 0;
   out_4628860677358369012[228] = 0;
   out_4628860677358369012[229] = 0;
   out_4628860677358369012[230] = 0;
   out_4628860677358369012[231] = 0;
   out_4628860677358369012[232] = 0;
   out_4628860677358369012[233] = 0;
   out_4628860677358369012[234] = 0;
   out_4628860677358369012[235] = 0;
   out_4628860677358369012[236] = 0;
   out_4628860677358369012[237] = 0;
   out_4628860677358369012[238] = 0;
   out_4628860677358369012[239] = 0;
   out_4628860677358369012[240] = 0;
   out_4628860677358369012[241] = 1.0;
   out_4628860677358369012[242] = 0;
   out_4628860677358369012[243] = 0;
   out_4628860677358369012[244] = 0;
   out_4628860677358369012[245] = 0;
   out_4628860677358369012[246] = 0;
   out_4628860677358369012[247] = 0;
   out_4628860677358369012[248] = 0;
   out_4628860677358369012[249] = 0;
   out_4628860677358369012[250] = 0;
   out_4628860677358369012[251] = 0;
   out_4628860677358369012[252] = 0;
   out_4628860677358369012[253] = 0;
   out_4628860677358369012[254] = 0;
   out_4628860677358369012[255] = 0;
   out_4628860677358369012[256] = 0;
   out_4628860677358369012[257] = 0;
   out_4628860677358369012[258] = 0;
   out_4628860677358369012[259] = 0;
   out_4628860677358369012[260] = 0;
   out_4628860677358369012[261] = 0;
   out_4628860677358369012[262] = 0;
   out_4628860677358369012[263] = 1.0;
   out_4628860677358369012[264] = 0;
   out_4628860677358369012[265] = 0;
   out_4628860677358369012[266] = 0;
   out_4628860677358369012[267] = 0;
   out_4628860677358369012[268] = 0;
   out_4628860677358369012[269] = 0;
   out_4628860677358369012[270] = 0;
   out_4628860677358369012[271] = 0;
   out_4628860677358369012[272] = 0;
   out_4628860677358369012[273] = 0;
   out_4628860677358369012[274] = 0;
   out_4628860677358369012[275] = 0;
   out_4628860677358369012[276] = 0;
   out_4628860677358369012[277] = 0;
   out_4628860677358369012[278] = 0;
   out_4628860677358369012[279] = 0;
   out_4628860677358369012[280] = 0;
   out_4628860677358369012[281] = 0;
   out_4628860677358369012[282] = 0;
   out_4628860677358369012[283] = 0;
   out_4628860677358369012[284] = 0;
   out_4628860677358369012[285] = 1.0;
   out_4628860677358369012[286] = 0;
   out_4628860677358369012[287] = 0;
   out_4628860677358369012[288] = 0;
   out_4628860677358369012[289] = 0;
   out_4628860677358369012[290] = 0;
   out_4628860677358369012[291] = 0;
   out_4628860677358369012[292] = 0;
   out_4628860677358369012[293] = 0;
   out_4628860677358369012[294] = 0;
   out_4628860677358369012[295] = 0;
   out_4628860677358369012[296] = 0;
   out_4628860677358369012[297] = 0;
   out_4628860677358369012[298] = 0;
   out_4628860677358369012[299] = 0;
   out_4628860677358369012[300] = 0;
   out_4628860677358369012[301] = 0;
   out_4628860677358369012[302] = 0;
   out_4628860677358369012[303] = 0;
   out_4628860677358369012[304] = 0;
   out_4628860677358369012[305] = 0;
   out_4628860677358369012[306] = 0;
   out_4628860677358369012[307] = 1.0;
   out_4628860677358369012[308] = 0;
   out_4628860677358369012[309] = 0;
   out_4628860677358369012[310] = 0;
   out_4628860677358369012[311] = 0;
   out_4628860677358369012[312] = 0;
   out_4628860677358369012[313] = 0;
   out_4628860677358369012[314] = 0;
   out_4628860677358369012[315] = 0;
   out_4628860677358369012[316] = 0;
   out_4628860677358369012[317] = 0;
   out_4628860677358369012[318] = 0;
   out_4628860677358369012[319] = 0;
   out_4628860677358369012[320] = 0;
   out_4628860677358369012[321] = 0;
   out_4628860677358369012[322] = 0;
   out_4628860677358369012[323] = 0;
   out_4628860677358369012[324] = 0;
   out_4628860677358369012[325] = 0;
   out_4628860677358369012[326] = 0;
   out_4628860677358369012[327] = 0;
   out_4628860677358369012[328] = 0;
   out_4628860677358369012[329] = 1.0;
   out_4628860677358369012[330] = 0;
   out_4628860677358369012[331] = 0;
   out_4628860677358369012[332] = 0;
   out_4628860677358369012[333] = 0;
   out_4628860677358369012[334] = 0;
   out_4628860677358369012[335] = 0;
   out_4628860677358369012[336] = 0;
   out_4628860677358369012[337] = 0;
   out_4628860677358369012[338] = 0;
   out_4628860677358369012[339] = 0;
   out_4628860677358369012[340] = 0;
   out_4628860677358369012[341] = 0;
   out_4628860677358369012[342] = 0;
   out_4628860677358369012[343] = 0;
   out_4628860677358369012[344] = 0;
   out_4628860677358369012[345] = 0;
   out_4628860677358369012[346] = 0;
   out_4628860677358369012[347] = 0;
   out_4628860677358369012[348] = 0;
   out_4628860677358369012[349] = 0;
   out_4628860677358369012[350] = 0;
   out_4628860677358369012[351] = 1.0;
   out_4628860677358369012[352] = 0;
   out_4628860677358369012[353] = 0;
   out_4628860677358369012[354] = 0;
   out_4628860677358369012[355] = 0;
   out_4628860677358369012[356] = 0;
   out_4628860677358369012[357] = 0;
   out_4628860677358369012[358] = 0;
   out_4628860677358369012[359] = 0;
   out_4628860677358369012[360] = 0;
   out_4628860677358369012[361] = 0;
   out_4628860677358369012[362] = 0;
   out_4628860677358369012[363] = 0;
   out_4628860677358369012[364] = 0;
   out_4628860677358369012[365] = 0;
   out_4628860677358369012[366] = 0;
   out_4628860677358369012[367] = 0;
   out_4628860677358369012[368] = 0;
   out_4628860677358369012[369] = 0;
   out_4628860677358369012[370] = 0;
   out_4628860677358369012[371] = 0;
   out_4628860677358369012[372] = 0;
   out_4628860677358369012[373] = 1.0;
   out_4628860677358369012[374] = 0;
   out_4628860677358369012[375] = 0;
   out_4628860677358369012[376] = 0;
   out_4628860677358369012[377] = 0;
   out_4628860677358369012[378] = 0;
   out_4628860677358369012[379] = 0;
   out_4628860677358369012[380] = 0;
   out_4628860677358369012[381] = 0;
   out_4628860677358369012[382] = 0;
   out_4628860677358369012[383] = 0;
   out_4628860677358369012[384] = 0;
   out_4628860677358369012[385] = 0;
   out_4628860677358369012[386] = 0;
   out_4628860677358369012[387] = 0;
   out_4628860677358369012[388] = 0;
   out_4628860677358369012[389] = 0;
   out_4628860677358369012[390] = 0;
   out_4628860677358369012[391] = 0;
   out_4628860677358369012[392] = 0;
   out_4628860677358369012[393] = 0;
   out_4628860677358369012[394] = 0;
   out_4628860677358369012[395] = 1.0;
   out_4628860677358369012[396] = 0;
   out_4628860677358369012[397] = 0;
   out_4628860677358369012[398] = 0;
   out_4628860677358369012[399] = 0;
   out_4628860677358369012[400] = 0;
   out_4628860677358369012[401] = 0;
   out_4628860677358369012[402] = 0;
   out_4628860677358369012[403] = 0;
   out_4628860677358369012[404] = 0;
   out_4628860677358369012[405] = 0;
   out_4628860677358369012[406] = 0;
   out_4628860677358369012[407] = 0;
   out_4628860677358369012[408] = 0;
   out_4628860677358369012[409] = 0;
   out_4628860677358369012[410] = 0;
   out_4628860677358369012[411] = 0;
   out_4628860677358369012[412] = 0;
   out_4628860677358369012[413] = 0;
   out_4628860677358369012[414] = 0;
   out_4628860677358369012[415] = 0;
   out_4628860677358369012[416] = 0;
   out_4628860677358369012[417] = 1.0;
   out_4628860677358369012[418] = 0;
   out_4628860677358369012[419] = 0;
   out_4628860677358369012[420] = 0;
   out_4628860677358369012[421] = 0;
   out_4628860677358369012[422] = 0;
   out_4628860677358369012[423] = 0;
   out_4628860677358369012[424] = 0;
   out_4628860677358369012[425] = 0;
   out_4628860677358369012[426] = 0;
   out_4628860677358369012[427] = 0;
   out_4628860677358369012[428] = 0;
   out_4628860677358369012[429] = 0;
   out_4628860677358369012[430] = 0;
   out_4628860677358369012[431] = 0;
   out_4628860677358369012[432] = 0;
   out_4628860677358369012[433] = 0;
   out_4628860677358369012[434] = 0;
   out_4628860677358369012[435] = 0;
   out_4628860677358369012[436] = 0;
   out_4628860677358369012[437] = 0;
   out_4628860677358369012[438] = 0;
   out_4628860677358369012[439] = 1.0;
   out_4628860677358369012[440] = 0;
   out_4628860677358369012[441] = 0;
   out_4628860677358369012[442] = 0;
   out_4628860677358369012[443] = 0;
   out_4628860677358369012[444] = 0;
   out_4628860677358369012[445] = 0;
   out_4628860677358369012[446] = 0;
   out_4628860677358369012[447] = 0;
   out_4628860677358369012[448] = 0;
   out_4628860677358369012[449] = 0;
   out_4628860677358369012[450] = 0;
   out_4628860677358369012[451] = 0;
   out_4628860677358369012[452] = 0;
   out_4628860677358369012[453] = 0;
   out_4628860677358369012[454] = 0;
   out_4628860677358369012[455] = 0;
   out_4628860677358369012[456] = 0;
   out_4628860677358369012[457] = 0;
   out_4628860677358369012[458] = 0;
   out_4628860677358369012[459] = 0;
   out_4628860677358369012[460] = 0;
   out_4628860677358369012[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_807369176605697005) {
   out_807369176605697005[0] = dt*state[7] + state[0];
   out_807369176605697005[1] = dt*state[8] + state[1];
   out_807369176605697005[2] = dt*state[9] + state[2];
   out_807369176605697005[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_807369176605697005[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_807369176605697005[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_807369176605697005[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_807369176605697005[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_807369176605697005[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_807369176605697005[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_807369176605697005[10] = state[10];
   out_807369176605697005[11] = state[11];
   out_807369176605697005[12] = state[12];
   out_807369176605697005[13] = state[13];
   out_807369176605697005[14] = state[14];
   out_807369176605697005[15] = state[15];
   out_807369176605697005[16] = state[16];
   out_807369176605697005[17] = state[17];
   out_807369176605697005[18] = state[18];
   out_807369176605697005[19] = state[19];
   out_807369176605697005[20] = state[20];
   out_807369176605697005[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6250696830602655270) {
   out_6250696830602655270[0] = 1;
   out_6250696830602655270[1] = 0;
   out_6250696830602655270[2] = 0;
   out_6250696830602655270[3] = 0;
   out_6250696830602655270[4] = 0;
   out_6250696830602655270[5] = 0;
   out_6250696830602655270[6] = dt;
   out_6250696830602655270[7] = 0;
   out_6250696830602655270[8] = 0;
   out_6250696830602655270[9] = 0;
   out_6250696830602655270[10] = 0;
   out_6250696830602655270[11] = 0;
   out_6250696830602655270[12] = 0;
   out_6250696830602655270[13] = 0;
   out_6250696830602655270[14] = 0;
   out_6250696830602655270[15] = 0;
   out_6250696830602655270[16] = 0;
   out_6250696830602655270[17] = 0;
   out_6250696830602655270[18] = 0;
   out_6250696830602655270[19] = 0;
   out_6250696830602655270[20] = 0;
   out_6250696830602655270[21] = 0;
   out_6250696830602655270[22] = 1;
   out_6250696830602655270[23] = 0;
   out_6250696830602655270[24] = 0;
   out_6250696830602655270[25] = 0;
   out_6250696830602655270[26] = 0;
   out_6250696830602655270[27] = 0;
   out_6250696830602655270[28] = dt;
   out_6250696830602655270[29] = 0;
   out_6250696830602655270[30] = 0;
   out_6250696830602655270[31] = 0;
   out_6250696830602655270[32] = 0;
   out_6250696830602655270[33] = 0;
   out_6250696830602655270[34] = 0;
   out_6250696830602655270[35] = 0;
   out_6250696830602655270[36] = 0;
   out_6250696830602655270[37] = 0;
   out_6250696830602655270[38] = 0;
   out_6250696830602655270[39] = 0;
   out_6250696830602655270[40] = 0;
   out_6250696830602655270[41] = 0;
   out_6250696830602655270[42] = 0;
   out_6250696830602655270[43] = 0;
   out_6250696830602655270[44] = 1;
   out_6250696830602655270[45] = 0;
   out_6250696830602655270[46] = 0;
   out_6250696830602655270[47] = 0;
   out_6250696830602655270[48] = 0;
   out_6250696830602655270[49] = 0;
   out_6250696830602655270[50] = dt;
   out_6250696830602655270[51] = 0;
   out_6250696830602655270[52] = 0;
   out_6250696830602655270[53] = 0;
   out_6250696830602655270[54] = 0;
   out_6250696830602655270[55] = 0;
   out_6250696830602655270[56] = 0;
   out_6250696830602655270[57] = 0;
   out_6250696830602655270[58] = 0;
   out_6250696830602655270[59] = 0;
   out_6250696830602655270[60] = 0;
   out_6250696830602655270[61] = 0;
   out_6250696830602655270[62] = 0;
   out_6250696830602655270[63] = 0;
   out_6250696830602655270[64] = 0;
   out_6250696830602655270[65] = 0;
   out_6250696830602655270[66] = 1;
   out_6250696830602655270[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6250696830602655270[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6250696830602655270[69] = 0;
   out_6250696830602655270[70] = 0;
   out_6250696830602655270[71] = 0;
   out_6250696830602655270[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6250696830602655270[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6250696830602655270[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6250696830602655270[75] = 0;
   out_6250696830602655270[76] = 0;
   out_6250696830602655270[77] = 0;
   out_6250696830602655270[78] = 0;
   out_6250696830602655270[79] = 0;
   out_6250696830602655270[80] = 0;
   out_6250696830602655270[81] = 0;
   out_6250696830602655270[82] = 0;
   out_6250696830602655270[83] = 0;
   out_6250696830602655270[84] = 0;
   out_6250696830602655270[85] = 0;
   out_6250696830602655270[86] = 0;
   out_6250696830602655270[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6250696830602655270[88] = 1;
   out_6250696830602655270[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6250696830602655270[90] = 0;
   out_6250696830602655270[91] = 0;
   out_6250696830602655270[92] = 0;
   out_6250696830602655270[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6250696830602655270[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6250696830602655270[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6250696830602655270[96] = 0;
   out_6250696830602655270[97] = 0;
   out_6250696830602655270[98] = 0;
   out_6250696830602655270[99] = 0;
   out_6250696830602655270[100] = 0;
   out_6250696830602655270[101] = 0;
   out_6250696830602655270[102] = 0;
   out_6250696830602655270[103] = 0;
   out_6250696830602655270[104] = 0;
   out_6250696830602655270[105] = 0;
   out_6250696830602655270[106] = 0;
   out_6250696830602655270[107] = 0;
   out_6250696830602655270[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6250696830602655270[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6250696830602655270[110] = 1;
   out_6250696830602655270[111] = 0;
   out_6250696830602655270[112] = 0;
   out_6250696830602655270[113] = 0;
   out_6250696830602655270[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6250696830602655270[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6250696830602655270[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6250696830602655270[117] = 0;
   out_6250696830602655270[118] = 0;
   out_6250696830602655270[119] = 0;
   out_6250696830602655270[120] = 0;
   out_6250696830602655270[121] = 0;
   out_6250696830602655270[122] = 0;
   out_6250696830602655270[123] = 0;
   out_6250696830602655270[124] = 0;
   out_6250696830602655270[125] = 0;
   out_6250696830602655270[126] = 0;
   out_6250696830602655270[127] = 0;
   out_6250696830602655270[128] = 0;
   out_6250696830602655270[129] = 0;
   out_6250696830602655270[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6250696830602655270[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6250696830602655270[132] = 1;
   out_6250696830602655270[133] = 0;
   out_6250696830602655270[134] = 0;
   out_6250696830602655270[135] = 0;
   out_6250696830602655270[136] = 0;
   out_6250696830602655270[137] = 0;
   out_6250696830602655270[138] = 0;
   out_6250696830602655270[139] = 0;
   out_6250696830602655270[140] = 0;
   out_6250696830602655270[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6250696830602655270[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6250696830602655270[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6250696830602655270[144] = 0;
   out_6250696830602655270[145] = 0;
   out_6250696830602655270[146] = 0;
   out_6250696830602655270[147] = 0;
   out_6250696830602655270[148] = 0;
   out_6250696830602655270[149] = 0;
   out_6250696830602655270[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6250696830602655270[151] = 0;
   out_6250696830602655270[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6250696830602655270[153] = 0;
   out_6250696830602655270[154] = 1;
   out_6250696830602655270[155] = 0;
   out_6250696830602655270[156] = 0;
   out_6250696830602655270[157] = 0;
   out_6250696830602655270[158] = 0;
   out_6250696830602655270[159] = 0;
   out_6250696830602655270[160] = 0;
   out_6250696830602655270[161] = 0;
   out_6250696830602655270[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6250696830602655270[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6250696830602655270[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6250696830602655270[165] = 0;
   out_6250696830602655270[166] = 0;
   out_6250696830602655270[167] = 0;
   out_6250696830602655270[168] = 0;
   out_6250696830602655270[169] = 0;
   out_6250696830602655270[170] = 0;
   out_6250696830602655270[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6250696830602655270[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6250696830602655270[173] = 0;
   out_6250696830602655270[174] = 0;
   out_6250696830602655270[175] = 0;
   out_6250696830602655270[176] = 1;
   out_6250696830602655270[177] = 0;
   out_6250696830602655270[178] = 0;
   out_6250696830602655270[179] = 0;
   out_6250696830602655270[180] = 0;
   out_6250696830602655270[181] = 0;
   out_6250696830602655270[182] = 0;
   out_6250696830602655270[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6250696830602655270[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6250696830602655270[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6250696830602655270[186] = 0;
   out_6250696830602655270[187] = 0;
   out_6250696830602655270[188] = 0;
   out_6250696830602655270[189] = 0;
   out_6250696830602655270[190] = 0;
   out_6250696830602655270[191] = 0;
   out_6250696830602655270[192] = 0;
   out_6250696830602655270[193] = 0;
   out_6250696830602655270[194] = 0;
   out_6250696830602655270[195] = 0;
   out_6250696830602655270[196] = 0;
   out_6250696830602655270[197] = 0;
   out_6250696830602655270[198] = 1;
   out_6250696830602655270[199] = 0;
   out_6250696830602655270[200] = 0;
   out_6250696830602655270[201] = 0;
   out_6250696830602655270[202] = 0;
   out_6250696830602655270[203] = 0;
   out_6250696830602655270[204] = 0;
   out_6250696830602655270[205] = 0;
   out_6250696830602655270[206] = 0;
   out_6250696830602655270[207] = 0;
   out_6250696830602655270[208] = 0;
   out_6250696830602655270[209] = 0;
   out_6250696830602655270[210] = 0;
   out_6250696830602655270[211] = 0;
   out_6250696830602655270[212] = 0;
   out_6250696830602655270[213] = 0;
   out_6250696830602655270[214] = 0;
   out_6250696830602655270[215] = 0;
   out_6250696830602655270[216] = 0;
   out_6250696830602655270[217] = 0;
   out_6250696830602655270[218] = 0;
   out_6250696830602655270[219] = 0;
   out_6250696830602655270[220] = 1;
   out_6250696830602655270[221] = 0;
   out_6250696830602655270[222] = 0;
   out_6250696830602655270[223] = 0;
   out_6250696830602655270[224] = 0;
   out_6250696830602655270[225] = 0;
   out_6250696830602655270[226] = 0;
   out_6250696830602655270[227] = 0;
   out_6250696830602655270[228] = 0;
   out_6250696830602655270[229] = 0;
   out_6250696830602655270[230] = 0;
   out_6250696830602655270[231] = 0;
   out_6250696830602655270[232] = 0;
   out_6250696830602655270[233] = 0;
   out_6250696830602655270[234] = 0;
   out_6250696830602655270[235] = 0;
   out_6250696830602655270[236] = 0;
   out_6250696830602655270[237] = 0;
   out_6250696830602655270[238] = 0;
   out_6250696830602655270[239] = 0;
   out_6250696830602655270[240] = 0;
   out_6250696830602655270[241] = 0;
   out_6250696830602655270[242] = 1;
   out_6250696830602655270[243] = 0;
   out_6250696830602655270[244] = 0;
   out_6250696830602655270[245] = 0;
   out_6250696830602655270[246] = 0;
   out_6250696830602655270[247] = 0;
   out_6250696830602655270[248] = 0;
   out_6250696830602655270[249] = 0;
   out_6250696830602655270[250] = 0;
   out_6250696830602655270[251] = 0;
   out_6250696830602655270[252] = 0;
   out_6250696830602655270[253] = 0;
   out_6250696830602655270[254] = 0;
   out_6250696830602655270[255] = 0;
   out_6250696830602655270[256] = 0;
   out_6250696830602655270[257] = 0;
   out_6250696830602655270[258] = 0;
   out_6250696830602655270[259] = 0;
   out_6250696830602655270[260] = 0;
   out_6250696830602655270[261] = 0;
   out_6250696830602655270[262] = 0;
   out_6250696830602655270[263] = 0;
   out_6250696830602655270[264] = 1;
   out_6250696830602655270[265] = 0;
   out_6250696830602655270[266] = 0;
   out_6250696830602655270[267] = 0;
   out_6250696830602655270[268] = 0;
   out_6250696830602655270[269] = 0;
   out_6250696830602655270[270] = 0;
   out_6250696830602655270[271] = 0;
   out_6250696830602655270[272] = 0;
   out_6250696830602655270[273] = 0;
   out_6250696830602655270[274] = 0;
   out_6250696830602655270[275] = 0;
   out_6250696830602655270[276] = 0;
   out_6250696830602655270[277] = 0;
   out_6250696830602655270[278] = 0;
   out_6250696830602655270[279] = 0;
   out_6250696830602655270[280] = 0;
   out_6250696830602655270[281] = 0;
   out_6250696830602655270[282] = 0;
   out_6250696830602655270[283] = 0;
   out_6250696830602655270[284] = 0;
   out_6250696830602655270[285] = 0;
   out_6250696830602655270[286] = 1;
   out_6250696830602655270[287] = 0;
   out_6250696830602655270[288] = 0;
   out_6250696830602655270[289] = 0;
   out_6250696830602655270[290] = 0;
   out_6250696830602655270[291] = 0;
   out_6250696830602655270[292] = 0;
   out_6250696830602655270[293] = 0;
   out_6250696830602655270[294] = 0;
   out_6250696830602655270[295] = 0;
   out_6250696830602655270[296] = 0;
   out_6250696830602655270[297] = 0;
   out_6250696830602655270[298] = 0;
   out_6250696830602655270[299] = 0;
   out_6250696830602655270[300] = 0;
   out_6250696830602655270[301] = 0;
   out_6250696830602655270[302] = 0;
   out_6250696830602655270[303] = 0;
   out_6250696830602655270[304] = 0;
   out_6250696830602655270[305] = 0;
   out_6250696830602655270[306] = 0;
   out_6250696830602655270[307] = 0;
   out_6250696830602655270[308] = 1;
   out_6250696830602655270[309] = 0;
   out_6250696830602655270[310] = 0;
   out_6250696830602655270[311] = 0;
   out_6250696830602655270[312] = 0;
   out_6250696830602655270[313] = 0;
   out_6250696830602655270[314] = 0;
   out_6250696830602655270[315] = 0;
   out_6250696830602655270[316] = 0;
   out_6250696830602655270[317] = 0;
   out_6250696830602655270[318] = 0;
   out_6250696830602655270[319] = 0;
   out_6250696830602655270[320] = 0;
   out_6250696830602655270[321] = 0;
   out_6250696830602655270[322] = 0;
   out_6250696830602655270[323] = 0;
   out_6250696830602655270[324] = 0;
   out_6250696830602655270[325] = 0;
   out_6250696830602655270[326] = 0;
   out_6250696830602655270[327] = 0;
   out_6250696830602655270[328] = 0;
   out_6250696830602655270[329] = 0;
   out_6250696830602655270[330] = 1;
   out_6250696830602655270[331] = 0;
   out_6250696830602655270[332] = 0;
   out_6250696830602655270[333] = 0;
   out_6250696830602655270[334] = 0;
   out_6250696830602655270[335] = 0;
   out_6250696830602655270[336] = 0;
   out_6250696830602655270[337] = 0;
   out_6250696830602655270[338] = 0;
   out_6250696830602655270[339] = 0;
   out_6250696830602655270[340] = 0;
   out_6250696830602655270[341] = 0;
   out_6250696830602655270[342] = 0;
   out_6250696830602655270[343] = 0;
   out_6250696830602655270[344] = 0;
   out_6250696830602655270[345] = 0;
   out_6250696830602655270[346] = 0;
   out_6250696830602655270[347] = 0;
   out_6250696830602655270[348] = 0;
   out_6250696830602655270[349] = 0;
   out_6250696830602655270[350] = 0;
   out_6250696830602655270[351] = 0;
   out_6250696830602655270[352] = 1;
   out_6250696830602655270[353] = 0;
   out_6250696830602655270[354] = 0;
   out_6250696830602655270[355] = 0;
   out_6250696830602655270[356] = 0;
   out_6250696830602655270[357] = 0;
   out_6250696830602655270[358] = 0;
   out_6250696830602655270[359] = 0;
   out_6250696830602655270[360] = 0;
   out_6250696830602655270[361] = 0;
   out_6250696830602655270[362] = 0;
   out_6250696830602655270[363] = 0;
   out_6250696830602655270[364] = 0;
   out_6250696830602655270[365] = 0;
   out_6250696830602655270[366] = 0;
   out_6250696830602655270[367] = 0;
   out_6250696830602655270[368] = 0;
   out_6250696830602655270[369] = 0;
   out_6250696830602655270[370] = 0;
   out_6250696830602655270[371] = 0;
   out_6250696830602655270[372] = 0;
   out_6250696830602655270[373] = 0;
   out_6250696830602655270[374] = 1;
   out_6250696830602655270[375] = 0;
   out_6250696830602655270[376] = 0;
   out_6250696830602655270[377] = 0;
   out_6250696830602655270[378] = 0;
   out_6250696830602655270[379] = 0;
   out_6250696830602655270[380] = 0;
   out_6250696830602655270[381] = 0;
   out_6250696830602655270[382] = 0;
   out_6250696830602655270[383] = 0;
   out_6250696830602655270[384] = 0;
   out_6250696830602655270[385] = 0;
   out_6250696830602655270[386] = 0;
   out_6250696830602655270[387] = 0;
   out_6250696830602655270[388] = 0;
   out_6250696830602655270[389] = 0;
   out_6250696830602655270[390] = 0;
   out_6250696830602655270[391] = 0;
   out_6250696830602655270[392] = 0;
   out_6250696830602655270[393] = 0;
   out_6250696830602655270[394] = 0;
   out_6250696830602655270[395] = 0;
   out_6250696830602655270[396] = 1;
   out_6250696830602655270[397] = 0;
   out_6250696830602655270[398] = 0;
   out_6250696830602655270[399] = 0;
   out_6250696830602655270[400] = 0;
   out_6250696830602655270[401] = 0;
   out_6250696830602655270[402] = 0;
   out_6250696830602655270[403] = 0;
   out_6250696830602655270[404] = 0;
   out_6250696830602655270[405] = 0;
   out_6250696830602655270[406] = 0;
   out_6250696830602655270[407] = 0;
   out_6250696830602655270[408] = 0;
   out_6250696830602655270[409] = 0;
   out_6250696830602655270[410] = 0;
   out_6250696830602655270[411] = 0;
   out_6250696830602655270[412] = 0;
   out_6250696830602655270[413] = 0;
   out_6250696830602655270[414] = 0;
   out_6250696830602655270[415] = 0;
   out_6250696830602655270[416] = 0;
   out_6250696830602655270[417] = 0;
   out_6250696830602655270[418] = 1;
   out_6250696830602655270[419] = 0;
   out_6250696830602655270[420] = 0;
   out_6250696830602655270[421] = 0;
   out_6250696830602655270[422] = 0;
   out_6250696830602655270[423] = 0;
   out_6250696830602655270[424] = 0;
   out_6250696830602655270[425] = 0;
   out_6250696830602655270[426] = 0;
   out_6250696830602655270[427] = 0;
   out_6250696830602655270[428] = 0;
   out_6250696830602655270[429] = 0;
   out_6250696830602655270[430] = 0;
   out_6250696830602655270[431] = 0;
   out_6250696830602655270[432] = 0;
   out_6250696830602655270[433] = 0;
   out_6250696830602655270[434] = 0;
   out_6250696830602655270[435] = 0;
   out_6250696830602655270[436] = 0;
   out_6250696830602655270[437] = 0;
   out_6250696830602655270[438] = 0;
   out_6250696830602655270[439] = 0;
   out_6250696830602655270[440] = 1;
}
void h_4(double *state, double *unused, double *out_5294376663121993073) {
   out_5294376663121993073[0] = state[10] + state[13];
   out_5294376663121993073[1] = state[11] + state[14];
   out_5294376663121993073[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7516882969314463851) {
   out_7516882969314463851[0] = 0;
   out_7516882969314463851[1] = 0;
   out_7516882969314463851[2] = 0;
   out_7516882969314463851[3] = 0;
   out_7516882969314463851[4] = 0;
   out_7516882969314463851[5] = 0;
   out_7516882969314463851[6] = 0;
   out_7516882969314463851[7] = 0;
   out_7516882969314463851[8] = 0;
   out_7516882969314463851[9] = 0;
   out_7516882969314463851[10] = 1;
   out_7516882969314463851[11] = 0;
   out_7516882969314463851[12] = 0;
   out_7516882969314463851[13] = 1;
   out_7516882969314463851[14] = 0;
   out_7516882969314463851[15] = 0;
   out_7516882969314463851[16] = 0;
   out_7516882969314463851[17] = 0;
   out_7516882969314463851[18] = 0;
   out_7516882969314463851[19] = 0;
   out_7516882969314463851[20] = 0;
   out_7516882969314463851[21] = 0;
   out_7516882969314463851[22] = 0;
   out_7516882969314463851[23] = 0;
   out_7516882969314463851[24] = 0;
   out_7516882969314463851[25] = 0;
   out_7516882969314463851[26] = 0;
   out_7516882969314463851[27] = 0;
   out_7516882969314463851[28] = 0;
   out_7516882969314463851[29] = 0;
   out_7516882969314463851[30] = 0;
   out_7516882969314463851[31] = 0;
   out_7516882969314463851[32] = 0;
   out_7516882969314463851[33] = 1;
   out_7516882969314463851[34] = 0;
   out_7516882969314463851[35] = 0;
   out_7516882969314463851[36] = 1;
   out_7516882969314463851[37] = 0;
   out_7516882969314463851[38] = 0;
   out_7516882969314463851[39] = 0;
   out_7516882969314463851[40] = 0;
   out_7516882969314463851[41] = 0;
   out_7516882969314463851[42] = 0;
   out_7516882969314463851[43] = 0;
   out_7516882969314463851[44] = 0;
   out_7516882969314463851[45] = 0;
   out_7516882969314463851[46] = 0;
   out_7516882969314463851[47] = 0;
   out_7516882969314463851[48] = 0;
   out_7516882969314463851[49] = 0;
   out_7516882969314463851[50] = 0;
   out_7516882969314463851[51] = 0;
   out_7516882969314463851[52] = 0;
   out_7516882969314463851[53] = 0;
   out_7516882969314463851[54] = 0;
   out_7516882969314463851[55] = 0;
   out_7516882969314463851[56] = 1;
   out_7516882969314463851[57] = 0;
   out_7516882969314463851[58] = 0;
   out_7516882969314463851[59] = 1;
   out_7516882969314463851[60] = 0;
   out_7516882969314463851[61] = 0;
   out_7516882969314463851[62] = 0;
   out_7516882969314463851[63] = 0;
   out_7516882969314463851[64] = 0;
   out_7516882969314463851[65] = 0;
}
void h_9(double *state, double *unused, double *out_7335920442129178595) {
   out_7335920442129178595[0] = state[10];
   out_7335920442129178595[1] = state[11];
   out_7335920442129178595[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3642642169130640295) {
   out_3642642169130640295[0] = 0;
   out_3642642169130640295[1] = 0;
   out_3642642169130640295[2] = 0;
   out_3642642169130640295[3] = 0;
   out_3642642169130640295[4] = 0;
   out_3642642169130640295[5] = 0;
   out_3642642169130640295[6] = 0;
   out_3642642169130640295[7] = 0;
   out_3642642169130640295[8] = 0;
   out_3642642169130640295[9] = 0;
   out_3642642169130640295[10] = 1;
   out_3642642169130640295[11] = 0;
   out_3642642169130640295[12] = 0;
   out_3642642169130640295[13] = 0;
   out_3642642169130640295[14] = 0;
   out_3642642169130640295[15] = 0;
   out_3642642169130640295[16] = 0;
   out_3642642169130640295[17] = 0;
   out_3642642169130640295[18] = 0;
   out_3642642169130640295[19] = 0;
   out_3642642169130640295[20] = 0;
   out_3642642169130640295[21] = 0;
   out_3642642169130640295[22] = 0;
   out_3642642169130640295[23] = 0;
   out_3642642169130640295[24] = 0;
   out_3642642169130640295[25] = 0;
   out_3642642169130640295[26] = 0;
   out_3642642169130640295[27] = 0;
   out_3642642169130640295[28] = 0;
   out_3642642169130640295[29] = 0;
   out_3642642169130640295[30] = 0;
   out_3642642169130640295[31] = 0;
   out_3642642169130640295[32] = 0;
   out_3642642169130640295[33] = 1;
   out_3642642169130640295[34] = 0;
   out_3642642169130640295[35] = 0;
   out_3642642169130640295[36] = 0;
   out_3642642169130640295[37] = 0;
   out_3642642169130640295[38] = 0;
   out_3642642169130640295[39] = 0;
   out_3642642169130640295[40] = 0;
   out_3642642169130640295[41] = 0;
   out_3642642169130640295[42] = 0;
   out_3642642169130640295[43] = 0;
   out_3642642169130640295[44] = 0;
   out_3642642169130640295[45] = 0;
   out_3642642169130640295[46] = 0;
   out_3642642169130640295[47] = 0;
   out_3642642169130640295[48] = 0;
   out_3642642169130640295[49] = 0;
   out_3642642169130640295[50] = 0;
   out_3642642169130640295[51] = 0;
   out_3642642169130640295[52] = 0;
   out_3642642169130640295[53] = 0;
   out_3642642169130640295[54] = 0;
   out_3642642169130640295[55] = 0;
   out_3642642169130640295[56] = 1;
   out_3642642169130640295[57] = 0;
   out_3642642169130640295[58] = 0;
   out_3642642169130640295[59] = 0;
   out_3642642169130640295[60] = 0;
   out_3642642169130640295[61] = 0;
   out_3642642169130640295[62] = 0;
   out_3642642169130640295[63] = 0;
   out_3642642169130640295[64] = 0;
   out_3642642169130640295[65] = 0;
}
void h_10(double *state, double *unused, double *out_8735021654464537930) {
   out_8735021654464537930[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8735021654464537930[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8735021654464537930[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4101816067727466940) {
   out_4101816067727466940[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4101816067727466940[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4101816067727466940[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4101816067727466940[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4101816067727466940[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4101816067727466940[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4101816067727466940[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4101816067727466940[7] = 0;
   out_4101816067727466940[8] = 0;
   out_4101816067727466940[9] = 0;
   out_4101816067727466940[10] = 0;
   out_4101816067727466940[11] = 0;
   out_4101816067727466940[12] = 0;
   out_4101816067727466940[13] = 0;
   out_4101816067727466940[14] = 0;
   out_4101816067727466940[15] = 0;
   out_4101816067727466940[16] = 1;
   out_4101816067727466940[17] = 0;
   out_4101816067727466940[18] = 0;
   out_4101816067727466940[19] = 1;
   out_4101816067727466940[20] = 0;
   out_4101816067727466940[21] = 0;
   out_4101816067727466940[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4101816067727466940[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4101816067727466940[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4101816067727466940[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4101816067727466940[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4101816067727466940[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4101816067727466940[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4101816067727466940[29] = 0;
   out_4101816067727466940[30] = 0;
   out_4101816067727466940[31] = 0;
   out_4101816067727466940[32] = 0;
   out_4101816067727466940[33] = 0;
   out_4101816067727466940[34] = 0;
   out_4101816067727466940[35] = 0;
   out_4101816067727466940[36] = 0;
   out_4101816067727466940[37] = 0;
   out_4101816067727466940[38] = 0;
   out_4101816067727466940[39] = 1;
   out_4101816067727466940[40] = 0;
   out_4101816067727466940[41] = 0;
   out_4101816067727466940[42] = 1;
   out_4101816067727466940[43] = 0;
   out_4101816067727466940[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4101816067727466940[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4101816067727466940[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4101816067727466940[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4101816067727466940[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4101816067727466940[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4101816067727466940[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4101816067727466940[51] = 0;
   out_4101816067727466940[52] = 0;
   out_4101816067727466940[53] = 0;
   out_4101816067727466940[54] = 0;
   out_4101816067727466940[55] = 0;
   out_4101816067727466940[56] = 0;
   out_4101816067727466940[57] = 0;
   out_4101816067727466940[58] = 0;
   out_4101816067727466940[59] = 0;
   out_4101816067727466940[60] = 0;
   out_4101816067727466940[61] = 0;
   out_4101816067727466940[62] = 1;
   out_4101816067727466940[63] = 0;
   out_4101816067727466940[64] = 0;
   out_4101816067727466940[65] = 1;
}
void h_12(double *state, double *unused, double *out_9004053566975742884) {
   out_9004053566975742884[0] = state[0];
   out_9004053566975742884[1] = state[1];
   out_9004053566975742884[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5910404696363125970) {
   out_5910404696363125970[0] = 1;
   out_5910404696363125970[1] = 0;
   out_5910404696363125970[2] = 0;
   out_5910404696363125970[3] = 0;
   out_5910404696363125970[4] = 0;
   out_5910404696363125970[5] = 0;
   out_5910404696363125970[6] = 0;
   out_5910404696363125970[7] = 0;
   out_5910404696363125970[8] = 0;
   out_5910404696363125970[9] = 0;
   out_5910404696363125970[10] = 0;
   out_5910404696363125970[11] = 0;
   out_5910404696363125970[12] = 0;
   out_5910404696363125970[13] = 0;
   out_5910404696363125970[14] = 0;
   out_5910404696363125970[15] = 0;
   out_5910404696363125970[16] = 0;
   out_5910404696363125970[17] = 0;
   out_5910404696363125970[18] = 0;
   out_5910404696363125970[19] = 0;
   out_5910404696363125970[20] = 0;
   out_5910404696363125970[21] = 0;
   out_5910404696363125970[22] = 0;
   out_5910404696363125970[23] = 1;
   out_5910404696363125970[24] = 0;
   out_5910404696363125970[25] = 0;
   out_5910404696363125970[26] = 0;
   out_5910404696363125970[27] = 0;
   out_5910404696363125970[28] = 0;
   out_5910404696363125970[29] = 0;
   out_5910404696363125970[30] = 0;
   out_5910404696363125970[31] = 0;
   out_5910404696363125970[32] = 0;
   out_5910404696363125970[33] = 0;
   out_5910404696363125970[34] = 0;
   out_5910404696363125970[35] = 0;
   out_5910404696363125970[36] = 0;
   out_5910404696363125970[37] = 0;
   out_5910404696363125970[38] = 0;
   out_5910404696363125970[39] = 0;
   out_5910404696363125970[40] = 0;
   out_5910404696363125970[41] = 0;
   out_5910404696363125970[42] = 0;
   out_5910404696363125970[43] = 0;
   out_5910404696363125970[44] = 0;
   out_5910404696363125970[45] = 0;
   out_5910404696363125970[46] = 1;
   out_5910404696363125970[47] = 0;
   out_5910404696363125970[48] = 0;
   out_5910404696363125970[49] = 0;
   out_5910404696363125970[50] = 0;
   out_5910404696363125970[51] = 0;
   out_5910404696363125970[52] = 0;
   out_5910404696363125970[53] = 0;
   out_5910404696363125970[54] = 0;
   out_5910404696363125970[55] = 0;
   out_5910404696363125970[56] = 0;
   out_5910404696363125970[57] = 0;
   out_5910404696363125970[58] = 0;
   out_5910404696363125970[59] = 0;
   out_5910404696363125970[60] = 0;
   out_5910404696363125970[61] = 0;
   out_5910404696363125970[62] = 0;
   out_5910404696363125970[63] = 0;
   out_5910404696363125970[64] = 0;
   out_5910404696363125970[65] = 0;
}
void h_35(double *state, double *unused, double *out_1252506222481224342) {
   out_1252506222481224342[0] = state[7];
   out_1252506222481224342[1] = state[8];
   out_1252506222481224342[2] = state[9];
}
void H_35(double *state, double *unused, double *out_7563199047022480389) {
   out_7563199047022480389[0] = 0;
   out_7563199047022480389[1] = 0;
   out_7563199047022480389[2] = 0;
   out_7563199047022480389[3] = 0;
   out_7563199047022480389[4] = 0;
   out_7563199047022480389[5] = 0;
   out_7563199047022480389[6] = 0;
   out_7563199047022480389[7] = 1;
   out_7563199047022480389[8] = 0;
   out_7563199047022480389[9] = 0;
   out_7563199047022480389[10] = 0;
   out_7563199047022480389[11] = 0;
   out_7563199047022480389[12] = 0;
   out_7563199047022480389[13] = 0;
   out_7563199047022480389[14] = 0;
   out_7563199047022480389[15] = 0;
   out_7563199047022480389[16] = 0;
   out_7563199047022480389[17] = 0;
   out_7563199047022480389[18] = 0;
   out_7563199047022480389[19] = 0;
   out_7563199047022480389[20] = 0;
   out_7563199047022480389[21] = 0;
   out_7563199047022480389[22] = 0;
   out_7563199047022480389[23] = 0;
   out_7563199047022480389[24] = 0;
   out_7563199047022480389[25] = 0;
   out_7563199047022480389[26] = 0;
   out_7563199047022480389[27] = 0;
   out_7563199047022480389[28] = 0;
   out_7563199047022480389[29] = 0;
   out_7563199047022480389[30] = 1;
   out_7563199047022480389[31] = 0;
   out_7563199047022480389[32] = 0;
   out_7563199047022480389[33] = 0;
   out_7563199047022480389[34] = 0;
   out_7563199047022480389[35] = 0;
   out_7563199047022480389[36] = 0;
   out_7563199047022480389[37] = 0;
   out_7563199047022480389[38] = 0;
   out_7563199047022480389[39] = 0;
   out_7563199047022480389[40] = 0;
   out_7563199047022480389[41] = 0;
   out_7563199047022480389[42] = 0;
   out_7563199047022480389[43] = 0;
   out_7563199047022480389[44] = 0;
   out_7563199047022480389[45] = 0;
   out_7563199047022480389[46] = 0;
   out_7563199047022480389[47] = 0;
   out_7563199047022480389[48] = 0;
   out_7563199047022480389[49] = 0;
   out_7563199047022480389[50] = 0;
   out_7563199047022480389[51] = 0;
   out_7563199047022480389[52] = 0;
   out_7563199047022480389[53] = 1;
   out_7563199047022480389[54] = 0;
   out_7563199047022480389[55] = 0;
   out_7563199047022480389[56] = 0;
   out_7563199047022480389[57] = 0;
   out_7563199047022480389[58] = 0;
   out_7563199047022480389[59] = 0;
   out_7563199047022480389[60] = 0;
   out_7563199047022480389[61] = 0;
   out_7563199047022480389[62] = 0;
   out_7563199047022480389[63] = 0;
   out_7563199047022480389[64] = 0;
   out_7563199047022480389[65] = 0;
}
void h_32(double *state, double *unused, double *out_7412726208206076971) {
   out_7412726208206076971[0] = state[3];
   out_7412726208206076971[1] = state[4];
   out_7412726208206076971[2] = state[5];
   out_7412726208206076971[3] = state[6];
}
void H_32(double *state, double *unused, double *out_9208038556733379991) {
   out_9208038556733379991[0] = 0;
   out_9208038556733379991[1] = 0;
   out_9208038556733379991[2] = 0;
   out_9208038556733379991[3] = 1;
   out_9208038556733379991[4] = 0;
   out_9208038556733379991[5] = 0;
   out_9208038556733379991[6] = 0;
   out_9208038556733379991[7] = 0;
   out_9208038556733379991[8] = 0;
   out_9208038556733379991[9] = 0;
   out_9208038556733379991[10] = 0;
   out_9208038556733379991[11] = 0;
   out_9208038556733379991[12] = 0;
   out_9208038556733379991[13] = 0;
   out_9208038556733379991[14] = 0;
   out_9208038556733379991[15] = 0;
   out_9208038556733379991[16] = 0;
   out_9208038556733379991[17] = 0;
   out_9208038556733379991[18] = 0;
   out_9208038556733379991[19] = 0;
   out_9208038556733379991[20] = 0;
   out_9208038556733379991[21] = 0;
   out_9208038556733379991[22] = 0;
   out_9208038556733379991[23] = 0;
   out_9208038556733379991[24] = 0;
   out_9208038556733379991[25] = 0;
   out_9208038556733379991[26] = 1;
   out_9208038556733379991[27] = 0;
   out_9208038556733379991[28] = 0;
   out_9208038556733379991[29] = 0;
   out_9208038556733379991[30] = 0;
   out_9208038556733379991[31] = 0;
   out_9208038556733379991[32] = 0;
   out_9208038556733379991[33] = 0;
   out_9208038556733379991[34] = 0;
   out_9208038556733379991[35] = 0;
   out_9208038556733379991[36] = 0;
   out_9208038556733379991[37] = 0;
   out_9208038556733379991[38] = 0;
   out_9208038556733379991[39] = 0;
   out_9208038556733379991[40] = 0;
   out_9208038556733379991[41] = 0;
   out_9208038556733379991[42] = 0;
   out_9208038556733379991[43] = 0;
   out_9208038556733379991[44] = 0;
   out_9208038556733379991[45] = 0;
   out_9208038556733379991[46] = 0;
   out_9208038556733379991[47] = 0;
   out_9208038556733379991[48] = 0;
   out_9208038556733379991[49] = 1;
   out_9208038556733379991[50] = 0;
   out_9208038556733379991[51] = 0;
   out_9208038556733379991[52] = 0;
   out_9208038556733379991[53] = 0;
   out_9208038556733379991[54] = 0;
   out_9208038556733379991[55] = 0;
   out_9208038556733379991[56] = 0;
   out_9208038556733379991[57] = 0;
   out_9208038556733379991[58] = 0;
   out_9208038556733379991[59] = 0;
   out_9208038556733379991[60] = 0;
   out_9208038556733379991[61] = 0;
   out_9208038556733379991[62] = 0;
   out_9208038556733379991[63] = 0;
   out_9208038556733379991[64] = 0;
   out_9208038556733379991[65] = 0;
   out_9208038556733379991[66] = 0;
   out_9208038556733379991[67] = 0;
   out_9208038556733379991[68] = 0;
   out_9208038556733379991[69] = 0;
   out_9208038556733379991[70] = 0;
   out_9208038556733379991[71] = 0;
   out_9208038556733379991[72] = 1;
   out_9208038556733379991[73] = 0;
   out_9208038556733379991[74] = 0;
   out_9208038556733379991[75] = 0;
   out_9208038556733379991[76] = 0;
   out_9208038556733379991[77] = 0;
   out_9208038556733379991[78] = 0;
   out_9208038556733379991[79] = 0;
   out_9208038556733379991[80] = 0;
   out_9208038556733379991[81] = 0;
   out_9208038556733379991[82] = 0;
   out_9208038556733379991[83] = 0;
   out_9208038556733379991[84] = 0;
   out_9208038556733379991[85] = 0;
   out_9208038556733379991[86] = 0;
   out_9208038556733379991[87] = 0;
}
void h_13(double *state, double *unused, double *out_424901821526808896) {
   out_424901821526808896[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_424901821526808896[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_424901821526808896[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1252880435933759057) {
   out_1252880435933759057[0] = 0;
   out_1252880435933759057[1] = 0;
   out_1252880435933759057[2] = 0;
   out_1252880435933759057[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1252880435933759057[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1252880435933759057[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1252880435933759057[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1252880435933759057[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1252880435933759057[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1252880435933759057[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1252880435933759057[10] = 0;
   out_1252880435933759057[11] = 0;
   out_1252880435933759057[12] = 0;
   out_1252880435933759057[13] = 0;
   out_1252880435933759057[14] = 0;
   out_1252880435933759057[15] = 0;
   out_1252880435933759057[16] = 0;
   out_1252880435933759057[17] = 0;
   out_1252880435933759057[18] = 0;
   out_1252880435933759057[19] = 0;
   out_1252880435933759057[20] = 0;
   out_1252880435933759057[21] = 0;
   out_1252880435933759057[22] = 0;
   out_1252880435933759057[23] = 0;
   out_1252880435933759057[24] = 0;
   out_1252880435933759057[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1252880435933759057[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1252880435933759057[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1252880435933759057[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1252880435933759057[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1252880435933759057[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1252880435933759057[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1252880435933759057[32] = 0;
   out_1252880435933759057[33] = 0;
   out_1252880435933759057[34] = 0;
   out_1252880435933759057[35] = 0;
   out_1252880435933759057[36] = 0;
   out_1252880435933759057[37] = 0;
   out_1252880435933759057[38] = 0;
   out_1252880435933759057[39] = 0;
   out_1252880435933759057[40] = 0;
   out_1252880435933759057[41] = 0;
   out_1252880435933759057[42] = 0;
   out_1252880435933759057[43] = 0;
   out_1252880435933759057[44] = 0;
   out_1252880435933759057[45] = 0;
   out_1252880435933759057[46] = 0;
   out_1252880435933759057[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1252880435933759057[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1252880435933759057[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1252880435933759057[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1252880435933759057[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1252880435933759057[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1252880435933759057[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1252880435933759057[54] = 0;
   out_1252880435933759057[55] = 0;
   out_1252880435933759057[56] = 0;
   out_1252880435933759057[57] = 0;
   out_1252880435933759057[58] = 0;
   out_1252880435933759057[59] = 0;
   out_1252880435933759057[60] = 0;
   out_1252880435933759057[61] = 0;
   out_1252880435933759057[62] = 0;
   out_1252880435933759057[63] = 0;
   out_1252880435933759057[64] = 0;
   out_1252880435933759057[65] = 0;
}
void h_14(double *state, double *unused, double *out_7335920442129178595) {
   out_7335920442129178595[0] = state[10];
   out_7335920442129178595[1] = state[11];
   out_7335920442129178595[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3642642169130640295) {
   out_3642642169130640295[0] = 0;
   out_3642642169130640295[1] = 0;
   out_3642642169130640295[2] = 0;
   out_3642642169130640295[3] = 0;
   out_3642642169130640295[4] = 0;
   out_3642642169130640295[5] = 0;
   out_3642642169130640295[6] = 0;
   out_3642642169130640295[7] = 0;
   out_3642642169130640295[8] = 0;
   out_3642642169130640295[9] = 0;
   out_3642642169130640295[10] = 1;
   out_3642642169130640295[11] = 0;
   out_3642642169130640295[12] = 0;
   out_3642642169130640295[13] = 0;
   out_3642642169130640295[14] = 0;
   out_3642642169130640295[15] = 0;
   out_3642642169130640295[16] = 0;
   out_3642642169130640295[17] = 0;
   out_3642642169130640295[18] = 0;
   out_3642642169130640295[19] = 0;
   out_3642642169130640295[20] = 0;
   out_3642642169130640295[21] = 0;
   out_3642642169130640295[22] = 0;
   out_3642642169130640295[23] = 0;
   out_3642642169130640295[24] = 0;
   out_3642642169130640295[25] = 0;
   out_3642642169130640295[26] = 0;
   out_3642642169130640295[27] = 0;
   out_3642642169130640295[28] = 0;
   out_3642642169130640295[29] = 0;
   out_3642642169130640295[30] = 0;
   out_3642642169130640295[31] = 0;
   out_3642642169130640295[32] = 0;
   out_3642642169130640295[33] = 1;
   out_3642642169130640295[34] = 0;
   out_3642642169130640295[35] = 0;
   out_3642642169130640295[36] = 0;
   out_3642642169130640295[37] = 0;
   out_3642642169130640295[38] = 0;
   out_3642642169130640295[39] = 0;
   out_3642642169130640295[40] = 0;
   out_3642642169130640295[41] = 0;
   out_3642642169130640295[42] = 0;
   out_3642642169130640295[43] = 0;
   out_3642642169130640295[44] = 0;
   out_3642642169130640295[45] = 0;
   out_3642642169130640295[46] = 0;
   out_3642642169130640295[47] = 0;
   out_3642642169130640295[48] = 0;
   out_3642642169130640295[49] = 0;
   out_3642642169130640295[50] = 0;
   out_3642642169130640295[51] = 0;
   out_3642642169130640295[52] = 0;
   out_3642642169130640295[53] = 0;
   out_3642642169130640295[54] = 0;
   out_3642642169130640295[55] = 0;
   out_3642642169130640295[56] = 1;
   out_3642642169130640295[57] = 0;
   out_3642642169130640295[58] = 0;
   out_3642642169130640295[59] = 0;
   out_3642642169130640295[60] = 0;
   out_3642642169130640295[61] = 0;
   out_3642642169130640295[62] = 0;
   out_3642642169130640295[63] = 0;
   out_3642642169130640295[64] = 0;
   out_3642642169130640295[65] = 0;
}
void h_33(double *state, double *unused, double *out_2509594196473349911) {
   out_2509594196473349911[0] = state[16];
   out_2509594196473349911[1] = state[17];
   out_2509594196473349911[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4412642042383622785) {
   out_4412642042383622785[0] = 0;
   out_4412642042383622785[1] = 0;
   out_4412642042383622785[2] = 0;
   out_4412642042383622785[3] = 0;
   out_4412642042383622785[4] = 0;
   out_4412642042383622785[5] = 0;
   out_4412642042383622785[6] = 0;
   out_4412642042383622785[7] = 0;
   out_4412642042383622785[8] = 0;
   out_4412642042383622785[9] = 0;
   out_4412642042383622785[10] = 0;
   out_4412642042383622785[11] = 0;
   out_4412642042383622785[12] = 0;
   out_4412642042383622785[13] = 0;
   out_4412642042383622785[14] = 0;
   out_4412642042383622785[15] = 0;
   out_4412642042383622785[16] = 1;
   out_4412642042383622785[17] = 0;
   out_4412642042383622785[18] = 0;
   out_4412642042383622785[19] = 0;
   out_4412642042383622785[20] = 0;
   out_4412642042383622785[21] = 0;
   out_4412642042383622785[22] = 0;
   out_4412642042383622785[23] = 0;
   out_4412642042383622785[24] = 0;
   out_4412642042383622785[25] = 0;
   out_4412642042383622785[26] = 0;
   out_4412642042383622785[27] = 0;
   out_4412642042383622785[28] = 0;
   out_4412642042383622785[29] = 0;
   out_4412642042383622785[30] = 0;
   out_4412642042383622785[31] = 0;
   out_4412642042383622785[32] = 0;
   out_4412642042383622785[33] = 0;
   out_4412642042383622785[34] = 0;
   out_4412642042383622785[35] = 0;
   out_4412642042383622785[36] = 0;
   out_4412642042383622785[37] = 0;
   out_4412642042383622785[38] = 0;
   out_4412642042383622785[39] = 1;
   out_4412642042383622785[40] = 0;
   out_4412642042383622785[41] = 0;
   out_4412642042383622785[42] = 0;
   out_4412642042383622785[43] = 0;
   out_4412642042383622785[44] = 0;
   out_4412642042383622785[45] = 0;
   out_4412642042383622785[46] = 0;
   out_4412642042383622785[47] = 0;
   out_4412642042383622785[48] = 0;
   out_4412642042383622785[49] = 0;
   out_4412642042383622785[50] = 0;
   out_4412642042383622785[51] = 0;
   out_4412642042383622785[52] = 0;
   out_4412642042383622785[53] = 0;
   out_4412642042383622785[54] = 0;
   out_4412642042383622785[55] = 0;
   out_4412642042383622785[56] = 0;
   out_4412642042383622785[57] = 0;
   out_4412642042383622785[58] = 0;
   out_4412642042383622785[59] = 0;
   out_4412642042383622785[60] = 0;
   out_4412642042383622785[61] = 0;
   out_4412642042383622785[62] = 1;
   out_4412642042383622785[63] = 0;
   out_4412642042383622785[64] = 0;
   out_4412642042383622785[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4410141019639958913) {
  H(in_vec, out_4410141019639958913);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4904440510055037559) {
  err_fun(nom_x, delta_x, out_4904440510055037559);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7489252523258488207) {
  inv_err_fun(nom_x, true_x, out_7489252523258488207);
}
void live_H_mod_fun(double *state, double *out_4628860677358369012) {
  H_mod_fun(state, out_4628860677358369012);
}
void live_f_fun(double *state, double dt, double *out_807369176605697005) {
  f_fun(state,  dt, out_807369176605697005);
}
void live_F_fun(double *state, double dt, double *out_6250696830602655270) {
  F_fun(state,  dt, out_6250696830602655270);
}
void live_h_4(double *state, double *unused, double *out_5294376663121993073) {
  h_4(state, unused, out_5294376663121993073);
}
void live_H_4(double *state, double *unused, double *out_7516882969314463851) {
  H_4(state, unused, out_7516882969314463851);
}
void live_h_9(double *state, double *unused, double *out_7335920442129178595) {
  h_9(state, unused, out_7335920442129178595);
}
void live_H_9(double *state, double *unused, double *out_3642642169130640295) {
  H_9(state, unused, out_3642642169130640295);
}
void live_h_10(double *state, double *unused, double *out_8735021654464537930) {
  h_10(state, unused, out_8735021654464537930);
}
void live_H_10(double *state, double *unused, double *out_4101816067727466940) {
  H_10(state, unused, out_4101816067727466940);
}
void live_h_12(double *state, double *unused, double *out_9004053566975742884) {
  h_12(state, unused, out_9004053566975742884);
}
void live_H_12(double *state, double *unused, double *out_5910404696363125970) {
  H_12(state, unused, out_5910404696363125970);
}
void live_h_35(double *state, double *unused, double *out_1252506222481224342) {
  h_35(state, unused, out_1252506222481224342);
}
void live_H_35(double *state, double *unused, double *out_7563199047022480389) {
  H_35(state, unused, out_7563199047022480389);
}
void live_h_32(double *state, double *unused, double *out_7412726208206076971) {
  h_32(state, unused, out_7412726208206076971);
}
void live_H_32(double *state, double *unused, double *out_9208038556733379991) {
  H_32(state, unused, out_9208038556733379991);
}
void live_h_13(double *state, double *unused, double *out_424901821526808896) {
  h_13(state, unused, out_424901821526808896);
}
void live_H_13(double *state, double *unused, double *out_1252880435933759057) {
  H_13(state, unused, out_1252880435933759057);
}
void live_h_14(double *state, double *unused, double *out_7335920442129178595) {
  h_14(state, unused, out_7335920442129178595);
}
void live_H_14(double *state, double *unused, double *out_3642642169130640295) {
  H_14(state, unused, out_3642642169130640295);
}
void live_h_33(double *state, double *unused, double *out_2509594196473349911) {
  h_33(state, unused, out_2509594196473349911);
}
void live_H_33(double *state, double *unused, double *out_4412642042383622785) {
  H_33(state, unused, out_4412642042383622785);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
