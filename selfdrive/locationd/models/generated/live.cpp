#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5086413656917943712) {
   out_5086413656917943712[0] = 0;
   out_5086413656917943712[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5086413656917943712[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5086413656917943712[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5086413656917943712[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5086413656917943712[5] = -sin(in_vec[1]);
   out_5086413656917943712[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5086413656917943712[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5086413656917943712[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5086413656917943712[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5086413656917943712[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5086413656917943712[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5086413656917943712[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5086413656917943712[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5086413656917943712[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5086413656917943712[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5086413656917943712[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5086413656917943712[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_6828972024740697023) {
   out_6828972024740697023[0] = delta_x[0] + nom_x[0];
   out_6828972024740697023[1] = delta_x[1] + nom_x[1];
   out_6828972024740697023[2] = delta_x[2] + nom_x[2];
   out_6828972024740697023[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_6828972024740697023[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_6828972024740697023[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_6828972024740697023[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_6828972024740697023[7] = delta_x[6] + nom_x[7];
   out_6828972024740697023[8] = delta_x[7] + nom_x[8];
   out_6828972024740697023[9] = delta_x[8] + nom_x[9];
   out_6828972024740697023[10] = delta_x[9] + nom_x[10];
   out_6828972024740697023[11] = delta_x[10] + nom_x[11];
   out_6828972024740697023[12] = delta_x[11] + nom_x[12];
   out_6828972024740697023[13] = delta_x[12] + nom_x[13];
   out_6828972024740697023[14] = delta_x[13] + nom_x[14];
   out_6828972024740697023[15] = delta_x[14] + nom_x[15];
   out_6828972024740697023[16] = delta_x[15] + nom_x[16];
   out_6828972024740697023[17] = delta_x[16] + nom_x[17];
   out_6828972024740697023[18] = delta_x[17] + nom_x[18];
   out_6828972024740697023[19] = delta_x[18] + nom_x[19];
   out_6828972024740697023[20] = delta_x[19] + nom_x[20];
   out_6828972024740697023[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7607392594418347599) {
   out_7607392594418347599[0] = -nom_x[0] + true_x[0];
   out_7607392594418347599[1] = -nom_x[1] + true_x[1];
   out_7607392594418347599[2] = -nom_x[2] + true_x[2];
   out_7607392594418347599[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7607392594418347599[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7607392594418347599[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7607392594418347599[6] = -nom_x[7] + true_x[7];
   out_7607392594418347599[7] = -nom_x[8] + true_x[8];
   out_7607392594418347599[8] = -nom_x[9] + true_x[9];
   out_7607392594418347599[9] = -nom_x[10] + true_x[10];
   out_7607392594418347599[10] = -nom_x[11] + true_x[11];
   out_7607392594418347599[11] = -nom_x[12] + true_x[12];
   out_7607392594418347599[12] = -nom_x[13] + true_x[13];
   out_7607392594418347599[13] = -nom_x[14] + true_x[14];
   out_7607392594418347599[14] = -nom_x[15] + true_x[15];
   out_7607392594418347599[15] = -nom_x[16] + true_x[16];
   out_7607392594418347599[16] = -nom_x[17] + true_x[17];
   out_7607392594418347599[17] = -nom_x[18] + true_x[18];
   out_7607392594418347599[18] = -nom_x[19] + true_x[19];
   out_7607392594418347599[19] = -nom_x[20] + true_x[20];
   out_7607392594418347599[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5071356901620681421) {
   out_5071356901620681421[0] = 1.0;
   out_5071356901620681421[1] = 0;
   out_5071356901620681421[2] = 0;
   out_5071356901620681421[3] = 0;
   out_5071356901620681421[4] = 0;
   out_5071356901620681421[5] = 0;
   out_5071356901620681421[6] = 0;
   out_5071356901620681421[7] = 0;
   out_5071356901620681421[8] = 0;
   out_5071356901620681421[9] = 0;
   out_5071356901620681421[10] = 0;
   out_5071356901620681421[11] = 0;
   out_5071356901620681421[12] = 0;
   out_5071356901620681421[13] = 0;
   out_5071356901620681421[14] = 0;
   out_5071356901620681421[15] = 0;
   out_5071356901620681421[16] = 0;
   out_5071356901620681421[17] = 0;
   out_5071356901620681421[18] = 0;
   out_5071356901620681421[19] = 0;
   out_5071356901620681421[20] = 0;
   out_5071356901620681421[21] = 0;
   out_5071356901620681421[22] = 1.0;
   out_5071356901620681421[23] = 0;
   out_5071356901620681421[24] = 0;
   out_5071356901620681421[25] = 0;
   out_5071356901620681421[26] = 0;
   out_5071356901620681421[27] = 0;
   out_5071356901620681421[28] = 0;
   out_5071356901620681421[29] = 0;
   out_5071356901620681421[30] = 0;
   out_5071356901620681421[31] = 0;
   out_5071356901620681421[32] = 0;
   out_5071356901620681421[33] = 0;
   out_5071356901620681421[34] = 0;
   out_5071356901620681421[35] = 0;
   out_5071356901620681421[36] = 0;
   out_5071356901620681421[37] = 0;
   out_5071356901620681421[38] = 0;
   out_5071356901620681421[39] = 0;
   out_5071356901620681421[40] = 0;
   out_5071356901620681421[41] = 0;
   out_5071356901620681421[42] = 0;
   out_5071356901620681421[43] = 0;
   out_5071356901620681421[44] = 1.0;
   out_5071356901620681421[45] = 0;
   out_5071356901620681421[46] = 0;
   out_5071356901620681421[47] = 0;
   out_5071356901620681421[48] = 0;
   out_5071356901620681421[49] = 0;
   out_5071356901620681421[50] = 0;
   out_5071356901620681421[51] = 0;
   out_5071356901620681421[52] = 0;
   out_5071356901620681421[53] = 0;
   out_5071356901620681421[54] = 0;
   out_5071356901620681421[55] = 0;
   out_5071356901620681421[56] = 0;
   out_5071356901620681421[57] = 0;
   out_5071356901620681421[58] = 0;
   out_5071356901620681421[59] = 0;
   out_5071356901620681421[60] = 0;
   out_5071356901620681421[61] = 0;
   out_5071356901620681421[62] = 0;
   out_5071356901620681421[63] = 0;
   out_5071356901620681421[64] = 0;
   out_5071356901620681421[65] = 0;
   out_5071356901620681421[66] = -0.5*state[4];
   out_5071356901620681421[67] = -0.5*state[5];
   out_5071356901620681421[68] = -0.5*state[6];
   out_5071356901620681421[69] = 0;
   out_5071356901620681421[70] = 0;
   out_5071356901620681421[71] = 0;
   out_5071356901620681421[72] = 0;
   out_5071356901620681421[73] = 0;
   out_5071356901620681421[74] = 0;
   out_5071356901620681421[75] = 0;
   out_5071356901620681421[76] = 0;
   out_5071356901620681421[77] = 0;
   out_5071356901620681421[78] = 0;
   out_5071356901620681421[79] = 0;
   out_5071356901620681421[80] = 0;
   out_5071356901620681421[81] = 0;
   out_5071356901620681421[82] = 0;
   out_5071356901620681421[83] = 0;
   out_5071356901620681421[84] = 0;
   out_5071356901620681421[85] = 0;
   out_5071356901620681421[86] = 0;
   out_5071356901620681421[87] = 0.5*state[3];
   out_5071356901620681421[88] = 0.5*state[6];
   out_5071356901620681421[89] = -0.5*state[5];
   out_5071356901620681421[90] = 0;
   out_5071356901620681421[91] = 0;
   out_5071356901620681421[92] = 0;
   out_5071356901620681421[93] = 0;
   out_5071356901620681421[94] = 0;
   out_5071356901620681421[95] = 0;
   out_5071356901620681421[96] = 0;
   out_5071356901620681421[97] = 0;
   out_5071356901620681421[98] = 0;
   out_5071356901620681421[99] = 0;
   out_5071356901620681421[100] = 0;
   out_5071356901620681421[101] = 0;
   out_5071356901620681421[102] = 0;
   out_5071356901620681421[103] = 0;
   out_5071356901620681421[104] = 0;
   out_5071356901620681421[105] = 0;
   out_5071356901620681421[106] = 0;
   out_5071356901620681421[107] = 0;
   out_5071356901620681421[108] = -0.5*state[6];
   out_5071356901620681421[109] = 0.5*state[3];
   out_5071356901620681421[110] = 0.5*state[4];
   out_5071356901620681421[111] = 0;
   out_5071356901620681421[112] = 0;
   out_5071356901620681421[113] = 0;
   out_5071356901620681421[114] = 0;
   out_5071356901620681421[115] = 0;
   out_5071356901620681421[116] = 0;
   out_5071356901620681421[117] = 0;
   out_5071356901620681421[118] = 0;
   out_5071356901620681421[119] = 0;
   out_5071356901620681421[120] = 0;
   out_5071356901620681421[121] = 0;
   out_5071356901620681421[122] = 0;
   out_5071356901620681421[123] = 0;
   out_5071356901620681421[124] = 0;
   out_5071356901620681421[125] = 0;
   out_5071356901620681421[126] = 0;
   out_5071356901620681421[127] = 0;
   out_5071356901620681421[128] = 0;
   out_5071356901620681421[129] = 0.5*state[5];
   out_5071356901620681421[130] = -0.5*state[4];
   out_5071356901620681421[131] = 0.5*state[3];
   out_5071356901620681421[132] = 0;
   out_5071356901620681421[133] = 0;
   out_5071356901620681421[134] = 0;
   out_5071356901620681421[135] = 0;
   out_5071356901620681421[136] = 0;
   out_5071356901620681421[137] = 0;
   out_5071356901620681421[138] = 0;
   out_5071356901620681421[139] = 0;
   out_5071356901620681421[140] = 0;
   out_5071356901620681421[141] = 0;
   out_5071356901620681421[142] = 0;
   out_5071356901620681421[143] = 0;
   out_5071356901620681421[144] = 0;
   out_5071356901620681421[145] = 0;
   out_5071356901620681421[146] = 0;
   out_5071356901620681421[147] = 0;
   out_5071356901620681421[148] = 0;
   out_5071356901620681421[149] = 0;
   out_5071356901620681421[150] = 0;
   out_5071356901620681421[151] = 0;
   out_5071356901620681421[152] = 0;
   out_5071356901620681421[153] = 1.0;
   out_5071356901620681421[154] = 0;
   out_5071356901620681421[155] = 0;
   out_5071356901620681421[156] = 0;
   out_5071356901620681421[157] = 0;
   out_5071356901620681421[158] = 0;
   out_5071356901620681421[159] = 0;
   out_5071356901620681421[160] = 0;
   out_5071356901620681421[161] = 0;
   out_5071356901620681421[162] = 0;
   out_5071356901620681421[163] = 0;
   out_5071356901620681421[164] = 0;
   out_5071356901620681421[165] = 0;
   out_5071356901620681421[166] = 0;
   out_5071356901620681421[167] = 0;
   out_5071356901620681421[168] = 0;
   out_5071356901620681421[169] = 0;
   out_5071356901620681421[170] = 0;
   out_5071356901620681421[171] = 0;
   out_5071356901620681421[172] = 0;
   out_5071356901620681421[173] = 0;
   out_5071356901620681421[174] = 0;
   out_5071356901620681421[175] = 1.0;
   out_5071356901620681421[176] = 0;
   out_5071356901620681421[177] = 0;
   out_5071356901620681421[178] = 0;
   out_5071356901620681421[179] = 0;
   out_5071356901620681421[180] = 0;
   out_5071356901620681421[181] = 0;
   out_5071356901620681421[182] = 0;
   out_5071356901620681421[183] = 0;
   out_5071356901620681421[184] = 0;
   out_5071356901620681421[185] = 0;
   out_5071356901620681421[186] = 0;
   out_5071356901620681421[187] = 0;
   out_5071356901620681421[188] = 0;
   out_5071356901620681421[189] = 0;
   out_5071356901620681421[190] = 0;
   out_5071356901620681421[191] = 0;
   out_5071356901620681421[192] = 0;
   out_5071356901620681421[193] = 0;
   out_5071356901620681421[194] = 0;
   out_5071356901620681421[195] = 0;
   out_5071356901620681421[196] = 0;
   out_5071356901620681421[197] = 1.0;
   out_5071356901620681421[198] = 0;
   out_5071356901620681421[199] = 0;
   out_5071356901620681421[200] = 0;
   out_5071356901620681421[201] = 0;
   out_5071356901620681421[202] = 0;
   out_5071356901620681421[203] = 0;
   out_5071356901620681421[204] = 0;
   out_5071356901620681421[205] = 0;
   out_5071356901620681421[206] = 0;
   out_5071356901620681421[207] = 0;
   out_5071356901620681421[208] = 0;
   out_5071356901620681421[209] = 0;
   out_5071356901620681421[210] = 0;
   out_5071356901620681421[211] = 0;
   out_5071356901620681421[212] = 0;
   out_5071356901620681421[213] = 0;
   out_5071356901620681421[214] = 0;
   out_5071356901620681421[215] = 0;
   out_5071356901620681421[216] = 0;
   out_5071356901620681421[217] = 0;
   out_5071356901620681421[218] = 0;
   out_5071356901620681421[219] = 1.0;
   out_5071356901620681421[220] = 0;
   out_5071356901620681421[221] = 0;
   out_5071356901620681421[222] = 0;
   out_5071356901620681421[223] = 0;
   out_5071356901620681421[224] = 0;
   out_5071356901620681421[225] = 0;
   out_5071356901620681421[226] = 0;
   out_5071356901620681421[227] = 0;
   out_5071356901620681421[228] = 0;
   out_5071356901620681421[229] = 0;
   out_5071356901620681421[230] = 0;
   out_5071356901620681421[231] = 0;
   out_5071356901620681421[232] = 0;
   out_5071356901620681421[233] = 0;
   out_5071356901620681421[234] = 0;
   out_5071356901620681421[235] = 0;
   out_5071356901620681421[236] = 0;
   out_5071356901620681421[237] = 0;
   out_5071356901620681421[238] = 0;
   out_5071356901620681421[239] = 0;
   out_5071356901620681421[240] = 0;
   out_5071356901620681421[241] = 1.0;
   out_5071356901620681421[242] = 0;
   out_5071356901620681421[243] = 0;
   out_5071356901620681421[244] = 0;
   out_5071356901620681421[245] = 0;
   out_5071356901620681421[246] = 0;
   out_5071356901620681421[247] = 0;
   out_5071356901620681421[248] = 0;
   out_5071356901620681421[249] = 0;
   out_5071356901620681421[250] = 0;
   out_5071356901620681421[251] = 0;
   out_5071356901620681421[252] = 0;
   out_5071356901620681421[253] = 0;
   out_5071356901620681421[254] = 0;
   out_5071356901620681421[255] = 0;
   out_5071356901620681421[256] = 0;
   out_5071356901620681421[257] = 0;
   out_5071356901620681421[258] = 0;
   out_5071356901620681421[259] = 0;
   out_5071356901620681421[260] = 0;
   out_5071356901620681421[261] = 0;
   out_5071356901620681421[262] = 0;
   out_5071356901620681421[263] = 1.0;
   out_5071356901620681421[264] = 0;
   out_5071356901620681421[265] = 0;
   out_5071356901620681421[266] = 0;
   out_5071356901620681421[267] = 0;
   out_5071356901620681421[268] = 0;
   out_5071356901620681421[269] = 0;
   out_5071356901620681421[270] = 0;
   out_5071356901620681421[271] = 0;
   out_5071356901620681421[272] = 0;
   out_5071356901620681421[273] = 0;
   out_5071356901620681421[274] = 0;
   out_5071356901620681421[275] = 0;
   out_5071356901620681421[276] = 0;
   out_5071356901620681421[277] = 0;
   out_5071356901620681421[278] = 0;
   out_5071356901620681421[279] = 0;
   out_5071356901620681421[280] = 0;
   out_5071356901620681421[281] = 0;
   out_5071356901620681421[282] = 0;
   out_5071356901620681421[283] = 0;
   out_5071356901620681421[284] = 0;
   out_5071356901620681421[285] = 1.0;
   out_5071356901620681421[286] = 0;
   out_5071356901620681421[287] = 0;
   out_5071356901620681421[288] = 0;
   out_5071356901620681421[289] = 0;
   out_5071356901620681421[290] = 0;
   out_5071356901620681421[291] = 0;
   out_5071356901620681421[292] = 0;
   out_5071356901620681421[293] = 0;
   out_5071356901620681421[294] = 0;
   out_5071356901620681421[295] = 0;
   out_5071356901620681421[296] = 0;
   out_5071356901620681421[297] = 0;
   out_5071356901620681421[298] = 0;
   out_5071356901620681421[299] = 0;
   out_5071356901620681421[300] = 0;
   out_5071356901620681421[301] = 0;
   out_5071356901620681421[302] = 0;
   out_5071356901620681421[303] = 0;
   out_5071356901620681421[304] = 0;
   out_5071356901620681421[305] = 0;
   out_5071356901620681421[306] = 0;
   out_5071356901620681421[307] = 1.0;
   out_5071356901620681421[308] = 0;
   out_5071356901620681421[309] = 0;
   out_5071356901620681421[310] = 0;
   out_5071356901620681421[311] = 0;
   out_5071356901620681421[312] = 0;
   out_5071356901620681421[313] = 0;
   out_5071356901620681421[314] = 0;
   out_5071356901620681421[315] = 0;
   out_5071356901620681421[316] = 0;
   out_5071356901620681421[317] = 0;
   out_5071356901620681421[318] = 0;
   out_5071356901620681421[319] = 0;
   out_5071356901620681421[320] = 0;
   out_5071356901620681421[321] = 0;
   out_5071356901620681421[322] = 0;
   out_5071356901620681421[323] = 0;
   out_5071356901620681421[324] = 0;
   out_5071356901620681421[325] = 0;
   out_5071356901620681421[326] = 0;
   out_5071356901620681421[327] = 0;
   out_5071356901620681421[328] = 0;
   out_5071356901620681421[329] = 1.0;
   out_5071356901620681421[330] = 0;
   out_5071356901620681421[331] = 0;
   out_5071356901620681421[332] = 0;
   out_5071356901620681421[333] = 0;
   out_5071356901620681421[334] = 0;
   out_5071356901620681421[335] = 0;
   out_5071356901620681421[336] = 0;
   out_5071356901620681421[337] = 0;
   out_5071356901620681421[338] = 0;
   out_5071356901620681421[339] = 0;
   out_5071356901620681421[340] = 0;
   out_5071356901620681421[341] = 0;
   out_5071356901620681421[342] = 0;
   out_5071356901620681421[343] = 0;
   out_5071356901620681421[344] = 0;
   out_5071356901620681421[345] = 0;
   out_5071356901620681421[346] = 0;
   out_5071356901620681421[347] = 0;
   out_5071356901620681421[348] = 0;
   out_5071356901620681421[349] = 0;
   out_5071356901620681421[350] = 0;
   out_5071356901620681421[351] = 1.0;
   out_5071356901620681421[352] = 0;
   out_5071356901620681421[353] = 0;
   out_5071356901620681421[354] = 0;
   out_5071356901620681421[355] = 0;
   out_5071356901620681421[356] = 0;
   out_5071356901620681421[357] = 0;
   out_5071356901620681421[358] = 0;
   out_5071356901620681421[359] = 0;
   out_5071356901620681421[360] = 0;
   out_5071356901620681421[361] = 0;
   out_5071356901620681421[362] = 0;
   out_5071356901620681421[363] = 0;
   out_5071356901620681421[364] = 0;
   out_5071356901620681421[365] = 0;
   out_5071356901620681421[366] = 0;
   out_5071356901620681421[367] = 0;
   out_5071356901620681421[368] = 0;
   out_5071356901620681421[369] = 0;
   out_5071356901620681421[370] = 0;
   out_5071356901620681421[371] = 0;
   out_5071356901620681421[372] = 0;
   out_5071356901620681421[373] = 1.0;
   out_5071356901620681421[374] = 0;
   out_5071356901620681421[375] = 0;
   out_5071356901620681421[376] = 0;
   out_5071356901620681421[377] = 0;
   out_5071356901620681421[378] = 0;
   out_5071356901620681421[379] = 0;
   out_5071356901620681421[380] = 0;
   out_5071356901620681421[381] = 0;
   out_5071356901620681421[382] = 0;
   out_5071356901620681421[383] = 0;
   out_5071356901620681421[384] = 0;
   out_5071356901620681421[385] = 0;
   out_5071356901620681421[386] = 0;
   out_5071356901620681421[387] = 0;
   out_5071356901620681421[388] = 0;
   out_5071356901620681421[389] = 0;
   out_5071356901620681421[390] = 0;
   out_5071356901620681421[391] = 0;
   out_5071356901620681421[392] = 0;
   out_5071356901620681421[393] = 0;
   out_5071356901620681421[394] = 0;
   out_5071356901620681421[395] = 1.0;
   out_5071356901620681421[396] = 0;
   out_5071356901620681421[397] = 0;
   out_5071356901620681421[398] = 0;
   out_5071356901620681421[399] = 0;
   out_5071356901620681421[400] = 0;
   out_5071356901620681421[401] = 0;
   out_5071356901620681421[402] = 0;
   out_5071356901620681421[403] = 0;
   out_5071356901620681421[404] = 0;
   out_5071356901620681421[405] = 0;
   out_5071356901620681421[406] = 0;
   out_5071356901620681421[407] = 0;
   out_5071356901620681421[408] = 0;
   out_5071356901620681421[409] = 0;
   out_5071356901620681421[410] = 0;
   out_5071356901620681421[411] = 0;
   out_5071356901620681421[412] = 0;
   out_5071356901620681421[413] = 0;
   out_5071356901620681421[414] = 0;
   out_5071356901620681421[415] = 0;
   out_5071356901620681421[416] = 0;
   out_5071356901620681421[417] = 1.0;
   out_5071356901620681421[418] = 0;
   out_5071356901620681421[419] = 0;
   out_5071356901620681421[420] = 0;
   out_5071356901620681421[421] = 0;
   out_5071356901620681421[422] = 0;
   out_5071356901620681421[423] = 0;
   out_5071356901620681421[424] = 0;
   out_5071356901620681421[425] = 0;
   out_5071356901620681421[426] = 0;
   out_5071356901620681421[427] = 0;
   out_5071356901620681421[428] = 0;
   out_5071356901620681421[429] = 0;
   out_5071356901620681421[430] = 0;
   out_5071356901620681421[431] = 0;
   out_5071356901620681421[432] = 0;
   out_5071356901620681421[433] = 0;
   out_5071356901620681421[434] = 0;
   out_5071356901620681421[435] = 0;
   out_5071356901620681421[436] = 0;
   out_5071356901620681421[437] = 0;
   out_5071356901620681421[438] = 0;
   out_5071356901620681421[439] = 1.0;
   out_5071356901620681421[440] = 0;
   out_5071356901620681421[441] = 0;
   out_5071356901620681421[442] = 0;
   out_5071356901620681421[443] = 0;
   out_5071356901620681421[444] = 0;
   out_5071356901620681421[445] = 0;
   out_5071356901620681421[446] = 0;
   out_5071356901620681421[447] = 0;
   out_5071356901620681421[448] = 0;
   out_5071356901620681421[449] = 0;
   out_5071356901620681421[450] = 0;
   out_5071356901620681421[451] = 0;
   out_5071356901620681421[452] = 0;
   out_5071356901620681421[453] = 0;
   out_5071356901620681421[454] = 0;
   out_5071356901620681421[455] = 0;
   out_5071356901620681421[456] = 0;
   out_5071356901620681421[457] = 0;
   out_5071356901620681421[458] = 0;
   out_5071356901620681421[459] = 0;
   out_5071356901620681421[460] = 0;
   out_5071356901620681421[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1376712267033620246) {
   out_1376712267033620246[0] = dt*state[7] + state[0];
   out_1376712267033620246[1] = dt*state[8] + state[1];
   out_1376712267033620246[2] = dt*state[9] + state[2];
   out_1376712267033620246[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1376712267033620246[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1376712267033620246[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1376712267033620246[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1376712267033620246[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1376712267033620246[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1376712267033620246[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1376712267033620246[10] = state[10];
   out_1376712267033620246[11] = state[11];
   out_1376712267033620246[12] = state[12];
   out_1376712267033620246[13] = state[13];
   out_1376712267033620246[14] = state[14];
   out_1376712267033620246[15] = state[15];
   out_1376712267033620246[16] = state[16];
   out_1376712267033620246[17] = state[17];
   out_1376712267033620246[18] = state[18];
   out_1376712267033620246[19] = state[19];
   out_1376712267033620246[20] = state[20];
   out_1376712267033620246[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3373826417569093809) {
   out_3373826417569093809[0] = 1;
   out_3373826417569093809[1] = 0;
   out_3373826417569093809[2] = 0;
   out_3373826417569093809[3] = 0;
   out_3373826417569093809[4] = 0;
   out_3373826417569093809[5] = 0;
   out_3373826417569093809[6] = dt;
   out_3373826417569093809[7] = 0;
   out_3373826417569093809[8] = 0;
   out_3373826417569093809[9] = 0;
   out_3373826417569093809[10] = 0;
   out_3373826417569093809[11] = 0;
   out_3373826417569093809[12] = 0;
   out_3373826417569093809[13] = 0;
   out_3373826417569093809[14] = 0;
   out_3373826417569093809[15] = 0;
   out_3373826417569093809[16] = 0;
   out_3373826417569093809[17] = 0;
   out_3373826417569093809[18] = 0;
   out_3373826417569093809[19] = 0;
   out_3373826417569093809[20] = 0;
   out_3373826417569093809[21] = 0;
   out_3373826417569093809[22] = 1;
   out_3373826417569093809[23] = 0;
   out_3373826417569093809[24] = 0;
   out_3373826417569093809[25] = 0;
   out_3373826417569093809[26] = 0;
   out_3373826417569093809[27] = 0;
   out_3373826417569093809[28] = dt;
   out_3373826417569093809[29] = 0;
   out_3373826417569093809[30] = 0;
   out_3373826417569093809[31] = 0;
   out_3373826417569093809[32] = 0;
   out_3373826417569093809[33] = 0;
   out_3373826417569093809[34] = 0;
   out_3373826417569093809[35] = 0;
   out_3373826417569093809[36] = 0;
   out_3373826417569093809[37] = 0;
   out_3373826417569093809[38] = 0;
   out_3373826417569093809[39] = 0;
   out_3373826417569093809[40] = 0;
   out_3373826417569093809[41] = 0;
   out_3373826417569093809[42] = 0;
   out_3373826417569093809[43] = 0;
   out_3373826417569093809[44] = 1;
   out_3373826417569093809[45] = 0;
   out_3373826417569093809[46] = 0;
   out_3373826417569093809[47] = 0;
   out_3373826417569093809[48] = 0;
   out_3373826417569093809[49] = 0;
   out_3373826417569093809[50] = dt;
   out_3373826417569093809[51] = 0;
   out_3373826417569093809[52] = 0;
   out_3373826417569093809[53] = 0;
   out_3373826417569093809[54] = 0;
   out_3373826417569093809[55] = 0;
   out_3373826417569093809[56] = 0;
   out_3373826417569093809[57] = 0;
   out_3373826417569093809[58] = 0;
   out_3373826417569093809[59] = 0;
   out_3373826417569093809[60] = 0;
   out_3373826417569093809[61] = 0;
   out_3373826417569093809[62] = 0;
   out_3373826417569093809[63] = 0;
   out_3373826417569093809[64] = 0;
   out_3373826417569093809[65] = 0;
   out_3373826417569093809[66] = 1;
   out_3373826417569093809[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3373826417569093809[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3373826417569093809[69] = 0;
   out_3373826417569093809[70] = 0;
   out_3373826417569093809[71] = 0;
   out_3373826417569093809[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3373826417569093809[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3373826417569093809[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3373826417569093809[75] = 0;
   out_3373826417569093809[76] = 0;
   out_3373826417569093809[77] = 0;
   out_3373826417569093809[78] = 0;
   out_3373826417569093809[79] = 0;
   out_3373826417569093809[80] = 0;
   out_3373826417569093809[81] = 0;
   out_3373826417569093809[82] = 0;
   out_3373826417569093809[83] = 0;
   out_3373826417569093809[84] = 0;
   out_3373826417569093809[85] = 0;
   out_3373826417569093809[86] = 0;
   out_3373826417569093809[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3373826417569093809[88] = 1;
   out_3373826417569093809[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3373826417569093809[90] = 0;
   out_3373826417569093809[91] = 0;
   out_3373826417569093809[92] = 0;
   out_3373826417569093809[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3373826417569093809[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3373826417569093809[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3373826417569093809[96] = 0;
   out_3373826417569093809[97] = 0;
   out_3373826417569093809[98] = 0;
   out_3373826417569093809[99] = 0;
   out_3373826417569093809[100] = 0;
   out_3373826417569093809[101] = 0;
   out_3373826417569093809[102] = 0;
   out_3373826417569093809[103] = 0;
   out_3373826417569093809[104] = 0;
   out_3373826417569093809[105] = 0;
   out_3373826417569093809[106] = 0;
   out_3373826417569093809[107] = 0;
   out_3373826417569093809[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3373826417569093809[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3373826417569093809[110] = 1;
   out_3373826417569093809[111] = 0;
   out_3373826417569093809[112] = 0;
   out_3373826417569093809[113] = 0;
   out_3373826417569093809[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3373826417569093809[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3373826417569093809[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3373826417569093809[117] = 0;
   out_3373826417569093809[118] = 0;
   out_3373826417569093809[119] = 0;
   out_3373826417569093809[120] = 0;
   out_3373826417569093809[121] = 0;
   out_3373826417569093809[122] = 0;
   out_3373826417569093809[123] = 0;
   out_3373826417569093809[124] = 0;
   out_3373826417569093809[125] = 0;
   out_3373826417569093809[126] = 0;
   out_3373826417569093809[127] = 0;
   out_3373826417569093809[128] = 0;
   out_3373826417569093809[129] = 0;
   out_3373826417569093809[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3373826417569093809[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3373826417569093809[132] = 1;
   out_3373826417569093809[133] = 0;
   out_3373826417569093809[134] = 0;
   out_3373826417569093809[135] = 0;
   out_3373826417569093809[136] = 0;
   out_3373826417569093809[137] = 0;
   out_3373826417569093809[138] = 0;
   out_3373826417569093809[139] = 0;
   out_3373826417569093809[140] = 0;
   out_3373826417569093809[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3373826417569093809[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3373826417569093809[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3373826417569093809[144] = 0;
   out_3373826417569093809[145] = 0;
   out_3373826417569093809[146] = 0;
   out_3373826417569093809[147] = 0;
   out_3373826417569093809[148] = 0;
   out_3373826417569093809[149] = 0;
   out_3373826417569093809[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3373826417569093809[151] = 0;
   out_3373826417569093809[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3373826417569093809[153] = 0;
   out_3373826417569093809[154] = 1;
   out_3373826417569093809[155] = 0;
   out_3373826417569093809[156] = 0;
   out_3373826417569093809[157] = 0;
   out_3373826417569093809[158] = 0;
   out_3373826417569093809[159] = 0;
   out_3373826417569093809[160] = 0;
   out_3373826417569093809[161] = 0;
   out_3373826417569093809[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3373826417569093809[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3373826417569093809[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3373826417569093809[165] = 0;
   out_3373826417569093809[166] = 0;
   out_3373826417569093809[167] = 0;
   out_3373826417569093809[168] = 0;
   out_3373826417569093809[169] = 0;
   out_3373826417569093809[170] = 0;
   out_3373826417569093809[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3373826417569093809[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3373826417569093809[173] = 0;
   out_3373826417569093809[174] = 0;
   out_3373826417569093809[175] = 0;
   out_3373826417569093809[176] = 1;
   out_3373826417569093809[177] = 0;
   out_3373826417569093809[178] = 0;
   out_3373826417569093809[179] = 0;
   out_3373826417569093809[180] = 0;
   out_3373826417569093809[181] = 0;
   out_3373826417569093809[182] = 0;
   out_3373826417569093809[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3373826417569093809[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3373826417569093809[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3373826417569093809[186] = 0;
   out_3373826417569093809[187] = 0;
   out_3373826417569093809[188] = 0;
   out_3373826417569093809[189] = 0;
   out_3373826417569093809[190] = 0;
   out_3373826417569093809[191] = 0;
   out_3373826417569093809[192] = 0;
   out_3373826417569093809[193] = 0;
   out_3373826417569093809[194] = 0;
   out_3373826417569093809[195] = 0;
   out_3373826417569093809[196] = 0;
   out_3373826417569093809[197] = 0;
   out_3373826417569093809[198] = 1;
   out_3373826417569093809[199] = 0;
   out_3373826417569093809[200] = 0;
   out_3373826417569093809[201] = 0;
   out_3373826417569093809[202] = 0;
   out_3373826417569093809[203] = 0;
   out_3373826417569093809[204] = 0;
   out_3373826417569093809[205] = 0;
   out_3373826417569093809[206] = 0;
   out_3373826417569093809[207] = 0;
   out_3373826417569093809[208] = 0;
   out_3373826417569093809[209] = 0;
   out_3373826417569093809[210] = 0;
   out_3373826417569093809[211] = 0;
   out_3373826417569093809[212] = 0;
   out_3373826417569093809[213] = 0;
   out_3373826417569093809[214] = 0;
   out_3373826417569093809[215] = 0;
   out_3373826417569093809[216] = 0;
   out_3373826417569093809[217] = 0;
   out_3373826417569093809[218] = 0;
   out_3373826417569093809[219] = 0;
   out_3373826417569093809[220] = 1;
   out_3373826417569093809[221] = 0;
   out_3373826417569093809[222] = 0;
   out_3373826417569093809[223] = 0;
   out_3373826417569093809[224] = 0;
   out_3373826417569093809[225] = 0;
   out_3373826417569093809[226] = 0;
   out_3373826417569093809[227] = 0;
   out_3373826417569093809[228] = 0;
   out_3373826417569093809[229] = 0;
   out_3373826417569093809[230] = 0;
   out_3373826417569093809[231] = 0;
   out_3373826417569093809[232] = 0;
   out_3373826417569093809[233] = 0;
   out_3373826417569093809[234] = 0;
   out_3373826417569093809[235] = 0;
   out_3373826417569093809[236] = 0;
   out_3373826417569093809[237] = 0;
   out_3373826417569093809[238] = 0;
   out_3373826417569093809[239] = 0;
   out_3373826417569093809[240] = 0;
   out_3373826417569093809[241] = 0;
   out_3373826417569093809[242] = 1;
   out_3373826417569093809[243] = 0;
   out_3373826417569093809[244] = 0;
   out_3373826417569093809[245] = 0;
   out_3373826417569093809[246] = 0;
   out_3373826417569093809[247] = 0;
   out_3373826417569093809[248] = 0;
   out_3373826417569093809[249] = 0;
   out_3373826417569093809[250] = 0;
   out_3373826417569093809[251] = 0;
   out_3373826417569093809[252] = 0;
   out_3373826417569093809[253] = 0;
   out_3373826417569093809[254] = 0;
   out_3373826417569093809[255] = 0;
   out_3373826417569093809[256] = 0;
   out_3373826417569093809[257] = 0;
   out_3373826417569093809[258] = 0;
   out_3373826417569093809[259] = 0;
   out_3373826417569093809[260] = 0;
   out_3373826417569093809[261] = 0;
   out_3373826417569093809[262] = 0;
   out_3373826417569093809[263] = 0;
   out_3373826417569093809[264] = 1;
   out_3373826417569093809[265] = 0;
   out_3373826417569093809[266] = 0;
   out_3373826417569093809[267] = 0;
   out_3373826417569093809[268] = 0;
   out_3373826417569093809[269] = 0;
   out_3373826417569093809[270] = 0;
   out_3373826417569093809[271] = 0;
   out_3373826417569093809[272] = 0;
   out_3373826417569093809[273] = 0;
   out_3373826417569093809[274] = 0;
   out_3373826417569093809[275] = 0;
   out_3373826417569093809[276] = 0;
   out_3373826417569093809[277] = 0;
   out_3373826417569093809[278] = 0;
   out_3373826417569093809[279] = 0;
   out_3373826417569093809[280] = 0;
   out_3373826417569093809[281] = 0;
   out_3373826417569093809[282] = 0;
   out_3373826417569093809[283] = 0;
   out_3373826417569093809[284] = 0;
   out_3373826417569093809[285] = 0;
   out_3373826417569093809[286] = 1;
   out_3373826417569093809[287] = 0;
   out_3373826417569093809[288] = 0;
   out_3373826417569093809[289] = 0;
   out_3373826417569093809[290] = 0;
   out_3373826417569093809[291] = 0;
   out_3373826417569093809[292] = 0;
   out_3373826417569093809[293] = 0;
   out_3373826417569093809[294] = 0;
   out_3373826417569093809[295] = 0;
   out_3373826417569093809[296] = 0;
   out_3373826417569093809[297] = 0;
   out_3373826417569093809[298] = 0;
   out_3373826417569093809[299] = 0;
   out_3373826417569093809[300] = 0;
   out_3373826417569093809[301] = 0;
   out_3373826417569093809[302] = 0;
   out_3373826417569093809[303] = 0;
   out_3373826417569093809[304] = 0;
   out_3373826417569093809[305] = 0;
   out_3373826417569093809[306] = 0;
   out_3373826417569093809[307] = 0;
   out_3373826417569093809[308] = 1;
   out_3373826417569093809[309] = 0;
   out_3373826417569093809[310] = 0;
   out_3373826417569093809[311] = 0;
   out_3373826417569093809[312] = 0;
   out_3373826417569093809[313] = 0;
   out_3373826417569093809[314] = 0;
   out_3373826417569093809[315] = 0;
   out_3373826417569093809[316] = 0;
   out_3373826417569093809[317] = 0;
   out_3373826417569093809[318] = 0;
   out_3373826417569093809[319] = 0;
   out_3373826417569093809[320] = 0;
   out_3373826417569093809[321] = 0;
   out_3373826417569093809[322] = 0;
   out_3373826417569093809[323] = 0;
   out_3373826417569093809[324] = 0;
   out_3373826417569093809[325] = 0;
   out_3373826417569093809[326] = 0;
   out_3373826417569093809[327] = 0;
   out_3373826417569093809[328] = 0;
   out_3373826417569093809[329] = 0;
   out_3373826417569093809[330] = 1;
   out_3373826417569093809[331] = 0;
   out_3373826417569093809[332] = 0;
   out_3373826417569093809[333] = 0;
   out_3373826417569093809[334] = 0;
   out_3373826417569093809[335] = 0;
   out_3373826417569093809[336] = 0;
   out_3373826417569093809[337] = 0;
   out_3373826417569093809[338] = 0;
   out_3373826417569093809[339] = 0;
   out_3373826417569093809[340] = 0;
   out_3373826417569093809[341] = 0;
   out_3373826417569093809[342] = 0;
   out_3373826417569093809[343] = 0;
   out_3373826417569093809[344] = 0;
   out_3373826417569093809[345] = 0;
   out_3373826417569093809[346] = 0;
   out_3373826417569093809[347] = 0;
   out_3373826417569093809[348] = 0;
   out_3373826417569093809[349] = 0;
   out_3373826417569093809[350] = 0;
   out_3373826417569093809[351] = 0;
   out_3373826417569093809[352] = 1;
   out_3373826417569093809[353] = 0;
   out_3373826417569093809[354] = 0;
   out_3373826417569093809[355] = 0;
   out_3373826417569093809[356] = 0;
   out_3373826417569093809[357] = 0;
   out_3373826417569093809[358] = 0;
   out_3373826417569093809[359] = 0;
   out_3373826417569093809[360] = 0;
   out_3373826417569093809[361] = 0;
   out_3373826417569093809[362] = 0;
   out_3373826417569093809[363] = 0;
   out_3373826417569093809[364] = 0;
   out_3373826417569093809[365] = 0;
   out_3373826417569093809[366] = 0;
   out_3373826417569093809[367] = 0;
   out_3373826417569093809[368] = 0;
   out_3373826417569093809[369] = 0;
   out_3373826417569093809[370] = 0;
   out_3373826417569093809[371] = 0;
   out_3373826417569093809[372] = 0;
   out_3373826417569093809[373] = 0;
   out_3373826417569093809[374] = 1;
   out_3373826417569093809[375] = 0;
   out_3373826417569093809[376] = 0;
   out_3373826417569093809[377] = 0;
   out_3373826417569093809[378] = 0;
   out_3373826417569093809[379] = 0;
   out_3373826417569093809[380] = 0;
   out_3373826417569093809[381] = 0;
   out_3373826417569093809[382] = 0;
   out_3373826417569093809[383] = 0;
   out_3373826417569093809[384] = 0;
   out_3373826417569093809[385] = 0;
   out_3373826417569093809[386] = 0;
   out_3373826417569093809[387] = 0;
   out_3373826417569093809[388] = 0;
   out_3373826417569093809[389] = 0;
   out_3373826417569093809[390] = 0;
   out_3373826417569093809[391] = 0;
   out_3373826417569093809[392] = 0;
   out_3373826417569093809[393] = 0;
   out_3373826417569093809[394] = 0;
   out_3373826417569093809[395] = 0;
   out_3373826417569093809[396] = 1;
   out_3373826417569093809[397] = 0;
   out_3373826417569093809[398] = 0;
   out_3373826417569093809[399] = 0;
   out_3373826417569093809[400] = 0;
   out_3373826417569093809[401] = 0;
   out_3373826417569093809[402] = 0;
   out_3373826417569093809[403] = 0;
   out_3373826417569093809[404] = 0;
   out_3373826417569093809[405] = 0;
   out_3373826417569093809[406] = 0;
   out_3373826417569093809[407] = 0;
   out_3373826417569093809[408] = 0;
   out_3373826417569093809[409] = 0;
   out_3373826417569093809[410] = 0;
   out_3373826417569093809[411] = 0;
   out_3373826417569093809[412] = 0;
   out_3373826417569093809[413] = 0;
   out_3373826417569093809[414] = 0;
   out_3373826417569093809[415] = 0;
   out_3373826417569093809[416] = 0;
   out_3373826417569093809[417] = 0;
   out_3373826417569093809[418] = 1;
   out_3373826417569093809[419] = 0;
   out_3373826417569093809[420] = 0;
   out_3373826417569093809[421] = 0;
   out_3373826417569093809[422] = 0;
   out_3373826417569093809[423] = 0;
   out_3373826417569093809[424] = 0;
   out_3373826417569093809[425] = 0;
   out_3373826417569093809[426] = 0;
   out_3373826417569093809[427] = 0;
   out_3373826417569093809[428] = 0;
   out_3373826417569093809[429] = 0;
   out_3373826417569093809[430] = 0;
   out_3373826417569093809[431] = 0;
   out_3373826417569093809[432] = 0;
   out_3373826417569093809[433] = 0;
   out_3373826417569093809[434] = 0;
   out_3373826417569093809[435] = 0;
   out_3373826417569093809[436] = 0;
   out_3373826417569093809[437] = 0;
   out_3373826417569093809[438] = 0;
   out_3373826417569093809[439] = 0;
   out_3373826417569093809[440] = 1;
}
void h_4(double *state, double *unused, double *out_8724356047512518892) {
   out_8724356047512518892[0] = state[10] + state[13];
   out_8724356047512518892[1] = state[11] + state[14];
   out_8724356047512518892[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_858355188531987823) {
   out_858355188531987823[0] = 0;
   out_858355188531987823[1] = 0;
   out_858355188531987823[2] = 0;
   out_858355188531987823[3] = 0;
   out_858355188531987823[4] = 0;
   out_858355188531987823[5] = 0;
   out_858355188531987823[6] = 0;
   out_858355188531987823[7] = 0;
   out_858355188531987823[8] = 0;
   out_858355188531987823[9] = 0;
   out_858355188531987823[10] = 1;
   out_858355188531987823[11] = 0;
   out_858355188531987823[12] = 0;
   out_858355188531987823[13] = 1;
   out_858355188531987823[14] = 0;
   out_858355188531987823[15] = 0;
   out_858355188531987823[16] = 0;
   out_858355188531987823[17] = 0;
   out_858355188531987823[18] = 0;
   out_858355188531987823[19] = 0;
   out_858355188531987823[20] = 0;
   out_858355188531987823[21] = 0;
   out_858355188531987823[22] = 0;
   out_858355188531987823[23] = 0;
   out_858355188531987823[24] = 0;
   out_858355188531987823[25] = 0;
   out_858355188531987823[26] = 0;
   out_858355188531987823[27] = 0;
   out_858355188531987823[28] = 0;
   out_858355188531987823[29] = 0;
   out_858355188531987823[30] = 0;
   out_858355188531987823[31] = 0;
   out_858355188531987823[32] = 0;
   out_858355188531987823[33] = 1;
   out_858355188531987823[34] = 0;
   out_858355188531987823[35] = 0;
   out_858355188531987823[36] = 1;
   out_858355188531987823[37] = 0;
   out_858355188531987823[38] = 0;
   out_858355188531987823[39] = 0;
   out_858355188531987823[40] = 0;
   out_858355188531987823[41] = 0;
   out_858355188531987823[42] = 0;
   out_858355188531987823[43] = 0;
   out_858355188531987823[44] = 0;
   out_858355188531987823[45] = 0;
   out_858355188531987823[46] = 0;
   out_858355188531987823[47] = 0;
   out_858355188531987823[48] = 0;
   out_858355188531987823[49] = 0;
   out_858355188531987823[50] = 0;
   out_858355188531987823[51] = 0;
   out_858355188531987823[52] = 0;
   out_858355188531987823[53] = 0;
   out_858355188531987823[54] = 0;
   out_858355188531987823[55] = 0;
   out_858355188531987823[56] = 1;
   out_858355188531987823[57] = 0;
   out_858355188531987823[58] = 0;
   out_858355188531987823[59] = 1;
   out_858355188531987823[60] = 0;
   out_858355188531987823[61] = 0;
   out_858355188531987823[62] = 0;
   out_858355188531987823[63] = 0;
   out_858355188531987823[64] = 0;
   out_858355188531987823[65] = 0;
}
void h_9(double *state, double *unused, double *out_5500855246081700134) {
   out_5500855246081700134[0] = state[10];
   out_5500855246081700134[1] = state[11];
   out_5500855246081700134[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6428863746732459647) {
   out_6428863746732459647[0] = 0;
   out_6428863746732459647[1] = 0;
   out_6428863746732459647[2] = 0;
   out_6428863746732459647[3] = 0;
   out_6428863746732459647[4] = 0;
   out_6428863746732459647[5] = 0;
   out_6428863746732459647[6] = 0;
   out_6428863746732459647[7] = 0;
   out_6428863746732459647[8] = 0;
   out_6428863746732459647[9] = 0;
   out_6428863746732459647[10] = 1;
   out_6428863746732459647[11] = 0;
   out_6428863746732459647[12] = 0;
   out_6428863746732459647[13] = 0;
   out_6428863746732459647[14] = 0;
   out_6428863746732459647[15] = 0;
   out_6428863746732459647[16] = 0;
   out_6428863746732459647[17] = 0;
   out_6428863746732459647[18] = 0;
   out_6428863746732459647[19] = 0;
   out_6428863746732459647[20] = 0;
   out_6428863746732459647[21] = 0;
   out_6428863746732459647[22] = 0;
   out_6428863746732459647[23] = 0;
   out_6428863746732459647[24] = 0;
   out_6428863746732459647[25] = 0;
   out_6428863746732459647[26] = 0;
   out_6428863746732459647[27] = 0;
   out_6428863746732459647[28] = 0;
   out_6428863746732459647[29] = 0;
   out_6428863746732459647[30] = 0;
   out_6428863746732459647[31] = 0;
   out_6428863746732459647[32] = 0;
   out_6428863746732459647[33] = 1;
   out_6428863746732459647[34] = 0;
   out_6428863746732459647[35] = 0;
   out_6428863746732459647[36] = 0;
   out_6428863746732459647[37] = 0;
   out_6428863746732459647[38] = 0;
   out_6428863746732459647[39] = 0;
   out_6428863746732459647[40] = 0;
   out_6428863746732459647[41] = 0;
   out_6428863746732459647[42] = 0;
   out_6428863746732459647[43] = 0;
   out_6428863746732459647[44] = 0;
   out_6428863746732459647[45] = 0;
   out_6428863746732459647[46] = 0;
   out_6428863746732459647[47] = 0;
   out_6428863746732459647[48] = 0;
   out_6428863746732459647[49] = 0;
   out_6428863746732459647[50] = 0;
   out_6428863746732459647[51] = 0;
   out_6428863746732459647[52] = 0;
   out_6428863746732459647[53] = 0;
   out_6428863746732459647[54] = 0;
   out_6428863746732459647[55] = 0;
   out_6428863746732459647[56] = 1;
   out_6428863746732459647[57] = 0;
   out_6428863746732459647[58] = 0;
   out_6428863746732459647[59] = 0;
   out_6428863746732459647[60] = 0;
   out_6428863746732459647[61] = 0;
   out_6428863746732459647[62] = 0;
   out_6428863746732459647[63] = 0;
   out_6428863746732459647[64] = 0;
   out_6428863746732459647[65] = 0;
}
void h_10(double *state, double *unused, double *out_4176498179202668975) {
   out_4176498179202668975[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4176498179202668975[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4176498179202668975[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2454728186240515128) {
   out_2454728186240515128[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2454728186240515128[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2454728186240515128[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2454728186240515128[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2454728186240515128[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2454728186240515128[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2454728186240515128[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2454728186240515128[7] = 0;
   out_2454728186240515128[8] = 0;
   out_2454728186240515128[9] = 0;
   out_2454728186240515128[10] = 0;
   out_2454728186240515128[11] = 0;
   out_2454728186240515128[12] = 0;
   out_2454728186240515128[13] = 0;
   out_2454728186240515128[14] = 0;
   out_2454728186240515128[15] = 0;
   out_2454728186240515128[16] = 1;
   out_2454728186240515128[17] = 0;
   out_2454728186240515128[18] = 0;
   out_2454728186240515128[19] = 1;
   out_2454728186240515128[20] = 0;
   out_2454728186240515128[21] = 0;
   out_2454728186240515128[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2454728186240515128[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2454728186240515128[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2454728186240515128[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2454728186240515128[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2454728186240515128[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2454728186240515128[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2454728186240515128[29] = 0;
   out_2454728186240515128[30] = 0;
   out_2454728186240515128[31] = 0;
   out_2454728186240515128[32] = 0;
   out_2454728186240515128[33] = 0;
   out_2454728186240515128[34] = 0;
   out_2454728186240515128[35] = 0;
   out_2454728186240515128[36] = 0;
   out_2454728186240515128[37] = 0;
   out_2454728186240515128[38] = 0;
   out_2454728186240515128[39] = 1;
   out_2454728186240515128[40] = 0;
   out_2454728186240515128[41] = 0;
   out_2454728186240515128[42] = 1;
   out_2454728186240515128[43] = 0;
   out_2454728186240515128[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2454728186240515128[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2454728186240515128[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2454728186240515128[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2454728186240515128[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2454728186240515128[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2454728186240515128[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2454728186240515128[51] = 0;
   out_2454728186240515128[52] = 0;
   out_2454728186240515128[53] = 0;
   out_2454728186240515128[54] = 0;
   out_2454728186240515128[55] = 0;
   out_2454728186240515128[56] = 0;
   out_2454728186240515128[57] = 0;
   out_2454728186240515128[58] = 0;
   out_2454728186240515128[59] = 0;
   out_2454728186240515128[60] = 0;
   out_2454728186240515128[61] = 0;
   out_2454728186240515128[62] = 1;
   out_2454728186240515128[63] = 0;
   out_2454728186240515128[64] = 0;
   out_2454728186240515128[65] = 1;
}
void h_12(double *state, double *unused, double *out_6398392321673203615) {
   out_6398392321673203615[0] = state[0];
   out_6398392321673203615[1] = state[1];
   out_6398392321673203615[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7239613565574720819) {
   out_7239613565574720819[0] = 1;
   out_7239613565574720819[1] = 0;
   out_7239613565574720819[2] = 0;
   out_7239613565574720819[3] = 0;
   out_7239613565574720819[4] = 0;
   out_7239613565574720819[5] = 0;
   out_7239613565574720819[6] = 0;
   out_7239613565574720819[7] = 0;
   out_7239613565574720819[8] = 0;
   out_7239613565574720819[9] = 0;
   out_7239613565574720819[10] = 0;
   out_7239613565574720819[11] = 0;
   out_7239613565574720819[12] = 0;
   out_7239613565574720819[13] = 0;
   out_7239613565574720819[14] = 0;
   out_7239613565574720819[15] = 0;
   out_7239613565574720819[16] = 0;
   out_7239613565574720819[17] = 0;
   out_7239613565574720819[18] = 0;
   out_7239613565574720819[19] = 0;
   out_7239613565574720819[20] = 0;
   out_7239613565574720819[21] = 0;
   out_7239613565574720819[22] = 0;
   out_7239613565574720819[23] = 1;
   out_7239613565574720819[24] = 0;
   out_7239613565574720819[25] = 0;
   out_7239613565574720819[26] = 0;
   out_7239613565574720819[27] = 0;
   out_7239613565574720819[28] = 0;
   out_7239613565574720819[29] = 0;
   out_7239613565574720819[30] = 0;
   out_7239613565574720819[31] = 0;
   out_7239613565574720819[32] = 0;
   out_7239613565574720819[33] = 0;
   out_7239613565574720819[34] = 0;
   out_7239613565574720819[35] = 0;
   out_7239613565574720819[36] = 0;
   out_7239613565574720819[37] = 0;
   out_7239613565574720819[38] = 0;
   out_7239613565574720819[39] = 0;
   out_7239613565574720819[40] = 0;
   out_7239613565574720819[41] = 0;
   out_7239613565574720819[42] = 0;
   out_7239613565574720819[43] = 0;
   out_7239613565574720819[44] = 0;
   out_7239613565574720819[45] = 0;
   out_7239613565574720819[46] = 1;
   out_7239613565574720819[47] = 0;
   out_7239613565574720819[48] = 0;
   out_7239613565574720819[49] = 0;
   out_7239613565574720819[50] = 0;
   out_7239613565574720819[51] = 0;
   out_7239613565574720819[52] = 0;
   out_7239613565574720819[53] = 0;
   out_7239613565574720819[54] = 0;
   out_7239613565574720819[55] = 0;
   out_7239613565574720819[56] = 0;
   out_7239613565574720819[57] = 0;
   out_7239613565574720819[58] = 0;
   out_7239613565574720819[59] = 0;
   out_7239613565574720819[60] = 0;
   out_7239613565574720819[61] = 0;
   out_7239613565574720819[62] = 0;
   out_7239613565574720819[63] = 0;
   out_7239613565574720819[64] = 0;
   out_7239613565574720819[65] = 0;
}
void h_35(double *state, double *unused, double *out_7831272672833159709) {
   out_7831272672833159709[0] = state[7];
   out_7831272672833159709[1] = state[8];
   out_7831272672833159709[2] = state[9];
}
void H_35(double *state, double *unused, double *out_4494050533249707110) {
   out_4494050533249707110[0] = 0;
   out_4494050533249707110[1] = 0;
   out_4494050533249707110[2] = 0;
   out_4494050533249707110[3] = 0;
   out_4494050533249707110[4] = 0;
   out_4494050533249707110[5] = 0;
   out_4494050533249707110[6] = 0;
   out_4494050533249707110[7] = 1;
   out_4494050533249707110[8] = 0;
   out_4494050533249707110[9] = 0;
   out_4494050533249707110[10] = 0;
   out_4494050533249707110[11] = 0;
   out_4494050533249707110[12] = 0;
   out_4494050533249707110[13] = 0;
   out_4494050533249707110[14] = 0;
   out_4494050533249707110[15] = 0;
   out_4494050533249707110[16] = 0;
   out_4494050533249707110[17] = 0;
   out_4494050533249707110[18] = 0;
   out_4494050533249707110[19] = 0;
   out_4494050533249707110[20] = 0;
   out_4494050533249707110[21] = 0;
   out_4494050533249707110[22] = 0;
   out_4494050533249707110[23] = 0;
   out_4494050533249707110[24] = 0;
   out_4494050533249707110[25] = 0;
   out_4494050533249707110[26] = 0;
   out_4494050533249707110[27] = 0;
   out_4494050533249707110[28] = 0;
   out_4494050533249707110[29] = 0;
   out_4494050533249707110[30] = 1;
   out_4494050533249707110[31] = 0;
   out_4494050533249707110[32] = 0;
   out_4494050533249707110[33] = 0;
   out_4494050533249707110[34] = 0;
   out_4494050533249707110[35] = 0;
   out_4494050533249707110[36] = 0;
   out_4494050533249707110[37] = 0;
   out_4494050533249707110[38] = 0;
   out_4494050533249707110[39] = 0;
   out_4494050533249707110[40] = 0;
   out_4494050533249707110[41] = 0;
   out_4494050533249707110[42] = 0;
   out_4494050533249707110[43] = 0;
   out_4494050533249707110[44] = 0;
   out_4494050533249707110[45] = 0;
   out_4494050533249707110[46] = 0;
   out_4494050533249707110[47] = 0;
   out_4494050533249707110[48] = 0;
   out_4494050533249707110[49] = 0;
   out_4494050533249707110[50] = 0;
   out_4494050533249707110[51] = 0;
   out_4494050533249707110[52] = 0;
   out_4494050533249707110[53] = 1;
   out_4494050533249707110[54] = 0;
   out_4494050533249707110[55] = 0;
   out_4494050533249707110[56] = 0;
   out_4494050533249707110[57] = 0;
   out_4494050533249707110[58] = 0;
   out_4494050533249707110[59] = 0;
   out_4494050533249707110[60] = 0;
   out_4494050533249707110[61] = 0;
   out_4494050533249707110[62] = 0;
   out_4494050533249707110[63] = 0;
   out_4494050533249707110[64] = 0;
   out_4494050533249707110[65] = 0;
}
void h_32(double *state, double *unused, double *out_220991653005734798) {
   out_220991653005734798[0] = state[3];
   out_220991653005734798[1] = state[4];
   out_220991653005734798[2] = state[5];
   out_220991653005734798[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2639471653781360022) {
   out_2639471653781360022[0] = 0;
   out_2639471653781360022[1] = 0;
   out_2639471653781360022[2] = 0;
   out_2639471653781360022[3] = 1;
   out_2639471653781360022[4] = 0;
   out_2639471653781360022[5] = 0;
   out_2639471653781360022[6] = 0;
   out_2639471653781360022[7] = 0;
   out_2639471653781360022[8] = 0;
   out_2639471653781360022[9] = 0;
   out_2639471653781360022[10] = 0;
   out_2639471653781360022[11] = 0;
   out_2639471653781360022[12] = 0;
   out_2639471653781360022[13] = 0;
   out_2639471653781360022[14] = 0;
   out_2639471653781360022[15] = 0;
   out_2639471653781360022[16] = 0;
   out_2639471653781360022[17] = 0;
   out_2639471653781360022[18] = 0;
   out_2639471653781360022[19] = 0;
   out_2639471653781360022[20] = 0;
   out_2639471653781360022[21] = 0;
   out_2639471653781360022[22] = 0;
   out_2639471653781360022[23] = 0;
   out_2639471653781360022[24] = 0;
   out_2639471653781360022[25] = 0;
   out_2639471653781360022[26] = 1;
   out_2639471653781360022[27] = 0;
   out_2639471653781360022[28] = 0;
   out_2639471653781360022[29] = 0;
   out_2639471653781360022[30] = 0;
   out_2639471653781360022[31] = 0;
   out_2639471653781360022[32] = 0;
   out_2639471653781360022[33] = 0;
   out_2639471653781360022[34] = 0;
   out_2639471653781360022[35] = 0;
   out_2639471653781360022[36] = 0;
   out_2639471653781360022[37] = 0;
   out_2639471653781360022[38] = 0;
   out_2639471653781360022[39] = 0;
   out_2639471653781360022[40] = 0;
   out_2639471653781360022[41] = 0;
   out_2639471653781360022[42] = 0;
   out_2639471653781360022[43] = 0;
   out_2639471653781360022[44] = 0;
   out_2639471653781360022[45] = 0;
   out_2639471653781360022[46] = 0;
   out_2639471653781360022[47] = 0;
   out_2639471653781360022[48] = 0;
   out_2639471653781360022[49] = 1;
   out_2639471653781360022[50] = 0;
   out_2639471653781360022[51] = 0;
   out_2639471653781360022[52] = 0;
   out_2639471653781360022[53] = 0;
   out_2639471653781360022[54] = 0;
   out_2639471653781360022[55] = 0;
   out_2639471653781360022[56] = 0;
   out_2639471653781360022[57] = 0;
   out_2639471653781360022[58] = 0;
   out_2639471653781360022[59] = 0;
   out_2639471653781360022[60] = 0;
   out_2639471653781360022[61] = 0;
   out_2639471653781360022[62] = 0;
   out_2639471653781360022[63] = 0;
   out_2639471653781360022[64] = 0;
   out_2639471653781360022[65] = 0;
   out_2639471653781360022[66] = 0;
   out_2639471653781360022[67] = 0;
   out_2639471653781360022[68] = 0;
   out_2639471653781360022[69] = 0;
   out_2639471653781360022[70] = 0;
   out_2639471653781360022[71] = 0;
   out_2639471653781360022[72] = 1;
   out_2639471653781360022[73] = 0;
   out_2639471653781360022[74] = 0;
   out_2639471653781360022[75] = 0;
   out_2639471653781360022[76] = 0;
   out_2639471653781360022[77] = 0;
   out_2639471653781360022[78] = 0;
   out_2639471653781360022[79] = 0;
   out_2639471653781360022[80] = 0;
   out_2639471653781360022[81] = 0;
   out_2639471653781360022[82] = 0;
   out_2639471653781360022[83] = 0;
   out_2639471653781360022[84] = 0;
   out_2639471653781360022[85] = 0;
   out_2639471653781360022[86] = 0;
   out_2639471653781360022[87] = 0;
}
void h_13(double *state, double *unused, double *out_8289654384604994447) {
   out_8289654384604994447[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8289654384604994447[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8289654384604994447[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_3809186682697652904) {
   out_3809186682697652904[0] = 0;
   out_3809186682697652904[1] = 0;
   out_3809186682697652904[2] = 0;
   out_3809186682697652904[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3809186682697652904[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3809186682697652904[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_3809186682697652904[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3809186682697652904[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_3809186682697652904[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_3809186682697652904[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_3809186682697652904[10] = 0;
   out_3809186682697652904[11] = 0;
   out_3809186682697652904[12] = 0;
   out_3809186682697652904[13] = 0;
   out_3809186682697652904[14] = 0;
   out_3809186682697652904[15] = 0;
   out_3809186682697652904[16] = 0;
   out_3809186682697652904[17] = 0;
   out_3809186682697652904[18] = 0;
   out_3809186682697652904[19] = 0;
   out_3809186682697652904[20] = 0;
   out_3809186682697652904[21] = 0;
   out_3809186682697652904[22] = 0;
   out_3809186682697652904[23] = 0;
   out_3809186682697652904[24] = 0;
   out_3809186682697652904[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3809186682697652904[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3809186682697652904[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3809186682697652904[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_3809186682697652904[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_3809186682697652904[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_3809186682697652904[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_3809186682697652904[32] = 0;
   out_3809186682697652904[33] = 0;
   out_3809186682697652904[34] = 0;
   out_3809186682697652904[35] = 0;
   out_3809186682697652904[36] = 0;
   out_3809186682697652904[37] = 0;
   out_3809186682697652904[38] = 0;
   out_3809186682697652904[39] = 0;
   out_3809186682697652904[40] = 0;
   out_3809186682697652904[41] = 0;
   out_3809186682697652904[42] = 0;
   out_3809186682697652904[43] = 0;
   out_3809186682697652904[44] = 0;
   out_3809186682697652904[45] = 0;
   out_3809186682697652904[46] = 0;
   out_3809186682697652904[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3809186682697652904[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_3809186682697652904[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3809186682697652904[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3809186682697652904[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_3809186682697652904[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_3809186682697652904[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_3809186682697652904[54] = 0;
   out_3809186682697652904[55] = 0;
   out_3809186682697652904[56] = 0;
   out_3809186682697652904[57] = 0;
   out_3809186682697652904[58] = 0;
   out_3809186682697652904[59] = 0;
   out_3809186682697652904[60] = 0;
   out_3809186682697652904[61] = 0;
   out_3809186682697652904[62] = 0;
   out_3809186682697652904[63] = 0;
   out_3809186682697652904[64] = 0;
   out_3809186682697652904[65] = 0;
}
void h_14(double *state, double *unused, double *out_5500855246081700134) {
   out_5500855246081700134[0] = state[10];
   out_5500855246081700134[1] = state[11];
   out_5500855246081700134[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6428863746732459647) {
   out_6428863746732459647[0] = 0;
   out_6428863746732459647[1] = 0;
   out_6428863746732459647[2] = 0;
   out_6428863746732459647[3] = 0;
   out_6428863746732459647[4] = 0;
   out_6428863746732459647[5] = 0;
   out_6428863746732459647[6] = 0;
   out_6428863746732459647[7] = 0;
   out_6428863746732459647[8] = 0;
   out_6428863746732459647[9] = 0;
   out_6428863746732459647[10] = 1;
   out_6428863746732459647[11] = 0;
   out_6428863746732459647[12] = 0;
   out_6428863746732459647[13] = 0;
   out_6428863746732459647[14] = 0;
   out_6428863746732459647[15] = 0;
   out_6428863746732459647[16] = 0;
   out_6428863746732459647[17] = 0;
   out_6428863746732459647[18] = 0;
   out_6428863746732459647[19] = 0;
   out_6428863746732459647[20] = 0;
   out_6428863746732459647[21] = 0;
   out_6428863746732459647[22] = 0;
   out_6428863746732459647[23] = 0;
   out_6428863746732459647[24] = 0;
   out_6428863746732459647[25] = 0;
   out_6428863746732459647[26] = 0;
   out_6428863746732459647[27] = 0;
   out_6428863746732459647[28] = 0;
   out_6428863746732459647[29] = 0;
   out_6428863746732459647[30] = 0;
   out_6428863746732459647[31] = 0;
   out_6428863746732459647[32] = 0;
   out_6428863746732459647[33] = 1;
   out_6428863746732459647[34] = 0;
   out_6428863746732459647[35] = 0;
   out_6428863746732459647[36] = 0;
   out_6428863746732459647[37] = 0;
   out_6428863746732459647[38] = 0;
   out_6428863746732459647[39] = 0;
   out_6428863746732459647[40] = 0;
   out_6428863746732459647[41] = 0;
   out_6428863746732459647[42] = 0;
   out_6428863746732459647[43] = 0;
   out_6428863746732459647[44] = 0;
   out_6428863746732459647[45] = 0;
   out_6428863746732459647[46] = 0;
   out_6428863746732459647[47] = 0;
   out_6428863746732459647[48] = 0;
   out_6428863746732459647[49] = 0;
   out_6428863746732459647[50] = 0;
   out_6428863746732459647[51] = 0;
   out_6428863746732459647[52] = 0;
   out_6428863746732459647[53] = 0;
   out_6428863746732459647[54] = 0;
   out_6428863746732459647[55] = 0;
   out_6428863746732459647[56] = 1;
   out_6428863746732459647[57] = 0;
   out_6428863746732459647[58] = 0;
   out_6428863746732459647[59] = 0;
   out_6428863746732459647[60] = 0;
   out_6428863746732459647[61] = 0;
   out_6428863746732459647[62] = 0;
   out_6428863746732459647[63] = 0;
   out_6428863746732459647[64] = 0;
   out_6428863746732459647[65] = 0;
}
void h_33(double *state, double *unused, double *out_6464678913645690468) {
   out_6464678913645690468[0] = state[16];
   out_6464678913645690468[1] = state[17];
   out_6464678913645690468[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1343493528610849506) {
   out_1343493528610849506[0] = 0;
   out_1343493528610849506[1] = 0;
   out_1343493528610849506[2] = 0;
   out_1343493528610849506[3] = 0;
   out_1343493528610849506[4] = 0;
   out_1343493528610849506[5] = 0;
   out_1343493528610849506[6] = 0;
   out_1343493528610849506[7] = 0;
   out_1343493528610849506[8] = 0;
   out_1343493528610849506[9] = 0;
   out_1343493528610849506[10] = 0;
   out_1343493528610849506[11] = 0;
   out_1343493528610849506[12] = 0;
   out_1343493528610849506[13] = 0;
   out_1343493528610849506[14] = 0;
   out_1343493528610849506[15] = 0;
   out_1343493528610849506[16] = 1;
   out_1343493528610849506[17] = 0;
   out_1343493528610849506[18] = 0;
   out_1343493528610849506[19] = 0;
   out_1343493528610849506[20] = 0;
   out_1343493528610849506[21] = 0;
   out_1343493528610849506[22] = 0;
   out_1343493528610849506[23] = 0;
   out_1343493528610849506[24] = 0;
   out_1343493528610849506[25] = 0;
   out_1343493528610849506[26] = 0;
   out_1343493528610849506[27] = 0;
   out_1343493528610849506[28] = 0;
   out_1343493528610849506[29] = 0;
   out_1343493528610849506[30] = 0;
   out_1343493528610849506[31] = 0;
   out_1343493528610849506[32] = 0;
   out_1343493528610849506[33] = 0;
   out_1343493528610849506[34] = 0;
   out_1343493528610849506[35] = 0;
   out_1343493528610849506[36] = 0;
   out_1343493528610849506[37] = 0;
   out_1343493528610849506[38] = 0;
   out_1343493528610849506[39] = 1;
   out_1343493528610849506[40] = 0;
   out_1343493528610849506[41] = 0;
   out_1343493528610849506[42] = 0;
   out_1343493528610849506[43] = 0;
   out_1343493528610849506[44] = 0;
   out_1343493528610849506[45] = 0;
   out_1343493528610849506[46] = 0;
   out_1343493528610849506[47] = 0;
   out_1343493528610849506[48] = 0;
   out_1343493528610849506[49] = 0;
   out_1343493528610849506[50] = 0;
   out_1343493528610849506[51] = 0;
   out_1343493528610849506[52] = 0;
   out_1343493528610849506[53] = 0;
   out_1343493528610849506[54] = 0;
   out_1343493528610849506[55] = 0;
   out_1343493528610849506[56] = 0;
   out_1343493528610849506[57] = 0;
   out_1343493528610849506[58] = 0;
   out_1343493528610849506[59] = 0;
   out_1343493528610849506[60] = 0;
   out_1343493528610849506[61] = 0;
   out_1343493528610849506[62] = 1;
   out_1343493528610849506[63] = 0;
   out_1343493528610849506[64] = 0;
   out_1343493528610849506[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5086413656917943712) {
  H(in_vec, out_5086413656917943712);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_6828972024740697023) {
  err_fun(nom_x, delta_x, out_6828972024740697023);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7607392594418347599) {
  inv_err_fun(nom_x, true_x, out_7607392594418347599);
}
void live_H_mod_fun(double *state, double *out_5071356901620681421) {
  H_mod_fun(state, out_5071356901620681421);
}
void live_f_fun(double *state, double dt, double *out_1376712267033620246) {
  f_fun(state,  dt, out_1376712267033620246);
}
void live_F_fun(double *state, double dt, double *out_3373826417569093809) {
  F_fun(state,  dt, out_3373826417569093809);
}
void live_h_4(double *state, double *unused, double *out_8724356047512518892) {
  h_4(state, unused, out_8724356047512518892);
}
void live_H_4(double *state, double *unused, double *out_858355188531987823) {
  H_4(state, unused, out_858355188531987823);
}
void live_h_9(double *state, double *unused, double *out_5500855246081700134) {
  h_9(state, unused, out_5500855246081700134);
}
void live_H_9(double *state, double *unused, double *out_6428863746732459647) {
  H_9(state, unused, out_6428863746732459647);
}
void live_h_10(double *state, double *unused, double *out_4176498179202668975) {
  h_10(state, unused, out_4176498179202668975);
}
void live_H_10(double *state, double *unused, double *out_2454728186240515128) {
  H_10(state, unused, out_2454728186240515128);
}
void live_h_12(double *state, double *unused, double *out_6398392321673203615) {
  h_12(state, unused, out_6398392321673203615);
}
void live_H_12(double *state, double *unused, double *out_7239613565574720819) {
  H_12(state, unused, out_7239613565574720819);
}
void live_h_35(double *state, double *unused, double *out_7831272672833159709) {
  h_35(state, unused, out_7831272672833159709);
}
void live_H_35(double *state, double *unused, double *out_4494050533249707110) {
  H_35(state, unused, out_4494050533249707110);
}
void live_h_32(double *state, double *unused, double *out_220991653005734798) {
  h_32(state, unused, out_220991653005734798);
}
void live_H_32(double *state, double *unused, double *out_2639471653781360022) {
  H_32(state, unused, out_2639471653781360022);
}
void live_h_13(double *state, double *unused, double *out_8289654384604994447) {
  h_13(state, unused, out_8289654384604994447);
}
void live_H_13(double *state, double *unused, double *out_3809186682697652904) {
  H_13(state, unused, out_3809186682697652904);
}
void live_h_14(double *state, double *unused, double *out_5500855246081700134) {
  h_14(state, unused, out_5500855246081700134);
}
void live_H_14(double *state, double *unused, double *out_6428863746732459647) {
  H_14(state, unused, out_6428863746732459647);
}
void live_h_33(double *state, double *unused, double *out_6464678913645690468) {
  h_33(state, unused, out_6464678913645690468);
}
void live_H_33(double *state, double *unused, double *out_1343493528610849506) {
  H_33(state, unused, out_1343493528610849506);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
