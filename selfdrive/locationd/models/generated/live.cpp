#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3622414979086600865) {
   out_3622414979086600865[0] = 0;
   out_3622414979086600865[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3622414979086600865[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3622414979086600865[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3622414979086600865[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3622414979086600865[5] = -sin(in_vec[1]);
   out_3622414979086600865[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3622414979086600865[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3622414979086600865[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3622414979086600865[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3622414979086600865[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3622414979086600865[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3622414979086600865[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3622414979086600865[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3622414979086600865[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3622414979086600865[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3622414979086600865[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3622414979086600865[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_38797295725815433) {
   out_38797295725815433[0] = delta_x[0] + nom_x[0];
   out_38797295725815433[1] = delta_x[1] + nom_x[1];
   out_38797295725815433[2] = delta_x[2] + nom_x[2];
   out_38797295725815433[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_38797295725815433[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_38797295725815433[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_38797295725815433[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_38797295725815433[7] = delta_x[6] + nom_x[7];
   out_38797295725815433[8] = delta_x[7] + nom_x[8];
   out_38797295725815433[9] = delta_x[8] + nom_x[9];
   out_38797295725815433[10] = delta_x[9] + nom_x[10];
   out_38797295725815433[11] = delta_x[10] + nom_x[11];
   out_38797295725815433[12] = delta_x[11] + nom_x[12];
   out_38797295725815433[13] = delta_x[12] + nom_x[13];
   out_38797295725815433[14] = delta_x[13] + nom_x[14];
   out_38797295725815433[15] = delta_x[14] + nom_x[15];
   out_38797295725815433[16] = delta_x[15] + nom_x[16];
   out_38797295725815433[17] = delta_x[16] + nom_x[17];
   out_38797295725815433[18] = delta_x[17] + nom_x[18];
   out_38797295725815433[19] = delta_x[18] + nom_x[19];
   out_38797295725815433[20] = delta_x[19] + nom_x[20];
   out_38797295725815433[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_325556698482470826) {
   out_325556698482470826[0] = -nom_x[0] + true_x[0];
   out_325556698482470826[1] = -nom_x[1] + true_x[1];
   out_325556698482470826[2] = -nom_x[2] + true_x[2];
   out_325556698482470826[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_325556698482470826[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_325556698482470826[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_325556698482470826[6] = -nom_x[7] + true_x[7];
   out_325556698482470826[7] = -nom_x[8] + true_x[8];
   out_325556698482470826[8] = -nom_x[9] + true_x[9];
   out_325556698482470826[9] = -nom_x[10] + true_x[10];
   out_325556698482470826[10] = -nom_x[11] + true_x[11];
   out_325556698482470826[11] = -nom_x[12] + true_x[12];
   out_325556698482470826[12] = -nom_x[13] + true_x[13];
   out_325556698482470826[13] = -nom_x[14] + true_x[14];
   out_325556698482470826[14] = -nom_x[15] + true_x[15];
   out_325556698482470826[15] = -nom_x[16] + true_x[16];
   out_325556698482470826[16] = -nom_x[17] + true_x[17];
   out_325556698482470826[17] = -nom_x[18] + true_x[18];
   out_325556698482470826[18] = -nom_x[19] + true_x[19];
   out_325556698482470826[19] = -nom_x[20] + true_x[20];
   out_325556698482470826[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8062570676317398071) {
   out_8062570676317398071[0] = 1.0;
   out_8062570676317398071[1] = 0;
   out_8062570676317398071[2] = 0;
   out_8062570676317398071[3] = 0;
   out_8062570676317398071[4] = 0;
   out_8062570676317398071[5] = 0;
   out_8062570676317398071[6] = 0;
   out_8062570676317398071[7] = 0;
   out_8062570676317398071[8] = 0;
   out_8062570676317398071[9] = 0;
   out_8062570676317398071[10] = 0;
   out_8062570676317398071[11] = 0;
   out_8062570676317398071[12] = 0;
   out_8062570676317398071[13] = 0;
   out_8062570676317398071[14] = 0;
   out_8062570676317398071[15] = 0;
   out_8062570676317398071[16] = 0;
   out_8062570676317398071[17] = 0;
   out_8062570676317398071[18] = 0;
   out_8062570676317398071[19] = 0;
   out_8062570676317398071[20] = 0;
   out_8062570676317398071[21] = 0;
   out_8062570676317398071[22] = 1.0;
   out_8062570676317398071[23] = 0;
   out_8062570676317398071[24] = 0;
   out_8062570676317398071[25] = 0;
   out_8062570676317398071[26] = 0;
   out_8062570676317398071[27] = 0;
   out_8062570676317398071[28] = 0;
   out_8062570676317398071[29] = 0;
   out_8062570676317398071[30] = 0;
   out_8062570676317398071[31] = 0;
   out_8062570676317398071[32] = 0;
   out_8062570676317398071[33] = 0;
   out_8062570676317398071[34] = 0;
   out_8062570676317398071[35] = 0;
   out_8062570676317398071[36] = 0;
   out_8062570676317398071[37] = 0;
   out_8062570676317398071[38] = 0;
   out_8062570676317398071[39] = 0;
   out_8062570676317398071[40] = 0;
   out_8062570676317398071[41] = 0;
   out_8062570676317398071[42] = 0;
   out_8062570676317398071[43] = 0;
   out_8062570676317398071[44] = 1.0;
   out_8062570676317398071[45] = 0;
   out_8062570676317398071[46] = 0;
   out_8062570676317398071[47] = 0;
   out_8062570676317398071[48] = 0;
   out_8062570676317398071[49] = 0;
   out_8062570676317398071[50] = 0;
   out_8062570676317398071[51] = 0;
   out_8062570676317398071[52] = 0;
   out_8062570676317398071[53] = 0;
   out_8062570676317398071[54] = 0;
   out_8062570676317398071[55] = 0;
   out_8062570676317398071[56] = 0;
   out_8062570676317398071[57] = 0;
   out_8062570676317398071[58] = 0;
   out_8062570676317398071[59] = 0;
   out_8062570676317398071[60] = 0;
   out_8062570676317398071[61] = 0;
   out_8062570676317398071[62] = 0;
   out_8062570676317398071[63] = 0;
   out_8062570676317398071[64] = 0;
   out_8062570676317398071[65] = 0;
   out_8062570676317398071[66] = -0.5*state[4];
   out_8062570676317398071[67] = -0.5*state[5];
   out_8062570676317398071[68] = -0.5*state[6];
   out_8062570676317398071[69] = 0;
   out_8062570676317398071[70] = 0;
   out_8062570676317398071[71] = 0;
   out_8062570676317398071[72] = 0;
   out_8062570676317398071[73] = 0;
   out_8062570676317398071[74] = 0;
   out_8062570676317398071[75] = 0;
   out_8062570676317398071[76] = 0;
   out_8062570676317398071[77] = 0;
   out_8062570676317398071[78] = 0;
   out_8062570676317398071[79] = 0;
   out_8062570676317398071[80] = 0;
   out_8062570676317398071[81] = 0;
   out_8062570676317398071[82] = 0;
   out_8062570676317398071[83] = 0;
   out_8062570676317398071[84] = 0;
   out_8062570676317398071[85] = 0;
   out_8062570676317398071[86] = 0;
   out_8062570676317398071[87] = 0.5*state[3];
   out_8062570676317398071[88] = 0.5*state[6];
   out_8062570676317398071[89] = -0.5*state[5];
   out_8062570676317398071[90] = 0;
   out_8062570676317398071[91] = 0;
   out_8062570676317398071[92] = 0;
   out_8062570676317398071[93] = 0;
   out_8062570676317398071[94] = 0;
   out_8062570676317398071[95] = 0;
   out_8062570676317398071[96] = 0;
   out_8062570676317398071[97] = 0;
   out_8062570676317398071[98] = 0;
   out_8062570676317398071[99] = 0;
   out_8062570676317398071[100] = 0;
   out_8062570676317398071[101] = 0;
   out_8062570676317398071[102] = 0;
   out_8062570676317398071[103] = 0;
   out_8062570676317398071[104] = 0;
   out_8062570676317398071[105] = 0;
   out_8062570676317398071[106] = 0;
   out_8062570676317398071[107] = 0;
   out_8062570676317398071[108] = -0.5*state[6];
   out_8062570676317398071[109] = 0.5*state[3];
   out_8062570676317398071[110] = 0.5*state[4];
   out_8062570676317398071[111] = 0;
   out_8062570676317398071[112] = 0;
   out_8062570676317398071[113] = 0;
   out_8062570676317398071[114] = 0;
   out_8062570676317398071[115] = 0;
   out_8062570676317398071[116] = 0;
   out_8062570676317398071[117] = 0;
   out_8062570676317398071[118] = 0;
   out_8062570676317398071[119] = 0;
   out_8062570676317398071[120] = 0;
   out_8062570676317398071[121] = 0;
   out_8062570676317398071[122] = 0;
   out_8062570676317398071[123] = 0;
   out_8062570676317398071[124] = 0;
   out_8062570676317398071[125] = 0;
   out_8062570676317398071[126] = 0;
   out_8062570676317398071[127] = 0;
   out_8062570676317398071[128] = 0;
   out_8062570676317398071[129] = 0.5*state[5];
   out_8062570676317398071[130] = -0.5*state[4];
   out_8062570676317398071[131] = 0.5*state[3];
   out_8062570676317398071[132] = 0;
   out_8062570676317398071[133] = 0;
   out_8062570676317398071[134] = 0;
   out_8062570676317398071[135] = 0;
   out_8062570676317398071[136] = 0;
   out_8062570676317398071[137] = 0;
   out_8062570676317398071[138] = 0;
   out_8062570676317398071[139] = 0;
   out_8062570676317398071[140] = 0;
   out_8062570676317398071[141] = 0;
   out_8062570676317398071[142] = 0;
   out_8062570676317398071[143] = 0;
   out_8062570676317398071[144] = 0;
   out_8062570676317398071[145] = 0;
   out_8062570676317398071[146] = 0;
   out_8062570676317398071[147] = 0;
   out_8062570676317398071[148] = 0;
   out_8062570676317398071[149] = 0;
   out_8062570676317398071[150] = 0;
   out_8062570676317398071[151] = 0;
   out_8062570676317398071[152] = 0;
   out_8062570676317398071[153] = 1.0;
   out_8062570676317398071[154] = 0;
   out_8062570676317398071[155] = 0;
   out_8062570676317398071[156] = 0;
   out_8062570676317398071[157] = 0;
   out_8062570676317398071[158] = 0;
   out_8062570676317398071[159] = 0;
   out_8062570676317398071[160] = 0;
   out_8062570676317398071[161] = 0;
   out_8062570676317398071[162] = 0;
   out_8062570676317398071[163] = 0;
   out_8062570676317398071[164] = 0;
   out_8062570676317398071[165] = 0;
   out_8062570676317398071[166] = 0;
   out_8062570676317398071[167] = 0;
   out_8062570676317398071[168] = 0;
   out_8062570676317398071[169] = 0;
   out_8062570676317398071[170] = 0;
   out_8062570676317398071[171] = 0;
   out_8062570676317398071[172] = 0;
   out_8062570676317398071[173] = 0;
   out_8062570676317398071[174] = 0;
   out_8062570676317398071[175] = 1.0;
   out_8062570676317398071[176] = 0;
   out_8062570676317398071[177] = 0;
   out_8062570676317398071[178] = 0;
   out_8062570676317398071[179] = 0;
   out_8062570676317398071[180] = 0;
   out_8062570676317398071[181] = 0;
   out_8062570676317398071[182] = 0;
   out_8062570676317398071[183] = 0;
   out_8062570676317398071[184] = 0;
   out_8062570676317398071[185] = 0;
   out_8062570676317398071[186] = 0;
   out_8062570676317398071[187] = 0;
   out_8062570676317398071[188] = 0;
   out_8062570676317398071[189] = 0;
   out_8062570676317398071[190] = 0;
   out_8062570676317398071[191] = 0;
   out_8062570676317398071[192] = 0;
   out_8062570676317398071[193] = 0;
   out_8062570676317398071[194] = 0;
   out_8062570676317398071[195] = 0;
   out_8062570676317398071[196] = 0;
   out_8062570676317398071[197] = 1.0;
   out_8062570676317398071[198] = 0;
   out_8062570676317398071[199] = 0;
   out_8062570676317398071[200] = 0;
   out_8062570676317398071[201] = 0;
   out_8062570676317398071[202] = 0;
   out_8062570676317398071[203] = 0;
   out_8062570676317398071[204] = 0;
   out_8062570676317398071[205] = 0;
   out_8062570676317398071[206] = 0;
   out_8062570676317398071[207] = 0;
   out_8062570676317398071[208] = 0;
   out_8062570676317398071[209] = 0;
   out_8062570676317398071[210] = 0;
   out_8062570676317398071[211] = 0;
   out_8062570676317398071[212] = 0;
   out_8062570676317398071[213] = 0;
   out_8062570676317398071[214] = 0;
   out_8062570676317398071[215] = 0;
   out_8062570676317398071[216] = 0;
   out_8062570676317398071[217] = 0;
   out_8062570676317398071[218] = 0;
   out_8062570676317398071[219] = 1.0;
   out_8062570676317398071[220] = 0;
   out_8062570676317398071[221] = 0;
   out_8062570676317398071[222] = 0;
   out_8062570676317398071[223] = 0;
   out_8062570676317398071[224] = 0;
   out_8062570676317398071[225] = 0;
   out_8062570676317398071[226] = 0;
   out_8062570676317398071[227] = 0;
   out_8062570676317398071[228] = 0;
   out_8062570676317398071[229] = 0;
   out_8062570676317398071[230] = 0;
   out_8062570676317398071[231] = 0;
   out_8062570676317398071[232] = 0;
   out_8062570676317398071[233] = 0;
   out_8062570676317398071[234] = 0;
   out_8062570676317398071[235] = 0;
   out_8062570676317398071[236] = 0;
   out_8062570676317398071[237] = 0;
   out_8062570676317398071[238] = 0;
   out_8062570676317398071[239] = 0;
   out_8062570676317398071[240] = 0;
   out_8062570676317398071[241] = 1.0;
   out_8062570676317398071[242] = 0;
   out_8062570676317398071[243] = 0;
   out_8062570676317398071[244] = 0;
   out_8062570676317398071[245] = 0;
   out_8062570676317398071[246] = 0;
   out_8062570676317398071[247] = 0;
   out_8062570676317398071[248] = 0;
   out_8062570676317398071[249] = 0;
   out_8062570676317398071[250] = 0;
   out_8062570676317398071[251] = 0;
   out_8062570676317398071[252] = 0;
   out_8062570676317398071[253] = 0;
   out_8062570676317398071[254] = 0;
   out_8062570676317398071[255] = 0;
   out_8062570676317398071[256] = 0;
   out_8062570676317398071[257] = 0;
   out_8062570676317398071[258] = 0;
   out_8062570676317398071[259] = 0;
   out_8062570676317398071[260] = 0;
   out_8062570676317398071[261] = 0;
   out_8062570676317398071[262] = 0;
   out_8062570676317398071[263] = 1.0;
   out_8062570676317398071[264] = 0;
   out_8062570676317398071[265] = 0;
   out_8062570676317398071[266] = 0;
   out_8062570676317398071[267] = 0;
   out_8062570676317398071[268] = 0;
   out_8062570676317398071[269] = 0;
   out_8062570676317398071[270] = 0;
   out_8062570676317398071[271] = 0;
   out_8062570676317398071[272] = 0;
   out_8062570676317398071[273] = 0;
   out_8062570676317398071[274] = 0;
   out_8062570676317398071[275] = 0;
   out_8062570676317398071[276] = 0;
   out_8062570676317398071[277] = 0;
   out_8062570676317398071[278] = 0;
   out_8062570676317398071[279] = 0;
   out_8062570676317398071[280] = 0;
   out_8062570676317398071[281] = 0;
   out_8062570676317398071[282] = 0;
   out_8062570676317398071[283] = 0;
   out_8062570676317398071[284] = 0;
   out_8062570676317398071[285] = 1.0;
   out_8062570676317398071[286] = 0;
   out_8062570676317398071[287] = 0;
   out_8062570676317398071[288] = 0;
   out_8062570676317398071[289] = 0;
   out_8062570676317398071[290] = 0;
   out_8062570676317398071[291] = 0;
   out_8062570676317398071[292] = 0;
   out_8062570676317398071[293] = 0;
   out_8062570676317398071[294] = 0;
   out_8062570676317398071[295] = 0;
   out_8062570676317398071[296] = 0;
   out_8062570676317398071[297] = 0;
   out_8062570676317398071[298] = 0;
   out_8062570676317398071[299] = 0;
   out_8062570676317398071[300] = 0;
   out_8062570676317398071[301] = 0;
   out_8062570676317398071[302] = 0;
   out_8062570676317398071[303] = 0;
   out_8062570676317398071[304] = 0;
   out_8062570676317398071[305] = 0;
   out_8062570676317398071[306] = 0;
   out_8062570676317398071[307] = 1.0;
   out_8062570676317398071[308] = 0;
   out_8062570676317398071[309] = 0;
   out_8062570676317398071[310] = 0;
   out_8062570676317398071[311] = 0;
   out_8062570676317398071[312] = 0;
   out_8062570676317398071[313] = 0;
   out_8062570676317398071[314] = 0;
   out_8062570676317398071[315] = 0;
   out_8062570676317398071[316] = 0;
   out_8062570676317398071[317] = 0;
   out_8062570676317398071[318] = 0;
   out_8062570676317398071[319] = 0;
   out_8062570676317398071[320] = 0;
   out_8062570676317398071[321] = 0;
   out_8062570676317398071[322] = 0;
   out_8062570676317398071[323] = 0;
   out_8062570676317398071[324] = 0;
   out_8062570676317398071[325] = 0;
   out_8062570676317398071[326] = 0;
   out_8062570676317398071[327] = 0;
   out_8062570676317398071[328] = 0;
   out_8062570676317398071[329] = 1.0;
   out_8062570676317398071[330] = 0;
   out_8062570676317398071[331] = 0;
   out_8062570676317398071[332] = 0;
   out_8062570676317398071[333] = 0;
   out_8062570676317398071[334] = 0;
   out_8062570676317398071[335] = 0;
   out_8062570676317398071[336] = 0;
   out_8062570676317398071[337] = 0;
   out_8062570676317398071[338] = 0;
   out_8062570676317398071[339] = 0;
   out_8062570676317398071[340] = 0;
   out_8062570676317398071[341] = 0;
   out_8062570676317398071[342] = 0;
   out_8062570676317398071[343] = 0;
   out_8062570676317398071[344] = 0;
   out_8062570676317398071[345] = 0;
   out_8062570676317398071[346] = 0;
   out_8062570676317398071[347] = 0;
   out_8062570676317398071[348] = 0;
   out_8062570676317398071[349] = 0;
   out_8062570676317398071[350] = 0;
   out_8062570676317398071[351] = 1.0;
   out_8062570676317398071[352] = 0;
   out_8062570676317398071[353] = 0;
   out_8062570676317398071[354] = 0;
   out_8062570676317398071[355] = 0;
   out_8062570676317398071[356] = 0;
   out_8062570676317398071[357] = 0;
   out_8062570676317398071[358] = 0;
   out_8062570676317398071[359] = 0;
   out_8062570676317398071[360] = 0;
   out_8062570676317398071[361] = 0;
   out_8062570676317398071[362] = 0;
   out_8062570676317398071[363] = 0;
   out_8062570676317398071[364] = 0;
   out_8062570676317398071[365] = 0;
   out_8062570676317398071[366] = 0;
   out_8062570676317398071[367] = 0;
   out_8062570676317398071[368] = 0;
   out_8062570676317398071[369] = 0;
   out_8062570676317398071[370] = 0;
   out_8062570676317398071[371] = 0;
   out_8062570676317398071[372] = 0;
   out_8062570676317398071[373] = 1.0;
   out_8062570676317398071[374] = 0;
   out_8062570676317398071[375] = 0;
   out_8062570676317398071[376] = 0;
   out_8062570676317398071[377] = 0;
   out_8062570676317398071[378] = 0;
   out_8062570676317398071[379] = 0;
   out_8062570676317398071[380] = 0;
   out_8062570676317398071[381] = 0;
   out_8062570676317398071[382] = 0;
   out_8062570676317398071[383] = 0;
   out_8062570676317398071[384] = 0;
   out_8062570676317398071[385] = 0;
   out_8062570676317398071[386] = 0;
   out_8062570676317398071[387] = 0;
   out_8062570676317398071[388] = 0;
   out_8062570676317398071[389] = 0;
   out_8062570676317398071[390] = 0;
   out_8062570676317398071[391] = 0;
   out_8062570676317398071[392] = 0;
   out_8062570676317398071[393] = 0;
   out_8062570676317398071[394] = 0;
   out_8062570676317398071[395] = 1.0;
   out_8062570676317398071[396] = 0;
   out_8062570676317398071[397] = 0;
   out_8062570676317398071[398] = 0;
   out_8062570676317398071[399] = 0;
   out_8062570676317398071[400] = 0;
   out_8062570676317398071[401] = 0;
   out_8062570676317398071[402] = 0;
   out_8062570676317398071[403] = 0;
   out_8062570676317398071[404] = 0;
   out_8062570676317398071[405] = 0;
   out_8062570676317398071[406] = 0;
   out_8062570676317398071[407] = 0;
   out_8062570676317398071[408] = 0;
   out_8062570676317398071[409] = 0;
   out_8062570676317398071[410] = 0;
   out_8062570676317398071[411] = 0;
   out_8062570676317398071[412] = 0;
   out_8062570676317398071[413] = 0;
   out_8062570676317398071[414] = 0;
   out_8062570676317398071[415] = 0;
   out_8062570676317398071[416] = 0;
   out_8062570676317398071[417] = 1.0;
   out_8062570676317398071[418] = 0;
   out_8062570676317398071[419] = 0;
   out_8062570676317398071[420] = 0;
   out_8062570676317398071[421] = 0;
   out_8062570676317398071[422] = 0;
   out_8062570676317398071[423] = 0;
   out_8062570676317398071[424] = 0;
   out_8062570676317398071[425] = 0;
   out_8062570676317398071[426] = 0;
   out_8062570676317398071[427] = 0;
   out_8062570676317398071[428] = 0;
   out_8062570676317398071[429] = 0;
   out_8062570676317398071[430] = 0;
   out_8062570676317398071[431] = 0;
   out_8062570676317398071[432] = 0;
   out_8062570676317398071[433] = 0;
   out_8062570676317398071[434] = 0;
   out_8062570676317398071[435] = 0;
   out_8062570676317398071[436] = 0;
   out_8062570676317398071[437] = 0;
   out_8062570676317398071[438] = 0;
   out_8062570676317398071[439] = 1.0;
   out_8062570676317398071[440] = 0;
   out_8062570676317398071[441] = 0;
   out_8062570676317398071[442] = 0;
   out_8062570676317398071[443] = 0;
   out_8062570676317398071[444] = 0;
   out_8062570676317398071[445] = 0;
   out_8062570676317398071[446] = 0;
   out_8062570676317398071[447] = 0;
   out_8062570676317398071[448] = 0;
   out_8062570676317398071[449] = 0;
   out_8062570676317398071[450] = 0;
   out_8062570676317398071[451] = 0;
   out_8062570676317398071[452] = 0;
   out_8062570676317398071[453] = 0;
   out_8062570676317398071[454] = 0;
   out_8062570676317398071[455] = 0;
   out_8062570676317398071[456] = 0;
   out_8062570676317398071[457] = 0;
   out_8062570676317398071[458] = 0;
   out_8062570676317398071[459] = 0;
   out_8062570676317398071[460] = 0;
   out_8062570676317398071[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2324052246727024358) {
   out_2324052246727024358[0] = dt*state[7] + state[0];
   out_2324052246727024358[1] = dt*state[8] + state[1];
   out_2324052246727024358[2] = dt*state[9] + state[2];
   out_2324052246727024358[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2324052246727024358[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2324052246727024358[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2324052246727024358[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2324052246727024358[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2324052246727024358[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2324052246727024358[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2324052246727024358[10] = state[10];
   out_2324052246727024358[11] = state[11];
   out_2324052246727024358[12] = state[12];
   out_2324052246727024358[13] = state[13];
   out_2324052246727024358[14] = state[14];
   out_2324052246727024358[15] = state[15];
   out_2324052246727024358[16] = state[16];
   out_2324052246727024358[17] = state[17];
   out_2324052246727024358[18] = state[18];
   out_2324052246727024358[19] = state[19];
   out_2324052246727024358[20] = state[20];
   out_2324052246727024358[21] = state[21];
}
void F_fun(double *state, double dt, double *out_1193340919506574733) {
   out_1193340919506574733[0] = 1;
   out_1193340919506574733[1] = 0;
   out_1193340919506574733[2] = 0;
   out_1193340919506574733[3] = 0;
   out_1193340919506574733[4] = 0;
   out_1193340919506574733[5] = 0;
   out_1193340919506574733[6] = dt;
   out_1193340919506574733[7] = 0;
   out_1193340919506574733[8] = 0;
   out_1193340919506574733[9] = 0;
   out_1193340919506574733[10] = 0;
   out_1193340919506574733[11] = 0;
   out_1193340919506574733[12] = 0;
   out_1193340919506574733[13] = 0;
   out_1193340919506574733[14] = 0;
   out_1193340919506574733[15] = 0;
   out_1193340919506574733[16] = 0;
   out_1193340919506574733[17] = 0;
   out_1193340919506574733[18] = 0;
   out_1193340919506574733[19] = 0;
   out_1193340919506574733[20] = 0;
   out_1193340919506574733[21] = 0;
   out_1193340919506574733[22] = 1;
   out_1193340919506574733[23] = 0;
   out_1193340919506574733[24] = 0;
   out_1193340919506574733[25] = 0;
   out_1193340919506574733[26] = 0;
   out_1193340919506574733[27] = 0;
   out_1193340919506574733[28] = dt;
   out_1193340919506574733[29] = 0;
   out_1193340919506574733[30] = 0;
   out_1193340919506574733[31] = 0;
   out_1193340919506574733[32] = 0;
   out_1193340919506574733[33] = 0;
   out_1193340919506574733[34] = 0;
   out_1193340919506574733[35] = 0;
   out_1193340919506574733[36] = 0;
   out_1193340919506574733[37] = 0;
   out_1193340919506574733[38] = 0;
   out_1193340919506574733[39] = 0;
   out_1193340919506574733[40] = 0;
   out_1193340919506574733[41] = 0;
   out_1193340919506574733[42] = 0;
   out_1193340919506574733[43] = 0;
   out_1193340919506574733[44] = 1;
   out_1193340919506574733[45] = 0;
   out_1193340919506574733[46] = 0;
   out_1193340919506574733[47] = 0;
   out_1193340919506574733[48] = 0;
   out_1193340919506574733[49] = 0;
   out_1193340919506574733[50] = dt;
   out_1193340919506574733[51] = 0;
   out_1193340919506574733[52] = 0;
   out_1193340919506574733[53] = 0;
   out_1193340919506574733[54] = 0;
   out_1193340919506574733[55] = 0;
   out_1193340919506574733[56] = 0;
   out_1193340919506574733[57] = 0;
   out_1193340919506574733[58] = 0;
   out_1193340919506574733[59] = 0;
   out_1193340919506574733[60] = 0;
   out_1193340919506574733[61] = 0;
   out_1193340919506574733[62] = 0;
   out_1193340919506574733[63] = 0;
   out_1193340919506574733[64] = 0;
   out_1193340919506574733[65] = 0;
   out_1193340919506574733[66] = 1;
   out_1193340919506574733[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1193340919506574733[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_1193340919506574733[69] = 0;
   out_1193340919506574733[70] = 0;
   out_1193340919506574733[71] = 0;
   out_1193340919506574733[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1193340919506574733[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1193340919506574733[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1193340919506574733[75] = 0;
   out_1193340919506574733[76] = 0;
   out_1193340919506574733[77] = 0;
   out_1193340919506574733[78] = 0;
   out_1193340919506574733[79] = 0;
   out_1193340919506574733[80] = 0;
   out_1193340919506574733[81] = 0;
   out_1193340919506574733[82] = 0;
   out_1193340919506574733[83] = 0;
   out_1193340919506574733[84] = 0;
   out_1193340919506574733[85] = 0;
   out_1193340919506574733[86] = 0;
   out_1193340919506574733[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_1193340919506574733[88] = 1;
   out_1193340919506574733[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_1193340919506574733[90] = 0;
   out_1193340919506574733[91] = 0;
   out_1193340919506574733[92] = 0;
   out_1193340919506574733[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1193340919506574733[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1193340919506574733[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1193340919506574733[96] = 0;
   out_1193340919506574733[97] = 0;
   out_1193340919506574733[98] = 0;
   out_1193340919506574733[99] = 0;
   out_1193340919506574733[100] = 0;
   out_1193340919506574733[101] = 0;
   out_1193340919506574733[102] = 0;
   out_1193340919506574733[103] = 0;
   out_1193340919506574733[104] = 0;
   out_1193340919506574733[105] = 0;
   out_1193340919506574733[106] = 0;
   out_1193340919506574733[107] = 0;
   out_1193340919506574733[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_1193340919506574733[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_1193340919506574733[110] = 1;
   out_1193340919506574733[111] = 0;
   out_1193340919506574733[112] = 0;
   out_1193340919506574733[113] = 0;
   out_1193340919506574733[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1193340919506574733[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1193340919506574733[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1193340919506574733[117] = 0;
   out_1193340919506574733[118] = 0;
   out_1193340919506574733[119] = 0;
   out_1193340919506574733[120] = 0;
   out_1193340919506574733[121] = 0;
   out_1193340919506574733[122] = 0;
   out_1193340919506574733[123] = 0;
   out_1193340919506574733[124] = 0;
   out_1193340919506574733[125] = 0;
   out_1193340919506574733[126] = 0;
   out_1193340919506574733[127] = 0;
   out_1193340919506574733[128] = 0;
   out_1193340919506574733[129] = 0;
   out_1193340919506574733[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1193340919506574733[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_1193340919506574733[132] = 1;
   out_1193340919506574733[133] = 0;
   out_1193340919506574733[134] = 0;
   out_1193340919506574733[135] = 0;
   out_1193340919506574733[136] = 0;
   out_1193340919506574733[137] = 0;
   out_1193340919506574733[138] = 0;
   out_1193340919506574733[139] = 0;
   out_1193340919506574733[140] = 0;
   out_1193340919506574733[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1193340919506574733[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1193340919506574733[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1193340919506574733[144] = 0;
   out_1193340919506574733[145] = 0;
   out_1193340919506574733[146] = 0;
   out_1193340919506574733[147] = 0;
   out_1193340919506574733[148] = 0;
   out_1193340919506574733[149] = 0;
   out_1193340919506574733[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_1193340919506574733[151] = 0;
   out_1193340919506574733[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_1193340919506574733[153] = 0;
   out_1193340919506574733[154] = 1;
   out_1193340919506574733[155] = 0;
   out_1193340919506574733[156] = 0;
   out_1193340919506574733[157] = 0;
   out_1193340919506574733[158] = 0;
   out_1193340919506574733[159] = 0;
   out_1193340919506574733[160] = 0;
   out_1193340919506574733[161] = 0;
   out_1193340919506574733[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_1193340919506574733[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1193340919506574733[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1193340919506574733[165] = 0;
   out_1193340919506574733[166] = 0;
   out_1193340919506574733[167] = 0;
   out_1193340919506574733[168] = 0;
   out_1193340919506574733[169] = 0;
   out_1193340919506574733[170] = 0;
   out_1193340919506574733[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_1193340919506574733[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_1193340919506574733[173] = 0;
   out_1193340919506574733[174] = 0;
   out_1193340919506574733[175] = 0;
   out_1193340919506574733[176] = 1;
   out_1193340919506574733[177] = 0;
   out_1193340919506574733[178] = 0;
   out_1193340919506574733[179] = 0;
   out_1193340919506574733[180] = 0;
   out_1193340919506574733[181] = 0;
   out_1193340919506574733[182] = 0;
   out_1193340919506574733[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_1193340919506574733[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_1193340919506574733[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1193340919506574733[186] = 0;
   out_1193340919506574733[187] = 0;
   out_1193340919506574733[188] = 0;
   out_1193340919506574733[189] = 0;
   out_1193340919506574733[190] = 0;
   out_1193340919506574733[191] = 0;
   out_1193340919506574733[192] = 0;
   out_1193340919506574733[193] = 0;
   out_1193340919506574733[194] = 0;
   out_1193340919506574733[195] = 0;
   out_1193340919506574733[196] = 0;
   out_1193340919506574733[197] = 0;
   out_1193340919506574733[198] = 1;
   out_1193340919506574733[199] = 0;
   out_1193340919506574733[200] = 0;
   out_1193340919506574733[201] = 0;
   out_1193340919506574733[202] = 0;
   out_1193340919506574733[203] = 0;
   out_1193340919506574733[204] = 0;
   out_1193340919506574733[205] = 0;
   out_1193340919506574733[206] = 0;
   out_1193340919506574733[207] = 0;
   out_1193340919506574733[208] = 0;
   out_1193340919506574733[209] = 0;
   out_1193340919506574733[210] = 0;
   out_1193340919506574733[211] = 0;
   out_1193340919506574733[212] = 0;
   out_1193340919506574733[213] = 0;
   out_1193340919506574733[214] = 0;
   out_1193340919506574733[215] = 0;
   out_1193340919506574733[216] = 0;
   out_1193340919506574733[217] = 0;
   out_1193340919506574733[218] = 0;
   out_1193340919506574733[219] = 0;
   out_1193340919506574733[220] = 1;
   out_1193340919506574733[221] = 0;
   out_1193340919506574733[222] = 0;
   out_1193340919506574733[223] = 0;
   out_1193340919506574733[224] = 0;
   out_1193340919506574733[225] = 0;
   out_1193340919506574733[226] = 0;
   out_1193340919506574733[227] = 0;
   out_1193340919506574733[228] = 0;
   out_1193340919506574733[229] = 0;
   out_1193340919506574733[230] = 0;
   out_1193340919506574733[231] = 0;
   out_1193340919506574733[232] = 0;
   out_1193340919506574733[233] = 0;
   out_1193340919506574733[234] = 0;
   out_1193340919506574733[235] = 0;
   out_1193340919506574733[236] = 0;
   out_1193340919506574733[237] = 0;
   out_1193340919506574733[238] = 0;
   out_1193340919506574733[239] = 0;
   out_1193340919506574733[240] = 0;
   out_1193340919506574733[241] = 0;
   out_1193340919506574733[242] = 1;
   out_1193340919506574733[243] = 0;
   out_1193340919506574733[244] = 0;
   out_1193340919506574733[245] = 0;
   out_1193340919506574733[246] = 0;
   out_1193340919506574733[247] = 0;
   out_1193340919506574733[248] = 0;
   out_1193340919506574733[249] = 0;
   out_1193340919506574733[250] = 0;
   out_1193340919506574733[251] = 0;
   out_1193340919506574733[252] = 0;
   out_1193340919506574733[253] = 0;
   out_1193340919506574733[254] = 0;
   out_1193340919506574733[255] = 0;
   out_1193340919506574733[256] = 0;
   out_1193340919506574733[257] = 0;
   out_1193340919506574733[258] = 0;
   out_1193340919506574733[259] = 0;
   out_1193340919506574733[260] = 0;
   out_1193340919506574733[261] = 0;
   out_1193340919506574733[262] = 0;
   out_1193340919506574733[263] = 0;
   out_1193340919506574733[264] = 1;
   out_1193340919506574733[265] = 0;
   out_1193340919506574733[266] = 0;
   out_1193340919506574733[267] = 0;
   out_1193340919506574733[268] = 0;
   out_1193340919506574733[269] = 0;
   out_1193340919506574733[270] = 0;
   out_1193340919506574733[271] = 0;
   out_1193340919506574733[272] = 0;
   out_1193340919506574733[273] = 0;
   out_1193340919506574733[274] = 0;
   out_1193340919506574733[275] = 0;
   out_1193340919506574733[276] = 0;
   out_1193340919506574733[277] = 0;
   out_1193340919506574733[278] = 0;
   out_1193340919506574733[279] = 0;
   out_1193340919506574733[280] = 0;
   out_1193340919506574733[281] = 0;
   out_1193340919506574733[282] = 0;
   out_1193340919506574733[283] = 0;
   out_1193340919506574733[284] = 0;
   out_1193340919506574733[285] = 0;
   out_1193340919506574733[286] = 1;
   out_1193340919506574733[287] = 0;
   out_1193340919506574733[288] = 0;
   out_1193340919506574733[289] = 0;
   out_1193340919506574733[290] = 0;
   out_1193340919506574733[291] = 0;
   out_1193340919506574733[292] = 0;
   out_1193340919506574733[293] = 0;
   out_1193340919506574733[294] = 0;
   out_1193340919506574733[295] = 0;
   out_1193340919506574733[296] = 0;
   out_1193340919506574733[297] = 0;
   out_1193340919506574733[298] = 0;
   out_1193340919506574733[299] = 0;
   out_1193340919506574733[300] = 0;
   out_1193340919506574733[301] = 0;
   out_1193340919506574733[302] = 0;
   out_1193340919506574733[303] = 0;
   out_1193340919506574733[304] = 0;
   out_1193340919506574733[305] = 0;
   out_1193340919506574733[306] = 0;
   out_1193340919506574733[307] = 0;
   out_1193340919506574733[308] = 1;
   out_1193340919506574733[309] = 0;
   out_1193340919506574733[310] = 0;
   out_1193340919506574733[311] = 0;
   out_1193340919506574733[312] = 0;
   out_1193340919506574733[313] = 0;
   out_1193340919506574733[314] = 0;
   out_1193340919506574733[315] = 0;
   out_1193340919506574733[316] = 0;
   out_1193340919506574733[317] = 0;
   out_1193340919506574733[318] = 0;
   out_1193340919506574733[319] = 0;
   out_1193340919506574733[320] = 0;
   out_1193340919506574733[321] = 0;
   out_1193340919506574733[322] = 0;
   out_1193340919506574733[323] = 0;
   out_1193340919506574733[324] = 0;
   out_1193340919506574733[325] = 0;
   out_1193340919506574733[326] = 0;
   out_1193340919506574733[327] = 0;
   out_1193340919506574733[328] = 0;
   out_1193340919506574733[329] = 0;
   out_1193340919506574733[330] = 1;
   out_1193340919506574733[331] = 0;
   out_1193340919506574733[332] = 0;
   out_1193340919506574733[333] = 0;
   out_1193340919506574733[334] = 0;
   out_1193340919506574733[335] = 0;
   out_1193340919506574733[336] = 0;
   out_1193340919506574733[337] = 0;
   out_1193340919506574733[338] = 0;
   out_1193340919506574733[339] = 0;
   out_1193340919506574733[340] = 0;
   out_1193340919506574733[341] = 0;
   out_1193340919506574733[342] = 0;
   out_1193340919506574733[343] = 0;
   out_1193340919506574733[344] = 0;
   out_1193340919506574733[345] = 0;
   out_1193340919506574733[346] = 0;
   out_1193340919506574733[347] = 0;
   out_1193340919506574733[348] = 0;
   out_1193340919506574733[349] = 0;
   out_1193340919506574733[350] = 0;
   out_1193340919506574733[351] = 0;
   out_1193340919506574733[352] = 1;
   out_1193340919506574733[353] = 0;
   out_1193340919506574733[354] = 0;
   out_1193340919506574733[355] = 0;
   out_1193340919506574733[356] = 0;
   out_1193340919506574733[357] = 0;
   out_1193340919506574733[358] = 0;
   out_1193340919506574733[359] = 0;
   out_1193340919506574733[360] = 0;
   out_1193340919506574733[361] = 0;
   out_1193340919506574733[362] = 0;
   out_1193340919506574733[363] = 0;
   out_1193340919506574733[364] = 0;
   out_1193340919506574733[365] = 0;
   out_1193340919506574733[366] = 0;
   out_1193340919506574733[367] = 0;
   out_1193340919506574733[368] = 0;
   out_1193340919506574733[369] = 0;
   out_1193340919506574733[370] = 0;
   out_1193340919506574733[371] = 0;
   out_1193340919506574733[372] = 0;
   out_1193340919506574733[373] = 0;
   out_1193340919506574733[374] = 1;
   out_1193340919506574733[375] = 0;
   out_1193340919506574733[376] = 0;
   out_1193340919506574733[377] = 0;
   out_1193340919506574733[378] = 0;
   out_1193340919506574733[379] = 0;
   out_1193340919506574733[380] = 0;
   out_1193340919506574733[381] = 0;
   out_1193340919506574733[382] = 0;
   out_1193340919506574733[383] = 0;
   out_1193340919506574733[384] = 0;
   out_1193340919506574733[385] = 0;
   out_1193340919506574733[386] = 0;
   out_1193340919506574733[387] = 0;
   out_1193340919506574733[388] = 0;
   out_1193340919506574733[389] = 0;
   out_1193340919506574733[390] = 0;
   out_1193340919506574733[391] = 0;
   out_1193340919506574733[392] = 0;
   out_1193340919506574733[393] = 0;
   out_1193340919506574733[394] = 0;
   out_1193340919506574733[395] = 0;
   out_1193340919506574733[396] = 1;
   out_1193340919506574733[397] = 0;
   out_1193340919506574733[398] = 0;
   out_1193340919506574733[399] = 0;
   out_1193340919506574733[400] = 0;
   out_1193340919506574733[401] = 0;
   out_1193340919506574733[402] = 0;
   out_1193340919506574733[403] = 0;
   out_1193340919506574733[404] = 0;
   out_1193340919506574733[405] = 0;
   out_1193340919506574733[406] = 0;
   out_1193340919506574733[407] = 0;
   out_1193340919506574733[408] = 0;
   out_1193340919506574733[409] = 0;
   out_1193340919506574733[410] = 0;
   out_1193340919506574733[411] = 0;
   out_1193340919506574733[412] = 0;
   out_1193340919506574733[413] = 0;
   out_1193340919506574733[414] = 0;
   out_1193340919506574733[415] = 0;
   out_1193340919506574733[416] = 0;
   out_1193340919506574733[417] = 0;
   out_1193340919506574733[418] = 1;
   out_1193340919506574733[419] = 0;
   out_1193340919506574733[420] = 0;
   out_1193340919506574733[421] = 0;
   out_1193340919506574733[422] = 0;
   out_1193340919506574733[423] = 0;
   out_1193340919506574733[424] = 0;
   out_1193340919506574733[425] = 0;
   out_1193340919506574733[426] = 0;
   out_1193340919506574733[427] = 0;
   out_1193340919506574733[428] = 0;
   out_1193340919506574733[429] = 0;
   out_1193340919506574733[430] = 0;
   out_1193340919506574733[431] = 0;
   out_1193340919506574733[432] = 0;
   out_1193340919506574733[433] = 0;
   out_1193340919506574733[434] = 0;
   out_1193340919506574733[435] = 0;
   out_1193340919506574733[436] = 0;
   out_1193340919506574733[437] = 0;
   out_1193340919506574733[438] = 0;
   out_1193340919506574733[439] = 0;
   out_1193340919506574733[440] = 1;
}
void h_4(double *state, double *unused, double *out_1581327245785564682) {
   out_1581327245785564682[0] = state[10] + state[13];
   out_1581327245785564682[1] = state[11] + state[14];
   out_1581327245785564682[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3560314439029752354) {
   out_3560314439029752354[0] = 0;
   out_3560314439029752354[1] = 0;
   out_3560314439029752354[2] = 0;
   out_3560314439029752354[3] = 0;
   out_3560314439029752354[4] = 0;
   out_3560314439029752354[5] = 0;
   out_3560314439029752354[6] = 0;
   out_3560314439029752354[7] = 0;
   out_3560314439029752354[8] = 0;
   out_3560314439029752354[9] = 0;
   out_3560314439029752354[10] = 1;
   out_3560314439029752354[11] = 0;
   out_3560314439029752354[12] = 0;
   out_3560314439029752354[13] = 1;
   out_3560314439029752354[14] = 0;
   out_3560314439029752354[15] = 0;
   out_3560314439029752354[16] = 0;
   out_3560314439029752354[17] = 0;
   out_3560314439029752354[18] = 0;
   out_3560314439029752354[19] = 0;
   out_3560314439029752354[20] = 0;
   out_3560314439029752354[21] = 0;
   out_3560314439029752354[22] = 0;
   out_3560314439029752354[23] = 0;
   out_3560314439029752354[24] = 0;
   out_3560314439029752354[25] = 0;
   out_3560314439029752354[26] = 0;
   out_3560314439029752354[27] = 0;
   out_3560314439029752354[28] = 0;
   out_3560314439029752354[29] = 0;
   out_3560314439029752354[30] = 0;
   out_3560314439029752354[31] = 0;
   out_3560314439029752354[32] = 0;
   out_3560314439029752354[33] = 1;
   out_3560314439029752354[34] = 0;
   out_3560314439029752354[35] = 0;
   out_3560314439029752354[36] = 1;
   out_3560314439029752354[37] = 0;
   out_3560314439029752354[38] = 0;
   out_3560314439029752354[39] = 0;
   out_3560314439029752354[40] = 0;
   out_3560314439029752354[41] = 0;
   out_3560314439029752354[42] = 0;
   out_3560314439029752354[43] = 0;
   out_3560314439029752354[44] = 0;
   out_3560314439029752354[45] = 0;
   out_3560314439029752354[46] = 0;
   out_3560314439029752354[47] = 0;
   out_3560314439029752354[48] = 0;
   out_3560314439029752354[49] = 0;
   out_3560314439029752354[50] = 0;
   out_3560314439029752354[51] = 0;
   out_3560314439029752354[52] = 0;
   out_3560314439029752354[53] = 0;
   out_3560314439029752354[54] = 0;
   out_3560314439029752354[55] = 0;
   out_3560314439029752354[56] = 1;
   out_3560314439029752354[57] = 0;
   out_3560314439029752354[58] = 0;
   out_3560314439029752354[59] = 1;
   out_3560314439029752354[60] = 0;
   out_3560314439029752354[61] = 0;
   out_3560314439029752354[62] = 0;
   out_3560314439029752354[63] = 0;
   out_3560314439029752354[64] = 0;
   out_3560314439029752354[65] = 0;
}
void h_9(double *state, double *unused, double *out_4156606641939238231) {
   out_4156606641939238231[0] = state[10];
   out_4156606641939238231[1] = state[11];
   out_4156606641939238231[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3726904496234695116) {
   out_3726904496234695116[0] = 0;
   out_3726904496234695116[1] = 0;
   out_3726904496234695116[2] = 0;
   out_3726904496234695116[3] = 0;
   out_3726904496234695116[4] = 0;
   out_3726904496234695116[5] = 0;
   out_3726904496234695116[6] = 0;
   out_3726904496234695116[7] = 0;
   out_3726904496234695116[8] = 0;
   out_3726904496234695116[9] = 0;
   out_3726904496234695116[10] = 1;
   out_3726904496234695116[11] = 0;
   out_3726904496234695116[12] = 0;
   out_3726904496234695116[13] = 0;
   out_3726904496234695116[14] = 0;
   out_3726904496234695116[15] = 0;
   out_3726904496234695116[16] = 0;
   out_3726904496234695116[17] = 0;
   out_3726904496234695116[18] = 0;
   out_3726904496234695116[19] = 0;
   out_3726904496234695116[20] = 0;
   out_3726904496234695116[21] = 0;
   out_3726904496234695116[22] = 0;
   out_3726904496234695116[23] = 0;
   out_3726904496234695116[24] = 0;
   out_3726904496234695116[25] = 0;
   out_3726904496234695116[26] = 0;
   out_3726904496234695116[27] = 0;
   out_3726904496234695116[28] = 0;
   out_3726904496234695116[29] = 0;
   out_3726904496234695116[30] = 0;
   out_3726904496234695116[31] = 0;
   out_3726904496234695116[32] = 0;
   out_3726904496234695116[33] = 1;
   out_3726904496234695116[34] = 0;
   out_3726904496234695116[35] = 0;
   out_3726904496234695116[36] = 0;
   out_3726904496234695116[37] = 0;
   out_3726904496234695116[38] = 0;
   out_3726904496234695116[39] = 0;
   out_3726904496234695116[40] = 0;
   out_3726904496234695116[41] = 0;
   out_3726904496234695116[42] = 0;
   out_3726904496234695116[43] = 0;
   out_3726904496234695116[44] = 0;
   out_3726904496234695116[45] = 0;
   out_3726904496234695116[46] = 0;
   out_3726904496234695116[47] = 0;
   out_3726904496234695116[48] = 0;
   out_3726904496234695116[49] = 0;
   out_3726904496234695116[50] = 0;
   out_3726904496234695116[51] = 0;
   out_3726904496234695116[52] = 0;
   out_3726904496234695116[53] = 0;
   out_3726904496234695116[54] = 0;
   out_3726904496234695116[55] = 0;
   out_3726904496234695116[56] = 1;
   out_3726904496234695116[57] = 0;
   out_3726904496234695116[58] = 0;
   out_3726904496234695116[59] = 0;
   out_3726904496234695116[60] = 0;
   out_3726904496234695116[61] = 0;
   out_3726904496234695116[62] = 0;
   out_3726904496234695116[63] = 0;
   out_3726904496234695116[64] = 0;
   out_3726904496234695116[65] = 0;
}
void h_10(double *state, double *unused, double *out_612625027598883080) {
   out_612625027598883080[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_612625027598883080[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_612625027598883080[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5366888770286021224) {
   out_5366888770286021224[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5366888770286021224[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5366888770286021224[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5366888770286021224[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5366888770286021224[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5366888770286021224[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5366888770286021224[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5366888770286021224[7] = 0;
   out_5366888770286021224[8] = 0;
   out_5366888770286021224[9] = 0;
   out_5366888770286021224[10] = 0;
   out_5366888770286021224[11] = 0;
   out_5366888770286021224[12] = 0;
   out_5366888770286021224[13] = 0;
   out_5366888770286021224[14] = 0;
   out_5366888770286021224[15] = 0;
   out_5366888770286021224[16] = 1;
   out_5366888770286021224[17] = 0;
   out_5366888770286021224[18] = 0;
   out_5366888770286021224[19] = 1;
   out_5366888770286021224[20] = 0;
   out_5366888770286021224[21] = 0;
   out_5366888770286021224[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5366888770286021224[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5366888770286021224[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5366888770286021224[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5366888770286021224[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5366888770286021224[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5366888770286021224[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5366888770286021224[29] = 0;
   out_5366888770286021224[30] = 0;
   out_5366888770286021224[31] = 0;
   out_5366888770286021224[32] = 0;
   out_5366888770286021224[33] = 0;
   out_5366888770286021224[34] = 0;
   out_5366888770286021224[35] = 0;
   out_5366888770286021224[36] = 0;
   out_5366888770286021224[37] = 0;
   out_5366888770286021224[38] = 0;
   out_5366888770286021224[39] = 1;
   out_5366888770286021224[40] = 0;
   out_5366888770286021224[41] = 0;
   out_5366888770286021224[42] = 1;
   out_5366888770286021224[43] = 0;
   out_5366888770286021224[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5366888770286021224[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5366888770286021224[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5366888770286021224[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5366888770286021224[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5366888770286021224[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5366888770286021224[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5366888770286021224[51] = 0;
   out_5366888770286021224[52] = 0;
   out_5366888770286021224[53] = 0;
   out_5366888770286021224[54] = 0;
   out_5366888770286021224[55] = 0;
   out_5366888770286021224[56] = 0;
   out_5366888770286021224[57] = 0;
   out_5366888770286021224[58] = 0;
   out_5366888770286021224[59] = 0;
   out_5366888770286021224[60] = 0;
   out_5366888770286021224[61] = 0;
   out_5366888770286021224[62] = 1;
   out_5366888770286021224[63] = 0;
   out_5366888770286021224[64] = 0;
   out_5366888770286021224[65] = 1;
}
void h_12(double *state, double *unused, double *out_6997745622421151355) {
   out_6997745622421151355[0] = state[0];
   out_6997745622421151355[1] = state[1];
   out_6997745622421151355[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1459141969002209441) {
   out_1459141969002209441[0] = 1;
   out_1459141969002209441[1] = 0;
   out_1459141969002209441[2] = 0;
   out_1459141969002209441[3] = 0;
   out_1459141969002209441[4] = 0;
   out_1459141969002209441[5] = 0;
   out_1459141969002209441[6] = 0;
   out_1459141969002209441[7] = 0;
   out_1459141969002209441[8] = 0;
   out_1459141969002209441[9] = 0;
   out_1459141969002209441[10] = 0;
   out_1459141969002209441[11] = 0;
   out_1459141969002209441[12] = 0;
   out_1459141969002209441[13] = 0;
   out_1459141969002209441[14] = 0;
   out_1459141969002209441[15] = 0;
   out_1459141969002209441[16] = 0;
   out_1459141969002209441[17] = 0;
   out_1459141969002209441[18] = 0;
   out_1459141969002209441[19] = 0;
   out_1459141969002209441[20] = 0;
   out_1459141969002209441[21] = 0;
   out_1459141969002209441[22] = 0;
   out_1459141969002209441[23] = 1;
   out_1459141969002209441[24] = 0;
   out_1459141969002209441[25] = 0;
   out_1459141969002209441[26] = 0;
   out_1459141969002209441[27] = 0;
   out_1459141969002209441[28] = 0;
   out_1459141969002209441[29] = 0;
   out_1459141969002209441[30] = 0;
   out_1459141969002209441[31] = 0;
   out_1459141969002209441[32] = 0;
   out_1459141969002209441[33] = 0;
   out_1459141969002209441[34] = 0;
   out_1459141969002209441[35] = 0;
   out_1459141969002209441[36] = 0;
   out_1459141969002209441[37] = 0;
   out_1459141969002209441[38] = 0;
   out_1459141969002209441[39] = 0;
   out_1459141969002209441[40] = 0;
   out_1459141969002209441[41] = 0;
   out_1459141969002209441[42] = 0;
   out_1459141969002209441[43] = 0;
   out_1459141969002209441[44] = 0;
   out_1459141969002209441[45] = 0;
   out_1459141969002209441[46] = 1;
   out_1459141969002209441[47] = 0;
   out_1459141969002209441[48] = 0;
   out_1459141969002209441[49] = 0;
   out_1459141969002209441[50] = 0;
   out_1459141969002209441[51] = 0;
   out_1459141969002209441[52] = 0;
   out_1459141969002209441[53] = 0;
   out_1459141969002209441[54] = 0;
   out_1459141969002209441[55] = 0;
   out_1459141969002209441[56] = 0;
   out_1459141969002209441[57] = 0;
   out_1459141969002209441[58] = 0;
   out_1459141969002209441[59] = 0;
   out_1459141969002209441[60] = 0;
   out_1459141969002209441[61] = 0;
   out_1459141969002209441[62] = 0;
   out_1459141969002209441[63] = 0;
   out_1459141969002209441[64] = 0;
   out_1459141969002209441[65] = 0;
}
void h_35(double *state, double *unused, double *out_6768355338992015686) {
   out_6768355338992015686[0] = state[7];
   out_6768355338992015686[1] = state[8];
   out_6768355338992015686[2] = state[9];
}
void H_35(double *state, double *unused, double *out_193652381657144978) {
   out_193652381657144978[0] = 0;
   out_193652381657144978[1] = 0;
   out_193652381657144978[2] = 0;
   out_193652381657144978[3] = 0;
   out_193652381657144978[4] = 0;
   out_193652381657144978[5] = 0;
   out_193652381657144978[6] = 0;
   out_193652381657144978[7] = 1;
   out_193652381657144978[8] = 0;
   out_193652381657144978[9] = 0;
   out_193652381657144978[10] = 0;
   out_193652381657144978[11] = 0;
   out_193652381657144978[12] = 0;
   out_193652381657144978[13] = 0;
   out_193652381657144978[14] = 0;
   out_193652381657144978[15] = 0;
   out_193652381657144978[16] = 0;
   out_193652381657144978[17] = 0;
   out_193652381657144978[18] = 0;
   out_193652381657144978[19] = 0;
   out_193652381657144978[20] = 0;
   out_193652381657144978[21] = 0;
   out_193652381657144978[22] = 0;
   out_193652381657144978[23] = 0;
   out_193652381657144978[24] = 0;
   out_193652381657144978[25] = 0;
   out_193652381657144978[26] = 0;
   out_193652381657144978[27] = 0;
   out_193652381657144978[28] = 0;
   out_193652381657144978[29] = 0;
   out_193652381657144978[30] = 1;
   out_193652381657144978[31] = 0;
   out_193652381657144978[32] = 0;
   out_193652381657144978[33] = 0;
   out_193652381657144978[34] = 0;
   out_193652381657144978[35] = 0;
   out_193652381657144978[36] = 0;
   out_193652381657144978[37] = 0;
   out_193652381657144978[38] = 0;
   out_193652381657144978[39] = 0;
   out_193652381657144978[40] = 0;
   out_193652381657144978[41] = 0;
   out_193652381657144978[42] = 0;
   out_193652381657144978[43] = 0;
   out_193652381657144978[44] = 0;
   out_193652381657144978[45] = 0;
   out_193652381657144978[46] = 0;
   out_193652381657144978[47] = 0;
   out_193652381657144978[48] = 0;
   out_193652381657144978[49] = 0;
   out_193652381657144978[50] = 0;
   out_193652381657144978[51] = 0;
   out_193652381657144978[52] = 0;
   out_193652381657144978[53] = 1;
   out_193652381657144978[54] = 0;
   out_193652381657144978[55] = 0;
   out_193652381657144978[56] = 0;
   out_193652381657144978[57] = 0;
   out_193652381657144978[58] = 0;
   out_193652381657144978[59] = 0;
   out_193652381657144978[60] = 0;
   out_193652381657144978[61] = 0;
   out_193652381657144978[62] = 0;
   out_193652381657144978[63] = 0;
   out_193652381657144978[64] = 0;
   out_193652381657144978[65] = 0;
}
void h_32(double *state, double *unused, double *out_105627388339317119) {
   out_105627388339317119[0] = state[3];
   out_105627388339317119[1] = state[4];
   out_105627388339317119[2] = state[5];
   out_105627388339317119[3] = state[6];
}
void H_32(double *state, double *unused, double *out_551885584454450291) {
   out_551885584454450291[0] = 0;
   out_551885584454450291[1] = 0;
   out_551885584454450291[2] = 0;
   out_551885584454450291[3] = 1;
   out_551885584454450291[4] = 0;
   out_551885584454450291[5] = 0;
   out_551885584454450291[6] = 0;
   out_551885584454450291[7] = 0;
   out_551885584454450291[8] = 0;
   out_551885584454450291[9] = 0;
   out_551885584454450291[10] = 0;
   out_551885584454450291[11] = 0;
   out_551885584454450291[12] = 0;
   out_551885584454450291[13] = 0;
   out_551885584454450291[14] = 0;
   out_551885584454450291[15] = 0;
   out_551885584454450291[16] = 0;
   out_551885584454450291[17] = 0;
   out_551885584454450291[18] = 0;
   out_551885584454450291[19] = 0;
   out_551885584454450291[20] = 0;
   out_551885584454450291[21] = 0;
   out_551885584454450291[22] = 0;
   out_551885584454450291[23] = 0;
   out_551885584454450291[24] = 0;
   out_551885584454450291[25] = 0;
   out_551885584454450291[26] = 1;
   out_551885584454450291[27] = 0;
   out_551885584454450291[28] = 0;
   out_551885584454450291[29] = 0;
   out_551885584454450291[30] = 0;
   out_551885584454450291[31] = 0;
   out_551885584454450291[32] = 0;
   out_551885584454450291[33] = 0;
   out_551885584454450291[34] = 0;
   out_551885584454450291[35] = 0;
   out_551885584454450291[36] = 0;
   out_551885584454450291[37] = 0;
   out_551885584454450291[38] = 0;
   out_551885584454450291[39] = 0;
   out_551885584454450291[40] = 0;
   out_551885584454450291[41] = 0;
   out_551885584454450291[42] = 0;
   out_551885584454450291[43] = 0;
   out_551885584454450291[44] = 0;
   out_551885584454450291[45] = 0;
   out_551885584454450291[46] = 0;
   out_551885584454450291[47] = 0;
   out_551885584454450291[48] = 0;
   out_551885584454450291[49] = 1;
   out_551885584454450291[50] = 0;
   out_551885584454450291[51] = 0;
   out_551885584454450291[52] = 0;
   out_551885584454450291[53] = 0;
   out_551885584454450291[54] = 0;
   out_551885584454450291[55] = 0;
   out_551885584454450291[56] = 0;
   out_551885584454450291[57] = 0;
   out_551885584454450291[58] = 0;
   out_551885584454450291[59] = 0;
   out_551885584454450291[60] = 0;
   out_551885584454450291[61] = 0;
   out_551885584454450291[62] = 0;
   out_551885584454450291[63] = 0;
   out_551885584454450291[64] = 0;
   out_551885584454450291[65] = 0;
   out_551885584454450291[66] = 0;
   out_551885584454450291[67] = 0;
   out_551885584454450291[68] = 0;
   out_551885584454450291[69] = 0;
   out_551885584454450291[70] = 0;
   out_551885584454450291[71] = 0;
   out_551885584454450291[72] = 1;
   out_551885584454450291[73] = 0;
   out_551885584454450291[74] = 0;
   out_551885584454450291[75] = 0;
   out_551885584454450291[76] = 0;
   out_551885584454450291[77] = 0;
   out_551885584454450291[78] = 0;
   out_551885584454450291[79] = 0;
   out_551885584454450291[80] = 0;
   out_551885584454450291[81] = 0;
   out_551885584454450291[82] = 0;
   out_551885584454450291[83] = 0;
   out_551885584454450291[84] = 0;
   out_551885584454450291[85] = 0;
   out_551885584454450291[86] = 0;
   out_551885584454450291[87] = 0;
}
void h_13(double *state, double *unused, double *out_1891740257002358657) {
   out_1891740257002358657[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1891740257002358657[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1891740257002358657[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5225371103979331898) {
   out_5225371103979331898[0] = 0;
   out_5225371103979331898[1] = 0;
   out_5225371103979331898[2] = 0;
   out_5225371103979331898[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5225371103979331898[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5225371103979331898[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5225371103979331898[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5225371103979331898[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5225371103979331898[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5225371103979331898[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5225371103979331898[10] = 0;
   out_5225371103979331898[11] = 0;
   out_5225371103979331898[12] = 0;
   out_5225371103979331898[13] = 0;
   out_5225371103979331898[14] = 0;
   out_5225371103979331898[15] = 0;
   out_5225371103979331898[16] = 0;
   out_5225371103979331898[17] = 0;
   out_5225371103979331898[18] = 0;
   out_5225371103979331898[19] = 0;
   out_5225371103979331898[20] = 0;
   out_5225371103979331898[21] = 0;
   out_5225371103979331898[22] = 0;
   out_5225371103979331898[23] = 0;
   out_5225371103979331898[24] = 0;
   out_5225371103979331898[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5225371103979331898[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5225371103979331898[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5225371103979331898[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5225371103979331898[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5225371103979331898[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5225371103979331898[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5225371103979331898[32] = 0;
   out_5225371103979331898[33] = 0;
   out_5225371103979331898[34] = 0;
   out_5225371103979331898[35] = 0;
   out_5225371103979331898[36] = 0;
   out_5225371103979331898[37] = 0;
   out_5225371103979331898[38] = 0;
   out_5225371103979331898[39] = 0;
   out_5225371103979331898[40] = 0;
   out_5225371103979331898[41] = 0;
   out_5225371103979331898[42] = 0;
   out_5225371103979331898[43] = 0;
   out_5225371103979331898[44] = 0;
   out_5225371103979331898[45] = 0;
   out_5225371103979331898[46] = 0;
   out_5225371103979331898[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5225371103979331898[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5225371103979331898[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5225371103979331898[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5225371103979331898[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5225371103979331898[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5225371103979331898[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5225371103979331898[54] = 0;
   out_5225371103979331898[55] = 0;
   out_5225371103979331898[56] = 0;
   out_5225371103979331898[57] = 0;
   out_5225371103979331898[58] = 0;
   out_5225371103979331898[59] = 0;
   out_5225371103979331898[60] = 0;
   out_5225371103979331898[61] = 0;
   out_5225371103979331898[62] = 0;
   out_5225371103979331898[63] = 0;
   out_5225371103979331898[64] = 0;
   out_5225371103979331898[65] = 0;
}
void h_14(double *state, double *unused, double *out_4156606641939238231) {
   out_4156606641939238231[0] = state[10];
   out_4156606641939238231[1] = state[11];
   out_4156606641939238231[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3726904496234695116) {
   out_3726904496234695116[0] = 0;
   out_3726904496234695116[1] = 0;
   out_3726904496234695116[2] = 0;
   out_3726904496234695116[3] = 0;
   out_3726904496234695116[4] = 0;
   out_3726904496234695116[5] = 0;
   out_3726904496234695116[6] = 0;
   out_3726904496234695116[7] = 0;
   out_3726904496234695116[8] = 0;
   out_3726904496234695116[9] = 0;
   out_3726904496234695116[10] = 1;
   out_3726904496234695116[11] = 0;
   out_3726904496234695116[12] = 0;
   out_3726904496234695116[13] = 0;
   out_3726904496234695116[14] = 0;
   out_3726904496234695116[15] = 0;
   out_3726904496234695116[16] = 0;
   out_3726904496234695116[17] = 0;
   out_3726904496234695116[18] = 0;
   out_3726904496234695116[19] = 0;
   out_3726904496234695116[20] = 0;
   out_3726904496234695116[21] = 0;
   out_3726904496234695116[22] = 0;
   out_3726904496234695116[23] = 0;
   out_3726904496234695116[24] = 0;
   out_3726904496234695116[25] = 0;
   out_3726904496234695116[26] = 0;
   out_3726904496234695116[27] = 0;
   out_3726904496234695116[28] = 0;
   out_3726904496234695116[29] = 0;
   out_3726904496234695116[30] = 0;
   out_3726904496234695116[31] = 0;
   out_3726904496234695116[32] = 0;
   out_3726904496234695116[33] = 1;
   out_3726904496234695116[34] = 0;
   out_3726904496234695116[35] = 0;
   out_3726904496234695116[36] = 0;
   out_3726904496234695116[37] = 0;
   out_3726904496234695116[38] = 0;
   out_3726904496234695116[39] = 0;
   out_3726904496234695116[40] = 0;
   out_3726904496234695116[41] = 0;
   out_3726904496234695116[42] = 0;
   out_3726904496234695116[43] = 0;
   out_3726904496234695116[44] = 0;
   out_3726904496234695116[45] = 0;
   out_3726904496234695116[46] = 0;
   out_3726904496234695116[47] = 0;
   out_3726904496234695116[48] = 0;
   out_3726904496234695116[49] = 0;
   out_3726904496234695116[50] = 0;
   out_3726904496234695116[51] = 0;
   out_3726904496234695116[52] = 0;
   out_3726904496234695116[53] = 0;
   out_3726904496234695116[54] = 0;
   out_3726904496234695116[55] = 0;
   out_3726904496234695116[56] = 1;
   out_3726904496234695116[57] = 0;
   out_3726904496234695116[58] = 0;
   out_3726904496234695116[59] = 0;
   out_3726904496234695116[60] = 0;
   out_3726904496234695116[61] = 0;
   out_3726904496234695116[62] = 0;
   out_3726904496234695116[63] = 0;
   out_3726904496234695116[64] = 0;
   out_3726904496234695116[65] = 0;
}
void h_33(double *state, double *unused, double *out_3466329246837736912) {
   out_3466329246837736912[0] = state[16];
   out_3466329246837736912[1] = state[17];
   out_3466329246837736912[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2956904622981712626) {
   out_2956904622981712626[0] = 0;
   out_2956904622981712626[1] = 0;
   out_2956904622981712626[2] = 0;
   out_2956904622981712626[3] = 0;
   out_2956904622981712626[4] = 0;
   out_2956904622981712626[5] = 0;
   out_2956904622981712626[6] = 0;
   out_2956904622981712626[7] = 0;
   out_2956904622981712626[8] = 0;
   out_2956904622981712626[9] = 0;
   out_2956904622981712626[10] = 0;
   out_2956904622981712626[11] = 0;
   out_2956904622981712626[12] = 0;
   out_2956904622981712626[13] = 0;
   out_2956904622981712626[14] = 0;
   out_2956904622981712626[15] = 0;
   out_2956904622981712626[16] = 1;
   out_2956904622981712626[17] = 0;
   out_2956904622981712626[18] = 0;
   out_2956904622981712626[19] = 0;
   out_2956904622981712626[20] = 0;
   out_2956904622981712626[21] = 0;
   out_2956904622981712626[22] = 0;
   out_2956904622981712626[23] = 0;
   out_2956904622981712626[24] = 0;
   out_2956904622981712626[25] = 0;
   out_2956904622981712626[26] = 0;
   out_2956904622981712626[27] = 0;
   out_2956904622981712626[28] = 0;
   out_2956904622981712626[29] = 0;
   out_2956904622981712626[30] = 0;
   out_2956904622981712626[31] = 0;
   out_2956904622981712626[32] = 0;
   out_2956904622981712626[33] = 0;
   out_2956904622981712626[34] = 0;
   out_2956904622981712626[35] = 0;
   out_2956904622981712626[36] = 0;
   out_2956904622981712626[37] = 0;
   out_2956904622981712626[38] = 0;
   out_2956904622981712626[39] = 1;
   out_2956904622981712626[40] = 0;
   out_2956904622981712626[41] = 0;
   out_2956904622981712626[42] = 0;
   out_2956904622981712626[43] = 0;
   out_2956904622981712626[44] = 0;
   out_2956904622981712626[45] = 0;
   out_2956904622981712626[46] = 0;
   out_2956904622981712626[47] = 0;
   out_2956904622981712626[48] = 0;
   out_2956904622981712626[49] = 0;
   out_2956904622981712626[50] = 0;
   out_2956904622981712626[51] = 0;
   out_2956904622981712626[52] = 0;
   out_2956904622981712626[53] = 0;
   out_2956904622981712626[54] = 0;
   out_2956904622981712626[55] = 0;
   out_2956904622981712626[56] = 0;
   out_2956904622981712626[57] = 0;
   out_2956904622981712626[58] = 0;
   out_2956904622981712626[59] = 0;
   out_2956904622981712626[60] = 0;
   out_2956904622981712626[61] = 0;
   out_2956904622981712626[62] = 1;
   out_2956904622981712626[63] = 0;
   out_2956904622981712626[64] = 0;
   out_2956904622981712626[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3622414979086600865) {
  H(in_vec, out_3622414979086600865);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_38797295725815433) {
  err_fun(nom_x, delta_x, out_38797295725815433);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_325556698482470826) {
  inv_err_fun(nom_x, true_x, out_325556698482470826);
}
void live_H_mod_fun(double *state, double *out_8062570676317398071) {
  H_mod_fun(state, out_8062570676317398071);
}
void live_f_fun(double *state, double dt, double *out_2324052246727024358) {
  f_fun(state,  dt, out_2324052246727024358);
}
void live_F_fun(double *state, double dt, double *out_1193340919506574733) {
  F_fun(state,  dt, out_1193340919506574733);
}
void live_h_4(double *state, double *unused, double *out_1581327245785564682) {
  h_4(state, unused, out_1581327245785564682);
}
void live_H_4(double *state, double *unused, double *out_3560314439029752354) {
  H_4(state, unused, out_3560314439029752354);
}
void live_h_9(double *state, double *unused, double *out_4156606641939238231) {
  h_9(state, unused, out_4156606641939238231);
}
void live_H_9(double *state, double *unused, double *out_3726904496234695116) {
  H_9(state, unused, out_3726904496234695116);
}
void live_h_10(double *state, double *unused, double *out_612625027598883080) {
  h_10(state, unused, out_612625027598883080);
}
void live_H_10(double *state, double *unused, double *out_5366888770286021224) {
  H_10(state, unused, out_5366888770286021224);
}
void live_h_12(double *state, double *unused, double *out_6997745622421151355) {
  h_12(state, unused, out_6997745622421151355);
}
void live_H_12(double *state, double *unused, double *out_1459141969002209441) {
  H_12(state, unused, out_1459141969002209441);
}
void live_h_35(double *state, double *unused, double *out_6768355338992015686) {
  h_35(state, unused, out_6768355338992015686);
}
void live_H_35(double *state, double *unused, double *out_193652381657144978) {
  H_35(state, unused, out_193652381657144978);
}
void live_h_32(double *state, double *unused, double *out_105627388339317119) {
  h_32(state, unused, out_105627388339317119);
}
void live_H_32(double *state, double *unused, double *out_551885584454450291) {
  H_32(state, unused, out_551885584454450291);
}
void live_h_13(double *state, double *unused, double *out_1891740257002358657) {
  h_13(state, unused, out_1891740257002358657);
}
void live_H_13(double *state, double *unused, double *out_5225371103979331898) {
  H_13(state, unused, out_5225371103979331898);
}
void live_h_14(double *state, double *unused, double *out_4156606641939238231) {
  h_14(state, unused, out_4156606641939238231);
}
void live_H_14(double *state, double *unused, double *out_3726904496234695116) {
  H_14(state, unused, out_3726904496234695116);
}
void live_h_33(double *state, double *unused, double *out_3466329246837736912) {
  h_33(state, unused, out_3466329246837736912);
}
void live_H_33(double *state, double *unused, double *out_2956904622981712626) {
  H_33(state, unused, out_2956904622981712626);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
