#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3895032278166077730) {
   out_3895032278166077730[0] = 0;
   out_3895032278166077730[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3895032278166077730[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3895032278166077730[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3895032278166077730[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3895032278166077730[5] = -sin(in_vec[1]);
   out_3895032278166077730[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3895032278166077730[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3895032278166077730[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3895032278166077730[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3895032278166077730[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3895032278166077730[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3895032278166077730[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3895032278166077730[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3895032278166077730[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3895032278166077730[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3895032278166077730[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3895032278166077730[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_8054675389181873404) {
   out_8054675389181873404[0] = delta_x[0] + nom_x[0];
   out_8054675389181873404[1] = delta_x[1] + nom_x[1];
   out_8054675389181873404[2] = delta_x[2] + nom_x[2];
   out_8054675389181873404[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_8054675389181873404[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_8054675389181873404[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_8054675389181873404[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_8054675389181873404[7] = delta_x[6] + nom_x[7];
   out_8054675389181873404[8] = delta_x[7] + nom_x[8];
   out_8054675389181873404[9] = delta_x[8] + nom_x[9];
   out_8054675389181873404[10] = delta_x[9] + nom_x[10];
   out_8054675389181873404[11] = delta_x[10] + nom_x[11];
   out_8054675389181873404[12] = delta_x[11] + nom_x[12];
   out_8054675389181873404[13] = delta_x[12] + nom_x[13];
   out_8054675389181873404[14] = delta_x[13] + nom_x[14];
   out_8054675389181873404[15] = delta_x[14] + nom_x[15];
   out_8054675389181873404[16] = delta_x[15] + nom_x[16];
   out_8054675389181873404[17] = delta_x[16] + nom_x[17];
   out_8054675389181873404[18] = delta_x[17] + nom_x[18];
   out_8054675389181873404[19] = delta_x[18] + nom_x[19];
   out_8054675389181873404[20] = delta_x[19] + nom_x[20];
   out_8054675389181873404[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5712105108510026254) {
   out_5712105108510026254[0] = -nom_x[0] + true_x[0];
   out_5712105108510026254[1] = -nom_x[1] + true_x[1];
   out_5712105108510026254[2] = -nom_x[2] + true_x[2];
   out_5712105108510026254[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5712105108510026254[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5712105108510026254[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5712105108510026254[6] = -nom_x[7] + true_x[7];
   out_5712105108510026254[7] = -nom_x[8] + true_x[8];
   out_5712105108510026254[8] = -nom_x[9] + true_x[9];
   out_5712105108510026254[9] = -nom_x[10] + true_x[10];
   out_5712105108510026254[10] = -nom_x[11] + true_x[11];
   out_5712105108510026254[11] = -nom_x[12] + true_x[12];
   out_5712105108510026254[12] = -nom_x[13] + true_x[13];
   out_5712105108510026254[13] = -nom_x[14] + true_x[14];
   out_5712105108510026254[14] = -nom_x[15] + true_x[15];
   out_5712105108510026254[15] = -nom_x[16] + true_x[16];
   out_5712105108510026254[16] = -nom_x[17] + true_x[17];
   out_5712105108510026254[17] = -nom_x[18] + true_x[18];
   out_5712105108510026254[18] = -nom_x[19] + true_x[19];
   out_5712105108510026254[19] = -nom_x[20] + true_x[20];
   out_5712105108510026254[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7527931049159315624) {
   out_7527931049159315624[0] = 1.0;
   out_7527931049159315624[1] = 0;
   out_7527931049159315624[2] = 0;
   out_7527931049159315624[3] = 0;
   out_7527931049159315624[4] = 0;
   out_7527931049159315624[5] = 0;
   out_7527931049159315624[6] = 0;
   out_7527931049159315624[7] = 0;
   out_7527931049159315624[8] = 0;
   out_7527931049159315624[9] = 0;
   out_7527931049159315624[10] = 0;
   out_7527931049159315624[11] = 0;
   out_7527931049159315624[12] = 0;
   out_7527931049159315624[13] = 0;
   out_7527931049159315624[14] = 0;
   out_7527931049159315624[15] = 0;
   out_7527931049159315624[16] = 0;
   out_7527931049159315624[17] = 0;
   out_7527931049159315624[18] = 0;
   out_7527931049159315624[19] = 0;
   out_7527931049159315624[20] = 0;
   out_7527931049159315624[21] = 0;
   out_7527931049159315624[22] = 1.0;
   out_7527931049159315624[23] = 0;
   out_7527931049159315624[24] = 0;
   out_7527931049159315624[25] = 0;
   out_7527931049159315624[26] = 0;
   out_7527931049159315624[27] = 0;
   out_7527931049159315624[28] = 0;
   out_7527931049159315624[29] = 0;
   out_7527931049159315624[30] = 0;
   out_7527931049159315624[31] = 0;
   out_7527931049159315624[32] = 0;
   out_7527931049159315624[33] = 0;
   out_7527931049159315624[34] = 0;
   out_7527931049159315624[35] = 0;
   out_7527931049159315624[36] = 0;
   out_7527931049159315624[37] = 0;
   out_7527931049159315624[38] = 0;
   out_7527931049159315624[39] = 0;
   out_7527931049159315624[40] = 0;
   out_7527931049159315624[41] = 0;
   out_7527931049159315624[42] = 0;
   out_7527931049159315624[43] = 0;
   out_7527931049159315624[44] = 1.0;
   out_7527931049159315624[45] = 0;
   out_7527931049159315624[46] = 0;
   out_7527931049159315624[47] = 0;
   out_7527931049159315624[48] = 0;
   out_7527931049159315624[49] = 0;
   out_7527931049159315624[50] = 0;
   out_7527931049159315624[51] = 0;
   out_7527931049159315624[52] = 0;
   out_7527931049159315624[53] = 0;
   out_7527931049159315624[54] = 0;
   out_7527931049159315624[55] = 0;
   out_7527931049159315624[56] = 0;
   out_7527931049159315624[57] = 0;
   out_7527931049159315624[58] = 0;
   out_7527931049159315624[59] = 0;
   out_7527931049159315624[60] = 0;
   out_7527931049159315624[61] = 0;
   out_7527931049159315624[62] = 0;
   out_7527931049159315624[63] = 0;
   out_7527931049159315624[64] = 0;
   out_7527931049159315624[65] = 0;
   out_7527931049159315624[66] = -0.5*state[4];
   out_7527931049159315624[67] = -0.5*state[5];
   out_7527931049159315624[68] = -0.5*state[6];
   out_7527931049159315624[69] = 0;
   out_7527931049159315624[70] = 0;
   out_7527931049159315624[71] = 0;
   out_7527931049159315624[72] = 0;
   out_7527931049159315624[73] = 0;
   out_7527931049159315624[74] = 0;
   out_7527931049159315624[75] = 0;
   out_7527931049159315624[76] = 0;
   out_7527931049159315624[77] = 0;
   out_7527931049159315624[78] = 0;
   out_7527931049159315624[79] = 0;
   out_7527931049159315624[80] = 0;
   out_7527931049159315624[81] = 0;
   out_7527931049159315624[82] = 0;
   out_7527931049159315624[83] = 0;
   out_7527931049159315624[84] = 0;
   out_7527931049159315624[85] = 0;
   out_7527931049159315624[86] = 0;
   out_7527931049159315624[87] = 0.5*state[3];
   out_7527931049159315624[88] = 0.5*state[6];
   out_7527931049159315624[89] = -0.5*state[5];
   out_7527931049159315624[90] = 0;
   out_7527931049159315624[91] = 0;
   out_7527931049159315624[92] = 0;
   out_7527931049159315624[93] = 0;
   out_7527931049159315624[94] = 0;
   out_7527931049159315624[95] = 0;
   out_7527931049159315624[96] = 0;
   out_7527931049159315624[97] = 0;
   out_7527931049159315624[98] = 0;
   out_7527931049159315624[99] = 0;
   out_7527931049159315624[100] = 0;
   out_7527931049159315624[101] = 0;
   out_7527931049159315624[102] = 0;
   out_7527931049159315624[103] = 0;
   out_7527931049159315624[104] = 0;
   out_7527931049159315624[105] = 0;
   out_7527931049159315624[106] = 0;
   out_7527931049159315624[107] = 0;
   out_7527931049159315624[108] = -0.5*state[6];
   out_7527931049159315624[109] = 0.5*state[3];
   out_7527931049159315624[110] = 0.5*state[4];
   out_7527931049159315624[111] = 0;
   out_7527931049159315624[112] = 0;
   out_7527931049159315624[113] = 0;
   out_7527931049159315624[114] = 0;
   out_7527931049159315624[115] = 0;
   out_7527931049159315624[116] = 0;
   out_7527931049159315624[117] = 0;
   out_7527931049159315624[118] = 0;
   out_7527931049159315624[119] = 0;
   out_7527931049159315624[120] = 0;
   out_7527931049159315624[121] = 0;
   out_7527931049159315624[122] = 0;
   out_7527931049159315624[123] = 0;
   out_7527931049159315624[124] = 0;
   out_7527931049159315624[125] = 0;
   out_7527931049159315624[126] = 0;
   out_7527931049159315624[127] = 0;
   out_7527931049159315624[128] = 0;
   out_7527931049159315624[129] = 0.5*state[5];
   out_7527931049159315624[130] = -0.5*state[4];
   out_7527931049159315624[131] = 0.5*state[3];
   out_7527931049159315624[132] = 0;
   out_7527931049159315624[133] = 0;
   out_7527931049159315624[134] = 0;
   out_7527931049159315624[135] = 0;
   out_7527931049159315624[136] = 0;
   out_7527931049159315624[137] = 0;
   out_7527931049159315624[138] = 0;
   out_7527931049159315624[139] = 0;
   out_7527931049159315624[140] = 0;
   out_7527931049159315624[141] = 0;
   out_7527931049159315624[142] = 0;
   out_7527931049159315624[143] = 0;
   out_7527931049159315624[144] = 0;
   out_7527931049159315624[145] = 0;
   out_7527931049159315624[146] = 0;
   out_7527931049159315624[147] = 0;
   out_7527931049159315624[148] = 0;
   out_7527931049159315624[149] = 0;
   out_7527931049159315624[150] = 0;
   out_7527931049159315624[151] = 0;
   out_7527931049159315624[152] = 0;
   out_7527931049159315624[153] = 1.0;
   out_7527931049159315624[154] = 0;
   out_7527931049159315624[155] = 0;
   out_7527931049159315624[156] = 0;
   out_7527931049159315624[157] = 0;
   out_7527931049159315624[158] = 0;
   out_7527931049159315624[159] = 0;
   out_7527931049159315624[160] = 0;
   out_7527931049159315624[161] = 0;
   out_7527931049159315624[162] = 0;
   out_7527931049159315624[163] = 0;
   out_7527931049159315624[164] = 0;
   out_7527931049159315624[165] = 0;
   out_7527931049159315624[166] = 0;
   out_7527931049159315624[167] = 0;
   out_7527931049159315624[168] = 0;
   out_7527931049159315624[169] = 0;
   out_7527931049159315624[170] = 0;
   out_7527931049159315624[171] = 0;
   out_7527931049159315624[172] = 0;
   out_7527931049159315624[173] = 0;
   out_7527931049159315624[174] = 0;
   out_7527931049159315624[175] = 1.0;
   out_7527931049159315624[176] = 0;
   out_7527931049159315624[177] = 0;
   out_7527931049159315624[178] = 0;
   out_7527931049159315624[179] = 0;
   out_7527931049159315624[180] = 0;
   out_7527931049159315624[181] = 0;
   out_7527931049159315624[182] = 0;
   out_7527931049159315624[183] = 0;
   out_7527931049159315624[184] = 0;
   out_7527931049159315624[185] = 0;
   out_7527931049159315624[186] = 0;
   out_7527931049159315624[187] = 0;
   out_7527931049159315624[188] = 0;
   out_7527931049159315624[189] = 0;
   out_7527931049159315624[190] = 0;
   out_7527931049159315624[191] = 0;
   out_7527931049159315624[192] = 0;
   out_7527931049159315624[193] = 0;
   out_7527931049159315624[194] = 0;
   out_7527931049159315624[195] = 0;
   out_7527931049159315624[196] = 0;
   out_7527931049159315624[197] = 1.0;
   out_7527931049159315624[198] = 0;
   out_7527931049159315624[199] = 0;
   out_7527931049159315624[200] = 0;
   out_7527931049159315624[201] = 0;
   out_7527931049159315624[202] = 0;
   out_7527931049159315624[203] = 0;
   out_7527931049159315624[204] = 0;
   out_7527931049159315624[205] = 0;
   out_7527931049159315624[206] = 0;
   out_7527931049159315624[207] = 0;
   out_7527931049159315624[208] = 0;
   out_7527931049159315624[209] = 0;
   out_7527931049159315624[210] = 0;
   out_7527931049159315624[211] = 0;
   out_7527931049159315624[212] = 0;
   out_7527931049159315624[213] = 0;
   out_7527931049159315624[214] = 0;
   out_7527931049159315624[215] = 0;
   out_7527931049159315624[216] = 0;
   out_7527931049159315624[217] = 0;
   out_7527931049159315624[218] = 0;
   out_7527931049159315624[219] = 1.0;
   out_7527931049159315624[220] = 0;
   out_7527931049159315624[221] = 0;
   out_7527931049159315624[222] = 0;
   out_7527931049159315624[223] = 0;
   out_7527931049159315624[224] = 0;
   out_7527931049159315624[225] = 0;
   out_7527931049159315624[226] = 0;
   out_7527931049159315624[227] = 0;
   out_7527931049159315624[228] = 0;
   out_7527931049159315624[229] = 0;
   out_7527931049159315624[230] = 0;
   out_7527931049159315624[231] = 0;
   out_7527931049159315624[232] = 0;
   out_7527931049159315624[233] = 0;
   out_7527931049159315624[234] = 0;
   out_7527931049159315624[235] = 0;
   out_7527931049159315624[236] = 0;
   out_7527931049159315624[237] = 0;
   out_7527931049159315624[238] = 0;
   out_7527931049159315624[239] = 0;
   out_7527931049159315624[240] = 0;
   out_7527931049159315624[241] = 1.0;
   out_7527931049159315624[242] = 0;
   out_7527931049159315624[243] = 0;
   out_7527931049159315624[244] = 0;
   out_7527931049159315624[245] = 0;
   out_7527931049159315624[246] = 0;
   out_7527931049159315624[247] = 0;
   out_7527931049159315624[248] = 0;
   out_7527931049159315624[249] = 0;
   out_7527931049159315624[250] = 0;
   out_7527931049159315624[251] = 0;
   out_7527931049159315624[252] = 0;
   out_7527931049159315624[253] = 0;
   out_7527931049159315624[254] = 0;
   out_7527931049159315624[255] = 0;
   out_7527931049159315624[256] = 0;
   out_7527931049159315624[257] = 0;
   out_7527931049159315624[258] = 0;
   out_7527931049159315624[259] = 0;
   out_7527931049159315624[260] = 0;
   out_7527931049159315624[261] = 0;
   out_7527931049159315624[262] = 0;
   out_7527931049159315624[263] = 1.0;
   out_7527931049159315624[264] = 0;
   out_7527931049159315624[265] = 0;
   out_7527931049159315624[266] = 0;
   out_7527931049159315624[267] = 0;
   out_7527931049159315624[268] = 0;
   out_7527931049159315624[269] = 0;
   out_7527931049159315624[270] = 0;
   out_7527931049159315624[271] = 0;
   out_7527931049159315624[272] = 0;
   out_7527931049159315624[273] = 0;
   out_7527931049159315624[274] = 0;
   out_7527931049159315624[275] = 0;
   out_7527931049159315624[276] = 0;
   out_7527931049159315624[277] = 0;
   out_7527931049159315624[278] = 0;
   out_7527931049159315624[279] = 0;
   out_7527931049159315624[280] = 0;
   out_7527931049159315624[281] = 0;
   out_7527931049159315624[282] = 0;
   out_7527931049159315624[283] = 0;
   out_7527931049159315624[284] = 0;
   out_7527931049159315624[285] = 1.0;
   out_7527931049159315624[286] = 0;
   out_7527931049159315624[287] = 0;
   out_7527931049159315624[288] = 0;
   out_7527931049159315624[289] = 0;
   out_7527931049159315624[290] = 0;
   out_7527931049159315624[291] = 0;
   out_7527931049159315624[292] = 0;
   out_7527931049159315624[293] = 0;
   out_7527931049159315624[294] = 0;
   out_7527931049159315624[295] = 0;
   out_7527931049159315624[296] = 0;
   out_7527931049159315624[297] = 0;
   out_7527931049159315624[298] = 0;
   out_7527931049159315624[299] = 0;
   out_7527931049159315624[300] = 0;
   out_7527931049159315624[301] = 0;
   out_7527931049159315624[302] = 0;
   out_7527931049159315624[303] = 0;
   out_7527931049159315624[304] = 0;
   out_7527931049159315624[305] = 0;
   out_7527931049159315624[306] = 0;
   out_7527931049159315624[307] = 1.0;
   out_7527931049159315624[308] = 0;
   out_7527931049159315624[309] = 0;
   out_7527931049159315624[310] = 0;
   out_7527931049159315624[311] = 0;
   out_7527931049159315624[312] = 0;
   out_7527931049159315624[313] = 0;
   out_7527931049159315624[314] = 0;
   out_7527931049159315624[315] = 0;
   out_7527931049159315624[316] = 0;
   out_7527931049159315624[317] = 0;
   out_7527931049159315624[318] = 0;
   out_7527931049159315624[319] = 0;
   out_7527931049159315624[320] = 0;
   out_7527931049159315624[321] = 0;
   out_7527931049159315624[322] = 0;
   out_7527931049159315624[323] = 0;
   out_7527931049159315624[324] = 0;
   out_7527931049159315624[325] = 0;
   out_7527931049159315624[326] = 0;
   out_7527931049159315624[327] = 0;
   out_7527931049159315624[328] = 0;
   out_7527931049159315624[329] = 1.0;
   out_7527931049159315624[330] = 0;
   out_7527931049159315624[331] = 0;
   out_7527931049159315624[332] = 0;
   out_7527931049159315624[333] = 0;
   out_7527931049159315624[334] = 0;
   out_7527931049159315624[335] = 0;
   out_7527931049159315624[336] = 0;
   out_7527931049159315624[337] = 0;
   out_7527931049159315624[338] = 0;
   out_7527931049159315624[339] = 0;
   out_7527931049159315624[340] = 0;
   out_7527931049159315624[341] = 0;
   out_7527931049159315624[342] = 0;
   out_7527931049159315624[343] = 0;
   out_7527931049159315624[344] = 0;
   out_7527931049159315624[345] = 0;
   out_7527931049159315624[346] = 0;
   out_7527931049159315624[347] = 0;
   out_7527931049159315624[348] = 0;
   out_7527931049159315624[349] = 0;
   out_7527931049159315624[350] = 0;
   out_7527931049159315624[351] = 1.0;
   out_7527931049159315624[352] = 0;
   out_7527931049159315624[353] = 0;
   out_7527931049159315624[354] = 0;
   out_7527931049159315624[355] = 0;
   out_7527931049159315624[356] = 0;
   out_7527931049159315624[357] = 0;
   out_7527931049159315624[358] = 0;
   out_7527931049159315624[359] = 0;
   out_7527931049159315624[360] = 0;
   out_7527931049159315624[361] = 0;
   out_7527931049159315624[362] = 0;
   out_7527931049159315624[363] = 0;
   out_7527931049159315624[364] = 0;
   out_7527931049159315624[365] = 0;
   out_7527931049159315624[366] = 0;
   out_7527931049159315624[367] = 0;
   out_7527931049159315624[368] = 0;
   out_7527931049159315624[369] = 0;
   out_7527931049159315624[370] = 0;
   out_7527931049159315624[371] = 0;
   out_7527931049159315624[372] = 0;
   out_7527931049159315624[373] = 1.0;
   out_7527931049159315624[374] = 0;
   out_7527931049159315624[375] = 0;
   out_7527931049159315624[376] = 0;
   out_7527931049159315624[377] = 0;
   out_7527931049159315624[378] = 0;
   out_7527931049159315624[379] = 0;
   out_7527931049159315624[380] = 0;
   out_7527931049159315624[381] = 0;
   out_7527931049159315624[382] = 0;
   out_7527931049159315624[383] = 0;
   out_7527931049159315624[384] = 0;
   out_7527931049159315624[385] = 0;
   out_7527931049159315624[386] = 0;
   out_7527931049159315624[387] = 0;
   out_7527931049159315624[388] = 0;
   out_7527931049159315624[389] = 0;
   out_7527931049159315624[390] = 0;
   out_7527931049159315624[391] = 0;
   out_7527931049159315624[392] = 0;
   out_7527931049159315624[393] = 0;
   out_7527931049159315624[394] = 0;
   out_7527931049159315624[395] = 1.0;
   out_7527931049159315624[396] = 0;
   out_7527931049159315624[397] = 0;
   out_7527931049159315624[398] = 0;
   out_7527931049159315624[399] = 0;
   out_7527931049159315624[400] = 0;
   out_7527931049159315624[401] = 0;
   out_7527931049159315624[402] = 0;
   out_7527931049159315624[403] = 0;
   out_7527931049159315624[404] = 0;
   out_7527931049159315624[405] = 0;
   out_7527931049159315624[406] = 0;
   out_7527931049159315624[407] = 0;
   out_7527931049159315624[408] = 0;
   out_7527931049159315624[409] = 0;
   out_7527931049159315624[410] = 0;
   out_7527931049159315624[411] = 0;
   out_7527931049159315624[412] = 0;
   out_7527931049159315624[413] = 0;
   out_7527931049159315624[414] = 0;
   out_7527931049159315624[415] = 0;
   out_7527931049159315624[416] = 0;
   out_7527931049159315624[417] = 1.0;
   out_7527931049159315624[418] = 0;
   out_7527931049159315624[419] = 0;
   out_7527931049159315624[420] = 0;
   out_7527931049159315624[421] = 0;
   out_7527931049159315624[422] = 0;
   out_7527931049159315624[423] = 0;
   out_7527931049159315624[424] = 0;
   out_7527931049159315624[425] = 0;
   out_7527931049159315624[426] = 0;
   out_7527931049159315624[427] = 0;
   out_7527931049159315624[428] = 0;
   out_7527931049159315624[429] = 0;
   out_7527931049159315624[430] = 0;
   out_7527931049159315624[431] = 0;
   out_7527931049159315624[432] = 0;
   out_7527931049159315624[433] = 0;
   out_7527931049159315624[434] = 0;
   out_7527931049159315624[435] = 0;
   out_7527931049159315624[436] = 0;
   out_7527931049159315624[437] = 0;
   out_7527931049159315624[438] = 0;
   out_7527931049159315624[439] = 1.0;
   out_7527931049159315624[440] = 0;
   out_7527931049159315624[441] = 0;
   out_7527931049159315624[442] = 0;
   out_7527931049159315624[443] = 0;
   out_7527931049159315624[444] = 0;
   out_7527931049159315624[445] = 0;
   out_7527931049159315624[446] = 0;
   out_7527931049159315624[447] = 0;
   out_7527931049159315624[448] = 0;
   out_7527931049159315624[449] = 0;
   out_7527931049159315624[450] = 0;
   out_7527931049159315624[451] = 0;
   out_7527931049159315624[452] = 0;
   out_7527931049159315624[453] = 0;
   out_7527931049159315624[454] = 0;
   out_7527931049159315624[455] = 0;
   out_7527931049159315624[456] = 0;
   out_7527931049159315624[457] = 0;
   out_7527931049159315624[458] = 0;
   out_7527931049159315624[459] = 0;
   out_7527931049159315624[460] = 0;
   out_7527931049159315624[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3528148062823701629) {
   out_3528148062823701629[0] = dt*state[7] + state[0];
   out_3528148062823701629[1] = dt*state[8] + state[1];
   out_3528148062823701629[2] = dt*state[9] + state[2];
   out_3528148062823701629[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3528148062823701629[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3528148062823701629[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3528148062823701629[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3528148062823701629[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3528148062823701629[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3528148062823701629[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3528148062823701629[10] = state[10];
   out_3528148062823701629[11] = state[11];
   out_3528148062823701629[12] = state[12];
   out_3528148062823701629[13] = state[13];
   out_3528148062823701629[14] = state[14];
   out_3528148062823701629[15] = state[15];
   out_3528148062823701629[16] = state[16];
   out_3528148062823701629[17] = state[17];
   out_3528148062823701629[18] = state[18];
   out_3528148062823701629[19] = state[19];
   out_3528148062823701629[20] = state[20];
   out_3528148062823701629[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3316589180053824384) {
   out_3316589180053824384[0] = 1;
   out_3316589180053824384[1] = 0;
   out_3316589180053824384[2] = 0;
   out_3316589180053824384[3] = 0;
   out_3316589180053824384[4] = 0;
   out_3316589180053824384[5] = 0;
   out_3316589180053824384[6] = dt;
   out_3316589180053824384[7] = 0;
   out_3316589180053824384[8] = 0;
   out_3316589180053824384[9] = 0;
   out_3316589180053824384[10] = 0;
   out_3316589180053824384[11] = 0;
   out_3316589180053824384[12] = 0;
   out_3316589180053824384[13] = 0;
   out_3316589180053824384[14] = 0;
   out_3316589180053824384[15] = 0;
   out_3316589180053824384[16] = 0;
   out_3316589180053824384[17] = 0;
   out_3316589180053824384[18] = 0;
   out_3316589180053824384[19] = 0;
   out_3316589180053824384[20] = 0;
   out_3316589180053824384[21] = 0;
   out_3316589180053824384[22] = 1;
   out_3316589180053824384[23] = 0;
   out_3316589180053824384[24] = 0;
   out_3316589180053824384[25] = 0;
   out_3316589180053824384[26] = 0;
   out_3316589180053824384[27] = 0;
   out_3316589180053824384[28] = dt;
   out_3316589180053824384[29] = 0;
   out_3316589180053824384[30] = 0;
   out_3316589180053824384[31] = 0;
   out_3316589180053824384[32] = 0;
   out_3316589180053824384[33] = 0;
   out_3316589180053824384[34] = 0;
   out_3316589180053824384[35] = 0;
   out_3316589180053824384[36] = 0;
   out_3316589180053824384[37] = 0;
   out_3316589180053824384[38] = 0;
   out_3316589180053824384[39] = 0;
   out_3316589180053824384[40] = 0;
   out_3316589180053824384[41] = 0;
   out_3316589180053824384[42] = 0;
   out_3316589180053824384[43] = 0;
   out_3316589180053824384[44] = 1;
   out_3316589180053824384[45] = 0;
   out_3316589180053824384[46] = 0;
   out_3316589180053824384[47] = 0;
   out_3316589180053824384[48] = 0;
   out_3316589180053824384[49] = 0;
   out_3316589180053824384[50] = dt;
   out_3316589180053824384[51] = 0;
   out_3316589180053824384[52] = 0;
   out_3316589180053824384[53] = 0;
   out_3316589180053824384[54] = 0;
   out_3316589180053824384[55] = 0;
   out_3316589180053824384[56] = 0;
   out_3316589180053824384[57] = 0;
   out_3316589180053824384[58] = 0;
   out_3316589180053824384[59] = 0;
   out_3316589180053824384[60] = 0;
   out_3316589180053824384[61] = 0;
   out_3316589180053824384[62] = 0;
   out_3316589180053824384[63] = 0;
   out_3316589180053824384[64] = 0;
   out_3316589180053824384[65] = 0;
   out_3316589180053824384[66] = 1;
   out_3316589180053824384[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3316589180053824384[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3316589180053824384[69] = 0;
   out_3316589180053824384[70] = 0;
   out_3316589180053824384[71] = 0;
   out_3316589180053824384[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3316589180053824384[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3316589180053824384[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3316589180053824384[75] = 0;
   out_3316589180053824384[76] = 0;
   out_3316589180053824384[77] = 0;
   out_3316589180053824384[78] = 0;
   out_3316589180053824384[79] = 0;
   out_3316589180053824384[80] = 0;
   out_3316589180053824384[81] = 0;
   out_3316589180053824384[82] = 0;
   out_3316589180053824384[83] = 0;
   out_3316589180053824384[84] = 0;
   out_3316589180053824384[85] = 0;
   out_3316589180053824384[86] = 0;
   out_3316589180053824384[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3316589180053824384[88] = 1;
   out_3316589180053824384[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3316589180053824384[90] = 0;
   out_3316589180053824384[91] = 0;
   out_3316589180053824384[92] = 0;
   out_3316589180053824384[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3316589180053824384[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3316589180053824384[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3316589180053824384[96] = 0;
   out_3316589180053824384[97] = 0;
   out_3316589180053824384[98] = 0;
   out_3316589180053824384[99] = 0;
   out_3316589180053824384[100] = 0;
   out_3316589180053824384[101] = 0;
   out_3316589180053824384[102] = 0;
   out_3316589180053824384[103] = 0;
   out_3316589180053824384[104] = 0;
   out_3316589180053824384[105] = 0;
   out_3316589180053824384[106] = 0;
   out_3316589180053824384[107] = 0;
   out_3316589180053824384[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3316589180053824384[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3316589180053824384[110] = 1;
   out_3316589180053824384[111] = 0;
   out_3316589180053824384[112] = 0;
   out_3316589180053824384[113] = 0;
   out_3316589180053824384[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3316589180053824384[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3316589180053824384[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3316589180053824384[117] = 0;
   out_3316589180053824384[118] = 0;
   out_3316589180053824384[119] = 0;
   out_3316589180053824384[120] = 0;
   out_3316589180053824384[121] = 0;
   out_3316589180053824384[122] = 0;
   out_3316589180053824384[123] = 0;
   out_3316589180053824384[124] = 0;
   out_3316589180053824384[125] = 0;
   out_3316589180053824384[126] = 0;
   out_3316589180053824384[127] = 0;
   out_3316589180053824384[128] = 0;
   out_3316589180053824384[129] = 0;
   out_3316589180053824384[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3316589180053824384[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3316589180053824384[132] = 1;
   out_3316589180053824384[133] = 0;
   out_3316589180053824384[134] = 0;
   out_3316589180053824384[135] = 0;
   out_3316589180053824384[136] = 0;
   out_3316589180053824384[137] = 0;
   out_3316589180053824384[138] = 0;
   out_3316589180053824384[139] = 0;
   out_3316589180053824384[140] = 0;
   out_3316589180053824384[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3316589180053824384[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3316589180053824384[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3316589180053824384[144] = 0;
   out_3316589180053824384[145] = 0;
   out_3316589180053824384[146] = 0;
   out_3316589180053824384[147] = 0;
   out_3316589180053824384[148] = 0;
   out_3316589180053824384[149] = 0;
   out_3316589180053824384[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3316589180053824384[151] = 0;
   out_3316589180053824384[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3316589180053824384[153] = 0;
   out_3316589180053824384[154] = 1;
   out_3316589180053824384[155] = 0;
   out_3316589180053824384[156] = 0;
   out_3316589180053824384[157] = 0;
   out_3316589180053824384[158] = 0;
   out_3316589180053824384[159] = 0;
   out_3316589180053824384[160] = 0;
   out_3316589180053824384[161] = 0;
   out_3316589180053824384[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3316589180053824384[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3316589180053824384[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3316589180053824384[165] = 0;
   out_3316589180053824384[166] = 0;
   out_3316589180053824384[167] = 0;
   out_3316589180053824384[168] = 0;
   out_3316589180053824384[169] = 0;
   out_3316589180053824384[170] = 0;
   out_3316589180053824384[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3316589180053824384[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3316589180053824384[173] = 0;
   out_3316589180053824384[174] = 0;
   out_3316589180053824384[175] = 0;
   out_3316589180053824384[176] = 1;
   out_3316589180053824384[177] = 0;
   out_3316589180053824384[178] = 0;
   out_3316589180053824384[179] = 0;
   out_3316589180053824384[180] = 0;
   out_3316589180053824384[181] = 0;
   out_3316589180053824384[182] = 0;
   out_3316589180053824384[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3316589180053824384[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3316589180053824384[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3316589180053824384[186] = 0;
   out_3316589180053824384[187] = 0;
   out_3316589180053824384[188] = 0;
   out_3316589180053824384[189] = 0;
   out_3316589180053824384[190] = 0;
   out_3316589180053824384[191] = 0;
   out_3316589180053824384[192] = 0;
   out_3316589180053824384[193] = 0;
   out_3316589180053824384[194] = 0;
   out_3316589180053824384[195] = 0;
   out_3316589180053824384[196] = 0;
   out_3316589180053824384[197] = 0;
   out_3316589180053824384[198] = 1;
   out_3316589180053824384[199] = 0;
   out_3316589180053824384[200] = 0;
   out_3316589180053824384[201] = 0;
   out_3316589180053824384[202] = 0;
   out_3316589180053824384[203] = 0;
   out_3316589180053824384[204] = 0;
   out_3316589180053824384[205] = 0;
   out_3316589180053824384[206] = 0;
   out_3316589180053824384[207] = 0;
   out_3316589180053824384[208] = 0;
   out_3316589180053824384[209] = 0;
   out_3316589180053824384[210] = 0;
   out_3316589180053824384[211] = 0;
   out_3316589180053824384[212] = 0;
   out_3316589180053824384[213] = 0;
   out_3316589180053824384[214] = 0;
   out_3316589180053824384[215] = 0;
   out_3316589180053824384[216] = 0;
   out_3316589180053824384[217] = 0;
   out_3316589180053824384[218] = 0;
   out_3316589180053824384[219] = 0;
   out_3316589180053824384[220] = 1;
   out_3316589180053824384[221] = 0;
   out_3316589180053824384[222] = 0;
   out_3316589180053824384[223] = 0;
   out_3316589180053824384[224] = 0;
   out_3316589180053824384[225] = 0;
   out_3316589180053824384[226] = 0;
   out_3316589180053824384[227] = 0;
   out_3316589180053824384[228] = 0;
   out_3316589180053824384[229] = 0;
   out_3316589180053824384[230] = 0;
   out_3316589180053824384[231] = 0;
   out_3316589180053824384[232] = 0;
   out_3316589180053824384[233] = 0;
   out_3316589180053824384[234] = 0;
   out_3316589180053824384[235] = 0;
   out_3316589180053824384[236] = 0;
   out_3316589180053824384[237] = 0;
   out_3316589180053824384[238] = 0;
   out_3316589180053824384[239] = 0;
   out_3316589180053824384[240] = 0;
   out_3316589180053824384[241] = 0;
   out_3316589180053824384[242] = 1;
   out_3316589180053824384[243] = 0;
   out_3316589180053824384[244] = 0;
   out_3316589180053824384[245] = 0;
   out_3316589180053824384[246] = 0;
   out_3316589180053824384[247] = 0;
   out_3316589180053824384[248] = 0;
   out_3316589180053824384[249] = 0;
   out_3316589180053824384[250] = 0;
   out_3316589180053824384[251] = 0;
   out_3316589180053824384[252] = 0;
   out_3316589180053824384[253] = 0;
   out_3316589180053824384[254] = 0;
   out_3316589180053824384[255] = 0;
   out_3316589180053824384[256] = 0;
   out_3316589180053824384[257] = 0;
   out_3316589180053824384[258] = 0;
   out_3316589180053824384[259] = 0;
   out_3316589180053824384[260] = 0;
   out_3316589180053824384[261] = 0;
   out_3316589180053824384[262] = 0;
   out_3316589180053824384[263] = 0;
   out_3316589180053824384[264] = 1;
   out_3316589180053824384[265] = 0;
   out_3316589180053824384[266] = 0;
   out_3316589180053824384[267] = 0;
   out_3316589180053824384[268] = 0;
   out_3316589180053824384[269] = 0;
   out_3316589180053824384[270] = 0;
   out_3316589180053824384[271] = 0;
   out_3316589180053824384[272] = 0;
   out_3316589180053824384[273] = 0;
   out_3316589180053824384[274] = 0;
   out_3316589180053824384[275] = 0;
   out_3316589180053824384[276] = 0;
   out_3316589180053824384[277] = 0;
   out_3316589180053824384[278] = 0;
   out_3316589180053824384[279] = 0;
   out_3316589180053824384[280] = 0;
   out_3316589180053824384[281] = 0;
   out_3316589180053824384[282] = 0;
   out_3316589180053824384[283] = 0;
   out_3316589180053824384[284] = 0;
   out_3316589180053824384[285] = 0;
   out_3316589180053824384[286] = 1;
   out_3316589180053824384[287] = 0;
   out_3316589180053824384[288] = 0;
   out_3316589180053824384[289] = 0;
   out_3316589180053824384[290] = 0;
   out_3316589180053824384[291] = 0;
   out_3316589180053824384[292] = 0;
   out_3316589180053824384[293] = 0;
   out_3316589180053824384[294] = 0;
   out_3316589180053824384[295] = 0;
   out_3316589180053824384[296] = 0;
   out_3316589180053824384[297] = 0;
   out_3316589180053824384[298] = 0;
   out_3316589180053824384[299] = 0;
   out_3316589180053824384[300] = 0;
   out_3316589180053824384[301] = 0;
   out_3316589180053824384[302] = 0;
   out_3316589180053824384[303] = 0;
   out_3316589180053824384[304] = 0;
   out_3316589180053824384[305] = 0;
   out_3316589180053824384[306] = 0;
   out_3316589180053824384[307] = 0;
   out_3316589180053824384[308] = 1;
   out_3316589180053824384[309] = 0;
   out_3316589180053824384[310] = 0;
   out_3316589180053824384[311] = 0;
   out_3316589180053824384[312] = 0;
   out_3316589180053824384[313] = 0;
   out_3316589180053824384[314] = 0;
   out_3316589180053824384[315] = 0;
   out_3316589180053824384[316] = 0;
   out_3316589180053824384[317] = 0;
   out_3316589180053824384[318] = 0;
   out_3316589180053824384[319] = 0;
   out_3316589180053824384[320] = 0;
   out_3316589180053824384[321] = 0;
   out_3316589180053824384[322] = 0;
   out_3316589180053824384[323] = 0;
   out_3316589180053824384[324] = 0;
   out_3316589180053824384[325] = 0;
   out_3316589180053824384[326] = 0;
   out_3316589180053824384[327] = 0;
   out_3316589180053824384[328] = 0;
   out_3316589180053824384[329] = 0;
   out_3316589180053824384[330] = 1;
   out_3316589180053824384[331] = 0;
   out_3316589180053824384[332] = 0;
   out_3316589180053824384[333] = 0;
   out_3316589180053824384[334] = 0;
   out_3316589180053824384[335] = 0;
   out_3316589180053824384[336] = 0;
   out_3316589180053824384[337] = 0;
   out_3316589180053824384[338] = 0;
   out_3316589180053824384[339] = 0;
   out_3316589180053824384[340] = 0;
   out_3316589180053824384[341] = 0;
   out_3316589180053824384[342] = 0;
   out_3316589180053824384[343] = 0;
   out_3316589180053824384[344] = 0;
   out_3316589180053824384[345] = 0;
   out_3316589180053824384[346] = 0;
   out_3316589180053824384[347] = 0;
   out_3316589180053824384[348] = 0;
   out_3316589180053824384[349] = 0;
   out_3316589180053824384[350] = 0;
   out_3316589180053824384[351] = 0;
   out_3316589180053824384[352] = 1;
   out_3316589180053824384[353] = 0;
   out_3316589180053824384[354] = 0;
   out_3316589180053824384[355] = 0;
   out_3316589180053824384[356] = 0;
   out_3316589180053824384[357] = 0;
   out_3316589180053824384[358] = 0;
   out_3316589180053824384[359] = 0;
   out_3316589180053824384[360] = 0;
   out_3316589180053824384[361] = 0;
   out_3316589180053824384[362] = 0;
   out_3316589180053824384[363] = 0;
   out_3316589180053824384[364] = 0;
   out_3316589180053824384[365] = 0;
   out_3316589180053824384[366] = 0;
   out_3316589180053824384[367] = 0;
   out_3316589180053824384[368] = 0;
   out_3316589180053824384[369] = 0;
   out_3316589180053824384[370] = 0;
   out_3316589180053824384[371] = 0;
   out_3316589180053824384[372] = 0;
   out_3316589180053824384[373] = 0;
   out_3316589180053824384[374] = 1;
   out_3316589180053824384[375] = 0;
   out_3316589180053824384[376] = 0;
   out_3316589180053824384[377] = 0;
   out_3316589180053824384[378] = 0;
   out_3316589180053824384[379] = 0;
   out_3316589180053824384[380] = 0;
   out_3316589180053824384[381] = 0;
   out_3316589180053824384[382] = 0;
   out_3316589180053824384[383] = 0;
   out_3316589180053824384[384] = 0;
   out_3316589180053824384[385] = 0;
   out_3316589180053824384[386] = 0;
   out_3316589180053824384[387] = 0;
   out_3316589180053824384[388] = 0;
   out_3316589180053824384[389] = 0;
   out_3316589180053824384[390] = 0;
   out_3316589180053824384[391] = 0;
   out_3316589180053824384[392] = 0;
   out_3316589180053824384[393] = 0;
   out_3316589180053824384[394] = 0;
   out_3316589180053824384[395] = 0;
   out_3316589180053824384[396] = 1;
   out_3316589180053824384[397] = 0;
   out_3316589180053824384[398] = 0;
   out_3316589180053824384[399] = 0;
   out_3316589180053824384[400] = 0;
   out_3316589180053824384[401] = 0;
   out_3316589180053824384[402] = 0;
   out_3316589180053824384[403] = 0;
   out_3316589180053824384[404] = 0;
   out_3316589180053824384[405] = 0;
   out_3316589180053824384[406] = 0;
   out_3316589180053824384[407] = 0;
   out_3316589180053824384[408] = 0;
   out_3316589180053824384[409] = 0;
   out_3316589180053824384[410] = 0;
   out_3316589180053824384[411] = 0;
   out_3316589180053824384[412] = 0;
   out_3316589180053824384[413] = 0;
   out_3316589180053824384[414] = 0;
   out_3316589180053824384[415] = 0;
   out_3316589180053824384[416] = 0;
   out_3316589180053824384[417] = 0;
   out_3316589180053824384[418] = 1;
   out_3316589180053824384[419] = 0;
   out_3316589180053824384[420] = 0;
   out_3316589180053824384[421] = 0;
   out_3316589180053824384[422] = 0;
   out_3316589180053824384[423] = 0;
   out_3316589180053824384[424] = 0;
   out_3316589180053824384[425] = 0;
   out_3316589180053824384[426] = 0;
   out_3316589180053824384[427] = 0;
   out_3316589180053824384[428] = 0;
   out_3316589180053824384[429] = 0;
   out_3316589180053824384[430] = 0;
   out_3316589180053824384[431] = 0;
   out_3316589180053824384[432] = 0;
   out_3316589180053824384[433] = 0;
   out_3316589180053824384[434] = 0;
   out_3316589180053824384[435] = 0;
   out_3316589180053824384[436] = 0;
   out_3316589180053824384[437] = 0;
   out_3316589180053824384[438] = 0;
   out_3316589180053824384[439] = 0;
   out_3316589180053824384[440] = 1;
}
void h_4(double *state, double *unused, double *out_4353330740154965697) {
   out_4353330740154965697[0] = state[10] + state[13];
   out_4353330740154965697[1] = state[11] + state[14];
   out_4353330740154965697[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3308972583835871176) {
   out_3308972583835871176[0] = 0;
   out_3308972583835871176[1] = 0;
   out_3308972583835871176[2] = 0;
   out_3308972583835871176[3] = 0;
   out_3308972583835871176[4] = 0;
   out_3308972583835871176[5] = 0;
   out_3308972583835871176[6] = 0;
   out_3308972583835871176[7] = 0;
   out_3308972583835871176[8] = 0;
   out_3308972583835871176[9] = 0;
   out_3308972583835871176[10] = 1;
   out_3308972583835871176[11] = 0;
   out_3308972583835871176[12] = 0;
   out_3308972583835871176[13] = 1;
   out_3308972583835871176[14] = 0;
   out_3308972583835871176[15] = 0;
   out_3308972583835871176[16] = 0;
   out_3308972583835871176[17] = 0;
   out_3308972583835871176[18] = 0;
   out_3308972583835871176[19] = 0;
   out_3308972583835871176[20] = 0;
   out_3308972583835871176[21] = 0;
   out_3308972583835871176[22] = 0;
   out_3308972583835871176[23] = 0;
   out_3308972583835871176[24] = 0;
   out_3308972583835871176[25] = 0;
   out_3308972583835871176[26] = 0;
   out_3308972583835871176[27] = 0;
   out_3308972583835871176[28] = 0;
   out_3308972583835871176[29] = 0;
   out_3308972583835871176[30] = 0;
   out_3308972583835871176[31] = 0;
   out_3308972583835871176[32] = 0;
   out_3308972583835871176[33] = 1;
   out_3308972583835871176[34] = 0;
   out_3308972583835871176[35] = 0;
   out_3308972583835871176[36] = 1;
   out_3308972583835871176[37] = 0;
   out_3308972583835871176[38] = 0;
   out_3308972583835871176[39] = 0;
   out_3308972583835871176[40] = 0;
   out_3308972583835871176[41] = 0;
   out_3308972583835871176[42] = 0;
   out_3308972583835871176[43] = 0;
   out_3308972583835871176[44] = 0;
   out_3308972583835871176[45] = 0;
   out_3308972583835871176[46] = 0;
   out_3308972583835871176[47] = 0;
   out_3308972583835871176[48] = 0;
   out_3308972583835871176[49] = 0;
   out_3308972583835871176[50] = 0;
   out_3308972583835871176[51] = 0;
   out_3308972583835871176[52] = 0;
   out_3308972583835871176[53] = 0;
   out_3308972583835871176[54] = 0;
   out_3308972583835871176[55] = 0;
   out_3308972583835871176[56] = 1;
   out_3308972583835871176[57] = 0;
   out_3308972583835871176[58] = 0;
   out_3308972583835871176[59] = 1;
   out_3308972583835871176[60] = 0;
   out_3308972583835871176[61] = 0;
   out_3308972583835871176[62] = 0;
   out_3308972583835871176[63] = 0;
   out_3308972583835871176[64] = 0;
   out_3308972583835871176[65] = 0;
}
void h_9(double *state, double *unused, double *out_3650386043224839039) {
   out_3650386043224839039[0] = state[10];
   out_3650386043224839039[1] = state[11];
   out_3650386043224839039[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7850552554609232970) {
   out_7850552554609232970[0] = 0;
   out_7850552554609232970[1] = 0;
   out_7850552554609232970[2] = 0;
   out_7850552554609232970[3] = 0;
   out_7850552554609232970[4] = 0;
   out_7850552554609232970[5] = 0;
   out_7850552554609232970[6] = 0;
   out_7850552554609232970[7] = 0;
   out_7850552554609232970[8] = 0;
   out_7850552554609232970[9] = 0;
   out_7850552554609232970[10] = 1;
   out_7850552554609232970[11] = 0;
   out_7850552554609232970[12] = 0;
   out_7850552554609232970[13] = 0;
   out_7850552554609232970[14] = 0;
   out_7850552554609232970[15] = 0;
   out_7850552554609232970[16] = 0;
   out_7850552554609232970[17] = 0;
   out_7850552554609232970[18] = 0;
   out_7850552554609232970[19] = 0;
   out_7850552554609232970[20] = 0;
   out_7850552554609232970[21] = 0;
   out_7850552554609232970[22] = 0;
   out_7850552554609232970[23] = 0;
   out_7850552554609232970[24] = 0;
   out_7850552554609232970[25] = 0;
   out_7850552554609232970[26] = 0;
   out_7850552554609232970[27] = 0;
   out_7850552554609232970[28] = 0;
   out_7850552554609232970[29] = 0;
   out_7850552554609232970[30] = 0;
   out_7850552554609232970[31] = 0;
   out_7850552554609232970[32] = 0;
   out_7850552554609232970[33] = 1;
   out_7850552554609232970[34] = 0;
   out_7850552554609232970[35] = 0;
   out_7850552554609232970[36] = 0;
   out_7850552554609232970[37] = 0;
   out_7850552554609232970[38] = 0;
   out_7850552554609232970[39] = 0;
   out_7850552554609232970[40] = 0;
   out_7850552554609232970[41] = 0;
   out_7850552554609232970[42] = 0;
   out_7850552554609232970[43] = 0;
   out_7850552554609232970[44] = 0;
   out_7850552554609232970[45] = 0;
   out_7850552554609232970[46] = 0;
   out_7850552554609232970[47] = 0;
   out_7850552554609232970[48] = 0;
   out_7850552554609232970[49] = 0;
   out_7850552554609232970[50] = 0;
   out_7850552554609232970[51] = 0;
   out_7850552554609232970[52] = 0;
   out_7850552554609232970[53] = 0;
   out_7850552554609232970[54] = 0;
   out_7850552554609232970[55] = 0;
   out_7850552554609232970[56] = 1;
   out_7850552554609232970[57] = 0;
   out_7850552554609232970[58] = 0;
   out_7850552554609232970[59] = 0;
   out_7850552554609232970[60] = 0;
   out_7850552554609232970[61] = 0;
   out_7850552554609232970[62] = 0;
   out_7850552554609232970[63] = 0;
   out_7850552554609232970[64] = 0;
   out_7850552554609232970[65] = 0;
}
void h_10(double *state, double *unused, double *out_6798925290808557144) {
   out_6798925290808557144[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_6798925290808557144[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_6798925290808557144[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_1105747661324537996) {
   out_1105747661324537996[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1105747661324537996[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1105747661324537996[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1105747661324537996[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1105747661324537996[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1105747661324537996[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1105747661324537996[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1105747661324537996[7] = 0;
   out_1105747661324537996[8] = 0;
   out_1105747661324537996[9] = 0;
   out_1105747661324537996[10] = 0;
   out_1105747661324537996[11] = 0;
   out_1105747661324537996[12] = 0;
   out_1105747661324537996[13] = 0;
   out_1105747661324537996[14] = 0;
   out_1105747661324537996[15] = 0;
   out_1105747661324537996[16] = 1;
   out_1105747661324537996[17] = 0;
   out_1105747661324537996[18] = 0;
   out_1105747661324537996[19] = 1;
   out_1105747661324537996[20] = 0;
   out_1105747661324537996[21] = 0;
   out_1105747661324537996[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1105747661324537996[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1105747661324537996[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1105747661324537996[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1105747661324537996[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1105747661324537996[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1105747661324537996[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1105747661324537996[29] = 0;
   out_1105747661324537996[30] = 0;
   out_1105747661324537996[31] = 0;
   out_1105747661324537996[32] = 0;
   out_1105747661324537996[33] = 0;
   out_1105747661324537996[34] = 0;
   out_1105747661324537996[35] = 0;
   out_1105747661324537996[36] = 0;
   out_1105747661324537996[37] = 0;
   out_1105747661324537996[38] = 0;
   out_1105747661324537996[39] = 1;
   out_1105747661324537996[40] = 0;
   out_1105747661324537996[41] = 0;
   out_1105747661324537996[42] = 1;
   out_1105747661324537996[43] = 0;
   out_1105747661324537996[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1105747661324537996[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1105747661324537996[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1105747661324537996[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1105747661324537996[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1105747661324537996[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1105747661324537996[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1105747661324537996[51] = 0;
   out_1105747661324537996[52] = 0;
   out_1105747661324537996[53] = 0;
   out_1105747661324537996[54] = 0;
   out_1105747661324537996[55] = 0;
   out_1105747661324537996[56] = 0;
   out_1105747661324537996[57] = 0;
   out_1105747661324537996[58] = 0;
   out_1105747661324537996[59] = 0;
   out_1105747661324537996[60] = 0;
   out_1105747661324537996[61] = 0;
   out_1105747661324537996[62] = 1;
   out_1105747661324537996[63] = 0;
   out_1105747661324537996[64] = 0;
   out_1105747661324537996[65] = 1;
}
void h_12(double *state, double *unused, double *out_8178099435298852254) {
   out_8178099435298852254[0] = state[0];
   out_8178099435298852254[1] = state[1];
   out_8178099435298852254[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3072285793206861820) {
   out_3072285793206861820[0] = 1;
   out_3072285793206861820[1] = 0;
   out_3072285793206861820[2] = 0;
   out_3072285793206861820[3] = 0;
   out_3072285793206861820[4] = 0;
   out_3072285793206861820[5] = 0;
   out_3072285793206861820[6] = 0;
   out_3072285793206861820[7] = 0;
   out_3072285793206861820[8] = 0;
   out_3072285793206861820[9] = 0;
   out_3072285793206861820[10] = 0;
   out_3072285793206861820[11] = 0;
   out_3072285793206861820[12] = 0;
   out_3072285793206861820[13] = 0;
   out_3072285793206861820[14] = 0;
   out_3072285793206861820[15] = 0;
   out_3072285793206861820[16] = 0;
   out_3072285793206861820[17] = 0;
   out_3072285793206861820[18] = 0;
   out_3072285793206861820[19] = 0;
   out_3072285793206861820[20] = 0;
   out_3072285793206861820[21] = 0;
   out_3072285793206861820[22] = 0;
   out_3072285793206861820[23] = 1;
   out_3072285793206861820[24] = 0;
   out_3072285793206861820[25] = 0;
   out_3072285793206861820[26] = 0;
   out_3072285793206861820[27] = 0;
   out_3072285793206861820[28] = 0;
   out_3072285793206861820[29] = 0;
   out_3072285793206861820[30] = 0;
   out_3072285793206861820[31] = 0;
   out_3072285793206861820[32] = 0;
   out_3072285793206861820[33] = 0;
   out_3072285793206861820[34] = 0;
   out_3072285793206861820[35] = 0;
   out_3072285793206861820[36] = 0;
   out_3072285793206861820[37] = 0;
   out_3072285793206861820[38] = 0;
   out_3072285793206861820[39] = 0;
   out_3072285793206861820[40] = 0;
   out_3072285793206861820[41] = 0;
   out_3072285793206861820[42] = 0;
   out_3072285793206861820[43] = 0;
   out_3072285793206861820[44] = 0;
   out_3072285793206861820[45] = 0;
   out_3072285793206861820[46] = 1;
   out_3072285793206861820[47] = 0;
   out_3072285793206861820[48] = 0;
   out_3072285793206861820[49] = 0;
   out_3072285793206861820[50] = 0;
   out_3072285793206861820[51] = 0;
   out_3072285793206861820[52] = 0;
   out_3072285793206861820[53] = 0;
   out_3072285793206861820[54] = 0;
   out_3072285793206861820[55] = 0;
   out_3072285793206861820[56] = 0;
   out_3072285793206861820[57] = 0;
   out_3072285793206861820[58] = 0;
   out_3072285793206861820[59] = 0;
   out_3072285793206861820[60] = 0;
   out_3072285793206861820[61] = 0;
   out_3072285793206861820[62] = 0;
   out_3072285793206861820[63] = 0;
   out_3072285793206861820[64] = 0;
   out_3072285793206861820[65] = 0;
}
void h_35(double *state, double *unused, double *out_725344057528945446) {
   out_725344057528945446[0] = state[7];
   out_725344057528945446[1] = state[8];
   out_725344057528945446[2] = state[9];
}
void H_35(double *state, double *unused, double *out_7372752049516704936) {
   out_7372752049516704936[0] = 0;
   out_7372752049516704936[1] = 0;
   out_7372752049516704936[2] = 0;
   out_7372752049516704936[3] = 0;
   out_7372752049516704936[4] = 0;
   out_7372752049516704936[5] = 0;
   out_7372752049516704936[6] = 0;
   out_7372752049516704936[7] = 1;
   out_7372752049516704936[8] = 0;
   out_7372752049516704936[9] = 0;
   out_7372752049516704936[10] = 0;
   out_7372752049516704936[11] = 0;
   out_7372752049516704936[12] = 0;
   out_7372752049516704936[13] = 0;
   out_7372752049516704936[14] = 0;
   out_7372752049516704936[15] = 0;
   out_7372752049516704936[16] = 0;
   out_7372752049516704936[17] = 0;
   out_7372752049516704936[18] = 0;
   out_7372752049516704936[19] = 0;
   out_7372752049516704936[20] = 0;
   out_7372752049516704936[21] = 0;
   out_7372752049516704936[22] = 0;
   out_7372752049516704936[23] = 0;
   out_7372752049516704936[24] = 0;
   out_7372752049516704936[25] = 0;
   out_7372752049516704936[26] = 0;
   out_7372752049516704936[27] = 0;
   out_7372752049516704936[28] = 0;
   out_7372752049516704936[29] = 0;
   out_7372752049516704936[30] = 1;
   out_7372752049516704936[31] = 0;
   out_7372752049516704936[32] = 0;
   out_7372752049516704936[33] = 0;
   out_7372752049516704936[34] = 0;
   out_7372752049516704936[35] = 0;
   out_7372752049516704936[36] = 0;
   out_7372752049516704936[37] = 0;
   out_7372752049516704936[38] = 0;
   out_7372752049516704936[39] = 0;
   out_7372752049516704936[40] = 0;
   out_7372752049516704936[41] = 0;
   out_7372752049516704936[42] = 0;
   out_7372752049516704936[43] = 0;
   out_7372752049516704936[44] = 0;
   out_7372752049516704936[45] = 0;
   out_7372752049516704936[46] = 0;
   out_7372752049516704936[47] = 0;
   out_7372752049516704936[48] = 0;
   out_7372752049516704936[49] = 0;
   out_7372752049516704936[50] = 0;
   out_7372752049516704936[51] = 0;
   out_7372752049516704936[52] = 0;
   out_7372752049516704936[53] = 1;
   out_7372752049516704936[54] = 0;
   out_7372752049516704936[55] = 0;
   out_7372752049516704936[56] = 0;
   out_7372752049516704936[57] = 0;
   out_7372752049516704936[58] = 0;
   out_7372752049516704936[59] = 0;
   out_7372752049516704936[60] = 0;
   out_7372752049516704936[61] = 0;
   out_7372752049516704936[62] = 0;
   out_7372752049516704936[63] = 0;
   out_7372752049516704936[64] = 0;
   out_7372752049516704936[65] = 0;
}
void h_32(double *state, double *unused, double *out_2536943392141164321) {
   out_2536943392141164321[0] = state[3];
   out_2536943392141164321[1] = state[4];
   out_2536943392141164321[2] = state[5];
   out_2536943392141164321[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5431913712183696135) {
   out_5431913712183696135[0] = 0;
   out_5431913712183696135[1] = 0;
   out_5431913712183696135[2] = 0;
   out_5431913712183696135[3] = 1;
   out_5431913712183696135[4] = 0;
   out_5431913712183696135[5] = 0;
   out_5431913712183696135[6] = 0;
   out_5431913712183696135[7] = 0;
   out_5431913712183696135[8] = 0;
   out_5431913712183696135[9] = 0;
   out_5431913712183696135[10] = 0;
   out_5431913712183696135[11] = 0;
   out_5431913712183696135[12] = 0;
   out_5431913712183696135[13] = 0;
   out_5431913712183696135[14] = 0;
   out_5431913712183696135[15] = 0;
   out_5431913712183696135[16] = 0;
   out_5431913712183696135[17] = 0;
   out_5431913712183696135[18] = 0;
   out_5431913712183696135[19] = 0;
   out_5431913712183696135[20] = 0;
   out_5431913712183696135[21] = 0;
   out_5431913712183696135[22] = 0;
   out_5431913712183696135[23] = 0;
   out_5431913712183696135[24] = 0;
   out_5431913712183696135[25] = 0;
   out_5431913712183696135[26] = 1;
   out_5431913712183696135[27] = 0;
   out_5431913712183696135[28] = 0;
   out_5431913712183696135[29] = 0;
   out_5431913712183696135[30] = 0;
   out_5431913712183696135[31] = 0;
   out_5431913712183696135[32] = 0;
   out_5431913712183696135[33] = 0;
   out_5431913712183696135[34] = 0;
   out_5431913712183696135[35] = 0;
   out_5431913712183696135[36] = 0;
   out_5431913712183696135[37] = 0;
   out_5431913712183696135[38] = 0;
   out_5431913712183696135[39] = 0;
   out_5431913712183696135[40] = 0;
   out_5431913712183696135[41] = 0;
   out_5431913712183696135[42] = 0;
   out_5431913712183696135[43] = 0;
   out_5431913712183696135[44] = 0;
   out_5431913712183696135[45] = 0;
   out_5431913712183696135[46] = 0;
   out_5431913712183696135[47] = 0;
   out_5431913712183696135[48] = 0;
   out_5431913712183696135[49] = 1;
   out_5431913712183696135[50] = 0;
   out_5431913712183696135[51] = 0;
   out_5431913712183696135[52] = 0;
   out_5431913712183696135[53] = 0;
   out_5431913712183696135[54] = 0;
   out_5431913712183696135[55] = 0;
   out_5431913712183696135[56] = 0;
   out_5431913712183696135[57] = 0;
   out_5431913712183696135[58] = 0;
   out_5431913712183696135[59] = 0;
   out_5431913712183696135[60] = 0;
   out_5431913712183696135[61] = 0;
   out_5431913712183696135[62] = 0;
   out_5431913712183696135[63] = 0;
   out_5431913712183696135[64] = 0;
   out_5431913712183696135[65] = 0;
   out_5431913712183696135[66] = 0;
   out_5431913712183696135[67] = 0;
   out_5431913712183696135[68] = 0;
   out_5431913712183696135[69] = 0;
   out_5431913712183696135[70] = 0;
   out_5431913712183696135[71] = 0;
   out_5431913712183696135[72] = 1;
   out_5431913712183696135[73] = 0;
   out_5431913712183696135[74] = 0;
   out_5431913712183696135[75] = 0;
   out_5431913712183696135[76] = 0;
   out_5431913712183696135[77] = 0;
   out_5431913712183696135[78] = 0;
   out_5431913712183696135[79] = 0;
   out_5431913712183696135[80] = 0;
   out_5431913712183696135[81] = 0;
   out_5431913712183696135[82] = 0;
   out_5431913712183696135[83] = 0;
   out_5431913712183696135[84] = 0;
   out_5431913712183696135[85] = 0;
   out_5431913712183696135[86] = 0;
   out_5431913712183696135[87] = 0;
}
void h_13(double *state, double *unused, double *out_3190034730047438978) {
   out_3190034730047438978[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3190034730047438978[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3190034730047438978[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7190147933919755221) {
   out_7190147933919755221[0] = 0;
   out_7190147933919755221[1] = 0;
   out_7190147933919755221[2] = 0;
   out_7190147933919755221[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7190147933919755221[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7190147933919755221[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7190147933919755221[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7190147933919755221[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7190147933919755221[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7190147933919755221[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7190147933919755221[10] = 0;
   out_7190147933919755221[11] = 0;
   out_7190147933919755221[12] = 0;
   out_7190147933919755221[13] = 0;
   out_7190147933919755221[14] = 0;
   out_7190147933919755221[15] = 0;
   out_7190147933919755221[16] = 0;
   out_7190147933919755221[17] = 0;
   out_7190147933919755221[18] = 0;
   out_7190147933919755221[19] = 0;
   out_7190147933919755221[20] = 0;
   out_7190147933919755221[21] = 0;
   out_7190147933919755221[22] = 0;
   out_7190147933919755221[23] = 0;
   out_7190147933919755221[24] = 0;
   out_7190147933919755221[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7190147933919755221[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7190147933919755221[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7190147933919755221[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7190147933919755221[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7190147933919755221[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7190147933919755221[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7190147933919755221[32] = 0;
   out_7190147933919755221[33] = 0;
   out_7190147933919755221[34] = 0;
   out_7190147933919755221[35] = 0;
   out_7190147933919755221[36] = 0;
   out_7190147933919755221[37] = 0;
   out_7190147933919755221[38] = 0;
   out_7190147933919755221[39] = 0;
   out_7190147933919755221[40] = 0;
   out_7190147933919755221[41] = 0;
   out_7190147933919755221[42] = 0;
   out_7190147933919755221[43] = 0;
   out_7190147933919755221[44] = 0;
   out_7190147933919755221[45] = 0;
   out_7190147933919755221[46] = 0;
   out_7190147933919755221[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7190147933919755221[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7190147933919755221[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7190147933919755221[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7190147933919755221[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7190147933919755221[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7190147933919755221[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7190147933919755221[54] = 0;
   out_7190147933919755221[55] = 0;
   out_7190147933919755221[56] = 0;
   out_7190147933919755221[57] = 0;
   out_7190147933919755221[58] = 0;
   out_7190147933919755221[59] = 0;
   out_7190147933919755221[60] = 0;
   out_7190147933919755221[61] = 0;
   out_7190147933919755221[62] = 0;
   out_7190147933919755221[63] = 0;
   out_7190147933919755221[64] = 0;
   out_7190147933919755221[65] = 0;
}
void h_14(double *state, double *unused, double *out_3650386043224839039) {
   out_3650386043224839039[0] = state[10];
   out_3650386043224839039[1] = state[11];
   out_3650386043224839039[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7850552554609232970) {
   out_7850552554609232970[0] = 0;
   out_7850552554609232970[1] = 0;
   out_7850552554609232970[2] = 0;
   out_7850552554609232970[3] = 0;
   out_7850552554609232970[4] = 0;
   out_7850552554609232970[5] = 0;
   out_7850552554609232970[6] = 0;
   out_7850552554609232970[7] = 0;
   out_7850552554609232970[8] = 0;
   out_7850552554609232970[9] = 0;
   out_7850552554609232970[10] = 1;
   out_7850552554609232970[11] = 0;
   out_7850552554609232970[12] = 0;
   out_7850552554609232970[13] = 0;
   out_7850552554609232970[14] = 0;
   out_7850552554609232970[15] = 0;
   out_7850552554609232970[16] = 0;
   out_7850552554609232970[17] = 0;
   out_7850552554609232970[18] = 0;
   out_7850552554609232970[19] = 0;
   out_7850552554609232970[20] = 0;
   out_7850552554609232970[21] = 0;
   out_7850552554609232970[22] = 0;
   out_7850552554609232970[23] = 0;
   out_7850552554609232970[24] = 0;
   out_7850552554609232970[25] = 0;
   out_7850552554609232970[26] = 0;
   out_7850552554609232970[27] = 0;
   out_7850552554609232970[28] = 0;
   out_7850552554609232970[29] = 0;
   out_7850552554609232970[30] = 0;
   out_7850552554609232970[31] = 0;
   out_7850552554609232970[32] = 0;
   out_7850552554609232970[33] = 1;
   out_7850552554609232970[34] = 0;
   out_7850552554609232970[35] = 0;
   out_7850552554609232970[36] = 0;
   out_7850552554609232970[37] = 0;
   out_7850552554609232970[38] = 0;
   out_7850552554609232970[39] = 0;
   out_7850552554609232970[40] = 0;
   out_7850552554609232970[41] = 0;
   out_7850552554609232970[42] = 0;
   out_7850552554609232970[43] = 0;
   out_7850552554609232970[44] = 0;
   out_7850552554609232970[45] = 0;
   out_7850552554609232970[46] = 0;
   out_7850552554609232970[47] = 0;
   out_7850552554609232970[48] = 0;
   out_7850552554609232970[49] = 0;
   out_7850552554609232970[50] = 0;
   out_7850552554609232970[51] = 0;
   out_7850552554609232970[52] = 0;
   out_7850552554609232970[53] = 0;
   out_7850552554609232970[54] = 0;
   out_7850552554609232970[55] = 0;
   out_7850552554609232970[56] = 1;
   out_7850552554609232970[57] = 0;
   out_7850552554609232970[58] = 0;
   out_7850552554609232970[59] = 0;
   out_7850552554609232970[60] = 0;
   out_7850552554609232970[61] = 0;
   out_7850552554609232970[62] = 0;
   out_7850552554609232970[63] = 0;
   out_7850552554609232970[64] = 0;
   out_7850552554609232970[65] = 0;
}
void h_33(double *state, double *unused, double *out_4839396120810111977) {
   out_4839396120810111977[0] = state[16];
   out_4839396120810111977[1] = state[17];
   out_4839396120810111977[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8620552427862215460) {
   out_8620552427862215460[0] = 0;
   out_8620552427862215460[1] = 0;
   out_8620552427862215460[2] = 0;
   out_8620552427862215460[3] = 0;
   out_8620552427862215460[4] = 0;
   out_8620552427862215460[5] = 0;
   out_8620552427862215460[6] = 0;
   out_8620552427862215460[7] = 0;
   out_8620552427862215460[8] = 0;
   out_8620552427862215460[9] = 0;
   out_8620552427862215460[10] = 0;
   out_8620552427862215460[11] = 0;
   out_8620552427862215460[12] = 0;
   out_8620552427862215460[13] = 0;
   out_8620552427862215460[14] = 0;
   out_8620552427862215460[15] = 0;
   out_8620552427862215460[16] = 1;
   out_8620552427862215460[17] = 0;
   out_8620552427862215460[18] = 0;
   out_8620552427862215460[19] = 0;
   out_8620552427862215460[20] = 0;
   out_8620552427862215460[21] = 0;
   out_8620552427862215460[22] = 0;
   out_8620552427862215460[23] = 0;
   out_8620552427862215460[24] = 0;
   out_8620552427862215460[25] = 0;
   out_8620552427862215460[26] = 0;
   out_8620552427862215460[27] = 0;
   out_8620552427862215460[28] = 0;
   out_8620552427862215460[29] = 0;
   out_8620552427862215460[30] = 0;
   out_8620552427862215460[31] = 0;
   out_8620552427862215460[32] = 0;
   out_8620552427862215460[33] = 0;
   out_8620552427862215460[34] = 0;
   out_8620552427862215460[35] = 0;
   out_8620552427862215460[36] = 0;
   out_8620552427862215460[37] = 0;
   out_8620552427862215460[38] = 0;
   out_8620552427862215460[39] = 1;
   out_8620552427862215460[40] = 0;
   out_8620552427862215460[41] = 0;
   out_8620552427862215460[42] = 0;
   out_8620552427862215460[43] = 0;
   out_8620552427862215460[44] = 0;
   out_8620552427862215460[45] = 0;
   out_8620552427862215460[46] = 0;
   out_8620552427862215460[47] = 0;
   out_8620552427862215460[48] = 0;
   out_8620552427862215460[49] = 0;
   out_8620552427862215460[50] = 0;
   out_8620552427862215460[51] = 0;
   out_8620552427862215460[52] = 0;
   out_8620552427862215460[53] = 0;
   out_8620552427862215460[54] = 0;
   out_8620552427862215460[55] = 0;
   out_8620552427862215460[56] = 0;
   out_8620552427862215460[57] = 0;
   out_8620552427862215460[58] = 0;
   out_8620552427862215460[59] = 0;
   out_8620552427862215460[60] = 0;
   out_8620552427862215460[61] = 0;
   out_8620552427862215460[62] = 1;
   out_8620552427862215460[63] = 0;
   out_8620552427862215460[64] = 0;
   out_8620552427862215460[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3895032278166077730) {
  H(in_vec, out_3895032278166077730);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_8054675389181873404) {
  err_fun(nom_x, delta_x, out_8054675389181873404);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5712105108510026254) {
  inv_err_fun(nom_x, true_x, out_5712105108510026254);
}
void live_H_mod_fun(double *state, double *out_7527931049159315624) {
  H_mod_fun(state, out_7527931049159315624);
}
void live_f_fun(double *state, double dt, double *out_3528148062823701629) {
  f_fun(state,  dt, out_3528148062823701629);
}
void live_F_fun(double *state, double dt, double *out_3316589180053824384) {
  F_fun(state,  dt, out_3316589180053824384);
}
void live_h_4(double *state, double *unused, double *out_4353330740154965697) {
  h_4(state, unused, out_4353330740154965697);
}
void live_H_4(double *state, double *unused, double *out_3308972583835871176) {
  H_4(state, unused, out_3308972583835871176);
}
void live_h_9(double *state, double *unused, double *out_3650386043224839039) {
  h_9(state, unused, out_3650386043224839039);
}
void live_H_9(double *state, double *unused, double *out_7850552554609232970) {
  H_9(state, unused, out_7850552554609232970);
}
void live_h_10(double *state, double *unused, double *out_6798925290808557144) {
  h_10(state, unused, out_6798925290808557144);
}
void live_H_10(double *state, double *unused, double *out_1105747661324537996) {
  H_10(state, unused, out_1105747661324537996);
}
void live_h_12(double *state, double *unused, double *out_8178099435298852254) {
  h_12(state, unused, out_8178099435298852254);
}
void live_H_12(double *state, double *unused, double *out_3072285793206861820) {
  H_12(state, unused, out_3072285793206861820);
}
void live_h_35(double *state, double *unused, double *out_725344057528945446) {
  h_35(state, unused, out_725344057528945446);
}
void live_H_35(double *state, double *unused, double *out_7372752049516704936) {
  H_35(state, unused, out_7372752049516704936);
}
void live_h_32(double *state, double *unused, double *out_2536943392141164321) {
  h_32(state, unused, out_2536943392141164321);
}
void live_H_32(double *state, double *unused, double *out_5431913712183696135) {
  H_32(state, unused, out_5431913712183696135);
}
void live_h_13(double *state, double *unused, double *out_3190034730047438978) {
  h_13(state, unused, out_3190034730047438978);
}
void live_H_13(double *state, double *unused, double *out_7190147933919755221) {
  H_13(state, unused, out_7190147933919755221);
}
void live_h_14(double *state, double *unused, double *out_3650386043224839039) {
  h_14(state, unused, out_3650386043224839039);
}
void live_H_14(double *state, double *unused, double *out_7850552554609232970) {
  H_14(state, unused, out_7850552554609232970);
}
void live_h_33(double *state, double *unused, double *out_4839396120810111977) {
  h_33(state, unused, out_4839396120810111977);
}
void live_H_33(double *state, double *unused, double *out_8620552427862215460) {
  H_33(state, unused, out_8620552427862215460);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
