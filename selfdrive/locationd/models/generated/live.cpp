#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8614947962593067881) {
   out_8614947962593067881[0] = 0;
   out_8614947962593067881[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8614947962593067881[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8614947962593067881[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8614947962593067881[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8614947962593067881[5] = -sin(in_vec[1]);
   out_8614947962593067881[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8614947962593067881[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8614947962593067881[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8614947962593067881[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8614947962593067881[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8614947962593067881[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8614947962593067881[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8614947962593067881[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8614947962593067881[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8614947962593067881[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8614947962593067881[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8614947962593067881[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7760651538653785903) {
   out_7760651538653785903[0] = delta_x[0] + nom_x[0];
   out_7760651538653785903[1] = delta_x[1] + nom_x[1];
   out_7760651538653785903[2] = delta_x[2] + nom_x[2];
   out_7760651538653785903[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7760651538653785903[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7760651538653785903[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7760651538653785903[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7760651538653785903[7] = delta_x[6] + nom_x[7];
   out_7760651538653785903[8] = delta_x[7] + nom_x[8];
   out_7760651538653785903[9] = delta_x[8] + nom_x[9];
   out_7760651538653785903[10] = delta_x[9] + nom_x[10];
   out_7760651538653785903[11] = delta_x[10] + nom_x[11];
   out_7760651538653785903[12] = delta_x[11] + nom_x[12];
   out_7760651538653785903[13] = delta_x[12] + nom_x[13];
   out_7760651538653785903[14] = delta_x[13] + nom_x[14];
   out_7760651538653785903[15] = delta_x[14] + nom_x[15];
   out_7760651538653785903[16] = delta_x[15] + nom_x[16];
   out_7760651538653785903[17] = delta_x[16] + nom_x[17];
   out_7760651538653785903[18] = delta_x[17] + nom_x[18];
   out_7760651538653785903[19] = delta_x[18] + nom_x[19];
   out_7760651538653785903[20] = delta_x[19] + nom_x[20];
   out_7760651538653785903[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5717458442570625058) {
   out_5717458442570625058[0] = -nom_x[0] + true_x[0];
   out_5717458442570625058[1] = -nom_x[1] + true_x[1];
   out_5717458442570625058[2] = -nom_x[2] + true_x[2];
   out_5717458442570625058[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5717458442570625058[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5717458442570625058[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5717458442570625058[6] = -nom_x[7] + true_x[7];
   out_5717458442570625058[7] = -nom_x[8] + true_x[8];
   out_5717458442570625058[8] = -nom_x[9] + true_x[9];
   out_5717458442570625058[9] = -nom_x[10] + true_x[10];
   out_5717458442570625058[10] = -nom_x[11] + true_x[11];
   out_5717458442570625058[11] = -nom_x[12] + true_x[12];
   out_5717458442570625058[12] = -nom_x[13] + true_x[13];
   out_5717458442570625058[13] = -nom_x[14] + true_x[14];
   out_5717458442570625058[14] = -nom_x[15] + true_x[15];
   out_5717458442570625058[15] = -nom_x[16] + true_x[16];
   out_5717458442570625058[16] = -nom_x[17] + true_x[17];
   out_5717458442570625058[17] = -nom_x[18] + true_x[18];
   out_5717458442570625058[18] = -nom_x[19] + true_x[19];
   out_5717458442570625058[19] = -nom_x[20] + true_x[20];
   out_5717458442570625058[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5026262334447107044) {
   out_5026262334447107044[0] = 1.0;
   out_5026262334447107044[1] = 0;
   out_5026262334447107044[2] = 0;
   out_5026262334447107044[3] = 0;
   out_5026262334447107044[4] = 0;
   out_5026262334447107044[5] = 0;
   out_5026262334447107044[6] = 0;
   out_5026262334447107044[7] = 0;
   out_5026262334447107044[8] = 0;
   out_5026262334447107044[9] = 0;
   out_5026262334447107044[10] = 0;
   out_5026262334447107044[11] = 0;
   out_5026262334447107044[12] = 0;
   out_5026262334447107044[13] = 0;
   out_5026262334447107044[14] = 0;
   out_5026262334447107044[15] = 0;
   out_5026262334447107044[16] = 0;
   out_5026262334447107044[17] = 0;
   out_5026262334447107044[18] = 0;
   out_5026262334447107044[19] = 0;
   out_5026262334447107044[20] = 0;
   out_5026262334447107044[21] = 0;
   out_5026262334447107044[22] = 1.0;
   out_5026262334447107044[23] = 0;
   out_5026262334447107044[24] = 0;
   out_5026262334447107044[25] = 0;
   out_5026262334447107044[26] = 0;
   out_5026262334447107044[27] = 0;
   out_5026262334447107044[28] = 0;
   out_5026262334447107044[29] = 0;
   out_5026262334447107044[30] = 0;
   out_5026262334447107044[31] = 0;
   out_5026262334447107044[32] = 0;
   out_5026262334447107044[33] = 0;
   out_5026262334447107044[34] = 0;
   out_5026262334447107044[35] = 0;
   out_5026262334447107044[36] = 0;
   out_5026262334447107044[37] = 0;
   out_5026262334447107044[38] = 0;
   out_5026262334447107044[39] = 0;
   out_5026262334447107044[40] = 0;
   out_5026262334447107044[41] = 0;
   out_5026262334447107044[42] = 0;
   out_5026262334447107044[43] = 0;
   out_5026262334447107044[44] = 1.0;
   out_5026262334447107044[45] = 0;
   out_5026262334447107044[46] = 0;
   out_5026262334447107044[47] = 0;
   out_5026262334447107044[48] = 0;
   out_5026262334447107044[49] = 0;
   out_5026262334447107044[50] = 0;
   out_5026262334447107044[51] = 0;
   out_5026262334447107044[52] = 0;
   out_5026262334447107044[53] = 0;
   out_5026262334447107044[54] = 0;
   out_5026262334447107044[55] = 0;
   out_5026262334447107044[56] = 0;
   out_5026262334447107044[57] = 0;
   out_5026262334447107044[58] = 0;
   out_5026262334447107044[59] = 0;
   out_5026262334447107044[60] = 0;
   out_5026262334447107044[61] = 0;
   out_5026262334447107044[62] = 0;
   out_5026262334447107044[63] = 0;
   out_5026262334447107044[64] = 0;
   out_5026262334447107044[65] = 0;
   out_5026262334447107044[66] = -0.5*state[4];
   out_5026262334447107044[67] = -0.5*state[5];
   out_5026262334447107044[68] = -0.5*state[6];
   out_5026262334447107044[69] = 0;
   out_5026262334447107044[70] = 0;
   out_5026262334447107044[71] = 0;
   out_5026262334447107044[72] = 0;
   out_5026262334447107044[73] = 0;
   out_5026262334447107044[74] = 0;
   out_5026262334447107044[75] = 0;
   out_5026262334447107044[76] = 0;
   out_5026262334447107044[77] = 0;
   out_5026262334447107044[78] = 0;
   out_5026262334447107044[79] = 0;
   out_5026262334447107044[80] = 0;
   out_5026262334447107044[81] = 0;
   out_5026262334447107044[82] = 0;
   out_5026262334447107044[83] = 0;
   out_5026262334447107044[84] = 0;
   out_5026262334447107044[85] = 0;
   out_5026262334447107044[86] = 0;
   out_5026262334447107044[87] = 0.5*state[3];
   out_5026262334447107044[88] = 0.5*state[6];
   out_5026262334447107044[89] = -0.5*state[5];
   out_5026262334447107044[90] = 0;
   out_5026262334447107044[91] = 0;
   out_5026262334447107044[92] = 0;
   out_5026262334447107044[93] = 0;
   out_5026262334447107044[94] = 0;
   out_5026262334447107044[95] = 0;
   out_5026262334447107044[96] = 0;
   out_5026262334447107044[97] = 0;
   out_5026262334447107044[98] = 0;
   out_5026262334447107044[99] = 0;
   out_5026262334447107044[100] = 0;
   out_5026262334447107044[101] = 0;
   out_5026262334447107044[102] = 0;
   out_5026262334447107044[103] = 0;
   out_5026262334447107044[104] = 0;
   out_5026262334447107044[105] = 0;
   out_5026262334447107044[106] = 0;
   out_5026262334447107044[107] = 0;
   out_5026262334447107044[108] = -0.5*state[6];
   out_5026262334447107044[109] = 0.5*state[3];
   out_5026262334447107044[110] = 0.5*state[4];
   out_5026262334447107044[111] = 0;
   out_5026262334447107044[112] = 0;
   out_5026262334447107044[113] = 0;
   out_5026262334447107044[114] = 0;
   out_5026262334447107044[115] = 0;
   out_5026262334447107044[116] = 0;
   out_5026262334447107044[117] = 0;
   out_5026262334447107044[118] = 0;
   out_5026262334447107044[119] = 0;
   out_5026262334447107044[120] = 0;
   out_5026262334447107044[121] = 0;
   out_5026262334447107044[122] = 0;
   out_5026262334447107044[123] = 0;
   out_5026262334447107044[124] = 0;
   out_5026262334447107044[125] = 0;
   out_5026262334447107044[126] = 0;
   out_5026262334447107044[127] = 0;
   out_5026262334447107044[128] = 0;
   out_5026262334447107044[129] = 0.5*state[5];
   out_5026262334447107044[130] = -0.5*state[4];
   out_5026262334447107044[131] = 0.5*state[3];
   out_5026262334447107044[132] = 0;
   out_5026262334447107044[133] = 0;
   out_5026262334447107044[134] = 0;
   out_5026262334447107044[135] = 0;
   out_5026262334447107044[136] = 0;
   out_5026262334447107044[137] = 0;
   out_5026262334447107044[138] = 0;
   out_5026262334447107044[139] = 0;
   out_5026262334447107044[140] = 0;
   out_5026262334447107044[141] = 0;
   out_5026262334447107044[142] = 0;
   out_5026262334447107044[143] = 0;
   out_5026262334447107044[144] = 0;
   out_5026262334447107044[145] = 0;
   out_5026262334447107044[146] = 0;
   out_5026262334447107044[147] = 0;
   out_5026262334447107044[148] = 0;
   out_5026262334447107044[149] = 0;
   out_5026262334447107044[150] = 0;
   out_5026262334447107044[151] = 0;
   out_5026262334447107044[152] = 0;
   out_5026262334447107044[153] = 1.0;
   out_5026262334447107044[154] = 0;
   out_5026262334447107044[155] = 0;
   out_5026262334447107044[156] = 0;
   out_5026262334447107044[157] = 0;
   out_5026262334447107044[158] = 0;
   out_5026262334447107044[159] = 0;
   out_5026262334447107044[160] = 0;
   out_5026262334447107044[161] = 0;
   out_5026262334447107044[162] = 0;
   out_5026262334447107044[163] = 0;
   out_5026262334447107044[164] = 0;
   out_5026262334447107044[165] = 0;
   out_5026262334447107044[166] = 0;
   out_5026262334447107044[167] = 0;
   out_5026262334447107044[168] = 0;
   out_5026262334447107044[169] = 0;
   out_5026262334447107044[170] = 0;
   out_5026262334447107044[171] = 0;
   out_5026262334447107044[172] = 0;
   out_5026262334447107044[173] = 0;
   out_5026262334447107044[174] = 0;
   out_5026262334447107044[175] = 1.0;
   out_5026262334447107044[176] = 0;
   out_5026262334447107044[177] = 0;
   out_5026262334447107044[178] = 0;
   out_5026262334447107044[179] = 0;
   out_5026262334447107044[180] = 0;
   out_5026262334447107044[181] = 0;
   out_5026262334447107044[182] = 0;
   out_5026262334447107044[183] = 0;
   out_5026262334447107044[184] = 0;
   out_5026262334447107044[185] = 0;
   out_5026262334447107044[186] = 0;
   out_5026262334447107044[187] = 0;
   out_5026262334447107044[188] = 0;
   out_5026262334447107044[189] = 0;
   out_5026262334447107044[190] = 0;
   out_5026262334447107044[191] = 0;
   out_5026262334447107044[192] = 0;
   out_5026262334447107044[193] = 0;
   out_5026262334447107044[194] = 0;
   out_5026262334447107044[195] = 0;
   out_5026262334447107044[196] = 0;
   out_5026262334447107044[197] = 1.0;
   out_5026262334447107044[198] = 0;
   out_5026262334447107044[199] = 0;
   out_5026262334447107044[200] = 0;
   out_5026262334447107044[201] = 0;
   out_5026262334447107044[202] = 0;
   out_5026262334447107044[203] = 0;
   out_5026262334447107044[204] = 0;
   out_5026262334447107044[205] = 0;
   out_5026262334447107044[206] = 0;
   out_5026262334447107044[207] = 0;
   out_5026262334447107044[208] = 0;
   out_5026262334447107044[209] = 0;
   out_5026262334447107044[210] = 0;
   out_5026262334447107044[211] = 0;
   out_5026262334447107044[212] = 0;
   out_5026262334447107044[213] = 0;
   out_5026262334447107044[214] = 0;
   out_5026262334447107044[215] = 0;
   out_5026262334447107044[216] = 0;
   out_5026262334447107044[217] = 0;
   out_5026262334447107044[218] = 0;
   out_5026262334447107044[219] = 1.0;
   out_5026262334447107044[220] = 0;
   out_5026262334447107044[221] = 0;
   out_5026262334447107044[222] = 0;
   out_5026262334447107044[223] = 0;
   out_5026262334447107044[224] = 0;
   out_5026262334447107044[225] = 0;
   out_5026262334447107044[226] = 0;
   out_5026262334447107044[227] = 0;
   out_5026262334447107044[228] = 0;
   out_5026262334447107044[229] = 0;
   out_5026262334447107044[230] = 0;
   out_5026262334447107044[231] = 0;
   out_5026262334447107044[232] = 0;
   out_5026262334447107044[233] = 0;
   out_5026262334447107044[234] = 0;
   out_5026262334447107044[235] = 0;
   out_5026262334447107044[236] = 0;
   out_5026262334447107044[237] = 0;
   out_5026262334447107044[238] = 0;
   out_5026262334447107044[239] = 0;
   out_5026262334447107044[240] = 0;
   out_5026262334447107044[241] = 1.0;
   out_5026262334447107044[242] = 0;
   out_5026262334447107044[243] = 0;
   out_5026262334447107044[244] = 0;
   out_5026262334447107044[245] = 0;
   out_5026262334447107044[246] = 0;
   out_5026262334447107044[247] = 0;
   out_5026262334447107044[248] = 0;
   out_5026262334447107044[249] = 0;
   out_5026262334447107044[250] = 0;
   out_5026262334447107044[251] = 0;
   out_5026262334447107044[252] = 0;
   out_5026262334447107044[253] = 0;
   out_5026262334447107044[254] = 0;
   out_5026262334447107044[255] = 0;
   out_5026262334447107044[256] = 0;
   out_5026262334447107044[257] = 0;
   out_5026262334447107044[258] = 0;
   out_5026262334447107044[259] = 0;
   out_5026262334447107044[260] = 0;
   out_5026262334447107044[261] = 0;
   out_5026262334447107044[262] = 0;
   out_5026262334447107044[263] = 1.0;
   out_5026262334447107044[264] = 0;
   out_5026262334447107044[265] = 0;
   out_5026262334447107044[266] = 0;
   out_5026262334447107044[267] = 0;
   out_5026262334447107044[268] = 0;
   out_5026262334447107044[269] = 0;
   out_5026262334447107044[270] = 0;
   out_5026262334447107044[271] = 0;
   out_5026262334447107044[272] = 0;
   out_5026262334447107044[273] = 0;
   out_5026262334447107044[274] = 0;
   out_5026262334447107044[275] = 0;
   out_5026262334447107044[276] = 0;
   out_5026262334447107044[277] = 0;
   out_5026262334447107044[278] = 0;
   out_5026262334447107044[279] = 0;
   out_5026262334447107044[280] = 0;
   out_5026262334447107044[281] = 0;
   out_5026262334447107044[282] = 0;
   out_5026262334447107044[283] = 0;
   out_5026262334447107044[284] = 0;
   out_5026262334447107044[285] = 1.0;
   out_5026262334447107044[286] = 0;
   out_5026262334447107044[287] = 0;
   out_5026262334447107044[288] = 0;
   out_5026262334447107044[289] = 0;
   out_5026262334447107044[290] = 0;
   out_5026262334447107044[291] = 0;
   out_5026262334447107044[292] = 0;
   out_5026262334447107044[293] = 0;
   out_5026262334447107044[294] = 0;
   out_5026262334447107044[295] = 0;
   out_5026262334447107044[296] = 0;
   out_5026262334447107044[297] = 0;
   out_5026262334447107044[298] = 0;
   out_5026262334447107044[299] = 0;
   out_5026262334447107044[300] = 0;
   out_5026262334447107044[301] = 0;
   out_5026262334447107044[302] = 0;
   out_5026262334447107044[303] = 0;
   out_5026262334447107044[304] = 0;
   out_5026262334447107044[305] = 0;
   out_5026262334447107044[306] = 0;
   out_5026262334447107044[307] = 1.0;
   out_5026262334447107044[308] = 0;
   out_5026262334447107044[309] = 0;
   out_5026262334447107044[310] = 0;
   out_5026262334447107044[311] = 0;
   out_5026262334447107044[312] = 0;
   out_5026262334447107044[313] = 0;
   out_5026262334447107044[314] = 0;
   out_5026262334447107044[315] = 0;
   out_5026262334447107044[316] = 0;
   out_5026262334447107044[317] = 0;
   out_5026262334447107044[318] = 0;
   out_5026262334447107044[319] = 0;
   out_5026262334447107044[320] = 0;
   out_5026262334447107044[321] = 0;
   out_5026262334447107044[322] = 0;
   out_5026262334447107044[323] = 0;
   out_5026262334447107044[324] = 0;
   out_5026262334447107044[325] = 0;
   out_5026262334447107044[326] = 0;
   out_5026262334447107044[327] = 0;
   out_5026262334447107044[328] = 0;
   out_5026262334447107044[329] = 1.0;
   out_5026262334447107044[330] = 0;
   out_5026262334447107044[331] = 0;
   out_5026262334447107044[332] = 0;
   out_5026262334447107044[333] = 0;
   out_5026262334447107044[334] = 0;
   out_5026262334447107044[335] = 0;
   out_5026262334447107044[336] = 0;
   out_5026262334447107044[337] = 0;
   out_5026262334447107044[338] = 0;
   out_5026262334447107044[339] = 0;
   out_5026262334447107044[340] = 0;
   out_5026262334447107044[341] = 0;
   out_5026262334447107044[342] = 0;
   out_5026262334447107044[343] = 0;
   out_5026262334447107044[344] = 0;
   out_5026262334447107044[345] = 0;
   out_5026262334447107044[346] = 0;
   out_5026262334447107044[347] = 0;
   out_5026262334447107044[348] = 0;
   out_5026262334447107044[349] = 0;
   out_5026262334447107044[350] = 0;
   out_5026262334447107044[351] = 1.0;
   out_5026262334447107044[352] = 0;
   out_5026262334447107044[353] = 0;
   out_5026262334447107044[354] = 0;
   out_5026262334447107044[355] = 0;
   out_5026262334447107044[356] = 0;
   out_5026262334447107044[357] = 0;
   out_5026262334447107044[358] = 0;
   out_5026262334447107044[359] = 0;
   out_5026262334447107044[360] = 0;
   out_5026262334447107044[361] = 0;
   out_5026262334447107044[362] = 0;
   out_5026262334447107044[363] = 0;
   out_5026262334447107044[364] = 0;
   out_5026262334447107044[365] = 0;
   out_5026262334447107044[366] = 0;
   out_5026262334447107044[367] = 0;
   out_5026262334447107044[368] = 0;
   out_5026262334447107044[369] = 0;
   out_5026262334447107044[370] = 0;
   out_5026262334447107044[371] = 0;
   out_5026262334447107044[372] = 0;
   out_5026262334447107044[373] = 1.0;
   out_5026262334447107044[374] = 0;
   out_5026262334447107044[375] = 0;
   out_5026262334447107044[376] = 0;
   out_5026262334447107044[377] = 0;
   out_5026262334447107044[378] = 0;
   out_5026262334447107044[379] = 0;
   out_5026262334447107044[380] = 0;
   out_5026262334447107044[381] = 0;
   out_5026262334447107044[382] = 0;
   out_5026262334447107044[383] = 0;
   out_5026262334447107044[384] = 0;
   out_5026262334447107044[385] = 0;
   out_5026262334447107044[386] = 0;
   out_5026262334447107044[387] = 0;
   out_5026262334447107044[388] = 0;
   out_5026262334447107044[389] = 0;
   out_5026262334447107044[390] = 0;
   out_5026262334447107044[391] = 0;
   out_5026262334447107044[392] = 0;
   out_5026262334447107044[393] = 0;
   out_5026262334447107044[394] = 0;
   out_5026262334447107044[395] = 1.0;
   out_5026262334447107044[396] = 0;
   out_5026262334447107044[397] = 0;
   out_5026262334447107044[398] = 0;
   out_5026262334447107044[399] = 0;
   out_5026262334447107044[400] = 0;
   out_5026262334447107044[401] = 0;
   out_5026262334447107044[402] = 0;
   out_5026262334447107044[403] = 0;
   out_5026262334447107044[404] = 0;
   out_5026262334447107044[405] = 0;
   out_5026262334447107044[406] = 0;
   out_5026262334447107044[407] = 0;
   out_5026262334447107044[408] = 0;
   out_5026262334447107044[409] = 0;
   out_5026262334447107044[410] = 0;
   out_5026262334447107044[411] = 0;
   out_5026262334447107044[412] = 0;
   out_5026262334447107044[413] = 0;
   out_5026262334447107044[414] = 0;
   out_5026262334447107044[415] = 0;
   out_5026262334447107044[416] = 0;
   out_5026262334447107044[417] = 1.0;
   out_5026262334447107044[418] = 0;
   out_5026262334447107044[419] = 0;
   out_5026262334447107044[420] = 0;
   out_5026262334447107044[421] = 0;
   out_5026262334447107044[422] = 0;
   out_5026262334447107044[423] = 0;
   out_5026262334447107044[424] = 0;
   out_5026262334447107044[425] = 0;
   out_5026262334447107044[426] = 0;
   out_5026262334447107044[427] = 0;
   out_5026262334447107044[428] = 0;
   out_5026262334447107044[429] = 0;
   out_5026262334447107044[430] = 0;
   out_5026262334447107044[431] = 0;
   out_5026262334447107044[432] = 0;
   out_5026262334447107044[433] = 0;
   out_5026262334447107044[434] = 0;
   out_5026262334447107044[435] = 0;
   out_5026262334447107044[436] = 0;
   out_5026262334447107044[437] = 0;
   out_5026262334447107044[438] = 0;
   out_5026262334447107044[439] = 1.0;
   out_5026262334447107044[440] = 0;
   out_5026262334447107044[441] = 0;
   out_5026262334447107044[442] = 0;
   out_5026262334447107044[443] = 0;
   out_5026262334447107044[444] = 0;
   out_5026262334447107044[445] = 0;
   out_5026262334447107044[446] = 0;
   out_5026262334447107044[447] = 0;
   out_5026262334447107044[448] = 0;
   out_5026262334447107044[449] = 0;
   out_5026262334447107044[450] = 0;
   out_5026262334447107044[451] = 0;
   out_5026262334447107044[452] = 0;
   out_5026262334447107044[453] = 0;
   out_5026262334447107044[454] = 0;
   out_5026262334447107044[455] = 0;
   out_5026262334447107044[456] = 0;
   out_5026262334447107044[457] = 0;
   out_5026262334447107044[458] = 0;
   out_5026262334447107044[459] = 0;
   out_5026262334447107044[460] = 0;
   out_5026262334447107044[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7740889094243200222) {
   out_7740889094243200222[0] = dt*state[7] + state[0];
   out_7740889094243200222[1] = dt*state[8] + state[1];
   out_7740889094243200222[2] = dt*state[9] + state[2];
   out_7740889094243200222[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7740889094243200222[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7740889094243200222[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7740889094243200222[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7740889094243200222[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7740889094243200222[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7740889094243200222[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7740889094243200222[10] = state[10];
   out_7740889094243200222[11] = state[11];
   out_7740889094243200222[12] = state[12];
   out_7740889094243200222[13] = state[13];
   out_7740889094243200222[14] = state[14];
   out_7740889094243200222[15] = state[15];
   out_7740889094243200222[16] = state[16];
   out_7740889094243200222[17] = state[17];
   out_7740889094243200222[18] = state[18];
   out_7740889094243200222[19] = state[19];
   out_7740889094243200222[20] = state[20];
   out_7740889094243200222[21] = state[21];
}
void F_fun(double *state, double dt, double *out_60591835377190728) {
   out_60591835377190728[0] = 1;
   out_60591835377190728[1] = 0;
   out_60591835377190728[2] = 0;
   out_60591835377190728[3] = 0;
   out_60591835377190728[4] = 0;
   out_60591835377190728[5] = 0;
   out_60591835377190728[6] = dt;
   out_60591835377190728[7] = 0;
   out_60591835377190728[8] = 0;
   out_60591835377190728[9] = 0;
   out_60591835377190728[10] = 0;
   out_60591835377190728[11] = 0;
   out_60591835377190728[12] = 0;
   out_60591835377190728[13] = 0;
   out_60591835377190728[14] = 0;
   out_60591835377190728[15] = 0;
   out_60591835377190728[16] = 0;
   out_60591835377190728[17] = 0;
   out_60591835377190728[18] = 0;
   out_60591835377190728[19] = 0;
   out_60591835377190728[20] = 0;
   out_60591835377190728[21] = 0;
   out_60591835377190728[22] = 1;
   out_60591835377190728[23] = 0;
   out_60591835377190728[24] = 0;
   out_60591835377190728[25] = 0;
   out_60591835377190728[26] = 0;
   out_60591835377190728[27] = 0;
   out_60591835377190728[28] = dt;
   out_60591835377190728[29] = 0;
   out_60591835377190728[30] = 0;
   out_60591835377190728[31] = 0;
   out_60591835377190728[32] = 0;
   out_60591835377190728[33] = 0;
   out_60591835377190728[34] = 0;
   out_60591835377190728[35] = 0;
   out_60591835377190728[36] = 0;
   out_60591835377190728[37] = 0;
   out_60591835377190728[38] = 0;
   out_60591835377190728[39] = 0;
   out_60591835377190728[40] = 0;
   out_60591835377190728[41] = 0;
   out_60591835377190728[42] = 0;
   out_60591835377190728[43] = 0;
   out_60591835377190728[44] = 1;
   out_60591835377190728[45] = 0;
   out_60591835377190728[46] = 0;
   out_60591835377190728[47] = 0;
   out_60591835377190728[48] = 0;
   out_60591835377190728[49] = 0;
   out_60591835377190728[50] = dt;
   out_60591835377190728[51] = 0;
   out_60591835377190728[52] = 0;
   out_60591835377190728[53] = 0;
   out_60591835377190728[54] = 0;
   out_60591835377190728[55] = 0;
   out_60591835377190728[56] = 0;
   out_60591835377190728[57] = 0;
   out_60591835377190728[58] = 0;
   out_60591835377190728[59] = 0;
   out_60591835377190728[60] = 0;
   out_60591835377190728[61] = 0;
   out_60591835377190728[62] = 0;
   out_60591835377190728[63] = 0;
   out_60591835377190728[64] = 0;
   out_60591835377190728[65] = 0;
   out_60591835377190728[66] = 1;
   out_60591835377190728[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_60591835377190728[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_60591835377190728[69] = 0;
   out_60591835377190728[70] = 0;
   out_60591835377190728[71] = 0;
   out_60591835377190728[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_60591835377190728[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_60591835377190728[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_60591835377190728[75] = 0;
   out_60591835377190728[76] = 0;
   out_60591835377190728[77] = 0;
   out_60591835377190728[78] = 0;
   out_60591835377190728[79] = 0;
   out_60591835377190728[80] = 0;
   out_60591835377190728[81] = 0;
   out_60591835377190728[82] = 0;
   out_60591835377190728[83] = 0;
   out_60591835377190728[84] = 0;
   out_60591835377190728[85] = 0;
   out_60591835377190728[86] = 0;
   out_60591835377190728[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_60591835377190728[88] = 1;
   out_60591835377190728[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_60591835377190728[90] = 0;
   out_60591835377190728[91] = 0;
   out_60591835377190728[92] = 0;
   out_60591835377190728[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_60591835377190728[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_60591835377190728[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_60591835377190728[96] = 0;
   out_60591835377190728[97] = 0;
   out_60591835377190728[98] = 0;
   out_60591835377190728[99] = 0;
   out_60591835377190728[100] = 0;
   out_60591835377190728[101] = 0;
   out_60591835377190728[102] = 0;
   out_60591835377190728[103] = 0;
   out_60591835377190728[104] = 0;
   out_60591835377190728[105] = 0;
   out_60591835377190728[106] = 0;
   out_60591835377190728[107] = 0;
   out_60591835377190728[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_60591835377190728[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_60591835377190728[110] = 1;
   out_60591835377190728[111] = 0;
   out_60591835377190728[112] = 0;
   out_60591835377190728[113] = 0;
   out_60591835377190728[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_60591835377190728[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_60591835377190728[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_60591835377190728[117] = 0;
   out_60591835377190728[118] = 0;
   out_60591835377190728[119] = 0;
   out_60591835377190728[120] = 0;
   out_60591835377190728[121] = 0;
   out_60591835377190728[122] = 0;
   out_60591835377190728[123] = 0;
   out_60591835377190728[124] = 0;
   out_60591835377190728[125] = 0;
   out_60591835377190728[126] = 0;
   out_60591835377190728[127] = 0;
   out_60591835377190728[128] = 0;
   out_60591835377190728[129] = 0;
   out_60591835377190728[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_60591835377190728[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_60591835377190728[132] = 1;
   out_60591835377190728[133] = 0;
   out_60591835377190728[134] = 0;
   out_60591835377190728[135] = 0;
   out_60591835377190728[136] = 0;
   out_60591835377190728[137] = 0;
   out_60591835377190728[138] = 0;
   out_60591835377190728[139] = 0;
   out_60591835377190728[140] = 0;
   out_60591835377190728[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_60591835377190728[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_60591835377190728[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_60591835377190728[144] = 0;
   out_60591835377190728[145] = 0;
   out_60591835377190728[146] = 0;
   out_60591835377190728[147] = 0;
   out_60591835377190728[148] = 0;
   out_60591835377190728[149] = 0;
   out_60591835377190728[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_60591835377190728[151] = 0;
   out_60591835377190728[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_60591835377190728[153] = 0;
   out_60591835377190728[154] = 1;
   out_60591835377190728[155] = 0;
   out_60591835377190728[156] = 0;
   out_60591835377190728[157] = 0;
   out_60591835377190728[158] = 0;
   out_60591835377190728[159] = 0;
   out_60591835377190728[160] = 0;
   out_60591835377190728[161] = 0;
   out_60591835377190728[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_60591835377190728[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_60591835377190728[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_60591835377190728[165] = 0;
   out_60591835377190728[166] = 0;
   out_60591835377190728[167] = 0;
   out_60591835377190728[168] = 0;
   out_60591835377190728[169] = 0;
   out_60591835377190728[170] = 0;
   out_60591835377190728[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_60591835377190728[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_60591835377190728[173] = 0;
   out_60591835377190728[174] = 0;
   out_60591835377190728[175] = 0;
   out_60591835377190728[176] = 1;
   out_60591835377190728[177] = 0;
   out_60591835377190728[178] = 0;
   out_60591835377190728[179] = 0;
   out_60591835377190728[180] = 0;
   out_60591835377190728[181] = 0;
   out_60591835377190728[182] = 0;
   out_60591835377190728[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_60591835377190728[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_60591835377190728[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_60591835377190728[186] = 0;
   out_60591835377190728[187] = 0;
   out_60591835377190728[188] = 0;
   out_60591835377190728[189] = 0;
   out_60591835377190728[190] = 0;
   out_60591835377190728[191] = 0;
   out_60591835377190728[192] = 0;
   out_60591835377190728[193] = 0;
   out_60591835377190728[194] = 0;
   out_60591835377190728[195] = 0;
   out_60591835377190728[196] = 0;
   out_60591835377190728[197] = 0;
   out_60591835377190728[198] = 1;
   out_60591835377190728[199] = 0;
   out_60591835377190728[200] = 0;
   out_60591835377190728[201] = 0;
   out_60591835377190728[202] = 0;
   out_60591835377190728[203] = 0;
   out_60591835377190728[204] = 0;
   out_60591835377190728[205] = 0;
   out_60591835377190728[206] = 0;
   out_60591835377190728[207] = 0;
   out_60591835377190728[208] = 0;
   out_60591835377190728[209] = 0;
   out_60591835377190728[210] = 0;
   out_60591835377190728[211] = 0;
   out_60591835377190728[212] = 0;
   out_60591835377190728[213] = 0;
   out_60591835377190728[214] = 0;
   out_60591835377190728[215] = 0;
   out_60591835377190728[216] = 0;
   out_60591835377190728[217] = 0;
   out_60591835377190728[218] = 0;
   out_60591835377190728[219] = 0;
   out_60591835377190728[220] = 1;
   out_60591835377190728[221] = 0;
   out_60591835377190728[222] = 0;
   out_60591835377190728[223] = 0;
   out_60591835377190728[224] = 0;
   out_60591835377190728[225] = 0;
   out_60591835377190728[226] = 0;
   out_60591835377190728[227] = 0;
   out_60591835377190728[228] = 0;
   out_60591835377190728[229] = 0;
   out_60591835377190728[230] = 0;
   out_60591835377190728[231] = 0;
   out_60591835377190728[232] = 0;
   out_60591835377190728[233] = 0;
   out_60591835377190728[234] = 0;
   out_60591835377190728[235] = 0;
   out_60591835377190728[236] = 0;
   out_60591835377190728[237] = 0;
   out_60591835377190728[238] = 0;
   out_60591835377190728[239] = 0;
   out_60591835377190728[240] = 0;
   out_60591835377190728[241] = 0;
   out_60591835377190728[242] = 1;
   out_60591835377190728[243] = 0;
   out_60591835377190728[244] = 0;
   out_60591835377190728[245] = 0;
   out_60591835377190728[246] = 0;
   out_60591835377190728[247] = 0;
   out_60591835377190728[248] = 0;
   out_60591835377190728[249] = 0;
   out_60591835377190728[250] = 0;
   out_60591835377190728[251] = 0;
   out_60591835377190728[252] = 0;
   out_60591835377190728[253] = 0;
   out_60591835377190728[254] = 0;
   out_60591835377190728[255] = 0;
   out_60591835377190728[256] = 0;
   out_60591835377190728[257] = 0;
   out_60591835377190728[258] = 0;
   out_60591835377190728[259] = 0;
   out_60591835377190728[260] = 0;
   out_60591835377190728[261] = 0;
   out_60591835377190728[262] = 0;
   out_60591835377190728[263] = 0;
   out_60591835377190728[264] = 1;
   out_60591835377190728[265] = 0;
   out_60591835377190728[266] = 0;
   out_60591835377190728[267] = 0;
   out_60591835377190728[268] = 0;
   out_60591835377190728[269] = 0;
   out_60591835377190728[270] = 0;
   out_60591835377190728[271] = 0;
   out_60591835377190728[272] = 0;
   out_60591835377190728[273] = 0;
   out_60591835377190728[274] = 0;
   out_60591835377190728[275] = 0;
   out_60591835377190728[276] = 0;
   out_60591835377190728[277] = 0;
   out_60591835377190728[278] = 0;
   out_60591835377190728[279] = 0;
   out_60591835377190728[280] = 0;
   out_60591835377190728[281] = 0;
   out_60591835377190728[282] = 0;
   out_60591835377190728[283] = 0;
   out_60591835377190728[284] = 0;
   out_60591835377190728[285] = 0;
   out_60591835377190728[286] = 1;
   out_60591835377190728[287] = 0;
   out_60591835377190728[288] = 0;
   out_60591835377190728[289] = 0;
   out_60591835377190728[290] = 0;
   out_60591835377190728[291] = 0;
   out_60591835377190728[292] = 0;
   out_60591835377190728[293] = 0;
   out_60591835377190728[294] = 0;
   out_60591835377190728[295] = 0;
   out_60591835377190728[296] = 0;
   out_60591835377190728[297] = 0;
   out_60591835377190728[298] = 0;
   out_60591835377190728[299] = 0;
   out_60591835377190728[300] = 0;
   out_60591835377190728[301] = 0;
   out_60591835377190728[302] = 0;
   out_60591835377190728[303] = 0;
   out_60591835377190728[304] = 0;
   out_60591835377190728[305] = 0;
   out_60591835377190728[306] = 0;
   out_60591835377190728[307] = 0;
   out_60591835377190728[308] = 1;
   out_60591835377190728[309] = 0;
   out_60591835377190728[310] = 0;
   out_60591835377190728[311] = 0;
   out_60591835377190728[312] = 0;
   out_60591835377190728[313] = 0;
   out_60591835377190728[314] = 0;
   out_60591835377190728[315] = 0;
   out_60591835377190728[316] = 0;
   out_60591835377190728[317] = 0;
   out_60591835377190728[318] = 0;
   out_60591835377190728[319] = 0;
   out_60591835377190728[320] = 0;
   out_60591835377190728[321] = 0;
   out_60591835377190728[322] = 0;
   out_60591835377190728[323] = 0;
   out_60591835377190728[324] = 0;
   out_60591835377190728[325] = 0;
   out_60591835377190728[326] = 0;
   out_60591835377190728[327] = 0;
   out_60591835377190728[328] = 0;
   out_60591835377190728[329] = 0;
   out_60591835377190728[330] = 1;
   out_60591835377190728[331] = 0;
   out_60591835377190728[332] = 0;
   out_60591835377190728[333] = 0;
   out_60591835377190728[334] = 0;
   out_60591835377190728[335] = 0;
   out_60591835377190728[336] = 0;
   out_60591835377190728[337] = 0;
   out_60591835377190728[338] = 0;
   out_60591835377190728[339] = 0;
   out_60591835377190728[340] = 0;
   out_60591835377190728[341] = 0;
   out_60591835377190728[342] = 0;
   out_60591835377190728[343] = 0;
   out_60591835377190728[344] = 0;
   out_60591835377190728[345] = 0;
   out_60591835377190728[346] = 0;
   out_60591835377190728[347] = 0;
   out_60591835377190728[348] = 0;
   out_60591835377190728[349] = 0;
   out_60591835377190728[350] = 0;
   out_60591835377190728[351] = 0;
   out_60591835377190728[352] = 1;
   out_60591835377190728[353] = 0;
   out_60591835377190728[354] = 0;
   out_60591835377190728[355] = 0;
   out_60591835377190728[356] = 0;
   out_60591835377190728[357] = 0;
   out_60591835377190728[358] = 0;
   out_60591835377190728[359] = 0;
   out_60591835377190728[360] = 0;
   out_60591835377190728[361] = 0;
   out_60591835377190728[362] = 0;
   out_60591835377190728[363] = 0;
   out_60591835377190728[364] = 0;
   out_60591835377190728[365] = 0;
   out_60591835377190728[366] = 0;
   out_60591835377190728[367] = 0;
   out_60591835377190728[368] = 0;
   out_60591835377190728[369] = 0;
   out_60591835377190728[370] = 0;
   out_60591835377190728[371] = 0;
   out_60591835377190728[372] = 0;
   out_60591835377190728[373] = 0;
   out_60591835377190728[374] = 1;
   out_60591835377190728[375] = 0;
   out_60591835377190728[376] = 0;
   out_60591835377190728[377] = 0;
   out_60591835377190728[378] = 0;
   out_60591835377190728[379] = 0;
   out_60591835377190728[380] = 0;
   out_60591835377190728[381] = 0;
   out_60591835377190728[382] = 0;
   out_60591835377190728[383] = 0;
   out_60591835377190728[384] = 0;
   out_60591835377190728[385] = 0;
   out_60591835377190728[386] = 0;
   out_60591835377190728[387] = 0;
   out_60591835377190728[388] = 0;
   out_60591835377190728[389] = 0;
   out_60591835377190728[390] = 0;
   out_60591835377190728[391] = 0;
   out_60591835377190728[392] = 0;
   out_60591835377190728[393] = 0;
   out_60591835377190728[394] = 0;
   out_60591835377190728[395] = 0;
   out_60591835377190728[396] = 1;
   out_60591835377190728[397] = 0;
   out_60591835377190728[398] = 0;
   out_60591835377190728[399] = 0;
   out_60591835377190728[400] = 0;
   out_60591835377190728[401] = 0;
   out_60591835377190728[402] = 0;
   out_60591835377190728[403] = 0;
   out_60591835377190728[404] = 0;
   out_60591835377190728[405] = 0;
   out_60591835377190728[406] = 0;
   out_60591835377190728[407] = 0;
   out_60591835377190728[408] = 0;
   out_60591835377190728[409] = 0;
   out_60591835377190728[410] = 0;
   out_60591835377190728[411] = 0;
   out_60591835377190728[412] = 0;
   out_60591835377190728[413] = 0;
   out_60591835377190728[414] = 0;
   out_60591835377190728[415] = 0;
   out_60591835377190728[416] = 0;
   out_60591835377190728[417] = 0;
   out_60591835377190728[418] = 1;
   out_60591835377190728[419] = 0;
   out_60591835377190728[420] = 0;
   out_60591835377190728[421] = 0;
   out_60591835377190728[422] = 0;
   out_60591835377190728[423] = 0;
   out_60591835377190728[424] = 0;
   out_60591835377190728[425] = 0;
   out_60591835377190728[426] = 0;
   out_60591835377190728[427] = 0;
   out_60591835377190728[428] = 0;
   out_60591835377190728[429] = 0;
   out_60591835377190728[430] = 0;
   out_60591835377190728[431] = 0;
   out_60591835377190728[432] = 0;
   out_60591835377190728[433] = 0;
   out_60591835377190728[434] = 0;
   out_60591835377190728[435] = 0;
   out_60591835377190728[436] = 0;
   out_60591835377190728[437] = 0;
   out_60591835377190728[438] = 0;
   out_60591835377190728[439] = 0;
   out_60591835377190728[440] = 1;
}
void h_4(double *state, double *unused, double *out_8539687266358635615) {
   out_8539687266358635615[0] = state[10] + state[13];
   out_8539687266358635615[1] = state[11] + state[14];
   out_8539687266358635615[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5049236825839475886) {
   out_5049236825839475886[0] = 0;
   out_5049236825839475886[1] = 0;
   out_5049236825839475886[2] = 0;
   out_5049236825839475886[3] = 0;
   out_5049236825839475886[4] = 0;
   out_5049236825839475886[5] = 0;
   out_5049236825839475886[6] = 0;
   out_5049236825839475886[7] = 0;
   out_5049236825839475886[8] = 0;
   out_5049236825839475886[9] = 0;
   out_5049236825839475886[10] = 1;
   out_5049236825839475886[11] = 0;
   out_5049236825839475886[12] = 0;
   out_5049236825839475886[13] = 1;
   out_5049236825839475886[14] = 0;
   out_5049236825839475886[15] = 0;
   out_5049236825839475886[16] = 0;
   out_5049236825839475886[17] = 0;
   out_5049236825839475886[18] = 0;
   out_5049236825839475886[19] = 0;
   out_5049236825839475886[20] = 0;
   out_5049236825839475886[21] = 0;
   out_5049236825839475886[22] = 0;
   out_5049236825839475886[23] = 0;
   out_5049236825839475886[24] = 0;
   out_5049236825839475886[25] = 0;
   out_5049236825839475886[26] = 0;
   out_5049236825839475886[27] = 0;
   out_5049236825839475886[28] = 0;
   out_5049236825839475886[29] = 0;
   out_5049236825839475886[30] = 0;
   out_5049236825839475886[31] = 0;
   out_5049236825839475886[32] = 0;
   out_5049236825839475886[33] = 1;
   out_5049236825839475886[34] = 0;
   out_5049236825839475886[35] = 0;
   out_5049236825839475886[36] = 1;
   out_5049236825839475886[37] = 0;
   out_5049236825839475886[38] = 0;
   out_5049236825839475886[39] = 0;
   out_5049236825839475886[40] = 0;
   out_5049236825839475886[41] = 0;
   out_5049236825839475886[42] = 0;
   out_5049236825839475886[43] = 0;
   out_5049236825839475886[44] = 0;
   out_5049236825839475886[45] = 0;
   out_5049236825839475886[46] = 0;
   out_5049236825839475886[47] = 0;
   out_5049236825839475886[48] = 0;
   out_5049236825839475886[49] = 0;
   out_5049236825839475886[50] = 0;
   out_5049236825839475886[51] = 0;
   out_5049236825839475886[52] = 0;
   out_5049236825839475886[53] = 0;
   out_5049236825839475886[54] = 0;
   out_5049236825839475886[55] = 0;
   out_5049236825839475886[56] = 1;
   out_5049236825839475886[57] = 0;
   out_5049236825839475886[58] = 0;
   out_5049236825839475886[59] = 1;
   out_5049236825839475886[60] = 0;
   out_5049236825839475886[61] = 0;
   out_5049236825839475886[62] = 0;
   out_5049236825839475886[63] = 0;
   out_5049236825839475886[64] = 0;
   out_5049236825839475886[65] = 0;
}
void h_9(double *state, double *unused, double *out_1248174645366504210) {
   out_1248174645366504210[0] = state[10];
   out_1248174645366504210[1] = state[11];
   out_1248174645366504210[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6110288312605628260) {
   out_6110288312605628260[0] = 0;
   out_6110288312605628260[1] = 0;
   out_6110288312605628260[2] = 0;
   out_6110288312605628260[3] = 0;
   out_6110288312605628260[4] = 0;
   out_6110288312605628260[5] = 0;
   out_6110288312605628260[6] = 0;
   out_6110288312605628260[7] = 0;
   out_6110288312605628260[8] = 0;
   out_6110288312605628260[9] = 0;
   out_6110288312605628260[10] = 1;
   out_6110288312605628260[11] = 0;
   out_6110288312605628260[12] = 0;
   out_6110288312605628260[13] = 0;
   out_6110288312605628260[14] = 0;
   out_6110288312605628260[15] = 0;
   out_6110288312605628260[16] = 0;
   out_6110288312605628260[17] = 0;
   out_6110288312605628260[18] = 0;
   out_6110288312605628260[19] = 0;
   out_6110288312605628260[20] = 0;
   out_6110288312605628260[21] = 0;
   out_6110288312605628260[22] = 0;
   out_6110288312605628260[23] = 0;
   out_6110288312605628260[24] = 0;
   out_6110288312605628260[25] = 0;
   out_6110288312605628260[26] = 0;
   out_6110288312605628260[27] = 0;
   out_6110288312605628260[28] = 0;
   out_6110288312605628260[29] = 0;
   out_6110288312605628260[30] = 0;
   out_6110288312605628260[31] = 0;
   out_6110288312605628260[32] = 0;
   out_6110288312605628260[33] = 1;
   out_6110288312605628260[34] = 0;
   out_6110288312605628260[35] = 0;
   out_6110288312605628260[36] = 0;
   out_6110288312605628260[37] = 0;
   out_6110288312605628260[38] = 0;
   out_6110288312605628260[39] = 0;
   out_6110288312605628260[40] = 0;
   out_6110288312605628260[41] = 0;
   out_6110288312605628260[42] = 0;
   out_6110288312605628260[43] = 0;
   out_6110288312605628260[44] = 0;
   out_6110288312605628260[45] = 0;
   out_6110288312605628260[46] = 0;
   out_6110288312605628260[47] = 0;
   out_6110288312605628260[48] = 0;
   out_6110288312605628260[49] = 0;
   out_6110288312605628260[50] = 0;
   out_6110288312605628260[51] = 0;
   out_6110288312605628260[52] = 0;
   out_6110288312605628260[53] = 0;
   out_6110288312605628260[54] = 0;
   out_6110288312605628260[55] = 0;
   out_6110288312605628260[56] = 1;
   out_6110288312605628260[57] = 0;
   out_6110288312605628260[58] = 0;
   out_6110288312605628260[59] = 0;
   out_6110288312605628260[60] = 0;
   out_6110288312605628260[61] = 0;
   out_6110288312605628260[62] = 0;
   out_6110288312605628260[63] = 0;
   out_6110288312605628260[64] = 0;
   out_6110288312605628260[65] = 0;
}
void h_10(double *state, double *unused, double *out_3149158217231723898) {
   out_3149158217231723898[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3149158217231723898[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3149158217231723898[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_937977849345286185) {
   out_937977849345286185[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_937977849345286185[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_937977849345286185[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_937977849345286185[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_937977849345286185[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_937977849345286185[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_937977849345286185[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_937977849345286185[7] = 0;
   out_937977849345286185[8] = 0;
   out_937977849345286185[9] = 0;
   out_937977849345286185[10] = 0;
   out_937977849345286185[11] = 0;
   out_937977849345286185[12] = 0;
   out_937977849345286185[13] = 0;
   out_937977849345286185[14] = 0;
   out_937977849345286185[15] = 0;
   out_937977849345286185[16] = 1;
   out_937977849345286185[17] = 0;
   out_937977849345286185[18] = 0;
   out_937977849345286185[19] = 1;
   out_937977849345286185[20] = 0;
   out_937977849345286185[21] = 0;
   out_937977849345286185[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_937977849345286185[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_937977849345286185[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_937977849345286185[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_937977849345286185[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_937977849345286185[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_937977849345286185[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_937977849345286185[29] = 0;
   out_937977849345286185[30] = 0;
   out_937977849345286185[31] = 0;
   out_937977849345286185[32] = 0;
   out_937977849345286185[33] = 0;
   out_937977849345286185[34] = 0;
   out_937977849345286185[35] = 0;
   out_937977849345286185[36] = 0;
   out_937977849345286185[37] = 0;
   out_937977849345286185[38] = 0;
   out_937977849345286185[39] = 1;
   out_937977849345286185[40] = 0;
   out_937977849345286185[41] = 0;
   out_937977849345286185[42] = 1;
   out_937977849345286185[43] = 0;
   out_937977849345286185[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_937977849345286185[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_937977849345286185[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_937977849345286185[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_937977849345286185[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_937977849345286185[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_937977849345286185[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_937977849345286185[51] = 0;
   out_937977849345286185[52] = 0;
   out_937977849345286185[53] = 0;
   out_937977849345286185[54] = 0;
   out_937977849345286185[55] = 0;
   out_937977849345286185[56] = 0;
   out_937977849345286185[57] = 0;
   out_937977849345286185[58] = 0;
   out_937977849345286185[59] = 0;
   out_937977849345286185[60] = 0;
   out_937977849345286185[61] = 0;
   out_937977849345286185[62] = 1;
   out_937977849345286185[63] = 0;
   out_937977849345286185[64] = 0;
   out_937977849345286185[65] = 1;
}
void h_12(double *state, double *unused, double *out_3640662110287520591) {
   out_3640662110287520591[0] = state[0];
   out_3640662110287520591[1] = state[1];
   out_3640662110287520591[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5730378934187625238) {
   out_5730378934187625238[0] = 1;
   out_5730378934187625238[1] = 0;
   out_5730378934187625238[2] = 0;
   out_5730378934187625238[3] = 0;
   out_5730378934187625238[4] = 0;
   out_5730378934187625238[5] = 0;
   out_5730378934187625238[6] = 0;
   out_5730378934187625238[7] = 0;
   out_5730378934187625238[8] = 0;
   out_5730378934187625238[9] = 0;
   out_5730378934187625238[10] = 0;
   out_5730378934187625238[11] = 0;
   out_5730378934187625238[12] = 0;
   out_5730378934187625238[13] = 0;
   out_5730378934187625238[14] = 0;
   out_5730378934187625238[15] = 0;
   out_5730378934187625238[16] = 0;
   out_5730378934187625238[17] = 0;
   out_5730378934187625238[18] = 0;
   out_5730378934187625238[19] = 0;
   out_5730378934187625238[20] = 0;
   out_5730378934187625238[21] = 0;
   out_5730378934187625238[22] = 0;
   out_5730378934187625238[23] = 1;
   out_5730378934187625238[24] = 0;
   out_5730378934187625238[25] = 0;
   out_5730378934187625238[26] = 0;
   out_5730378934187625238[27] = 0;
   out_5730378934187625238[28] = 0;
   out_5730378934187625238[29] = 0;
   out_5730378934187625238[30] = 0;
   out_5730378934187625238[31] = 0;
   out_5730378934187625238[32] = 0;
   out_5730378934187625238[33] = 0;
   out_5730378934187625238[34] = 0;
   out_5730378934187625238[35] = 0;
   out_5730378934187625238[36] = 0;
   out_5730378934187625238[37] = 0;
   out_5730378934187625238[38] = 0;
   out_5730378934187625238[39] = 0;
   out_5730378934187625238[40] = 0;
   out_5730378934187625238[41] = 0;
   out_5730378934187625238[42] = 0;
   out_5730378934187625238[43] = 0;
   out_5730378934187625238[44] = 0;
   out_5730378934187625238[45] = 0;
   out_5730378934187625238[46] = 1;
   out_5730378934187625238[47] = 0;
   out_5730378934187625238[48] = 0;
   out_5730378934187625238[49] = 0;
   out_5730378934187625238[50] = 0;
   out_5730378934187625238[51] = 0;
   out_5730378934187625238[52] = 0;
   out_5730378934187625238[53] = 0;
   out_5730378934187625238[54] = 0;
   out_5730378934187625238[55] = 0;
   out_5730378934187625238[56] = 0;
   out_5730378934187625238[57] = 0;
   out_5730378934187625238[58] = 0;
   out_5730378934187625238[59] = 0;
   out_5730378934187625238[60] = 0;
   out_5730378934187625238[61] = 0;
   out_5730378934187625238[62] = 0;
   out_5730378934187625238[63] = 0;
   out_5730378934187625238[64] = 0;
   out_5730378934187625238[65] = 0;
}
void h_35(double *state, double *unused, double *out_2642568826228283943) {
   out_2642568826228283943[0] = state[7];
   out_2642568826228283943[1] = state[8];
   out_2642568826228283943[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2984815901862611529) {
   out_2984815901862611529[0] = 0;
   out_2984815901862611529[1] = 0;
   out_2984815901862611529[2] = 0;
   out_2984815901862611529[3] = 0;
   out_2984815901862611529[4] = 0;
   out_2984815901862611529[5] = 0;
   out_2984815901862611529[6] = 0;
   out_2984815901862611529[7] = 1;
   out_2984815901862611529[8] = 0;
   out_2984815901862611529[9] = 0;
   out_2984815901862611529[10] = 0;
   out_2984815901862611529[11] = 0;
   out_2984815901862611529[12] = 0;
   out_2984815901862611529[13] = 0;
   out_2984815901862611529[14] = 0;
   out_2984815901862611529[15] = 0;
   out_2984815901862611529[16] = 0;
   out_2984815901862611529[17] = 0;
   out_2984815901862611529[18] = 0;
   out_2984815901862611529[19] = 0;
   out_2984815901862611529[20] = 0;
   out_2984815901862611529[21] = 0;
   out_2984815901862611529[22] = 0;
   out_2984815901862611529[23] = 0;
   out_2984815901862611529[24] = 0;
   out_2984815901862611529[25] = 0;
   out_2984815901862611529[26] = 0;
   out_2984815901862611529[27] = 0;
   out_2984815901862611529[28] = 0;
   out_2984815901862611529[29] = 0;
   out_2984815901862611529[30] = 1;
   out_2984815901862611529[31] = 0;
   out_2984815901862611529[32] = 0;
   out_2984815901862611529[33] = 0;
   out_2984815901862611529[34] = 0;
   out_2984815901862611529[35] = 0;
   out_2984815901862611529[36] = 0;
   out_2984815901862611529[37] = 0;
   out_2984815901862611529[38] = 0;
   out_2984815901862611529[39] = 0;
   out_2984815901862611529[40] = 0;
   out_2984815901862611529[41] = 0;
   out_2984815901862611529[42] = 0;
   out_2984815901862611529[43] = 0;
   out_2984815901862611529[44] = 0;
   out_2984815901862611529[45] = 0;
   out_2984815901862611529[46] = 0;
   out_2984815901862611529[47] = 0;
   out_2984815901862611529[48] = 0;
   out_2984815901862611529[49] = 0;
   out_2984815901862611529[50] = 0;
   out_2984815901862611529[51] = 0;
   out_2984815901862611529[52] = 0;
   out_2984815901862611529[53] = 1;
   out_2984815901862611529[54] = 0;
   out_2984815901862611529[55] = 0;
   out_2984815901862611529[56] = 0;
   out_2984815901862611529[57] = 0;
   out_2984815901862611529[58] = 0;
   out_2984815901862611529[59] = 0;
   out_2984815901862611529[60] = 0;
   out_2984815901862611529[61] = 0;
   out_2984815901862611529[62] = 0;
   out_2984815901862611529[63] = 0;
   out_2984815901862611529[64] = 0;
   out_2984815901862611529[65] = 0;
}
void h_32(double *state, double *unused, double *out_6051429329193244390) {
   out_6051429329193244390[0] = state[3];
   out_6051429329193244390[1] = state[4];
   out_6051429329193244390[2] = state[5];
   out_6051429329193244390[3] = state[6];
}
void H_32(double *state, double *unused, double *out_201157737444193936) {
   out_201157737444193936[0] = 0;
   out_201157737444193936[1] = 0;
   out_201157737444193936[2] = 0;
   out_201157737444193936[3] = 1;
   out_201157737444193936[4] = 0;
   out_201157737444193936[5] = 0;
   out_201157737444193936[6] = 0;
   out_201157737444193936[7] = 0;
   out_201157737444193936[8] = 0;
   out_201157737444193936[9] = 0;
   out_201157737444193936[10] = 0;
   out_201157737444193936[11] = 0;
   out_201157737444193936[12] = 0;
   out_201157737444193936[13] = 0;
   out_201157737444193936[14] = 0;
   out_201157737444193936[15] = 0;
   out_201157737444193936[16] = 0;
   out_201157737444193936[17] = 0;
   out_201157737444193936[18] = 0;
   out_201157737444193936[19] = 0;
   out_201157737444193936[20] = 0;
   out_201157737444193936[21] = 0;
   out_201157737444193936[22] = 0;
   out_201157737444193936[23] = 0;
   out_201157737444193936[24] = 0;
   out_201157737444193936[25] = 0;
   out_201157737444193936[26] = 1;
   out_201157737444193936[27] = 0;
   out_201157737444193936[28] = 0;
   out_201157737444193936[29] = 0;
   out_201157737444193936[30] = 0;
   out_201157737444193936[31] = 0;
   out_201157737444193936[32] = 0;
   out_201157737444193936[33] = 0;
   out_201157737444193936[34] = 0;
   out_201157737444193936[35] = 0;
   out_201157737444193936[36] = 0;
   out_201157737444193936[37] = 0;
   out_201157737444193936[38] = 0;
   out_201157737444193936[39] = 0;
   out_201157737444193936[40] = 0;
   out_201157737444193936[41] = 0;
   out_201157737444193936[42] = 0;
   out_201157737444193936[43] = 0;
   out_201157737444193936[44] = 0;
   out_201157737444193936[45] = 0;
   out_201157737444193936[46] = 0;
   out_201157737444193936[47] = 0;
   out_201157737444193936[48] = 0;
   out_201157737444193936[49] = 1;
   out_201157737444193936[50] = 0;
   out_201157737444193936[51] = 0;
   out_201157737444193936[52] = 0;
   out_201157737444193936[53] = 0;
   out_201157737444193936[54] = 0;
   out_201157737444193936[55] = 0;
   out_201157737444193936[56] = 0;
   out_201157737444193936[57] = 0;
   out_201157737444193936[58] = 0;
   out_201157737444193936[59] = 0;
   out_201157737444193936[60] = 0;
   out_201157737444193936[61] = 0;
   out_201157737444193936[62] = 0;
   out_201157737444193936[63] = 0;
   out_201157737444193936[64] = 0;
   out_201157737444193936[65] = 0;
   out_201157737444193936[66] = 0;
   out_201157737444193936[67] = 0;
   out_201157737444193936[68] = 0;
   out_201157737444193936[69] = 0;
   out_201157737444193936[70] = 0;
   out_201157737444193936[71] = 0;
   out_201157737444193936[72] = 1;
   out_201157737444193936[73] = 0;
   out_201157737444193936[74] = 0;
   out_201157737444193936[75] = 0;
   out_201157737444193936[76] = 0;
   out_201157737444193936[77] = 0;
   out_201157737444193936[78] = 0;
   out_201157737444193936[79] = 0;
   out_201157737444193936[80] = 0;
   out_201157737444193936[81] = 0;
   out_201157737444193936[82] = 0;
   out_201157737444193936[83] = 0;
   out_201157737444193936[84] = 0;
   out_201157737444193936[85] = 0;
   out_201157737444193936[86] = 0;
   out_201157737444193936[87] = 0;
}
void h_13(double *state, double *unused, double *out_1200001807228546595) {
   out_1200001807228546595[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1200001807228546595[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1200001807228546595[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2893384508697108611) {
   out_2893384508697108611[0] = 0;
   out_2893384508697108611[1] = 0;
   out_2893384508697108611[2] = 0;
   out_2893384508697108611[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2893384508697108611[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2893384508697108611[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2893384508697108611[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2893384508697108611[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2893384508697108611[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2893384508697108611[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2893384508697108611[10] = 0;
   out_2893384508697108611[11] = 0;
   out_2893384508697108611[12] = 0;
   out_2893384508697108611[13] = 0;
   out_2893384508697108611[14] = 0;
   out_2893384508697108611[15] = 0;
   out_2893384508697108611[16] = 0;
   out_2893384508697108611[17] = 0;
   out_2893384508697108611[18] = 0;
   out_2893384508697108611[19] = 0;
   out_2893384508697108611[20] = 0;
   out_2893384508697108611[21] = 0;
   out_2893384508697108611[22] = 0;
   out_2893384508697108611[23] = 0;
   out_2893384508697108611[24] = 0;
   out_2893384508697108611[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2893384508697108611[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2893384508697108611[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2893384508697108611[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2893384508697108611[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2893384508697108611[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2893384508697108611[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2893384508697108611[32] = 0;
   out_2893384508697108611[33] = 0;
   out_2893384508697108611[34] = 0;
   out_2893384508697108611[35] = 0;
   out_2893384508697108611[36] = 0;
   out_2893384508697108611[37] = 0;
   out_2893384508697108611[38] = 0;
   out_2893384508697108611[39] = 0;
   out_2893384508697108611[40] = 0;
   out_2893384508697108611[41] = 0;
   out_2893384508697108611[42] = 0;
   out_2893384508697108611[43] = 0;
   out_2893384508697108611[44] = 0;
   out_2893384508697108611[45] = 0;
   out_2893384508697108611[46] = 0;
   out_2893384508697108611[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2893384508697108611[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2893384508697108611[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2893384508697108611[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2893384508697108611[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2893384508697108611[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2893384508697108611[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2893384508697108611[54] = 0;
   out_2893384508697108611[55] = 0;
   out_2893384508697108611[56] = 0;
   out_2893384508697108611[57] = 0;
   out_2893384508697108611[58] = 0;
   out_2893384508697108611[59] = 0;
   out_2893384508697108611[60] = 0;
   out_2893384508697108611[61] = 0;
   out_2893384508697108611[62] = 0;
   out_2893384508697108611[63] = 0;
   out_2893384508697108611[64] = 0;
   out_2893384508697108611[65] = 0;
}
void h_14(double *state, double *unused, double *out_1248174645366504210) {
   out_1248174645366504210[0] = state[10];
   out_1248174645366504210[1] = state[11];
   out_1248174645366504210[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6110288312605628260) {
   out_6110288312605628260[0] = 0;
   out_6110288312605628260[1] = 0;
   out_6110288312605628260[2] = 0;
   out_6110288312605628260[3] = 0;
   out_6110288312605628260[4] = 0;
   out_6110288312605628260[5] = 0;
   out_6110288312605628260[6] = 0;
   out_6110288312605628260[7] = 0;
   out_6110288312605628260[8] = 0;
   out_6110288312605628260[9] = 0;
   out_6110288312605628260[10] = 1;
   out_6110288312605628260[11] = 0;
   out_6110288312605628260[12] = 0;
   out_6110288312605628260[13] = 0;
   out_6110288312605628260[14] = 0;
   out_6110288312605628260[15] = 0;
   out_6110288312605628260[16] = 0;
   out_6110288312605628260[17] = 0;
   out_6110288312605628260[18] = 0;
   out_6110288312605628260[19] = 0;
   out_6110288312605628260[20] = 0;
   out_6110288312605628260[21] = 0;
   out_6110288312605628260[22] = 0;
   out_6110288312605628260[23] = 0;
   out_6110288312605628260[24] = 0;
   out_6110288312605628260[25] = 0;
   out_6110288312605628260[26] = 0;
   out_6110288312605628260[27] = 0;
   out_6110288312605628260[28] = 0;
   out_6110288312605628260[29] = 0;
   out_6110288312605628260[30] = 0;
   out_6110288312605628260[31] = 0;
   out_6110288312605628260[32] = 0;
   out_6110288312605628260[33] = 1;
   out_6110288312605628260[34] = 0;
   out_6110288312605628260[35] = 0;
   out_6110288312605628260[36] = 0;
   out_6110288312605628260[37] = 0;
   out_6110288312605628260[38] = 0;
   out_6110288312605628260[39] = 0;
   out_6110288312605628260[40] = 0;
   out_6110288312605628260[41] = 0;
   out_6110288312605628260[42] = 0;
   out_6110288312605628260[43] = 0;
   out_6110288312605628260[44] = 0;
   out_6110288312605628260[45] = 0;
   out_6110288312605628260[46] = 0;
   out_6110288312605628260[47] = 0;
   out_6110288312605628260[48] = 0;
   out_6110288312605628260[49] = 0;
   out_6110288312605628260[50] = 0;
   out_6110288312605628260[51] = 0;
   out_6110288312605628260[52] = 0;
   out_6110288312605628260[53] = 0;
   out_6110288312605628260[54] = 0;
   out_6110288312605628260[55] = 0;
   out_6110288312605628260[56] = 1;
   out_6110288312605628260[57] = 0;
   out_6110288312605628260[58] = 0;
   out_6110288312605628260[59] = 0;
   out_6110288312605628260[60] = 0;
   out_6110288312605628260[61] = 0;
   out_6110288312605628260[62] = 0;
   out_6110288312605628260[63] = 0;
   out_6110288312605628260[64] = 0;
   out_6110288312605628260[65] = 0;
}
void h_33(double *state, double *unused, double *out_8897654757136871378) {
   out_8897654757136871378[0] = state[16];
   out_8897654757136871378[1] = state[17];
   out_8897654757136871378[2] = state[18];
}
void H_33(double *state, double *unused, double *out_165741102776246075) {
   out_165741102776246075[0] = 0;
   out_165741102776246075[1] = 0;
   out_165741102776246075[2] = 0;
   out_165741102776246075[3] = 0;
   out_165741102776246075[4] = 0;
   out_165741102776246075[5] = 0;
   out_165741102776246075[6] = 0;
   out_165741102776246075[7] = 0;
   out_165741102776246075[8] = 0;
   out_165741102776246075[9] = 0;
   out_165741102776246075[10] = 0;
   out_165741102776246075[11] = 0;
   out_165741102776246075[12] = 0;
   out_165741102776246075[13] = 0;
   out_165741102776246075[14] = 0;
   out_165741102776246075[15] = 0;
   out_165741102776246075[16] = 1;
   out_165741102776246075[17] = 0;
   out_165741102776246075[18] = 0;
   out_165741102776246075[19] = 0;
   out_165741102776246075[20] = 0;
   out_165741102776246075[21] = 0;
   out_165741102776246075[22] = 0;
   out_165741102776246075[23] = 0;
   out_165741102776246075[24] = 0;
   out_165741102776246075[25] = 0;
   out_165741102776246075[26] = 0;
   out_165741102776246075[27] = 0;
   out_165741102776246075[28] = 0;
   out_165741102776246075[29] = 0;
   out_165741102776246075[30] = 0;
   out_165741102776246075[31] = 0;
   out_165741102776246075[32] = 0;
   out_165741102776246075[33] = 0;
   out_165741102776246075[34] = 0;
   out_165741102776246075[35] = 0;
   out_165741102776246075[36] = 0;
   out_165741102776246075[37] = 0;
   out_165741102776246075[38] = 0;
   out_165741102776246075[39] = 1;
   out_165741102776246075[40] = 0;
   out_165741102776246075[41] = 0;
   out_165741102776246075[42] = 0;
   out_165741102776246075[43] = 0;
   out_165741102776246075[44] = 0;
   out_165741102776246075[45] = 0;
   out_165741102776246075[46] = 0;
   out_165741102776246075[47] = 0;
   out_165741102776246075[48] = 0;
   out_165741102776246075[49] = 0;
   out_165741102776246075[50] = 0;
   out_165741102776246075[51] = 0;
   out_165741102776246075[52] = 0;
   out_165741102776246075[53] = 0;
   out_165741102776246075[54] = 0;
   out_165741102776246075[55] = 0;
   out_165741102776246075[56] = 0;
   out_165741102776246075[57] = 0;
   out_165741102776246075[58] = 0;
   out_165741102776246075[59] = 0;
   out_165741102776246075[60] = 0;
   out_165741102776246075[61] = 0;
   out_165741102776246075[62] = 1;
   out_165741102776246075[63] = 0;
   out_165741102776246075[64] = 0;
   out_165741102776246075[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8614947962593067881) {
  H(in_vec, out_8614947962593067881);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7760651538653785903) {
  err_fun(nom_x, delta_x, out_7760651538653785903);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5717458442570625058) {
  inv_err_fun(nom_x, true_x, out_5717458442570625058);
}
void live_H_mod_fun(double *state, double *out_5026262334447107044) {
  H_mod_fun(state, out_5026262334447107044);
}
void live_f_fun(double *state, double dt, double *out_7740889094243200222) {
  f_fun(state,  dt, out_7740889094243200222);
}
void live_F_fun(double *state, double dt, double *out_60591835377190728) {
  F_fun(state,  dt, out_60591835377190728);
}
void live_h_4(double *state, double *unused, double *out_8539687266358635615) {
  h_4(state, unused, out_8539687266358635615);
}
void live_H_4(double *state, double *unused, double *out_5049236825839475886) {
  H_4(state, unused, out_5049236825839475886);
}
void live_h_9(double *state, double *unused, double *out_1248174645366504210) {
  h_9(state, unused, out_1248174645366504210);
}
void live_H_9(double *state, double *unused, double *out_6110288312605628260) {
  H_9(state, unused, out_6110288312605628260);
}
void live_h_10(double *state, double *unused, double *out_3149158217231723898) {
  h_10(state, unused, out_3149158217231723898);
}
void live_H_10(double *state, double *unused, double *out_937977849345286185) {
  H_10(state, unused, out_937977849345286185);
}
void live_h_12(double *state, double *unused, double *out_3640662110287520591) {
  h_12(state, unused, out_3640662110287520591);
}
void live_H_12(double *state, double *unused, double *out_5730378934187625238) {
  H_12(state, unused, out_5730378934187625238);
}
void live_h_35(double *state, double *unused, double *out_2642568826228283943) {
  h_35(state, unused, out_2642568826228283943);
}
void live_H_35(double *state, double *unused, double *out_2984815901862611529) {
  H_35(state, unused, out_2984815901862611529);
}
void live_h_32(double *state, double *unused, double *out_6051429329193244390) {
  h_32(state, unused, out_6051429329193244390);
}
void live_H_32(double *state, double *unused, double *out_201157737444193936) {
  H_32(state, unused, out_201157737444193936);
}
void live_h_13(double *state, double *unused, double *out_1200001807228546595) {
  h_13(state, unused, out_1200001807228546595);
}
void live_H_13(double *state, double *unused, double *out_2893384508697108611) {
  H_13(state, unused, out_2893384508697108611);
}
void live_h_14(double *state, double *unused, double *out_1248174645366504210) {
  h_14(state, unused, out_1248174645366504210);
}
void live_H_14(double *state, double *unused, double *out_6110288312605628260) {
  H_14(state, unused, out_6110288312605628260);
}
void live_h_33(double *state, double *unused, double *out_8897654757136871378) {
  h_33(state, unused, out_8897654757136871378);
}
void live_H_33(double *state, double *unused, double *out_165741102776246075) {
  H_33(state, unused, out_165741102776246075);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
