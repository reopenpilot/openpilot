#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7807769199427264664) {
   out_7807769199427264664[0] = 0;
   out_7807769199427264664[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7807769199427264664[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7807769199427264664[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7807769199427264664[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7807769199427264664[5] = -sin(in_vec[1]);
   out_7807769199427264664[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7807769199427264664[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7807769199427264664[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7807769199427264664[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7807769199427264664[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7807769199427264664[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7807769199427264664[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7807769199427264664[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7807769199427264664[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7807769199427264664[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7807769199427264664[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7807769199427264664[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3695323874008703707) {
   out_3695323874008703707[0] = delta_x[0] + nom_x[0];
   out_3695323874008703707[1] = delta_x[1] + nom_x[1];
   out_3695323874008703707[2] = delta_x[2] + nom_x[2];
   out_3695323874008703707[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3695323874008703707[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3695323874008703707[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3695323874008703707[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3695323874008703707[7] = delta_x[6] + nom_x[7];
   out_3695323874008703707[8] = delta_x[7] + nom_x[8];
   out_3695323874008703707[9] = delta_x[8] + nom_x[9];
   out_3695323874008703707[10] = delta_x[9] + nom_x[10];
   out_3695323874008703707[11] = delta_x[10] + nom_x[11];
   out_3695323874008703707[12] = delta_x[11] + nom_x[12];
   out_3695323874008703707[13] = delta_x[12] + nom_x[13];
   out_3695323874008703707[14] = delta_x[13] + nom_x[14];
   out_3695323874008703707[15] = delta_x[14] + nom_x[15];
   out_3695323874008703707[16] = delta_x[15] + nom_x[16];
   out_3695323874008703707[17] = delta_x[16] + nom_x[17];
   out_3695323874008703707[18] = delta_x[17] + nom_x[18];
   out_3695323874008703707[19] = delta_x[18] + nom_x[19];
   out_3695323874008703707[20] = delta_x[19] + nom_x[20];
   out_3695323874008703707[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3494745308466159035) {
   out_3494745308466159035[0] = -nom_x[0] + true_x[0];
   out_3494745308466159035[1] = -nom_x[1] + true_x[1];
   out_3494745308466159035[2] = -nom_x[2] + true_x[2];
   out_3494745308466159035[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3494745308466159035[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3494745308466159035[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3494745308466159035[6] = -nom_x[7] + true_x[7];
   out_3494745308466159035[7] = -nom_x[8] + true_x[8];
   out_3494745308466159035[8] = -nom_x[9] + true_x[9];
   out_3494745308466159035[9] = -nom_x[10] + true_x[10];
   out_3494745308466159035[10] = -nom_x[11] + true_x[11];
   out_3494745308466159035[11] = -nom_x[12] + true_x[12];
   out_3494745308466159035[12] = -nom_x[13] + true_x[13];
   out_3494745308466159035[13] = -nom_x[14] + true_x[14];
   out_3494745308466159035[14] = -nom_x[15] + true_x[15];
   out_3494745308466159035[15] = -nom_x[16] + true_x[16];
   out_3494745308466159035[16] = -nom_x[17] + true_x[17];
   out_3494745308466159035[17] = -nom_x[18] + true_x[18];
   out_3494745308466159035[18] = -nom_x[19] + true_x[19];
   out_3494745308466159035[19] = -nom_x[20] + true_x[20];
   out_3494745308466159035[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4318398886260299059) {
   out_4318398886260299059[0] = 1.0;
   out_4318398886260299059[1] = 0;
   out_4318398886260299059[2] = 0;
   out_4318398886260299059[3] = 0;
   out_4318398886260299059[4] = 0;
   out_4318398886260299059[5] = 0;
   out_4318398886260299059[6] = 0;
   out_4318398886260299059[7] = 0;
   out_4318398886260299059[8] = 0;
   out_4318398886260299059[9] = 0;
   out_4318398886260299059[10] = 0;
   out_4318398886260299059[11] = 0;
   out_4318398886260299059[12] = 0;
   out_4318398886260299059[13] = 0;
   out_4318398886260299059[14] = 0;
   out_4318398886260299059[15] = 0;
   out_4318398886260299059[16] = 0;
   out_4318398886260299059[17] = 0;
   out_4318398886260299059[18] = 0;
   out_4318398886260299059[19] = 0;
   out_4318398886260299059[20] = 0;
   out_4318398886260299059[21] = 0;
   out_4318398886260299059[22] = 1.0;
   out_4318398886260299059[23] = 0;
   out_4318398886260299059[24] = 0;
   out_4318398886260299059[25] = 0;
   out_4318398886260299059[26] = 0;
   out_4318398886260299059[27] = 0;
   out_4318398886260299059[28] = 0;
   out_4318398886260299059[29] = 0;
   out_4318398886260299059[30] = 0;
   out_4318398886260299059[31] = 0;
   out_4318398886260299059[32] = 0;
   out_4318398886260299059[33] = 0;
   out_4318398886260299059[34] = 0;
   out_4318398886260299059[35] = 0;
   out_4318398886260299059[36] = 0;
   out_4318398886260299059[37] = 0;
   out_4318398886260299059[38] = 0;
   out_4318398886260299059[39] = 0;
   out_4318398886260299059[40] = 0;
   out_4318398886260299059[41] = 0;
   out_4318398886260299059[42] = 0;
   out_4318398886260299059[43] = 0;
   out_4318398886260299059[44] = 1.0;
   out_4318398886260299059[45] = 0;
   out_4318398886260299059[46] = 0;
   out_4318398886260299059[47] = 0;
   out_4318398886260299059[48] = 0;
   out_4318398886260299059[49] = 0;
   out_4318398886260299059[50] = 0;
   out_4318398886260299059[51] = 0;
   out_4318398886260299059[52] = 0;
   out_4318398886260299059[53] = 0;
   out_4318398886260299059[54] = 0;
   out_4318398886260299059[55] = 0;
   out_4318398886260299059[56] = 0;
   out_4318398886260299059[57] = 0;
   out_4318398886260299059[58] = 0;
   out_4318398886260299059[59] = 0;
   out_4318398886260299059[60] = 0;
   out_4318398886260299059[61] = 0;
   out_4318398886260299059[62] = 0;
   out_4318398886260299059[63] = 0;
   out_4318398886260299059[64] = 0;
   out_4318398886260299059[65] = 0;
   out_4318398886260299059[66] = -0.5*state[4];
   out_4318398886260299059[67] = -0.5*state[5];
   out_4318398886260299059[68] = -0.5*state[6];
   out_4318398886260299059[69] = 0;
   out_4318398886260299059[70] = 0;
   out_4318398886260299059[71] = 0;
   out_4318398886260299059[72] = 0;
   out_4318398886260299059[73] = 0;
   out_4318398886260299059[74] = 0;
   out_4318398886260299059[75] = 0;
   out_4318398886260299059[76] = 0;
   out_4318398886260299059[77] = 0;
   out_4318398886260299059[78] = 0;
   out_4318398886260299059[79] = 0;
   out_4318398886260299059[80] = 0;
   out_4318398886260299059[81] = 0;
   out_4318398886260299059[82] = 0;
   out_4318398886260299059[83] = 0;
   out_4318398886260299059[84] = 0;
   out_4318398886260299059[85] = 0;
   out_4318398886260299059[86] = 0;
   out_4318398886260299059[87] = 0.5*state[3];
   out_4318398886260299059[88] = 0.5*state[6];
   out_4318398886260299059[89] = -0.5*state[5];
   out_4318398886260299059[90] = 0;
   out_4318398886260299059[91] = 0;
   out_4318398886260299059[92] = 0;
   out_4318398886260299059[93] = 0;
   out_4318398886260299059[94] = 0;
   out_4318398886260299059[95] = 0;
   out_4318398886260299059[96] = 0;
   out_4318398886260299059[97] = 0;
   out_4318398886260299059[98] = 0;
   out_4318398886260299059[99] = 0;
   out_4318398886260299059[100] = 0;
   out_4318398886260299059[101] = 0;
   out_4318398886260299059[102] = 0;
   out_4318398886260299059[103] = 0;
   out_4318398886260299059[104] = 0;
   out_4318398886260299059[105] = 0;
   out_4318398886260299059[106] = 0;
   out_4318398886260299059[107] = 0;
   out_4318398886260299059[108] = -0.5*state[6];
   out_4318398886260299059[109] = 0.5*state[3];
   out_4318398886260299059[110] = 0.5*state[4];
   out_4318398886260299059[111] = 0;
   out_4318398886260299059[112] = 0;
   out_4318398886260299059[113] = 0;
   out_4318398886260299059[114] = 0;
   out_4318398886260299059[115] = 0;
   out_4318398886260299059[116] = 0;
   out_4318398886260299059[117] = 0;
   out_4318398886260299059[118] = 0;
   out_4318398886260299059[119] = 0;
   out_4318398886260299059[120] = 0;
   out_4318398886260299059[121] = 0;
   out_4318398886260299059[122] = 0;
   out_4318398886260299059[123] = 0;
   out_4318398886260299059[124] = 0;
   out_4318398886260299059[125] = 0;
   out_4318398886260299059[126] = 0;
   out_4318398886260299059[127] = 0;
   out_4318398886260299059[128] = 0;
   out_4318398886260299059[129] = 0.5*state[5];
   out_4318398886260299059[130] = -0.5*state[4];
   out_4318398886260299059[131] = 0.5*state[3];
   out_4318398886260299059[132] = 0;
   out_4318398886260299059[133] = 0;
   out_4318398886260299059[134] = 0;
   out_4318398886260299059[135] = 0;
   out_4318398886260299059[136] = 0;
   out_4318398886260299059[137] = 0;
   out_4318398886260299059[138] = 0;
   out_4318398886260299059[139] = 0;
   out_4318398886260299059[140] = 0;
   out_4318398886260299059[141] = 0;
   out_4318398886260299059[142] = 0;
   out_4318398886260299059[143] = 0;
   out_4318398886260299059[144] = 0;
   out_4318398886260299059[145] = 0;
   out_4318398886260299059[146] = 0;
   out_4318398886260299059[147] = 0;
   out_4318398886260299059[148] = 0;
   out_4318398886260299059[149] = 0;
   out_4318398886260299059[150] = 0;
   out_4318398886260299059[151] = 0;
   out_4318398886260299059[152] = 0;
   out_4318398886260299059[153] = 1.0;
   out_4318398886260299059[154] = 0;
   out_4318398886260299059[155] = 0;
   out_4318398886260299059[156] = 0;
   out_4318398886260299059[157] = 0;
   out_4318398886260299059[158] = 0;
   out_4318398886260299059[159] = 0;
   out_4318398886260299059[160] = 0;
   out_4318398886260299059[161] = 0;
   out_4318398886260299059[162] = 0;
   out_4318398886260299059[163] = 0;
   out_4318398886260299059[164] = 0;
   out_4318398886260299059[165] = 0;
   out_4318398886260299059[166] = 0;
   out_4318398886260299059[167] = 0;
   out_4318398886260299059[168] = 0;
   out_4318398886260299059[169] = 0;
   out_4318398886260299059[170] = 0;
   out_4318398886260299059[171] = 0;
   out_4318398886260299059[172] = 0;
   out_4318398886260299059[173] = 0;
   out_4318398886260299059[174] = 0;
   out_4318398886260299059[175] = 1.0;
   out_4318398886260299059[176] = 0;
   out_4318398886260299059[177] = 0;
   out_4318398886260299059[178] = 0;
   out_4318398886260299059[179] = 0;
   out_4318398886260299059[180] = 0;
   out_4318398886260299059[181] = 0;
   out_4318398886260299059[182] = 0;
   out_4318398886260299059[183] = 0;
   out_4318398886260299059[184] = 0;
   out_4318398886260299059[185] = 0;
   out_4318398886260299059[186] = 0;
   out_4318398886260299059[187] = 0;
   out_4318398886260299059[188] = 0;
   out_4318398886260299059[189] = 0;
   out_4318398886260299059[190] = 0;
   out_4318398886260299059[191] = 0;
   out_4318398886260299059[192] = 0;
   out_4318398886260299059[193] = 0;
   out_4318398886260299059[194] = 0;
   out_4318398886260299059[195] = 0;
   out_4318398886260299059[196] = 0;
   out_4318398886260299059[197] = 1.0;
   out_4318398886260299059[198] = 0;
   out_4318398886260299059[199] = 0;
   out_4318398886260299059[200] = 0;
   out_4318398886260299059[201] = 0;
   out_4318398886260299059[202] = 0;
   out_4318398886260299059[203] = 0;
   out_4318398886260299059[204] = 0;
   out_4318398886260299059[205] = 0;
   out_4318398886260299059[206] = 0;
   out_4318398886260299059[207] = 0;
   out_4318398886260299059[208] = 0;
   out_4318398886260299059[209] = 0;
   out_4318398886260299059[210] = 0;
   out_4318398886260299059[211] = 0;
   out_4318398886260299059[212] = 0;
   out_4318398886260299059[213] = 0;
   out_4318398886260299059[214] = 0;
   out_4318398886260299059[215] = 0;
   out_4318398886260299059[216] = 0;
   out_4318398886260299059[217] = 0;
   out_4318398886260299059[218] = 0;
   out_4318398886260299059[219] = 1.0;
   out_4318398886260299059[220] = 0;
   out_4318398886260299059[221] = 0;
   out_4318398886260299059[222] = 0;
   out_4318398886260299059[223] = 0;
   out_4318398886260299059[224] = 0;
   out_4318398886260299059[225] = 0;
   out_4318398886260299059[226] = 0;
   out_4318398886260299059[227] = 0;
   out_4318398886260299059[228] = 0;
   out_4318398886260299059[229] = 0;
   out_4318398886260299059[230] = 0;
   out_4318398886260299059[231] = 0;
   out_4318398886260299059[232] = 0;
   out_4318398886260299059[233] = 0;
   out_4318398886260299059[234] = 0;
   out_4318398886260299059[235] = 0;
   out_4318398886260299059[236] = 0;
   out_4318398886260299059[237] = 0;
   out_4318398886260299059[238] = 0;
   out_4318398886260299059[239] = 0;
   out_4318398886260299059[240] = 0;
   out_4318398886260299059[241] = 1.0;
   out_4318398886260299059[242] = 0;
   out_4318398886260299059[243] = 0;
   out_4318398886260299059[244] = 0;
   out_4318398886260299059[245] = 0;
   out_4318398886260299059[246] = 0;
   out_4318398886260299059[247] = 0;
   out_4318398886260299059[248] = 0;
   out_4318398886260299059[249] = 0;
   out_4318398886260299059[250] = 0;
   out_4318398886260299059[251] = 0;
   out_4318398886260299059[252] = 0;
   out_4318398886260299059[253] = 0;
   out_4318398886260299059[254] = 0;
   out_4318398886260299059[255] = 0;
   out_4318398886260299059[256] = 0;
   out_4318398886260299059[257] = 0;
   out_4318398886260299059[258] = 0;
   out_4318398886260299059[259] = 0;
   out_4318398886260299059[260] = 0;
   out_4318398886260299059[261] = 0;
   out_4318398886260299059[262] = 0;
   out_4318398886260299059[263] = 1.0;
   out_4318398886260299059[264] = 0;
   out_4318398886260299059[265] = 0;
   out_4318398886260299059[266] = 0;
   out_4318398886260299059[267] = 0;
   out_4318398886260299059[268] = 0;
   out_4318398886260299059[269] = 0;
   out_4318398886260299059[270] = 0;
   out_4318398886260299059[271] = 0;
   out_4318398886260299059[272] = 0;
   out_4318398886260299059[273] = 0;
   out_4318398886260299059[274] = 0;
   out_4318398886260299059[275] = 0;
   out_4318398886260299059[276] = 0;
   out_4318398886260299059[277] = 0;
   out_4318398886260299059[278] = 0;
   out_4318398886260299059[279] = 0;
   out_4318398886260299059[280] = 0;
   out_4318398886260299059[281] = 0;
   out_4318398886260299059[282] = 0;
   out_4318398886260299059[283] = 0;
   out_4318398886260299059[284] = 0;
   out_4318398886260299059[285] = 1.0;
   out_4318398886260299059[286] = 0;
   out_4318398886260299059[287] = 0;
   out_4318398886260299059[288] = 0;
   out_4318398886260299059[289] = 0;
   out_4318398886260299059[290] = 0;
   out_4318398886260299059[291] = 0;
   out_4318398886260299059[292] = 0;
   out_4318398886260299059[293] = 0;
   out_4318398886260299059[294] = 0;
   out_4318398886260299059[295] = 0;
   out_4318398886260299059[296] = 0;
   out_4318398886260299059[297] = 0;
   out_4318398886260299059[298] = 0;
   out_4318398886260299059[299] = 0;
   out_4318398886260299059[300] = 0;
   out_4318398886260299059[301] = 0;
   out_4318398886260299059[302] = 0;
   out_4318398886260299059[303] = 0;
   out_4318398886260299059[304] = 0;
   out_4318398886260299059[305] = 0;
   out_4318398886260299059[306] = 0;
   out_4318398886260299059[307] = 1.0;
   out_4318398886260299059[308] = 0;
   out_4318398886260299059[309] = 0;
   out_4318398886260299059[310] = 0;
   out_4318398886260299059[311] = 0;
   out_4318398886260299059[312] = 0;
   out_4318398886260299059[313] = 0;
   out_4318398886260299059[314] = 0;
   out_4318398886260299059[315] = 0;
   out_4318398886260299059[316] = 0;
   out_4318398886260299059[317] = 0;
   out_4318398886260299059[318] = 0;
   out_4318398886260299059[319] = 0;
   out_4318398886260299059[320] = 0;
   out_4318398886260299059[321] = 0;
   out_4318398886260299059[322] = 0;
   out_4318398886260299059[323] = 0;
   out_4318398886260299059[324] = 0;
   out_4318398886260299059[325] = 0;
   out_4318398886260299059[326] = 0;
   out_4318398886260299059[327] = 0;
   out_4318398886260299059[328] = 0;
   out_4318398886260299059[329] = 1.0;
   out_4318398886260299059[330] = 0;
   out_4318398886260299059[331] = 0;
   out_4318398886260299059[332] = 0;
   out_4318398886260299059[333] = 0;
   out_4318398886260299059[334] = 0;
   out_4318398886260299059[335] = 0;
   out_4318398886260299059[336] = 0;
   out_4318398886260299059[337] = 0;
   out_4318398886260299059[338] = 0;
   out_4318398886260299059[339] = 0;
   out_4318398886260299059[340] = 0;
   out_4318398886260299059[341] = 0;
   out_4318398886260299059[342] = 0;
   out_4318398886260299059[343] = 0;
   out_4318398886260299059[344] = 0;
   out_4318398886260299059[345] = 0;
   out_4318398886260299059[346] = 0;
   out_4318398886260299059[347] = 0;
   out_4318398886260299059[348] = 0;
   out_4318398886260299059[349] = 0;
   out_4318398886260299059[350] = 0;
   out_4318398886260299059[351] = 1.0;
   out_4318398886260299059[352] = 0;
   out_4318398886260299059[353] = 0;
   out_4318398886260299059[354] = 0;
   out_4318398886260299059[355] = 0;
   out_4318398886260299059[356] = 0;
   out_4318398886260299059[357] = 0;
   out_4318398886260299059[358] = 0;
   out_4318398886260299059[359] = 0;
   out_4318398886260299059[360] = 0;
   out_4318398886260299059[361] = 0;
   out_4318398886260299059[362] = 0;
   out_4318398886260299059[363] = 0;
   out_4318398886260299059[364] = 0;
   out_4318398886260299059[365] = 0;
   out_4318398886260299059[366] = 0;
   out_4318398886260299059[367] = 0;
   out_4318398886260299059[368] = 0;
   out_4318398886260299059[369] = 0;
   out_4318398886260299059[370] = 0;
   out_4318398886260299059[371] = 0;
   out_4318398886260299059[372] = 0;
   out_4318398886260299059[373] = 1.0;
   out_4318398886260299059[374] = 0;
   out_4318398886260299059[375] = 0;
   out_4318398886260299059[376] = 0;
   out_4318398886260299059[377] = 0;
   out_4318398886260299059[378] = 0;
   out_4318398886260299059[379] = 0;
   out_4318398886260299059[380] = 0;
   out_4318398886260299059[381] = 0;
   out_4318398886260299059[382] = 0;
   out_4318398886260299059[383] = 0;
   out_4318398886260299059[384] = 0;
   out_4318398886260299059[385] = 0;
   out_4318398886260299059[386] = 0;
   out_4318398886260299059[387] = 0;
   out_4318398886260299059[388] = 0;
   out_4318398886260299059[389] = 0;
   out_4318398886260299059[390] = 0;
   out_4318398886260299059[391] = 0;
   out_4318398886260299059[392] = 0;
   out_4318398886260299059[393] = 0;
   out_4318398886260299059[394] = 0;
   out_4318398886260299059[395] = 1.0;
   out_4318398886260299059[396] = 0;
   out_4318398886260299059[397] = 0;
   out_4318398886260299059[398] = 0;
   out_4318398886260299059[399] = 0;
   out_4318398886260299059[400] = 0;
   out_4318398886260299059[401] = 0;
   out_4318398886260299059[402] = 0;
   out_4318398886260299059[403] = 0;
   out_4318398886260299059[404] = 0;
   out_4318398886260299059[405] = 0;
   out_4318398886260299059[406] = 0;
   out_4318398886260299059[407] = 0;
   out_4318398886260299059[408] = 0;
   out_4318398886260299059[409] = 0;
   out_4318398886260299059[410] = 0;
   out_4318398886260299059[411] = 0;
   out_4318398886260299059[412] = 0;
   out_4318398886260299059[413] = 0;
   out_4318398886260299059[414] = 0;
   out_4318398886260299059[415] = 0;
   out_4318398886260299059[416] = 0;
   out_4318398886260299059[417] = 1.0;
   out_4318398886260299059[418] = 0;
   out_4318398886260299059[419] = 0;
   out_4318398886260299059[420] = 0;
   out_4318398886260299059[421] = 0;
   out_4318398886260299059[422] = 0;
   out_4318398886260299059[423] = 0;
   out_4318398886260299059[424] = 0;
   out_4318398886260299059[425] = 0;
   out_4318398886260299059[426] = 0;
   out_4318398886260299059[427] = 0;
   out_4318398886260299059[428] = 0;
   out_4318398886260299059[429] = 0;
   out_4318398886260299059[430] = 0;
   out_4318398886260299059[431] = 0;
   out_4318398886260299059[432] = 0;
   out_4318398886260299059[433] = 0;
   out_4318398886260299059[434] = 0;
   out_4318398886260299059[435] = 0;
   out_4318398886260299059[436] = 0;
   out_4318398886260299059[437] = 0;
   out_4318398886260299059[438] = 0;
   out_4318398886260299059[439] = 1.0;
   out_4318398886260299059[440] = 0;
   out_4318398886260299059[441] = 0;
   out_4318398886260299059[442] = 0;
   out_4318398886260299059[443] = 0;
   out_4318398886260299059[444] = 0;
   out_4318398886260299059[445] = 0;
   out_4318398886260299059[446] = 0;
   out_4318398886260299059[447] = 0;
   out_4318398886260299059[448] = 0;
   out_4318398886260299059[449] = 0;
   out_4318398886260299059[450] = 0;
   out_4318398886260299059[451] = 0;
   out_4318398886260299059[452] = 0;
   out_4318398886260299059[453] = 0;
   out_4318398886260299059[454] = 0;
   out_4318398886260299059[455] = 0;
   out_4318398886260299059[456] = 0;
   out_4318398886260299059[457] = 0;
   out_4318398886260299059[458] = 0;
   out_4318398886260299059[459] = 0;
   out_4318398886260299059[460] = 0;
   out_4318398886260299059[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3683195744337239794) {
   out_3683195744337239794[0] = dt*state[7] + state[0];
   out_3683195744337239794[1] = dt*state[8] + state[1];
   out_3683195744337239794[2] = dt*state[9] + state[2];
   out_3683195744337239794[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3683195744337239794[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3683195744337239794[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3683195744337239794[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3683195744337239794[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3683195744337239794[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3683195744337239794[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3683195744337239794[10] = state[10];
   out_3683195744337239794[11] = state[11];
   out_3683195744337239794[12] = state[12];
   out_3683195744337239794[13] = state[13];
   out_3683195744337239794[14] = state[14];
   out_3683195744337239794[15] = state[15];
   out_3683195744337239794[16] = state[16];
   out_3683195744337239794[17] = state[17];
   out_3683195744337239794[18] = state[18];
   out_3683195744337239794[19] = state[19];
   out_3683195744337239794[20] = state[20];
   out_3683195744337239794[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2432792733877027990) {
   out_2432792733877027990[0] = 1;
   out_2432792733877027990[1] = 0;
   out_2432792733877027990[2] = 0;
   out_2432792733877027990[3] = 0;
   out_2432792733877027990[4] = 0;
   out_2432792733877027990[5] = 0;
   out_2432792733877027990[6] = dt;
   out_2432792733877027990[7] = 0;
   out_2432792733877027990[8] = 0;
   out_2432792733877027990[9] = 0;
   out_2432792733877027990[10] = 0;
   out_2432792733877027990[11] = 0;
   out_2432792733877027990[12] = 0;
   out_2432792733877027990[13] = 0;
   out_2432792733877027990[14] = 0;
   out_2432792733877027990[15] = 0;
   out_2432792733877027990[16] = 0;
   out_2432792733877027990[17] = 0;
   out_2432792733877027990[18] = 0;
   out_2432792733877027990[19] = 0;
   out_2432792733877027990[20] = 0;
   out_2432792733877027990[21] = 0;
   out_2432792733877027990[22] = 1;
   out_2432792733877027990[23] = 0;
   out_2432792733877027990[24] = 0;
   out_2432792733877027990[25] = 0;
   out_2432792733877027990[26] = 0;
   out_2432792733877027990[27] = 0;
   out_2432792733877027990[28] = dt;
   out_2432792733877027990[29] = 0;
   out_2432792733877027990[30] = 0;
   out_2432792733877027990[31] = 0;
   out_2432792733877027990[32] = 0;
   out_2432792733877027990[33] = 0;
   out_2432792733877027990[34] = 0;
   out_2432792733877027990[35] = 0;
   out_2432792733877027990[36] = 0;
   out_2432792733877027990[37] = 0;
   out_2432792733877027990[38] = 0;
   out_2432792733877027990[39] = 0;
   out_2432792733877027990[40] = 0;
   out_2432792733877027990[41] = 0;
   out_2432792733877027990[42] = 0;
   out_2432792733877027990[43] = 0;
   out_2432792733877027990[44] = 1;
   out_2432792733877027990[45] = 0;
   out_2432792733877027990[46] = 0;
   out_2432792733877027990[47] = 0;
   out_2432792733877027990[48] = 0;
   out_2432792733877027990[49] = 0;
   out_2432792733877027990[50] = dt;
   out_2432792733877027990[51] = 0;
   out_2432792733877027990[52] = 0;
   out_2432792733877027990[53] = 0;
   out_2432792733877027990[54] = 0;
   out_2432792733877027990[55] = 0;
   out_2432792733877027990[56] = 0;
   out_2432792733877027990[57] = 0;
   out_2432792733877027990[58] = 0;
   out_2432792733877027990[59] = 0;
   out_2432792733877027990[60] = 0;
   out_2432792733877027990[61] = 0;
   out_2432792733877027990[62] = 0;
   out_2432792733877027990[63] = 0;
   out_2432792733877027990[64] = 0;
   out_2432792733877027990[65] = 0;
   out_2432792733877027990[66] = 1;
   out_2432792733877027990[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2432792733877027990[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2432792733877027990[69] = 0;
   out_2432792733877027990[70] = 0;
   out_2432792733877027990[71] = 0;
   out_2432792733877027990[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2432792733877027990[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2432792733877027990[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2432792733877027990[75] = 0;
   out_2432792733877027990[76] = 0;
   out_2432792733877027990[77] = 0;
   out_2432792733877027990[78] = 0;
   out_2432792733877027990[79] = 0;
   out_2432792733877027990[80] = 0;
   out_2432792733877027990[81] = 0;
   out_2432792733877027990[82] = 0;
   out_2432792733877027990[83] = 0;
   out_2432792733877027990[84] = 0;
   out_2432792733877027990[85] = 0;
   out_2432792733877027990[86] = 0;
   out_2432792733877027990[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2432792733877027990[88] = 1;
   out_2432792733877027990[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2432792733877027990[90] = 0;
   out_2432792733877027990[91] = 0;
   out_2432792733877027990[92] = 0;
   out_2432792733877027990[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2432792733877027990[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2432792733877027990[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2432792733877027990[96] = 0;
   out_2432792733877027990[97] = 0;
   out_2432792733877027990[98] = 0;
   out_2432792733877027990[99] = 0;
   out_2432792733877027990[100] = 0;
   out_2432792733877027990[101] = 0;
   out_2432792733877027990[102] = 0;
   out_2432792733877027990[103] = 0;
   out_2432792733877027990[104] = 0;
   out_2432792733877027990[105] = 0;
   out_2432792733877027990[106] = 0;
   out_2432792733877027990[107] = 0;
   out_2432792733877027990[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2432792733877027990[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2432792733877027990[110] = 1;
   out_2432792733877027990[111] = 0;
   out_2432792733877027990[112] = 0;
   out_2432792733877027990[113] = 0;
   out_2432792733877027990[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2432792733877027990[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2432792733877027990[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2432792733877027990[117] = 0;
   out_2432792733877027990[118] = 0;
   out_2432792733877027990[119] = 0;
   out_2432792733877027990[120] = 0;
   out_2432792733877027990[121] = 0;
   out_2432792733877027990[122] = 0;
   out_2432792733877027990[123] = 0;
   out_2432792733877027990[124] = 0;
   out_2432792733877027990[125] = 0;
   out_2432792733877027990[126] = 0;
   out_2432792733877027990[127] = 0;
   out_2432792733877027990[128] = 0;
   out_2432792733877027990[129] = 0;
   out_2432792733877027990[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2432792733877027990[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2432792733877027990[132] = 1;
   out_2432792733877027990[133] = 0;
   out_2432792733877027990[134] = 0;
   out_2432792733877027990[135] = 0;
   out_2432792733877027990[136] = 0;
   out_2432792733877027990[137] = 0;
   out_2432792733877027990[138] = 0;
   out_2432792733877027990[139] = 0;
   out_2432792733877027990[140] = 0;
   out_2432792733877027990[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2432792733877027990[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2432792733877027990[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2432792733877027990[144] = 0;
   out_2432792733877027990[145] = 0;
   out_2432792733877027990[146] = 0;
   out_2432792733877027990[147] = 0;
   out_2432792733877027990[148] = 0;
   out_2432792733877027990[149] = 0;
   out_2432792733877027990[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2432792733877027990[151] = 0;
   out_2432792733877027990[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2432792733877027990[153] = 0;
   out_2432792733877027990[154] = 1;
   out_2432792733877027990[155] = 0;
   out_2432792733877027990[156] = 0;
   out_2432792733877027990[157] = 0;
   out_2432792733877027990[158] = 0;
   out_2432792733877027990[159] = 0;
   out_2432792733877027990[160] = 0;
   out_2432792733877027990[161] = 0;
   out_2432792733877027990[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2432792733877027990[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2432792733877027990[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2432792733877027990[165] = 0;
   out_2432792733877027990[166] = 0;
   out_2432792733877027990[167] = 0;
   out_2432792733877027990[168] = 0;
   out_2432792733877027990[169] = 0;
   out_2432792733877027990[170] = 0;
   out_2432792733877027990[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2432792733877027990[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2432792733877027990[173] = 0;
   out_2432792733877027990[174] = 0;
   out_2432792733877027990[175] = 0;
   out_2432792733877027990[176] = 1;
   out_2432792733877027990[177] = 0;
   out_2432792733877027990[178] = 0;
   out_2432792733877027990[179] = 0;
   out_2432792733877027990[180] = 0;
   out_2432792733877027990[181] = 0;
   out_2432792733877027990[182] = 0;
   out_2432792733877027990[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2432792733877027990[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2432792733877027990[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2432792733877027990[186] = 0;
   out_2432792733877027990[187] = 0;
   out_2432792733877027990[188] = 0;
   out_2432792733877027990[189] = 0;
   out_2432792733877027990[190] = 0;
   out_2432792733877027990[191] = 0;
   out_2432792733877027990[192] = 0;
   out_2432792733877027990[193] = 0;
   out_2432792733877027990[194] = 0;
   out_2432792733877027990[195] = 0;
   out_2432792733877027990[196] = 0;
   out_2432792733877027990[197] = 0;
   out_2432792733877027990[198] = 1;
   out_2432792733877027990[199] = 0;
   out_2432792733877027990[200] = 0;
   out_2432792733877027990[201] = 0;
   out_2432792733877027990[202] = 0;
   out_2432792733877027990[203] = 0;
   out_2432792733877027990[204] = 0;
   out_2432792733877027990[205] = 0;
   out_2432792733877027990[206] = 0;
   out_2432792733877027990[207] = 0;
   out_2432792733877027990[208] = 0;
   out_2432792733877027990[209] = 0;
   out_2432792733877027990[210] = 0;
   out_2432792733877027990[211] = 0;
   out_2432792733877027990[212] = 0;
   out_2432792733877027990[213] = 0;
   out_2432792733877027990[214] = 0;
   out_2432792733877027990[215] = 0;
   out_2432792733877027990[216] = 0;
   out_2432792733877027990[217] = 0;
   out_2432792733877027990[218] = 0;
   out_2432792733877027990[219] = 0;
   out_2432792733877027990[220] = 1;
   out_2432792733877027990[221] = 0;
   out_2432792733877027990[222] = 0;
   out_2432792733877027990[223] = 0;
   out_2432792733877027990[224] = 0;
   out_2432792733877027990[225] = 0;
   out_2432792733877027990[226] = 0;
   out_2432792733877027990[227] = 0;
   out_2432792733877027990[228] = 0;
   out_2432792733877027990[229] = 0;
   out_2432792733877027990[230] = 0;
   out_2432792733877027990[231] = 0;
   out_2432792733877027990[232] = 0;
   out_2432792733877027990[233] = 0;
   out_2432792733877027990[234] = 0;
   out_2432792733877027990[235] = 0;
   out_2432792733877027990[236] = 0;
   out_2432792733877027990[237] = 0;
   out_2432792733877027990[238] = 0;
   out_2432792733877027990[239] = 0;
   out_2432792733877027990[240] = 0;
   out_2432792733877027990[241] = 0;
   out_2432792733877027990[242] = 1;
   out_2432792733877027990[243] = 0;
   out_2432792733877027990[244] = 0;
   out_2432792733877027990[245] = 0;
   out_2432792733877027990[246] = 0;
   out_2432792733877027990[247] = 0;
   out_2432792733877027990[248] = 0;
   out_2432792733877027990[249] = 0;
   out_2432792733877027990[250] = 0;
   out_2432792733877027990[251] = 0;
   out_2432792733877027990[252] = 0;
   out_2432792733877027990[253] = 0;
   out_2432792733877027990[254] = 0;
   out_2432792733877027990[255] = 0;
   out_2432792733877027990[256] = 0;
   out_2432792733877027990[257] = 0;
   out_2432792733877027990[258] = 0;
   out_2432792733877027990[259] = 0;
   out_2432792733877027990[260] = 0;
   out_2432792733877027990[261] = 0;
   out_2432792733877027990[262] = 0;
   out_2432792733877027990[263] = 0;
   out_2432792733877027990[264] = 1;
   out_2432792733877027990[265] = 0;
   out_2432792733877027990[266] = 0;
   out_2432792733877027990[267] = 0;
   out_2432792733877027990[268] = 0;
   out_2432792733877027990[269] = 0;
   out_2432792733877027990[270] = 0;
   out_2432792733877027990[271] = 0;
   out_2432792733877027990[272] = 0;
   out_2432792733877027990[273] = 0;
   out_2432792733877027990[274] = 0;
   out_2432792733877027990[275] = 0;
   out_2432792733877027990[276] = 0;
   out_2432792733877027990[277] = 0;
   out_2432792733877027990[278] = 0;
   out_2432792733877027990[279] = 0;
   out_2432792733877027990[280] = 0;
   out_2432792733877027990[281] = 0;
   out_2432792733877027990[282] = 0;
   out_2432792733877027990[283] = 0;
   out_2432792733877027990[284] = 0;
   out_2432792733877027990[285] = 0;
   out_2432792733877027990[286] = 1;
   out_2432792733877027990[287] = 0;
   out_2432792733877027990[288] = 0;
   out_2432792733877027990[289] = 0;
   out_2432792733877027990[290] = 0;
   out_2432792733877027990[291] = 0;
   out_2432792733877027990[292] = 0;
   out_2432792733877027990[293] = 0;
   out_2432792733877027990[294] = 0;
   out_2432792733877027990[295] = 0;
   out_2432792733877027990[296] = 0;
   out_2432792733877027990[297] = 0;
   out_2432792733877027990[298] = 0;
   out_2432792733877027990[299] = 0;
   out_2432792733877027990[300] = 0;
   out_2432792733877027990[301] = 0;
   out_2432792733877027990[302] = 0;
   out_2432792733877027990[303] = 0;
   out_2432792733877027990[304] = 0;
   out_2432792733877027990[305] = 0;
   out_2432792733877027990[306] = 0;
   out_2432792733877027990[307] = 0;
   out_2432792733877027990[308] = 1;
   out_2432792733877027990[309] = 0;
   out_2432792733877027990[310] = 0;
   out_2432792733877027990[311] = 0;
   out_2432792733877027990[312] = 0;
   out_2432792733877027990[313] = 0;
   out_2432792733877027990[314] = 0;
   out_2432792733877027990[315] = 0;
   out_2432792733877027990[316] = 0;
   out_2432792733877027990[317] = 0;
   out_2432792733877027990[318] = 0;
   out_2432792733877027990[319] = 0;
   out_2432792733877027990[320] = 0;
   out_2432792733877027990[321] = 0;
   out_2432792733877027990[322] = 0;
   out_2432792733877027990[323] = 0;
   out_2432792733877027990[324] = 0;
   out_2432792733877027990[325] = 0;
   out_2432792733877027990[326] = 0;
   out_2432792733877027990[327] = 0;
   out_2432792733877027990[328] = 0;
   out_2432792733877027990[329] = 0;
   out_2432792733877027990[330] = 1;
   out_2432792733877027990[331] = 0;
   out_2432792733877027990[332] = 0;
   out_2432792733877027990[333] = 0;
   out_2432792733877027990[334] = 0;
   out_2432792733877027990[335] = 0;
   out_2432792733877027990[336] = 0;
   out_2432792733877027990[337] = 0;
   out_2432792733877027990[338] = 0;
   out_2432792733877027990[339] = 0;
   out_2432792733877027990[340] = 0;
   out_2432792733877027990[341] = 0;
   out_2432792733877027990[342] = 0;
   out_2432792733877027990[343] = 0;
   out_2432792733877027990[344] = 0;
   out_2432792733877027990[345] = 0;
   out_2432792733877027990[346] = 0;
   out_2432792733877027990[347] = 0;
   out_2432792733877027990[348] = 0;
   out_2432792733877027990[349] = 0;
   out_2432792733877027990[350] = 0;
   out_2432792733877027990[351] = 0;
   out_2432792733877027990[352] = 1;
   out_2432792733877027990[353] = 0;
   out_2432792733877027990[354] = 0;
   out_2432792733877027990[355] = 0;
   out_2432792733877027990[356] = 0;
   out_2432792733877027990[357] = 0;
   out_2432792733877027990[358] = 0;
   out_2432792733877027990[359] = 0;
   out_2432792733877027990[360] = 0;
   out_2432792733877027990[361] = 0;
   out_2432792733877027990[362] = 0;
   out_2432792733877027990[363] = 0;
   out_2432792733877027990[364] = 0;
   out_2432792733877027990[365] = 0;
   out_2432792733877027990[366] = 0;
   out_2432792733877027990[367] = 0;
   out_2432792733877027990[368] = 0;
   out_2432792733877027990[369] = 0;
   out_2432792733877027990[370] = 0;
   out_2432792733877027990[371] = 0;
   out_2432792733877027990[372] = 0;
   out_2432792733877027990[373] = 0;
   out_2432792733877027990[374] = 1;
   out_2432792733877027990[375] = 0;
   out_2432792733877027990[376] = 0;
   out_2432792733877027990[377] = 0;
   out_2432792733877027990[378] = 0;
   out_2432792733877027990[379] = 0;
   out_2432792733877027990[380] = 0;
   out_2432792733877027990[381] = 0;
   out_2432792733877027990[382] = 0;
   out_2432792733877027990[383] = 0;
   out_2432792733877027990[384] = 0;
   out_2432792733877027990[385] = 0;
   out_2432792733877027990[386] = 0;
   out_2432792733877027990[387] = 0;
   out_2432792733877027990[388] = 0;
   out_2432792733877027990[389] = 0;
   out_2432792733877027990[390] = 0;
   out_2432792733877027990[391] = 0;
   out_2432792733877027990[392] = 0;
   out_2432792733877027990[393] = 0;
   out_2432792733877027990[394] = 0;
   out_2432792733877027990[395] = 0;
   out_2432792733877027990[396] = 1;
   out_2432792733877027990[397] = 0;
   out_2432792733877027990[398] = 0;
   out_2432792733877027990[399] = 0;
   out_2432792733877027990[400] = 0;
   out_2432792733877027990[401] = 0;
   out_2432792733877027990[402] = 0;
   out_2432792733877027990[403] = 0;
   out_2432792733877027990[404] = 0;
   out_2432792733877027990[405] = 0;
   out_2432792733877027990[406] = 0;
   out_2432792733877027990[407] = 0;
   out_2432792733877027990[408] = 0;
   out_2432792733877027990[409] = 0;
   out_2432792733877027990[410] = 0;
   out_2432792733877027990[411] = 0;
   out_2432792733877027990[412] = 0;
   out_2432792733877027990[413] = 0;
   out_2432792733877027990[414] = 0;
   out_2432792733877027990[415] = 0;
   out_2432792733877027990[416] = 0;
   out_2432792733877027990[417] = 0;
   out_2432792733877027990[418] = 1;
   out_2432792733877027990[419] = 0;
   out_2432792733877027990[420] = 0;
   out_2432792733877027990[421] = 0;
   out_2432792733877027990[422] = 0;
   out_2432792733877027990[423] = 0;
   out_2432792733877027990[424] = 0;
   out_2432792733877027990[425] = 0;
   out_2432792733877027990[426] = 0;
   out_2432792733877027990[427] = 0;
   out_2432792733877027990[428] = 0;
   out_2432792733877027990[429] = 0;
   out_2432792733877027990[430] = 0;
   out_2432792733877027990[431] = 0;
   out_2432792733877027990[432] = 0;
   out_2432792733877027990[433] = 0;
   out_2432792733877027990[434] = 0;
   out_2432792733877027990[435] = 0;
   out_2432792733877027990[436] = 0;
   out_2432792733877027990[437] = 0;
   out_2432792733877027990[438] = 0;
   out_2432792733877027990[439] = 0;
   out_2432792733877027990[440] = 1;
}
void h_4(double *state, double *unused, double *out_8841642660881472329) {
   out_8841642660881472329[0] = state[10] + state[13];
   out_8841642660881472329[1] = state[11] + state[14];
   out_8841642660881472329[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7999779694749254179) {
   out_7999779694749254179[0] = 0;
   out_7999779694749254179[1] = 0;
   out_7999779694749254179[2] = 0;
   out_7999779694749254179[3] = 0;
   out_7999779694749254179[4] = 0;
   out_7999779694749254179[5] = 0;
   out_7999779694749254179[6] = 0;
   out_7999779694749254179[7] = 0;
   out_7999779694749254179[8] = 0;
   out_7999779694749254179[9] = 0;
   out_7999779694749254179[10] = 1;
   out_7999779694749254179[11] = 0;
   out_7999779694749254179[12] = 0;
   out_7999779694749254179[13] = 1;
   out_7999779694749254179[14] = 0;
   out_7999779694749254179[15] = 0;
   out_7999779694749254179[16] = 0;
   out_7999779694749254179[17] = 0;
   out_7999779694749254179[18] = 0;
   out_7999779694749254179[19] = 0;
   out_7999779694749254179[20] = 0;
   out_7999779694749254179[21] = 0;
   out_7999779694749254179[22] = 0;
   out_7999779694749254179[23] = 0;
   out_7999779694749254179[24] = 0;
   out_7999779694749254179[25] = 0;
   out_7999779694749254179[26] = 0;
   out_7999779694749254179[27] = 0;
   out_7999779694749254179[28] = 0;
   out_7999779694749254179[29] = 0;
   out_7999779694749254179[30] = 0;
   out_7999779694749254179[31] = 0;
   out_7999779694749254179[32] = 0;
   out_7999779694749254179[33] = 1;
   out_7999779694749254179[34] = 0;
   out_7999779694749254179[35] = 0;
   out_7999779694749254179[36] = 1;
   out_7999779694749254179[37] = 0;
   out_7999779694749254179[38] = 0;
   out_7999779694749254179[39] = 0;
   out_7999779694749254179[40] = 0;
   out_7999779694749254179[41] = 0;
   out_7999779694749254179[42] = 0;
   out_7999779694749254179[43] = 0;
   out_7999779694749254179[44] = 0;
   out_7999779694749254179[45] = 0;
   out_7999779694749254179[46] = 0;
   out_7999779694749254179[47] = 0;
   out_7999779694749254179[48] = 0;
   out_7999779694749254179[49] = 0;
   out_7999779694749254179[50] = 0;
   out_7999779694749254179[51] = 0;
   out_7999779694749254179[52] = 0;
   out_7999779694749254179[53] = 0;
   out_7999779694749254179[54] = 0;
   out_7999779694749254179[55] = 0;
   out_7999779694749254179[56] = 1;
   out_7999779694749254179[57] = 0;
   out_7999779694749254179[58] = 0;
   out_7999779694749254179[59] = 1;
   out_7999779694749254179[60] = 0;
   out_7999779694749254179[61] = 0;
   out_7999779694749254179[62] = 0;
   out_7999779694749254179[63] = 0;
   out_7999779694749254179[64] = 0;
   out_7999779694749254179[65] = 0;
}
void h_9(double *state, double *unused, double *out_3654107230785286631) {
   out_3654107230785286631[0] = state[10];
   out_3654107230785286631[1] = state[11];
   out_3654107230785286631[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3159745443695849967) {
   out_3159745443695849967[0] = 0;
   out_3159745443695849967[1] = 0;
   out_3159745443695849967[2] = 0;
   out_3159745443695849967[3] = 0;
   out_3159745443695849967[4] = 0;
   out_3159745443695849967[5] = 0;
   out_3159745443695849967[6] = 0;
   out_3159745443695849967[7] = 0;
   out_3159745443695849967[8] = 0;
   out_3159745443695849967[9] = 0;
   out_3159745443695849967[10] = 1;
   out_3159745443695849967[11] = 0;
   out_3159745443695849967[12] = 0;
   out_3159745443695849967[13] = 0;
   out_3159745443695849967[14] = 0;
   out_3159745443695849967[15] = 0;
   out_3159745443695849967[16] = 0;
   out_3159745443695849967[17] = 0;
   out_3159745443695849967[18] = 0;
   out_3159745443695849967[19] = 0;
   out_3159745443695849967[20] = 0;
   out_3159745443695849967[21] = 0;
   out_3159745443695849967[22] = 0;
   out_3159745443695849967[23] = 0;
   out_3159745443695849967[24] = 0;
   out_3159745443695849967[25] = 0;
   out_3159745443695849967[26] = 0;
   out_3159745443695849967[27] = 0;
   out_3159745443695849967[28] = 0;
   out_3159745443695849967[29] = 0;
   out_3159745443695849967[30] = 0;
   out_3159745443695849967[31] = 0;
   out_3159745443695849967[32] = 0;
   out_3159745443695849967[33] = 1;
   out_3159745443695849967[34] = 0;
   out_3159745443695849967[35] = 0;
   out_3159745443695849967[36] = 0;
   out_3159745443695849967[37] = 0;
   out_3159745443695849967[38] = 0;
   out_3159745443695849967[39] = 0;
   out_3159745443695849967[40] = 0;
   out_3159745443695849967[41] = 0;
   out_3159745443695849967[42] = 0;
   out_3159745443695849967[43] = 0;
   out_3159745443695849967[44] = 0;
   out_3159745443695849967[45] = 0;
   out_3159745443695849967[46] = 0;
   out_3159745443695849967[47] = 0;
   out_3159745443695849967[48] = 0;
   out_3159745443695849967[49] = 0;
   out_3159745443695849967[50] = 0;
   out_3159745443695849967[51] = 0;
   out_3159745443695849967[52] = 0;
   out_3159745443695849967[53] = 0;
   out_3159745443695849967[54] = 0;
   out_3159745443695849967[55] = 0;
   out_3159745443695849967[56] = 1;
   out_3159745443695849967[57] = 0;
   out_3159745443695849967[58] = 0;
   out_3159745443695849967[59] = 0;
   out_3159745443695849967[60] = 0;
   out_3159745443695849967[61] = 0;
   out_3159745443695849967[62] = 0;
   out_3159745443695849967[63] = 0;
   out_3159745443695849967[64] = 0;
   out_3159745443695849967[65] = 0;
}
void h_10(double *state, double *unused, double *out_6956824720507089961) {
   out_6956824720507089961[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_6956824720507089961[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_6956824720507089961[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6285665405533394753) {
   out_6285665405533394753[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6285665405533394753[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6285665405533394753[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6285665405533394753[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6285665405533394753[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6285665405533394753[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6285665405533394753[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6285665405533394753[7] = 0;
   out_6285665405533394753[8] = 0;
   out_6285665405533394753[9] = 0;
   out_6285665405533394753[10] = 0;
   out_6285665405533394753[11] = 0;
   out_6285665405533394753[12] = 0;
   out_6285665405533394753[13] = 0;
   out_6285665405533394753[14] = 0;
   out_6285665405533394753[15] = 0;
   out_6285665405533394753[16] = 1;
   out_6285665405533394753[17] = 0;
   out_6285665405533394753[18] = 0;
   out_6285665405533394753[19] = 1;
   out_6285665405533394753[20] = 0;
   out_6285665405533394753[21] = 0;
   out_6285665405533394753[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6285665405533394753[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6285665405533394753[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6285665405533394753[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6285665405533394753[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6285665405533394753[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6285665405533394753[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6285665405533394753[29] = 0;
   out_6285665405533394753[30] = 0;
   out_6285665405533394753[31] = 0;
   out_6285665405533394753[32] = 0;
   out_6285665405533394753[33] = 0;
   out_6285665405533394753[34] = 0;
   out_6285665405533394753[35] = 0;
   out_6285665405533394753[36] = 0;
   out_6285665405533394753[37] = 0;
   out_6285665405533394753[38] = 0;
   out_6285665405533394753[39] = 1;
   out_6285665405533394753[40] = 0;
   out_6285665405533394753[41] = 0;
   out_6285665405533394753[42] = 1;
   out_6285665405533394753[43] = 0;
   out_6285665405533394753[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6285665405533394753[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6285665405533394753[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6285665405533394753[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6285665405533394753[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6285665405533394753[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6285665405533394753[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6285665405533394753[51] = 0;
   out_6285665405533394753[52] = 0;
   out_6285665405533394753[53] = 0;
   out_6285665405533394753[54] = 0;
   out_6285665405533394753[55] = 0;
   out_6285665405533394753[56] = 0;
   out_6285665405533394753[57] = 0;
   out_6285665405533394753[58] = 0;
   out_6285665405533394753[59] = 0;
   out_6285665405533394753[60] = 0;
   out_6285665405533394753[61] = 0;
   out_6285665405533394753[62] = 1;
   out_6285665405533394753[63] = 0;
   out_6285665405533394753[64] = 0;
   out_6285665405533394753[65] = 1;
}
void h_12(double *state, double *unused, double *out_6889321244938889067) {
   out_6889321244938889067[0] = state[0];
   out_6889321244938889067[1] = state[1];
   out_6889321244938889067[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1618521317706521183) {
   out_1618521317706521183[0] = 1;
   out_1618521317706521183[1] = 0;
   out_1618521317706521183[2] = 0;
   out_1618521317706521183[3] = 0;
   out_1618521317706521183[4] = 0;
   out_1618521317706521183[5] = 0;
   out_1618521317706521183[6] = 0;
   out_1618521317706521183[7] = 0;
   out_1618521317706521183[8] = 0;
   out_1618521317706521183[9] = 0;
   out_1618521317706521183[10] = 0;
   out_1618521317706521183[11] = 0;
   out_1618521317706521183[12] = 0;
   out_1618521317706521183[13] = 0;
   out_1618521317706521183[14] = 0;
   out_1618521317706521183[15] = 0;
   out_1618521317706521183[16] = 0;
   out_1618521317706521183[17] = 0;
   out_1618521317706521183[18] = 0;
   out_1618521317706521183[19] = 0;
   out_1618521317706521183[20] = 0;
   out_1618521317706521183[21] = 0;
   out_1618521317706521183[22] = 0;
   out_1618521317706521183[23] = 1;
   out_1618521317706521183[24] = 0;
   out_1618521317706521183[25] = 0;
   out_1618521317706521183[26] = 0;
   out_1618521317706521183[27] = 0;
   out_1618521317706521183[28] = 0;
   out_1618521317706521183[29] = 0;
   out_1618521317706521183[30] = 0;
   out_1618521317706521183[31] = 0;
   out_1618521317706521183[32] = 0;
   out_1618521317706521183[33] = 0;
   out_1618521317706521183[34] = 0;
   out_1618521317706521183[35] = 0;
   out_1618521317706521183[36] = 0;
   out_1618521317706521183[37] = 0;
   out_1618521317706521183[38] = 0;
   out_1618521317706521183[39] = 0;
   out_1618521317706521183[40] = 0;
   out_1618521317706521183[41] = 0;
   out_1618521317706521183[42] = 0;
   out_1618521317706521183[43] = 0;
   out_1618521317706521183[44] = 0;
   out_1618521317706521183[45] = 0;
   out_1618521317706521183[46] = 1;
   out_1618521317706521183[47] = 0;
   out_1618521317706521183[48] = 0;
   out_1618521317706521183[49] = 0;
   out_1618521317706521183[50] = 0;
   out_1618521317706521183[51] = 0;
   out_1618521317706521183[52] = 0;
   out_1618521317706521183[53] = 0;
   out_1618521317706521183[54] = 0;
   out_1618521317706521183[55] = 0;
   out_1618521317706521183[56] = 0;
   out_1618521317706521183[57] = 0;
   out_1618521317706521183[58] = 0;
   out_1618521317706521183[59] = 0;
   out_1618521317706521183[60] = 0;
   out_1618521317706521183[61] = 0;
   out_1618521317706521183[62] = 0;
   out_1618521317706521183[63] = 0;
   out_1618521317706521183[64] = 0;
   out_1618521317706521183[65] = 0;
}
void h_35(double *state, double *unused, double *out_2160361396041920226) {
   out_2160361396041920226[0] = state[7];
   out_2160361396041920226[1] = state[8];
   out_2160361396041920226[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2681944938603321933) {
   out_2681944938603321933[0] = 0;
   out_2681944938603321933[1] = 0;
   out_2681944938603321933[2] = 0;
   out_2681944938603321933[3] = 0;
   out_2681944938603321933[4] = 0;
   out_2681944938603321933[5] = 0;
   out_2681944938603321933[6] = 0;
   out_2681944938603321933[7] = 1;
   out_2681944938603321933[8] = 0;
   out_2681944938603321933[9] = 0;
   out_2681944938603321933[10] = 0;
   out_2681944938603321933[11] = 0;
   out_2681944938603321933[12] = 0;
   out_2681944938603321933[13] = 0;
   out_2681944938603321933[14] = 0;
   out_2681944938603321933[15] = 0;
   out_2681944938603321933[16] = 0;
   out_2681944938603321933[17] = 0;
   out_2681944938603321933[18] = 0;
   out_2681944938603321933[19] = 0;
   out_2681944938603321933[20] = 0;
   out_2681944938603321933[21] = 0;
   out_2681944938603321933[22] = 0;
   out_2681944938603321933[23] = 0;
   out_2681944938603321933[24] = 0;
   out_2681944938603321933[25] = 0;
   out_2681944938603321933[26] = 0;
   out_2681944938603321933[27] = 0;
   out_2681944938603321933[28] = 0;
   out_2681944938603321933[29] = 0;
   out_2681944938603321933[30] = 1;
   out_2681944938603321933[31] = 0;
   out_2681944938603321933[32] = 0;
   out_2681944938603321933[33] = 0;
   out_2681944938603321933[34] = 0;
   out_2681944938603321933[35] = 0;
   out_2681944938603321933[36] = 0;
   out_2681944938603321933[37] = 0;
   out_2681944938603321933[38] = 0;
   out_2681944938603321933[39] = 0;
   out_2681944938603321933[40] = 0;
   out_2681944938603321933[41] = 0;
   out_2681944938603321933[42] = 0;
   out_2681944938603321933[43] = 0;
   out_2681944938603321933[44] = 0;
   out_2681944938603321933[45] = 0;
   out_2681944938603321933[46] = 0;
   out_2681944938603321933[47] = 0;
   out_2681944938603321933[48] = 0;
   out_2681944938603321933[49] = 0;
   out_2681944938603321933[50] = 0;
   out_2681944938603321933[51] = 0;
   out_2681944938603321933[52] = 0;
   out_2681944938603321933[53] = 1;
   out_2681944938603321933[54] = 0;
   out_2681944938603321933[55] = 0;
   out_2681944938603321933[56] = 0;
   out_2681944938603321933[57] = 0;
   out_2681944938603321933[58] = 0;
   out_2681944938603321933[59] = 0;
   out_2681944938603321933[60] = 0;
   out_2681944938603321933[61] = 0;
   out_2681944938603321933[62] = 0;
   out_2681944938603321933[63] = 0;
   out_2681944938603321933[64] = 0;
   out_2681944938603321933[65] = 0;
}
void h_32(double *state, double *unused, double *out_2213294620611253067) {
   out_2213294620611253067[0] = state[3];
   out_2213294620611253067[1] = state[4];
   out_2213294620611253067[2] = state[5];
   out_2213294620611253067[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7147742514449952485) {
   out_7147742514449952485[0] = 0;
   out_7147742514449952485[1] = 0;
   out_7147742514449952485[2] = 0;
   out_7147742514449952485[3] = 1;
   out_7147742514449952485[4] = 0;
   out_7147742514449952485[5] = 0;
   out_7147742514449952485[6] = 0;
   out_7147742514449952485[7] = 0;
   out_7147742514449952485[8] = 0;
   out_7147742514449952485[9] = 0;
   out_7147742514449952485[10] = 0;
   out_7147742514449952485[11] = 0;
   out_7147742514449952485[12] = 0;
   out_7147742514449952485[13] = 0;
   out_7147742514449952485[14] = 0;
   out_7147742514449952485[15] = 0;
   out_7147742514449952485[16] = 0;
   out_7147742514449952485[17] = 0;
   out_7147742514449952485[18] = 0;
   out_7147742514449952485[19] = 0;
   out_7147742514449952485[20] = 0;
   out_7147742514449952485[21] = 0;
   out_7147742514449952485[22] = 0;
   out_7147742514449952485[23] = 0;
   out_7147742514449952485[24] = 0;
   out_7147742514449952485[25] = 0;
   out_7147742514449952485[26] = 1;
   out_7147742514449952485[27] = 0;
   out_7147742514449952485[28] = 0;
   out_7147742514449952485[29] = 0;
   out_7147742514449952485[30] = 0;
   out_7147742514449952485[31] = 0;
   out_7147742514449952485[32] = 0;
   out_7147742514449952485[33] = 0;
   out_7147742514449952485[34] = 0;
   out_7147742514449952485[35] = 0;
   out_7147742514449952485[36] = 0;
   out_7147742514449952485[37] = 0;
   out_7147742514449952485[38] = 0;
   out_7147742514449952485[39] = 0;
   out_7147742514449952485[40] = 0;
   out_7147742514449952485[41] = 0;
   out_7147742514449952485[42] = 0;
   out_7147742514449952485[43] = 0;
   out_7147742514449952485[44] = 0;
   out_7147742514449952485[45] = 0;
   out_7147742514449952485[46] = 0;
   out_7147742514449952485[47] = 0;
   out_7147742514449952485[48] = 0;
   out_7147742514449952485[49] = 1;
   out_7147742514449952485[50] = 0;
   out_7147742514449952485[51] = 0;
   out_7147742514449952485[52] = 0;
   out_7147742514449952485[53] = 0;
   out_7147742514449952485[54] = 0;
   out_7147742514449952485[55] = 0;
   out_7147742514449952485[56] = 0;
   out_7147742514449952485[57] = 0;
   out_7147742514449952485[58] = 0;
   out_7147742514449952485[59] = 0;
   out_7147742514449952485[60] = 0;
   out_7147742514449952485[61] = 0;
   out_7147742514449952485[62] = 0;
   out_7147742514449952485[63] = 0;
   out_7147742514449952485[64] = 0;
   out_7147742514449952485[65] = 0;
   out_7147742514449952485[66] = 0;
   out_7147742514449952485[67] = 0;
   out_7147742514449952485[68] = 0;
   out_7147742514449952485[69] = 0;
   out_7147742514449952485[70] = 0;
   out_7147742514449952485[71] = 0;
   out_7147742514449952485[72] = 1;
   out_7147742514449952485[73] = 0;
   out_7147742514449952485[74] = 0;
   out_7147742514449952485[75] = 0;
   out_7147742514449952485[76] = 0;
   out_7147742514449952485[77] = 0;
   out_7147742514449952485[78] = 0;
   out_7147742514449952485[79] = 0;
   out_7147742514449952485[80] = 0;
   out_7147742514449952485[81] = 0;
   out_7147742514449952485[82] = 0;
   out_7147742514449952485[83] = 0;
   out_7147742514449952485[84] = 0;
   out_7147742514449952485[85] = 0;
   out_7147742514449952485[86] = 0;
   out_7147742514449952485[87] = 0;
}
void h_13(double *state, double *unused, double *out_3961845102247333643) {
   out_3961845102247333643[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3961845102247333643[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3961845102247333643[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4858877028864437581) {
   out_4858877028864437581[0] = 0;
   out_4858877028864437581[1] = 0;
   out_4858877028864437581[2] = 0;
   out_4858877028864437581[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4858877028864437581[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4858877028864437581[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4858877028864437581[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4858877028864437581[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4858877028864437581[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4858877028864437581[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4858877028864437581[10] = 0;
   out_4858877028864437581[11] = 0;
   out_4858877028864437581[12] = 0;
   out_4858877028864437581[13] = 0;
   out_4858877028864437581[14] = 0;
   out_4858877028864437581[15] = 0;
   out_4858877028864437581[16] = 0;
   out_4858877028864437581[17] = 0;
   out_4858877028864437581[18] = 0;
   out_4858877028864437581[19] = 0;
   out_4858877028864437581[20] = 0;
   out_4858877028864437581[21] = 0;
   out_4858877028864437581[22] = 0;
   out_4858877028864437581[23] = 0;
   out_4858877028864437581[24] = 0;
   out_4858877028864437581[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4858877028864437581[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4858877028864437581[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4858877028864437581[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4858877028864437581[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4858877028864437581[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4858877028864437581[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4858877028864437581[32] = 0;
   out_4858877028864437581[33] = 0;
   out_4858877028864437581[34] = 0;
   out_4858877028864437581[35] = 0;
   out_4858877028864437581[36] = 0;
   out_4858877028864437581[37] = 0;
   out_4858877028864437581[38] = 0;
   out_4858877028864437581[39] = 0;
   out_4858877028864437581[40] = 0;
   out_4858877028864437581[41] = 0;
   out_4858877028864437581[42] = 0;
   out_4858877028864437581[43] = 0;
   out_4858877028864437581[44] = 0;
   out_4858877028864437581[45] = 0;
   out_4858877028864437581[46] = 0;
   out_4858877028864437581[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4858877028864437581[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4858877028864437581[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4858877028864437581[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4858877028864437581[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4858877028864437581[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4858877028864437581[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4858877028864437581[54] = 0;
   out_4858877028864437581[55] = 0;
   out_4858877028864437581[56] = 0;
   out_4858877028864437581[57] = 0;
   out_4858877028864437581[58] = 0;
   out_4858877028864437581[59] = 0;
   out_4858877028864437581[60] = 0;
   out_4858877028864437581[61] = 0;
   out_4858877028864437581[62] = 0;
   out_4858877028864437581[63] = 0;
   out_4858877028864437581[64] = 0;
   out_4858877028864437581[65] = 0;
}
void h_14(double *state, double *unused, double *out_3654107230785286631) {
   out_3654107230785286631[0] = state[10];
   out_3654107230785286631[1] = state[11];
   out_3654107230785286631[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3159745443695849967) {
   out_3159745443695849967[0] = 0;
   out_3159745443695849967[1] = 0;
   out_3159745443695849967[2] = 0;
   out_3159745443695849967[3] = 0;
   out_3159745443695849967[4] = 0;
   out_3159745443695849967[5] = 0;
   out_3159745443695849967[6] = 0;
   out_3159745443695849967[7] = 0;
   out_3159745443695849967[8] = 0;
   out_3159745443695849967[9] = 0;
   out_3159745443695849967[10] = 1;
   out_3159745443695849967[11] = 0;
   out_3159745443695849967[12] = 0;
   out_3159745443695849967[13] = 0;
   out_3159745443695849967[14] = 0;
   out_3159745443695849967[15] = 0;
   out_3159745443695849967[16] = 0;
   out_3159745443695849967[17] = 0;
   out_3159745443695849967[18] = 0;
   out_3159745443695849967[19] = 0;
   out_3159745443695849967[20] = 0;
   out_3159745443695849967[21] = 0;
   out_3159745443695849967[22] = 0;
   out_3159745443695849967[23] = 0;
   out_3159745443695849967[24] = 0;
   out_3159745443695849967[25] = 0;
   out_3159745443695849967[26] = 0;
   out_3159745443695849967[27] = 0;
   out_3159745443695849967[28] = 0;
   out_3159745443695849967[29] = 0;
   out_3159745443695849967[30] = 0;
   out_3159745443695849967[31] = 0;
   out_3159745443695849967[32] = 0;
   out_3159745443695849967[33] = 1;
   out_3159745443695849967[34] = 0;
   out_3159745443695849967[35] = 0;
   out_3159745443695849967[36] = 0;
   out_3159745443695849967[37] = 0;
   out_3159745443695849967[38] = 0;
   out_3159745443695849967[39] = 0;
   out_3159745443695849967[40] = 0;
   out_3159745443695849967[41] = 0;
   out_3159745443695849967[42] = 0;
   out_3159745443695849967[43] = 0;
   out_3159745443695849967[44] = 0;
   out_3159745443695849967[45] = 0;
   out_3159745443695849967[46] = 0;
   out_3159745443695849967[47] = 0;
   out_3159745443695849967[48] = 0;
   out_3159745443695849967[49] = 0;
   out_3159745443695849967[50] = 0;
   out_3159745443695849967[51] = 0;
   out_3159745443695849967[52] = 0;
   out_3159745443695849967[53] = 0;
   out_3159745443695849967[54] = 0;
   out_3159745443695849967[55] = 0;
   out_3159745443695849967[56] = 1;
   out_3159745443695849967[57] = 0;
   out_3159745443695849967[58] = 0;
   out_3159745443695849967[59] = 0;
   out_3159745443695849967[60] = 0;
   out_3159745443695849967[61] = 0;
   out_3159745443695849967[62] = 0;
   out_3159745443695849967[63] = 0;
   out_3159745443695849967[64] = 0;
   out_3159745443695849967[65] = 0;
}
void h_33(double *state, double *unused, double *out_5565299391088584654) {
   out_5565299391088584654[0] = state[16];
   out_5565299391088584654[1] = state[17];
   out_5565299391088584654[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7514641354670392496) {
   out_7514641354670392496[0] = 0;
   out_7514641354670392496[1] = 0;
   out_7514641354670392496[2] = 0;
   out_7514641354670392496[3] = 0;
   out_7514641354670392496[4] = 0;
   out_7514641354670392496[5] = 0;
   out_7514641354670392496[6] = 0;
   out_7514641354670392496[7] = 0;
   out_7514641354670392496[8] = 0;
   out_7514641354670392496[9] = 0;
   out_7514641354670392496[10] = 0;
   out_7514641354670392496[11] = 0;
   out_7514641354670392496[12] = 0;
   out_7514641354670392496[13] = 0;
   out_7514641354670392496[14] = 0;
   out_7514641354670392496[15] = 0;
   out_7514641354670392496[16] = 1;
   out_7514641354670392496[17] = 0;
   out_7514641354670392496[18] = 0;
   out_7514641354670392496[19] = 0;
   out_7514641354670392496[20] = 0;
   out_7514641354670392496[21] = 0;
   out_7514641354670392496[22] = 0;
   out_7514641354670392496[23] = 0;
   out_7514641354670392496[24] = 0;
   out_7514641354670392496[25] = 0;
   out_7514641354670392496[26] = 0;
   out_7514641354670392496[27] = 0;
   out_7514641354670392496[28] = 0;
   out_7514641354670392496[29] = 0;
   out_7514641354670392496[30] = 0;
   out_7514641354670392496[31] = 0;
   out_7514641354670392496[32] = 0;
   out_7514641354670392496[33] = 0;
   out_7514641354670392496[34] = 0;
   out_7514641354670392496[35] = 0;
   out_7514641354670392496[36] = 0;
   out_7514641354670392496[37] = 0;
   out_7514641354670392496[38] = 0;
   out_7514641354670392496[39] = 1;
   out_7514641354670392496[40] = 0;
   out_7514641354670392496[41] = 0;
   out_7514641354670392496[42] = 0;
   out_7514641354670392496[43] = 0;
   out_7514641354670392496[44] = 0;
   out_7514641354670392496[45] = 0;
   out_7514641354670392496[46] = 0;
   out_7514641354670392496[47] = 0;
   out_7514641354670392496[48] = 0;
   out_7514641354670392496[49] = 0;
   out_7514641354670392496[50] = 0;
   out_7514641354670392496[51] = 0;
   out_7514641354670392496[52] = 0;
   out_7514641354670392496[53] = 0;
   out_7514641354670392496[54] = 0;
   out_7514641354670392496[55] = 0;
   out_7514641354670392496[56] = 0;
   out_7514641354670392496[57] = 0;
   out_7514641354670392496[58] = 0;
   out_7514641354670392496[59] = 0;
   out_7514641354670392496[60] = 0;
   out_7514641354670392496[61] = 0;
   out_7514641354670392496[62] = 1;
   out_7514641354670392496[63] = 0;
   out_7514641354670392496[64] = 0;
   out_7514641354670392496[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7807769199427264664) {
  H(in_vec, out_7807769199427264664);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3695323874008703707) {
  err_fun(nom_x, delta_x, out_3695323874008703707);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3494745308466159035) {
  inv_err_fun(nom_x, true_x, out_3494745308466159035);
}
void live_H_mod_fun(double *state, double *out_4318398886260299059) {
  H_mod_fun(state, out_4318398886260299059);
}
void live_f_fun(double *state, double dt, double *out_3683195744337239794) {
  f_fun(state,  dt, out_3683195744337239794);
}
void live_F_fun(double *state, double dt, double *out_2432792733877027990) {
  F_fun(state,  dt, out_2432792733877027990);
}
void live_h_4(double *state, double *unused, double *out_8841642660881472329) {
  h_4(state, unused, out_8841642660881472329);
}
void live_H_4(double *state, double *unused, double *out_7999779694749254179) {
  H_4(state, unused, out_7999779694749254179);
}
void live_h_9(double *state, double *unused, double *out_3654107230785286631) {
  h_9(state, unused, out_3654107230785286631);
}
void live_H_9(double *state, double *unused, double *out_3159745443695849967) {
  H_9(state, unused, out_3159745443695849967);
}
void live_h_10(double *state, double *unused, double *out_6956824720507089961) {
  h_10(state, unused, out_6956824720507089961);
}
void live_H_10(double *state, double *unused, double *out_6285665405533394753) {
  H_10(state, unused, out_6285665405533394753);
}
void live_h_12(double *state, double *unused, double *out_6889321244938889067) {
  h_12(state, unused, out_6889321244938889067);
}
void live_H_12(double *state, double *unused, double *out_1618521317706521183) {
  H_12(state, unused, out_1618521317706521183);
}
void live_h_35(double *state, double *unused, double *out_2160361396041920226) {
  h_35(state, unused, out_2160361396041920226);
}
void live_H_35(double *state, double *unused, double *out_2681944938603321933) {
  H_35(state, unused, out_2681944938603321933);
}
void live_h_32(double *state, double *unused, double *out_2213294620611253067) {
  h_32(state, unused, out_2213294620611253067);
}
void live_H_32(double *state, double *unused, double *out_7147742514449952485) {
  H_32(state, unused, out_7147742514449952485);
}
void live_h_13(double *state, double *unused, double *out_3961845102247333643) {
  h_13(state, unused, out_3961845102247333643);
}
void live_H_13(double *state, double *unused, double *out_4858877028864437581) {
  H_13(state, unused, out_4858877028864437581);
}
void live_h_14(double *state, double *unused, double *out_3654107230785286631) {
  h_14(state, unused, out_3654107230785286631);
}
void live_H_14(double *state, double *unused, double *out_3159745443695849967) {
  H_14(state, unused, out_3159745443695849967);
}
void live_h_33(double *state, double *unused, double *out_5565299391088584654) {
  h_33(state, unused, out_5565299391088584654);
}
void live_H_33(double *state, double *unused, double *out_7514641354670392496) {
  H_33(state, unused, out_7514641354670392496);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
