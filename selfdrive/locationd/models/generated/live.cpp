#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1991592219369938753) {
   out_1991592219369938753[0] = 0;
   out_1991592219369938753[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1991592219369938753[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1991592219369938753[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1991592219369938753[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1991592219369938753[5] = -sin(in_vec[1]);
   out_1991592219369938753[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1991592219369938753[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1991592219369938753[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1991592219369938753[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1991592219369938753[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1991592219369938753[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1991592219369938753[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1991592219369938753[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1991592219369938753[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1991592219369938753[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1991592219369938753[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1991592219369938753[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3639961615079265529) {
   out_3639961615079265529[0] = delta_x[0] + nom_x[0];
   out_3639961615079265529[1] = delta_x[1] + nom_x[1];
   out_3639961615079265529[2] = delta_x[2] + nom_x[2];
   out_3639961615079265529[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3639961615079265529[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3639961615079265529[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3639961615079265529[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3639961615079265529[7] = delta_x[6] + nom_x[7];
   out_3639961615079265529[8] = delta_x[7] + nom_x[8];
   out_3639961615079265529[9] = delta_x[8] + nom_x[9];
   out_3639961615079265529[10] = delta_x[9] + nom_x[10];
   out_3639961615079265529[11] = delta_x[10] + nom_x[11];
   out_3639961615079265529[12] = delta_x[11] + nom_x[12];
   out_3639961615079265529[13] = delta_x[12] + nom_x[13];
   out_3639961615079265529[14] = delta_x[13] + nom_x[14];
   out_3639961615079265529[15] = delta_x[14] + nom_x[15];
   out_3639961615079265529[16] = delta_x[15] + nom_x[16];
   out_3639961615079265529[17] = delta_x[16] + nom_x[17];
   out_3639961615079265529[18] = delta_x[17] + nom_x[18];
   out_3639961615079265529[19] = delta_x[18] + nom_x[19];
   out_3639961615079265529[20] = delta_x[19] + nom_x[20];
   out_3639961615079265529[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7023904112673253952) {
   out_7023904112673253952[0] = -nom_x[0] + true_x[0];
   out_7023904112673253952[1] = -nom_x[1] + true_x[1];
   out_7023904112673253952[2] = -nom_x[2] + true_x[2];
   out_7023904112673253952[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7023904112673253952[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7023904112673253952[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7023904112673253952[6] = -nom_x[7] + true_x[7];
   out_7023904112673253952[7] = -nom_x[8] + true_x[8];
   out_7023904112673253952[8] = -nom_x[9] + true_x[9];
   out_7023904112673253952[9] = -nom_x[10] + true_x[10];
   out_7023904112673253952[10] = -nom_x[11] + true_x[11];
   out_7023904112673253952[11] = -nom_x[12] + true_x[12];
   out_7023904112673253952[12] = -nom_x[13] + true_x[13];
   out_7023904112673253952[13] = -nom_x[14] + true_x[14];
   out_7023904112673253952[14] = -nom_x[15] + true_x[15];
   out_7023904112673253952[15] = -nom_x[16] + true_x[16];
   out_7023904112673253952[16] = -nom_x[17] + true_x[17];
   out_7023904112673253952[17] = -nom_x[18] + true_x[18];
   out_7023904112673253952[18] = -nom_x[19] + true_x[19];
   out_7023904112673253952[19] = -nom_x[20] + true_x[20];
   out_7023904112673253952[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1302798251589193323) {
   out_1302798251589193323[0] = 1.0;
   out_1302798251589193323[1] = 0;
   out_1302798251589193323[2] = 0;
   out_1302798251589193323[3] = 0;
   out_1302798251589193323[4] = 0;
   out_1302798251589193323[5] = 0;
   out_1302798251589193323[6] = 0;
   out_1302798251589193323[7] = 0;
   out_1302798251589193323[8] = 0;
   out_1302798251589193323[9] = 0;
   out_1302798251589193323[10] = 0;
   out_1302798251589193323[11] = 0;
   out_1302798251589193323[12] = 0;
   out_1302798251589193323[13] = 0;
   out_1302798251589193323[14] = 0;
   out_1302798251589193323[15] = 0;
   out_1302798251589193323[16] = 0;
   out_1302798251589193323[17] = 0;
   out_1302798251589193323[18] = 0;
   out_1302798251589193323[19] = 0;
   out_1302798251589193323[20] = 0;
   out_1302798251589193323[21] = 0;
   out_1302798251589193323[22] = 1.0;
   out_1302798251589193323[23] = 0;
   out_1302798251589193323[24] = 0;
   out_1302798251589193323[25] = 0;
   out_1302798251589193323[26] = 0;
   out_1302798251589193323[27] = 0;
   out_1302798251589193323[28] = 0;
   out_1302798251589193323[29] = 0;
   out_1302798251589193323[30] = 0;
   out_1302798251589193323[31] = 0;
   out_1302798251589193323[32] = 0;
   out_1302798251589193323[33] = 0;
   out_1302798251589193323[34] = 0;
   out_1302798251589193323[35] = 0;
   out_1302798251589193323[36] = 0;
   out_1302798251589193323[37] = 0;
   out_1302798251589193323[38] = 0;
   out_1302798251589193323[39] = 0;
   out_1302798251589193323[40] = 0;
   out_1302798251589193323[41] = 0;
   out_1302798251589193323[42] = 0;
   out_1302798251589193323[43] = 0;
   out_1302798251589193323[44] = 1.0;
   out_1302798251589193323[45] = 0;
   out_1302798251589193323[46] = 0;
   out_1302798251589193323[47] = 0;
   out_1302798251589193323[48] = 0;
   out_1302798251589193323[49] = 0;
   out_1302798251589193323[50] = 0;
   out_1302798251589193323[51] = 0;
   out_1302798251589193323[52] = 0;
   out_1302798251589193323[53] = 0;
   out_1302798251589193323[54] = 0;
   out_1302798251589193323[55] = 0;
   out_1302798251589193323[56] = 0;
   out_1302798251589193323[57] = 0;
   out_1302798251589193323[58] = 0;
   out_1302798251589193323[59] = 0;
   out_1302798251589193323[60] = 0;
   out_1302798251589193323[61] = 0;
   out_1302798251589193323[62] = 0;
   out_1302798251589193323[63] = 0;
   out_1302798251589193323[64] = 0;
   out_1302798251589193323[65] = 0;
   out_1302798251589193323[66] = -0.5*state[4];
   out_1302798251589193323[67] = -0.5*state[5];
   out_1302798251589193323[68] = -0.5*state[6];
   out_1302798251589193323[69] = 0;
   out_1302798251589193323[70] = 0;
   out_1302798251589193323[71] = 0;
   out_1302798251589193323[72] = 0;
   out_1302798251589193323[73] = 0;
   out_1302798251589193323[74] = 0;
   out_1302798251589193323[75] = 0;
   out_1302798251589193323[76] = 0;
   out_1302798251589193323[77] = 0;
   out_1302798251589193323[78] = 0;
   out_1302798251589193323[79] = 0;
   out_1302798251589193323[80] = 0;
   out_1302798251589193323[81] = 0;
   out_1302798251589193323[82] = 0;
   out_1302798251589193323[83] = 0;
   out_1302798251589193323[84] = 0;
   out_1302798251589193323[85] = 0;
   out_1302798251589193323[86] = 0;
   out_1302798251589193323[87] = 0.5*state[3];
   out_1302798251589193323[88] = 0.5*state[6];
   out_1302798251589193323[89] = -0.5*state[5];
   out_1302798251589193323[90] = 0;
   out_1302798251589193323[91] = 0;
   out_1302798251589193323[92] = 0;
   out_1302798251589193323[93] = 0;
   out_1302798251589193323[94] = 0;
   out_1302798251589193323[95] = 0;
   out_1302798251589193323[96] = 0;
   out_1302798251589193323[97] = 0;
   out_1302798251589193323[98] = 0;
   out_1302798251589193323[99] = 0;
   out_1302798251589193323[100] = 0;
   out_1302798251589193323[101] = 0;
   out_1302798251589193323[102] = 0;
   out_1302798251589193323[103] = 0;
   out_1302798251589193323[104] = 0;
   out_1302798251589193323[105] = 0;
   out_1302798251589193323[106] = 0;
   out_1302798251589193323[107] = 0;
   out_1302798251589193323[108] = -0.5*state[6];
   out_1302798251589193323[109] = 0.5*state[3];
   out_1302798251589193323[110] = 0.5*state[4];
   out_1302798251589193323[111] = 0;
   out_1302798251589193323[112] = 0;
   out_1302798251589193323[113] = 0;
   out_1302798251589193323[114] = 0;
   out_1302798251589193323[115] = 0;
   out_1302798251589193323[116] = 0;
   out_1302798251589193323[117] = 0;
   out_1302798251589193323[118] = 0;
   out_1302798251589193323[119] = 0;
   out_1302798251589193323[120] = 0;
   out_1302798251589193323[121] = 0;
   out_1302798251589193323[122] = 0;
   out_1302798251589193323[123] = 0;
   out_1302798251589193323[124] = 0;
   out_1302798251589193323[125] = 0;
   out_1302798251589193323[126] = 0;
   out_1302798251589193323[127] = 0;
   out_1302798251589193323[128] = 0;
   out_1302798251589193323[129] = 0.5*state[5];
   out_1302798251589193323[130] = -0.5*state[4];
   out_1302798251589193323[131] = 0.5*state[3];
   out_1302798251589193323[132] = 0;
   out_1302798251589193323[133] = 0;
   out_1302798251589193323[134] = 0;
   out_1302798251589193323[135] = 0;
   out_1302798251589193323[136] = 0;
   out_1302798251589193323[137] = 0;
   out_1302798251589193323[138] = 0;
   out_1302798251589193323[139] = 0;
   out_1302798251589193323[140] = 0;
   out_1302798251589193323[141] = 0;
   out_1302798251589193323[142] = 0;
   out_1302798251589193323[143] = 0;
   out_1302798251589193323[144] = 0;
   out_1302798251589193323[145] = 0;
   out_1302798251589193323[146] = 0;
   out_1302798251589193323[147] = 0;
   out_1302798251589193323[148] = 0;
   out_1302798251589193323[149] = 0;
   out_1302798251589193323[150] = 0;
   out_1302798251589193323[151] = 0;
   out_1302798251589193323[152] = 0;
   out_1302798251589193323[153] = 1.0;
   out_1302798251589193323[154] = 0;
   out_1302798251589193323[155] = 0;
   out_1302798251589193323[156] = 0;
   out_1302798251589193323[157] = 0;
   out_1302798251589193323[158] = 0;
   out_1302798251589193323[159] = 0;
   out_1302798251589193323[160] = 0;
   out_1302798251589193323[161] = 0;
   out_1302798251589193323[162] = 0;
   out_1302798251589193323[163] = 0;
   out_1302798251589193323[164] = 0;
   out_1302798251589193323[165] = 0;
   out_1302798251589193323[166] = 0;
   out_1302798251589193323[167] = 0;
   out_1302798251589193323[168] = 0;
   out_1302798251589193323[169] = 0;
   out_1302798251589193323[170] = 0;
   out_1302798251589193323[171] = 0;
   out_1302798251589193323[172] = 0;
   out_1302798251589193323[173] = 0;
   out_1302798251589193323[174] = 0;
   out_1302798251589193323[175] = 1.0;
   out_1302798251589193323[176] = 0;
   out_1302798251589193323[177] = 0;
   out_1302798251589193323[178] = 0;
   out_1302798251589193323[179] = 0;
   out_1302798251589193323[180] = 0;
   out_1302798251589193323[181] = 0;
   out_1302798251589193323[182] = 0;
   out_1302798251589193323[183] = 0;
   out_1302798251589193323[184] = 0;
   out_1302798251589193323[185] = 0;
   out_1302798251589193323[186] = 0;
   out_1302798251589193323[187] = 0;
   out_1302798251589193323[188] = 0;
   out_1302798251589193323[189] = 0;
   out_1302798251589193323[190] = 0;
   out_1302798251589193323[191] = 0;
   out_1302798251589193323[192] = 0;
   out_1302798251589193323[193] = 0;
   out_1302798251589193323[194] = 0;
   out_1302798251589193323[195] = 0;
   out_1302798251589193323[196] = 0;
   out_1302798251589193323[197] = 1.0;
   out_1302798251589193323[198] = 0;
   out_1302798251589193323[199] = 0;
   out_1302798251589193323[200] = 0;
   out_1302798251589193323[201] = 0;
   out_1302798251589193323[202] = 0;
   out_1302798251589193323[203] = 0;
   out_1302798251589193323[204] = 0;
   out_1302798251589193323[205] = 0;
   out_1302798251589193323[206] = 0;
   out_1302798251589193323[207] = 0;
   out_1302798251589193323[208] = 0;
   out_1302798251589193323[209] = 0;
   out_1302798251589193323[210] = 0;
   out_1302798251589193323[211] = 0;
   out_1302798251589193323[212] = 0;
   out_1302798251589193323[213] = 0;
   out_1302798251589193323[214] = 0;
   out_1302798251589193323[215] = 0;
   out_1302798251589193323[216] = 0;
   out_1302798251589193323[217] = 0;
   out_1302798251589193323[218] = 0;
   out_1302798251589193323[219] = 1.0;
   out_1302798251589193323[220] = 0;
   out_1302798251589193323[221] = 0;
   out_1302798251589193323[222] = 0;
   out_1302798251589193323[223] = 0;
   out_1302798251589193323[224] = 0;
   out_1302798251589193323[225] = 0;
   out_1302798251589193323[226] = 0;
   out_1302798251589193323[227] = 0;
   out_1302798251589193323[228] = 0;
   out_1302798251589193323[229] = 0;
   out_1302798251589193323[230] = 0;
   out_1302798251589193323[231] = 0;
   out_1302798251589193323[232] = 0;
   out_1302798251589193323[233] = 0;
   out_1302798251589193323[234] = 0;
   out_1302798251589193323[235] = 0;
   out_1302798251589193323[236] = 0;
   out_1302798251589193323[237] = 0;
   out_1302798251589193323[238] = 0;
   out_1302798251589193323[239] = 0;
   out_1302798251589193323[240] = 0;
   out_1302798251589193323[241] = 1.0;
   out_1302798251589193323[242] = 0;
   out_1302798251589193323[243] = 0;
   out_1302798251589193323[244] = 0;
   out_1302798251589193323[245] = 0;
   out_1302798251589193323[246] = 0;
   out_1302798251589193323[247] = 0;
   out_1302798251589193323[248] = 0;
   out_1302798251589193323[249] = 0;
   out_1302798251589193323[250] = 0;
   out_1302798251589193323[251] = 0;
   out_1302798251589193323[252] = 0;
   out_1302798251589193323[253] = 0;
   out_1302798251589193323[254] = 0;
   out_1302798251589193323[255] = 0;
   out_1302798251589193323[256] = 0;
   out_1302798251589193323[257] = 0;
   out_1302798251589193323[258] = 0;
   out_1302798251589193323[259] = 0;
   out_1302798251589193323[260] = 0;
   out_1302798251589193323[261] = 0;
   out_1302798251589193323[262] = 0;
   out_1302798251589193323[263] = 1.0;
   out_1302798251589193323[264] = 0;
   out_1302798251589193323[265] = 0;
   out_1302798251589193323[266] = 0;
   out_1302798251589193323[267] = 0;
   out_1302798251589193323[268] = 0;
   out_1302798251589193323[269] = 0;
   out_1302798251589193323[270] = 0;
   out_1302798251589193323[271] = 0;
   out_1302798251589193323[272] = 0;
   out_1302798251589193323[273] = 0;
   out_1302798251589193323[274] = 0;
   out_1302798251589193323[275] = 0;
   out_1302798251589193323[276] = 0;
   out_1302798251589193323[277] = 0;
   out_1302798251589193323[278] = 0;
   out_1302798251589193323[279] = 0;
   out_1302798251589193323[280] = 0;
   out_1302798251589193323[281] = 0;
   out_1302798251589193323[282] = 0;
   out_1302798251589193323[283] = 0;
   out_1302798251589193323[284] = 0;
   out_1302798251589193323[285] = 1.0;
   out_1302798251589193323[286] = 0;
   out_1302798251589193323[287] = 0;
   out_1302798251589193323[288] = 0;
   out_1302798251589193323[289] = 0;
   out_1302798251589193323[290] = 0;
   out_1302798251589193323[291] = 0;
   out_1302798251589193323[292] = 0;
   out_1302798251589193323[293] = 0;
   out_1302798251589193323[294] = 0;
   out_1302798251589193323[295] = 0;
   out_1302798251589193323[296] = 0;
   out_1302798251589193323[297] = 0;
   out_1302798251589193323[298] = 0;
   out_1302798251589193323[299] = 0;
   out_1302798251589193323[300] = 0;
   out_1302798251589193323[301] = 0;
   out_1302798251589193323[302] = 0;
   out_1302798251589193323[303] = 0;
   out_1302798251589193323[304] = 0;
   out_1302798251589193323[305] = 0;
   out_1302798251589193323[306] = 0;
   out_1302798251589193323[307] = 1.0;
   out_1302798251589193323[308] = 0;
   out_1302798251589193323[309] = 0;
   out_1302798251589193323[310] = 0;
   out_1302798251589193323[311] = 0;
   out_1302798251589193323[312] = 0;
   out_1302798251589193323[313] = 0;
   out_1302798251589193323[314] = 0;
   out_1302798251589193323[315] = 0;
   out_1302798251589193323[316] = 0;
   out_1302798251589193323[317] = 0;
   out_1302798251589193323[318] = 0;
   out_1302798251589193323[319] = 0;
   out_1302798251589193323[320] = 0;
   out_1302798251589193323[321] = 0;
   out_1302798251589193323[322] = 0;
   out_1302798251589193323[323] = 0;
   out_1302798251589193323[324] = 0;
   out_1302798251589193323[325] = 0;
   out_1302798251589193323[326] = 0;
   out_1302798251589193323[327] = 0;
   out_1302798251589193323[328] = 0;
   out_1302798251589193323[329] = 1.0;
   out_1302798251589193323[330] = 0;
   out_1302798251589193323[331] = 0;
   out_1302798251589193323[332] = 0;
   out_1302798251589193323[333] = 0;
   out_1302798251589193323[334] = 0;
   out_1302798251589193323[335] = 0;
   out_1302798251589193323[336] = 0;
   out_1302798251589193323[337] = 0;
   out_1302798251589193323[338] = 0;
   out_1302798251589193323[339] = 0;
   out_1302798251589193323[340] = 0;
   out_1302798251589193323[341] = 0;
   out_1302798251589193323[342] = 0;
   out_1302798251589193323[343] = 0;
   out_1302798251589193323[344] = 0;
   out_1302798251589193323[345] = 0;
   out_1302798251589193323[346] = 0;
   out_1302798251589193323[347] = 0;
   out_1302798251589193323[348] = 0;
   out_1302798251589193323[349] = 0;
   out_1302798251589193323[350] = 0;
   out_1302798251589193323[351] = 1.0;
   out_1302798251589193323[352] = 0;
   out_1302798251589193323[353] = 0;
   out_1302798251589193323[354] = 0;
   out_1302798251589193323[355] = 0;
   out_1302798251589193323[356] = 0;
   out_1302798251589193323[357] = 0;
   out_1302798251589193323[358] = 0;
   out_1302798251589193323[359] = 0;
   out_1302798251589193323[360] = 0;
   out_1302798251589193323[361] = 0;
   out_1302798251589193323[362] = 0;
   out_1302798251589193323[363] = 0;
   out_1302798251589193323[364] = 0;
   out_1302798251589193323[365] = 0;
   out_1302798251589193323[366] = 0;
   out_1302798251589193323[367] = 0;
   out_1302798251589193323[368] = 0;
   out_1302798251589193323[369] = 0;
   out_1302798251589193323[370] = 0;
   out_1302798251589193323[371] = 0;
   out_1302798251589193323[372] = 0;
   out_1302798251589193323[373] = 1.0;
   out_1302798251589193323[374] = 0;
   out_1302798251589193323[375] = 0;
   out_1302798251589193323[376] = 0;
   out_1302798251589193323[377] = 0;
   out_1302798251589193323[378] = 0;
   out_1302798251589193323[379] = 0;
   out_1302798251589193323[380] = 0;
   out_1302798251589193323[381] = 0;
   out_1302798251589193323[382] = 0;
   out_1302798251589193323[383] = 0;
   out_1302798251589193323[384] = 0;
   out_1302798251589193323[385] = 0;
   out_1302798251589193323[386] = 0;
   out_1302798251589193323[387] = 0;
   out_1302798251589193323[388] = 0;
   out_1302798251589193323[389] = 0;
   out_1302798251589193323[390] = 0;
   out_1302798251589193323[391] = 0;
   out_1302798251589193323[392] = 0;
   out_1302798251589193323[393] = 0;
   out_1302798251589193323[394] = 0;
   out_1302798251589193323[395] = 1.0;
   out_1302798251589193323[396] = 0;
   out_1302798251589193323[397] = 0;
   out_1302798251589193323[398] = 0;
   out_1302798251589193323[399] = 0;
   out_1302798251589193323[400] = 0;
   out_1302798251589193323[401] = 0;
   out_1302798251589193323[402] = 0;
   out_1302798251589193323[403] = 0;
   out_1302798251589193323[404] = 0;
   out_1302798251589193323[405] = 0;
   out_1302798251589193323[406] = 0;
   out_1302798251589193323[407] = 0;
   out_1302798251589193323[408] = 0;
   out_1302798251589193323[409] = 0;
   out_1302798251589193323[410] = 0;
   out_1302798251589193323[411] = 0;
   out_1302798251589193323[412] = 0;
   out_1302798251589193323[413] = 0;
   out_1302798251589193323[414] = 0;
   out_1302798251589193323[415] = 0;
   out_1302798251589193323[416] = 0;
   out_1302798251589193323[417] = 1.0;
   out_1302798251589193323[418] = 0;
   out_1302798251589193323[419] = 0;
   out_1302798251589193323[420] = 0;
   out_1302798251589193323[421] = 0;
   out_1302798251589193323[422] = 0;
   out_1302798251589193323[423] = 0;
   out_1302798251589193323[424] = 0;
   out_1302798251589193323[425] = 0;
   out_1302798251589193323[426] = 0;
   out_1302798251589193323[427] = 0;
   out_1302798251589193323[428] = 0;
   out_1302798251589193323[429] = 0;
   out_1302798251589193323[430] = 0;
   out_1302798251589193323[431] = 0;
   out_1302798251589193323[432] = 0;
   out_1302798251589193323[433] = 0;
   out_1302798251589193323[434] = 0;
   out_1302798251589193323[435] = 0;
   out_1302798251589193323[436] = 0;
   out_1302798251589193323[437] = 0;
   out_1302798251589193323[438] = 0;
   out_1302798251589193323[439] = 1.0;
   out_1302798251589193323[440] = 0;
   out_1302798251589193323[441] = 0;
   out_1302798251589193323[442] = 0;
   out_1302798251589193323[443] = 0;
   out_1302798251589193323[444] = 0;
   out_1302798251589193323[445] = 0;
   out_1302798251589193323[446] = 0;
   out_1302798251589193323[447] = 0;
   out_1302798251589193323[448] = 0;
   out_1302798251589193323[449] = 0;
   out_1302798251589193323[450] = 0;
   out_1302798251589193323[451] = 0;
   out_1302798251589193323[452] = 0;
   out_1302798251589193323[453] = 0;
   out_1302798251589193323[454] = 0;
   out_1302798251589193323[455] = 0;
   out_1302798251589193323[456] = 0;
   out_1302798251589193323[457] = 0;
   out_1302798251589193323[458] = 0;
   out_1302798251589193323[459] = 0;
   out_1302798251589193323[460] = 0;
   out_1302798251589193323[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2931219080927465885) {
   out_2931219080927465885[0] = dt*state[7] + state[0];
   out_2931219080927465885[1] = dt*state[8] + state[1];
   out_2931219080927465885[2] = dt*state[9] + state[2];
   out_2931219080927465885[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2931219080927465885[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2931219080927465885[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2931219080927465885[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2931219080927465885[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2931219080927465885[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2931219080927465885[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2931219080927465885[10] = state[10];
   out_2931219080927465885[11] = state[11];
   out_2931219080927465885[12] = state[12];
   out_2931219080927465885[13] = state[13];
   out_2931219080927465885[14] = state[14];
   out_2931219080927465885[15] = state[15];
   out_2931219080927465885[16] = state[16];
   out_2931219080927465885[17] = state[17];
   out_2931219080927465885[18] = state[18];
   out_2931219080927465885[19] = state[19];
   out_2931219080927465885[20] = state[20];
   out_2931219080927465885[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6249431750817435550) {
   out_6249431750817435550[0] = 1;
   out_6249431750817435550[1] = 0;
   out_6249431750817435550[2] = 0;
   out_6249431750817435550[3] = 0;
   out_6249431750817435550[4] = 0;
   out_6249431750817435550[5] = 0;
   out_6249431750817435550[6] = dt;
   out_6249431750817435550[7] = 0;
   out_6249431750817435550[8] = 0;
   out_6249431750817435550[9] = 0;
   out_6249431750817435550[10] = 0;
   out_6249431750817435550[11] = 0;
   out_6249431750817435550[12] = 0;
   out_6249431750817435550[13] = 0;
   out_6249431750817435550[14] = 0;
   out_6249431750817435550[15] = 0;
   out_6249431750817435550[16] = 0;
   out_6249431750817435550[17] = 0;
   out_6249431750817435550[18] = 0;
   out_6249431750817435550[19] = 0;
   out_6249431750817435550[20] = 0;
   out_6249431750817435550[21] = 0;
   out_6249431750817435550[22] = 1;
   out_6249431750817435550[23] = 0;
   out_6249431750817435550[24] = 0;
   out_6249431750817435550[25] = 0;
   out_6249431750817435550[26] = 0;
   out_6249431750817435550[27] = 0;
   out_6249431750817435550[28] = dt;
   out_6249431750817435550[29] = 0;
   out_6249431750817435550[30] = 0;
   out_6249431750817435550[31] = 0;
   out_6249431750817435550[32] = 0;
   out_6249431750817435550[33] = 0;
   out_6249431750817435550[34] = 0;
   out_6249431750817435550[35] = 0;
   out_6249431750817435550[36] = 0;
   out_6249431750817435550[37] = 0;
   out_6249431750817435550[38] = 0;
   out_6249431750817435550[39] = 0;
   out_6249431750817435550[40] = 0;
   out_6249431750817435550[41] = 0;
   out_6249431750817435550[42] = 0;
   out_6249431750817435550[43] = 0;
   out_6249431750817435550[44] = 1;
   out_6249431750817435550[45] = 0;
   out_6249431750817435550[46] = 0;
   out_6249431750817435550[47] = 0;
   out_6249431750817435550[48] = 0;
   out_6249431750817435550[49] = 0;
   out_6249431750817435550[50] = dt;
   out_6249431750817435550[51] = 0;
   out_6249431750817435550[52] = 0;
   out_6249431750817435550[53] = 0;
   out_6249431750817435550[54] = 0;
   out_6249431750817435550[55] = 0;
   out_6249431750817435550[56] = 0;
   out_6249431750817435550[57] = 0;
   out_6249431750817435550[58] = 0;
   out_6249431750817435550[59] = 0;
   out_6249431750817435550[60] = 0;
   out_6249431750817435550[61] = 0;
   out_6249431750817435550[62] = 0;
   out_6249431750817435550[63] = 0;
   out_6249431750817435550[64] = 0;
   out_6249431750817435550[65] = 0;
   out_6249431750817435550[66] = 1;
   out_6249431750817435550[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6249431750817435550[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6249431750817435550[69] = 0;
   out_6249431750817435550[70] = 0;
   out_6249431750817435550[71] = 0;
   out_6249431750817435550[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6249431750817435550[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6249431750817435550[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6249431750817435550[75] = 0;
   out_6249431750817435550[76] = 0;
   out_6249431750817435550[77] = 0;
   out_6249431750817435550[78] = 0;
   out_6249431750817435550[79] = 0;
   out_6249431750817435550[80] = 0;
   out_6249431750817435550[81] = 0;
   out_6249431750817435550[82] = 0;
   out_6249431750817435550[83] = 0;
   out_6249431750817435550[84] = 0;
   out_6249431750817435550[85] = 0;
   out_6249431750817435550[86] = 0;
   out_6249431750817435550[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6249431750817435550[88] = 1;
   out_6249431750817435550[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6249431750817435550[90] = 0;
   out_6249431750817435550[91] = 0;
   out_6249431750817435550[92] = 0;
   out_6249431750817435550[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6249431750817435550[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6249431750817435550[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6249431750817435550[96] = 0;
   out_6249431750817435550[97] = 0;
   out_6249431750817435550[98] = 0;
   out_6249431750817435550[99] = 0;
   out_6249431750817435550[100] = 0;
   out_6249431750817435550[101] = 0;
   out_6249431750817435550[102] = 0;
   out_6249431750817435550[103] = 0;
   out_6249431750817435550[104] = 0;
   out_6249431750817435550[105] = 0;
   out_6249431750817435550[106] = 0;
   out_6249431750817435550[107] = 0;
   out_6249431750817435550[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6249431750817435550[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6249431750817435550[110] = 1;
   out_6249431750817435550[111] = 0;
   out_6249431750817435550[112] = 0;
   out_6249431750817435550[113] = 0;
   out_6249431750817435550[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6249431750817435550[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6249431750817435550[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6249431750817435550[117] = 0;
   out_6249431750817435550[118] = 0;
   out_6249431750817435550[119] = 0;
   out_6249431750817435550[120] = 0;
   out_6249431750817435550[121] = 0;
   out_6249431750817435550[122] = 0;
   out_6249431750817435550[123] = 0;
   out_6249431750817435550[124] = 0;
   out_6249431750817435550[125] = 0;
   out_6249431750817435550[126] = 0;
   out_6249431750817435550[127] = 0;
   out_6249431750817435550[128] = 0;
   out_6249431750817435550[129] = 0;
   out_6249431750817435550[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6249431750817435550[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6249431750817435550[132] = 1;
   out_6249431750817435550[133] = 0;
   out_6249431750817435550[134] = 0;
   out_6249431750817435550[135] = 0;
   out_6249431750817435550[136] = 0;
   out_6249431750817435550[137] = 0;
   out_6249431750817435550[138] = 0;
   out_6249431750817435550[139] = 0;
   out_6249431750817435550[140] = 0;
   out_6249431750817435550[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6249431750817435550[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6249431750817435550[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6249431750817435550[144] = 0;
   out_6249431750817435550[145] = 0;
   out_6249431750817435550[146] = 0;
   out_6249431750817435550[147] = 0;
   out_6249431750817435550[148] = 0;
   out_6249431750817435550[149] = 0;
   out_6249431750817435550[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6249431750817435550[151] = 0;
   out_6249431750817435550[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6249431750817435550[153] = 0;
   out_6249431750817435550[154] = 1;
   out_6249431750817435550[155] = 0;
   out_6249431750817435550[156] = 0;
   out_6249431750817435550[157] = 0;
   out_6249431750817435550[158] = 0;
   out_6249431750817435550[159] = 0;
   out_6249431750817435550[160] = 0;
   out_6249431750817435550[161] = 0;
   out_6249431750817435550[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6249431750817435550[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6249431750817435550[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6249431750817435550[165] = 0;
   out_6249431750817435550[166] = 0;
   out_6249431750817435550[167] = 0;
   out_6249431750817435550[168] = 0;
   out_6249431750817435550[169] = 0;
   out_6249431750817435550[170] = 0;
   out_6249431750817435550[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6249431750817435550[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6249431750817435550[173] = 0;
   out_6249431750817435550[174] = 0;
   out_6249431750817435550[175] = 0;
   out_6249431750817435550[176] = 1;
   out_6249431750817435550[177] = 0;
   out_6249431750817435550[178] = 0;
   out_6249431750817435550[179] = 0;
   out_6249431750817435550[180] = 0;
   out_6249431750817435550[181] = 0;
   out_6249431750817435550[182] = 0;
   out_6249431750817435550[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6249431750817435550[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6249431750817435550[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6249431750817435550[186] = 0;
   out_6249431750817435550[187] = 0;
   out_6249431750817435550[188] = 0;
   out_6249431750817435550[189] = 0;
   out_6249431750817435550[190] = 0;
   out_6249431750817435550[191] = 0;
   out_6249431750817435550[192] = 0;
   out_6249431750817435550[193] = 0;
   out_6249431750817435550[194] = 0;
   out_6249431750817435550[195] = 0;
   out_6249431750817435550[196] = 0;
   out_6249431750817435550[197] = 0;
   out_6249431750817435550[198] = 1;
   out_6249431750817435550[199] = 0;
   out_6249431750817435550[200] = 0;
   out_6249431750817435550[201] = 0;
   out_6249431750817435550[202] = 0;
   out_6249431750817435550[203] = 0;
   out_6249431750817435550[204] = 0;
   out_6249431750817435550[205] = 0;
   out_6249431750817435550[206] = 0;
   out_6249431750817435550[207] = 0;
   out_6249431750817435550[208] = 0;
   out_6249431750817435550[209] = 0;
   out_6249431750817435550[210] = 0;
   out_6249431750817435550[211] = 0;
   out_6249431750817435550[212] = 0;
   out_6249431750817435550[213] = 0;
   out_6249431750817435550[214] = 0;
   out_6249431750817435550[215] = 0;
   out_6249431750817435550[216] = 0;
   out_6249431750817435550[217] = 0;
   out_6249431750817435550[218] = 0;
   out_6249431750817435550[219] = 0;
   out_6249431750817435550[220] = 1;
   out_6249431750817435550[221] = 0;
   out_6249431750817435550[222] = 0;
   out_6249431750817435550[223] = 0;
   out_6249431750817435550[224] = 0;
   out_6249431750817435550[225] = 0;
   out_6249431750817435550[226] = 0;
   out_6249431750817435550[227] = 0;
   out_6249431750817435550[228] = 0;
   out_6249431750817435550[229] = 0;
   out_6249431750817435550[230] = 0;
   out_6249431750817435550[231] = 0;
   out_6249431750817435550[232] = 0;
   out_6249431750817435550[233] = 0;
   out_6249431750817435550[234] = 0;
   out_6249431750817435550[235] = 0;
   out_6249431750817435550[236] = 0;
   out_6249431750817435550[237] = 0;
   out_6249431750817435550[238] = 0;
   out_6249431750817435550[239] = 0;
   out_6249431750817435550[240] = 0;
   out_6249431750817435550[241] = 0;
   out_6249431750817435550[242] = 1;
   out_6249431750817435550[243] = 0;
   out_6249431750817435550[244] = 0;
   out_6249431750817435550[245] = 0;
   out_6249431750817435550[246] = 0;
   out_6249431750817435550[247] = 0;
   out_6249431750817435550[248] = 0;
   out_6249431750817435550[249] = 0;
   out_6249431750817435550[250] = 0;
   out_6249431750817435550[251] = 0;
   out_6249431750817435550[252] = 0;
   out_6249431750817435550[253] = 0;
   out_6249431750817435550[254] = 0;
   out_6249431750817435550[255] = 0;
   out_6249431750817435550[256] = 0;
   out_6249431750817435550[257] = 0;
   out_6249431750817435550[258] = 0;
   out_6249431750817435550[259] = 0;
   out_6249431750817435550[260] = 0;
   out_6249431750817435550[261] = 0;
   out_6249431750817435550[262] = 0;
   out_6249431750817435550[263] = 0;
   out_6249431750817435550[264] = 1;
   out_6249431750817435550[265] = 0;
   out_6249431750817435550[266] = 0;
   out_6249431750817435550[267] = 0;
   out_6249431750817435550[268] = 0;
   out_6249431750817435550[269] = 0;
   out_6249431750817435550[270] = 0;
   out_6249431750817435550[271] = 0;
   out_6249431750817435550[272] = 0;
   out_6249431750817435550[273] = 0;
   out_6249431750817435550[274] = 0;
   out_6249431750817435550[275] = 0;
   out_6249431750817435550[276] = 0;
   out_6249431750817435550[277] = 0;
   out_6249431750817435550[278] = 0;
   out_6249431750817435550[279] = 0;
   out_6249431750817435550[280] = 0;
   out_6249431750817435550[281] = 0;
   out_6249431750817435550[282] = 0;
   out_6249431750817435550[283] = 0;
   out_6249431750817435550[284] = 0;
   out_6249431750817435550[285] = 0;
   out_6249431750817435550[286] = 1;
   out_6249431750817435550[287] = 0;
   out_6249431750817435550[288] = 0;
   out_6249431750817435550[289] = 0;
   out_6249431750817435550[290] = 0;
   out_6249431750817435550[291] = 0;
   out_6249431750817435550[292] = 0;
   out_6249431750817435550[293] = 0;
   out_6249431750817435550[294] = 0;
   out_6249431750817435550[295] = 0;
   out_6249431750817435550[296] = 0;
   out_6249431750817435550[297] = 0;
   out_6249431750817435550[298] = 0;
   out_6249431750817435550[299] = 0;
   out_6249431750817435550[300] = 0;
   out_6249431750817435550[301] = 0;
   out_6249431750817435550[302] = 0;
   out_6249431750817435550[303] = 0;
   out_6249431750817435550[304] = 0;
   out_6249431750817435550[305] = 0;
   out_6249431750817435550[306] = 0;
   out_6249431750817435550[307] = 0;
   out_6249431750817435550[308] = 1;
   out_6249431750817435550[309] = 0;
   out_6249431750817435550[310] = 0;
   out_6249431750817435550[311] = 0;
   out_6249431750817435550[312] = 0;
   out_6249431750817435550[313] = 0;
   out_6249431750817435550[314] = 0;
   out_6249431750817435550[315] = 0;
   out_6249431750817435550[316] = 0;
   out_6249431750817435550[317] = 0;
   out_6249431750817435550[318] = 0;
   out_6249431750817435550[319] = 0;
   out_6249431750817435550[320] = 0;
   out_6249431750817435550[321] = 0;
   out_6249431750817435550[322] = 0;
   out_6249431750817435550[323] = 0;
   out_6249431750817435550[324] = 0;
   out_6249431750817435550[325] = 0;
   out_6249431750817435550[326] = 0;
   out_6249431750817435550[327] = 0;
   out_6249431750817435550[328] = 0;
   out_6249431750817435550[329] = 0;
   out_6249431750817435550[330] = 1;
   out_6249431750817435550[331] = 0;
   out_6249431750817435550[332] = 0;
   out_6249431750817435550[333] = 0;
   out_6249431750817435550[334] = 0;
   out_6249431750817435550[335] = 0;
   out_6249431750817435550[336] = 0;
   out_6249431750817435550[337] = 0;
   out_6249431750817435550[338] = 0;
   out_6249431750817435550[339] = 0;
   out_6249431750817435550[340] = 0;
   out_6249431750817435550[341] = 0;
   out_6249431750817435550[342] = 0;
   out_6249431750817435550[343] = 0;
   out_6249431750817435550[344] = 0;
   out_6249431750817435550[345] = 0;
   out_6249431750817435550[346] = 0;
   out_6249431750817435550[347] = 0;
   out_6249431750817435550[348] = 0;
   out_6249431750817435550[349] = 0;
   out_6249431750817435550[350] = 0;
   out_6249431750817435550[351] = 0;
   out_6249431750817435550[352] = 1;
   out_6249431750817435550[353] = 0;
   out_6249431750817435550[354] = 0;
   out_6249431750817435550[355] = 0;
   out_6249431750817435550[356] = 0;
   out_6249431750817435550[357] = 0;
   out_6249431750817435550[358] = 0;
   out_6249431750817435550[359] = 0;
   out_6249431750817435550[360] = 0;
   out_6249431750817435550[361] = 0;
   out_6249431750817435550[362] = 0;
   out_6249431750817435550[363] = 0;
   out_6249431750817435550[364] = 0;
   out_6249431750817435550[365] = 0;
   out_6249431750817435550[366] = 0;
   out_6249431750817435550[367] = 0;
   out_6249431750817435550[368] = 0;
   out_6249431750817435550[369] = 0;
   out_6249431750817435550[370] = 0;
   out_6249431750817435550[371] = 0;
   out_6249431750817435550[372] = 0;
   out_6249431750817435550[373] = 0;
   out_6249431750817435550[374] = 1;
   out_6249431750817435550[375] = 0;
   out_6249431750817435550[376] = 0;
   out_6249431750817435550[377] = 0;
   out_6249431750817435550[378] = 0;
   out_6249431750817435550[379] = 0;
   out_6249431750817435550[380] = 0;
   out_6249431750817435550[381] = 0;
   out_6249431750817435550[382] = 0;
   out_6249431750817435550[383] = 0;
   out_6249431750817435550[384] = 0;
   out_6249431750817435550[385] = 0;
   out_6249431750817435550[386] = 0;
   out_6249431750817435550[387] = 0;
   out_6249431750817435550[388] = 0;
   out_6249431750817435550[389] = 0;
   out_6249431750817435550[390] = 0;
   out_6249431750817435550[391] = 0;
   out_6249431750817435550[392] = 0;
   out_6249431750817435550[393] = 0;
   out_6249431750817435550[394] = 0;
   out_6249431750817435550[395] = 0;
   out_6249431750817435550[396] = 1;
   out_6249431750817435550[397] = 0;
   out_6249431750817435550[398] = 0;
   out_6249431750817435550[399] = 0;
   out_6249431750817435550[400] = 0;
   out_6249431750817435550[401] = 0;
   out_6249431750817435550[402] = 0;
   out_6249431750817435550[403] = 0;
   out_6249431750817435550[404] = 0;
   out_6249431750817435550[405] = 0;
   out_6249431750817435550[406] = 0;
   out_6249431750817435550[407] = 0;
   out_6249431750817435550[408] = 0;
   out_6249431750817435550[409] = 0;
   out_6249431750817435550[410] = 0;
   out_6249431750817435550[411] = 0;
   out_6249431750817435550[412] = 0;
   out_6249431750817435550[413] = 0;
   out_6249431750817435550[414] = 0;
   out_6249431750817435550[415] = 0;
   out_6249431750817435550[416] = 0;
   out_6249431750817435550[417] = 0;
   out_6249431750817435550[418] = 1;
   out_6249431750817435550[419] = 0;
   out_6249431750817435550[420] = 0;
   out_6249431750817435550[421] = 0;
   out_6249431750817435550[422] = 0;
   out_6249431750817435550[423] = 0;
   out_6249431750817435550[424] = 0;
   out_6249431750817435550[425] = 0;
   out_6249431750817435550[426] = 0;
   out_6249431750817435550[427] = 0;
   out_6249431750817435550[428] = 0;
   out_6249431750817435550[429] = 0;
   out_6249431750817435550[430] = 0;
   out_6249431750817435550[431] = 0;
   out_6249431750817435550[432] = 0;
   out_6249431750817435550[433] = 0;
   out_6249431750817435550[434] = 0;
   out_6249431750817435550[435] = 0;
   out_6249431750817435550[436] = 0;
   out_6249431750817435550[437] = 0;
   out_6249431750817435550[438] = 0;
   out_6249431750817435550[439] = 0;
   out_6249431750817435550[440] = 1;
}
void h_4(double *state, double *unused, double *out_2859119737322213304) {
   out_2859119737322213304[0] = state[10] + state[13];
   out_2859119737322213304[1] = state[11] + state[14];
   out_2859119737322213304[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_375906027977205483) {
   out_375906027977205483[0] = 0;
   out_375906027977205483[1] = 0;
   out_375906027977205483[2] = 0;
   out_375906027977205483[3] = 0;
   out_375906027977205483[4] = 0;
   out_375906027977205483[5] = 0;
   out_375906027977205483[6] = 0;
   out_375906027977205483[7] = 0;
   out_375906027977205483[8] = 0;
   out_375906027977205483[9] = 0;
   out_375906027977205483[10] = 1;
   out_375906027977205483[11] = 0;
   out_375906027977205483[12] = 0;
   out_375906027977205483[13] = 1;
   out_375906027977205483[14] = 0;
   out_375906027977205483[15] = 0;
   out_375906027977205483[16] = 0;
   out_375906027977205483[17] = 0;
   out_375906027977205483[18] = 0;
   out_375906027977205483[19] = 0;
   out_375906027977205483[20] = 0;
   out_375906027977205483[21] = 0;
   out_375906027977205483[22] = 0;
   out_375906027977205483[23] = 0;
   out_375906027977205483[24] = 0;
   out_375906027977205483[25] = 0;
   out_375906027977205483[26] = 0;
   out_375906027977205483[27] = 0;
   out_375906027977205483[28] = 0;
   out_375906027977205483[29] = 0;
   out_375906027977205483[30] = 0;
   out_375906027977205483[31] = 0;
   out_375906027977205483[32] = 0;
   out_375906027977205483[33] = 1;
   out_375906027977205483[34] = 0;
   out_375906027977205483[35] = 0;
   out_375906027977205483[36] = 1;
   out_375906027977205483[37] = 0;
   out_375906027977205483[38] = 0;
   out_375906027977205483[39] = 0;
   out_375906027977205483[40] = 0;
   out_375906027977205483[41] = 0;
   out_375906027977205483[42] = 0;
   out_375906027977205483[43] = 0;
   out_375906027977205483[44] = 0;
   out_375906027977205483[45] = 0;
   out_375906027977205483[46] = 0;
   out_375906027977205483[47] = 0;
   out_375906027977205483[48] = 0;
   out_375906027977205483[49] = 0;
   out_375906027977205483[50] = 0;
   out_375906027977205483[51] = 0;
   out_375906027977205483[52] = 0;
   out_375906027977205483[53] = 0;
   out_375906027977205483[54] = 0;
   out_375906027977205483[55] = 0;
   out_375906027977205483[56] = 1;
   out_375906027977205483[57] = 0;
   out_375906027977205483[58] = 0;
   out_375906027977205483[59] = 1;
   out_375906027977205483[60] = 0;
   out_375906027977205483[61] = 0;
   out_375906027977205483[62] = 0;
   out_375906027977205483[63] = 0;
   out_375906027977205483[64] = 0;
   out_375906027977205483[65] = 0;
}
void h_9(double *state, double *unused, double *out_5580534141958831212) {
   out_5580534141958831212[0] = state[10];
   out_5580534141958831212[1] = state[11];
   out_5580534141958831212[2] = state[12];
}
void H_9(double *state, double *unused, double *out_617095674606796128) {
   out_617095674606796128[0] = 0;
   out_617095674606796128[1] = 0;
   out_617095674606796128[2] = 0;
   out_617095674606796128[3] = 0;
   out_617095674606796128[4] = 0;
   out_617095674606796128[5] = 0;
   out_617095674606796128[6] = 0;
   out_617095674606796128[7] = 0;
   out_617095674606796128[8] = 0;
   out_617095674606796128[9] = 0;
   out_617095674606796128[10] = 1;
   out_617095674606796128[11] = 0;
   out_617095674606796128[12] = 0;
   out_617095674606796128[13] = 0;
   out_617095674606796128[14] = 0;
   out_617095674606796128[15] = 0;
   out_617095674606796128[16] = 0;
   out_617095674606796128[17] = 0;
   out_617095674606796128[18] = 0;
   out_617095674606796128[19] = 0;
   out_617095674606796128[20] = 0;
   out_617095674606796128[21] = 0;
   out_617095674606796128[22] = 0;
   out_617095674606796128[23] = 0;
   out_617095674606796128[24] = 0;
   out_617095674606796128[25] = 0;
   out_617095674606796128[26] = 0;
   out_617095674606796128[27] = 0;
   out_617095674606796128[28] = 0;
   out_617095674606796128[29] = 0;
   out_617095674606796128[30] = 0;
   out_617095674606796128[31] = 0;
   out_617095674606796128[32] = 0;
   out_617095674606796128[33] = 1;
   out_617095674606796128[34] = 0;
   out_617095674606796128[35] = 0;
   out_617095674606796128[36] = 0;
   out_617095674606796128[37] = 0;
   out_617095674606796128[38] = 0;
   out_617095674606796128[39] = 0;
   out_617095674606796128[40] = 0;
   out_617095674606796128[41] = 0;
   out_617095674606796128[42] = 0;
   out_617095674606796128[43] = 0;
   out_617095674606796128[44] = 0;
   out_617095674606796128[45] = 0;
   out_617095674606796128[46] = 0;
   out_617095674606796128[47] = 0;
   out_617095674606796128[48] = 0;
   out_617095674606796128[49] = 0;
   out_617095674606796128[50] = 0;
   out_617095674606796128[51] = 0;
   out_617095674606796128[52] = 0;
   out_617095674606796128[53] = 0;
   out_617095674606796128[54] = 0;
   out_617095674606796128[55] = 0;
   out_617095674606796128[56] = 1;
   out_617095674606796128[57] = 0;
   out_617095674606796128[58] = 0;
   out_617095674606796128[59] = 0;
   out_617095674606796128[60] = 0;
   out_617095674606796128[61] = 0;
   out_617095674606796128[62] = 0;
   out_617095674606796128[63] = 0;
   out_617095674606796128[64] = 0;
   out_617095674606796128[65] = 0;
}
void h_10(double *state, double *unused, double *out_2575181299569282501) {
   out_2575181299569282501[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2575181299569282501[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2575181299569282501[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7454213660328130964) {
   out_7454213660328130964[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7454213660328130964[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7454213660328130964[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7454213660328130964[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7454213660328130964[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7454213660328130964[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7454213660328130964[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7454213660328130964[7] = 0;
   out_7454213660328130964[8] = 0;
   out_7454213660328130964[9] = 0;
   out_7454213660328130964[10] = 0;
   out_7454213660328130964[11] = 0;
   out_7454213660328130964[12] = 0;
   out_7454213660328130964[13] = 0;
   out_7454213660328130964[14] = 0;
   out_7454213660328130964[15] = 0;
   out_7454213660328130964[16] = 1;
   out_7454213660328130964[17] = 0;
   out_7454213660328130964[18] = 0;
   out_7454213660328130964[19] = 1;
   out_7454213660328130964[20] = 0;
   out_7454213660328130964[21] = 0;
   out_7454213660328130964[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7454213660328130964[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7454213660328130964[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7454213660328130964[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7454213660328130964[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7454213660328130964[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7454213660328130964[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7454213660328130964[29] = 0;
   out_7454213660328130964[30] = 0;
   out_7454213660328130964[31] = 0;
   out_7454213660328130964[32] = 0;
   out_7454213660328130964[33] = 0;
   out_7454213660328130964[34] = 0;
   out_7454213660328130964[35] = 0;
   out_7454213660328130964[36] = 0;
   out_7454213660328130964[37] = 0;
   out_7454213660328130964[38] = 0;
   out_7454213660328130964[39] = 1;
   out_7454213660328130964[40] = 0;
   out_7454213660328130964[41] = 0;
   out_7454213660328130964[42] = 1;
   out_7454213660328130964[43] = 0;
   out_7454213660328130964[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7454213660328130964[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7454213660328130964[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7454213660328130964[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7454213660328130964[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7454213660328130964[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7454213660328130964[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7454213660328130964[51] = 0;
   out_7454213660328130964[52] = 0;
   out_7454213660328130964[53] = 0;
   out_7454213660328130964[54] = 0;
   out_7454213660328130964[55] = 0;
   out_7454213660328130964[56] = 0;
   out_7454213660328130964[57] = 0;
   out_7454213660328130964[58] = 0;
   out_7454213660328130964[59] = 0;
   out_7454213660328130964[60] = 0;
   out_7454213660328130964[61] = 0;
   out_7454213660328130964[62] = 1;
   out_7454213660328130964[63] = 0;
   out_7454213660328130964[64] = 0;
   out_7454213660328130964[65] = 1;
}
void h_12(double *state, double *unused, double *out_7930170621330713120) {
   out_7930170621330713120[0] = state[0];
   out_7930170621330713120[1] = state[1];
   out_7930170621330713120[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5395362436009167278) {
   out_5395362436009167278[0] = 1;
   out_5395362436009167278[1] = 0;
   out_5395362436009167278[2] = 0;
   out_5395362436009167278[3] = 0;
   out_5395362436009167278[4] = 0;
   out_5395362436009167278[5] = 0;
   out_5395362436009167278[6] = 0;
   out_5395362436009167278[7] = 0;
   out_5395362436009167278[8] = 0;
   out_5395362436009167278[9] = 0;
   out_5395362436009167278[10] = 0;
   out_5395362436009167278[11] = 0;
   out_5395362436009167278[12] = 0;
   out_5395362436009167278[13] = 0;
   out_5395362436009167278[14] = 0;
   out_5395362436009167278[15] = 0;
   out_5395362436009167278[16] = 0;
   out_5395362436009167278[17] = 0;
   out_5395362436009167278[18] = 0;
   out_5395362436009167278[19] = 0;
   out_5395362436009167278[20] = 0;
   out_5395362436009167278[21] = 0;
   out_5395362436009167278[22] = 0;
   out_5395362436009167278[23] = 1;
   out_5395362436009167278[24] = 0;
   out_5395362436009167278[25] = 0;
   out_5395362436009167278[26] = 0;
   out_5395362436009167278[27] = 0;
   out_5395362436009167278[28] = 0;
   out_5395362436009167278[29] = 0;
   out_5395362436009167278[30] = 0;
   out_5395362436009167278[31] = 0;
   out_5395362436009167278[32] = 0;
   out_5395362436009167278[33] = 0;
   out_5395362436009167278[34] = 0;
   out_5395362436009167278[35] = 0;
   out_5395362436009167278[36] = 0;
   out_5395362436009167278[37] = 0;
   out_5395362436009167278[38] = 0;
   out_5395362436009167278[39] = 0;
   out_5395362436009167278[40] = 0;
   out_5395362436009167278[41] = 0;
   out_5395362436009167278[42] = 0;
   out_5395362436009167278[43] = 0;
   out_5395362436009167278[44] = 0;
   out_5395362436009167278[45] = 0;
   out_5395362436009167278[46] = 1;
   out_5395362436009167278[47] = 0;
   out_5395362436009167278[48] = 0;
   out_5395362436009167278[49] = 0;
   out_5395362436009167278[50] = 0;
   out_5395362436009167278[51] = 0;
   out_5395362436009167278[52] = 0;
   out_5395362436009167278[53] = 0;
   out_5395362436009167278[54] = 0;
   out_5395362436009167278[55] = 0;
   out_5395362436009167278[56] = 0;
   out_5395362436009167278[57] = 0;
   out_5395362436009167278[58] = 0;
   out_5395362436009167278[59] = 0;
   out_5395362436009167278[60] = 0;
   out_5395362436009167278[61] = 0;
   out_5395362436009167278[62] = 0;
   out_5395362436009167278[63] = 0;
   out_5395362436009167278[64] = 0;
   out_5395362436009167278[65] = 0;
}
void h_35(double *state, double *unused, double *out_7571399747222618377) {
   out_7571399747222618377[0] = state[7];
   out_7571399747222618377[1] = state[8];
   out_7571399747222618377[2] = state[9];
}
void H_35(double *state, double *unused, double *out_3742568085349812859) {
   out_3742568085349812859[0] = 0;
   out_3742568085349812859[1] = 0;
   out_3742568085349812859[2] = 0;
   out_3742568085349812859[3] = 0;
   out_3742568085349812859[4] = 0;
   out_3742568085349812859[5] = 0;
   out_3742568085349812859[6] = 0;
   out_3742568085349812859[7] = 1;
   out_3742568085349812859[8] = 0;
   out_3742568085349812859[9] = 0;
   out_3742568085349812859[10] = 0;
   out_3742568085349812859[11] = 0;
   out_3742568085349812859[12] = 0;
   out_3742568085349812859[13] = 0;
   out_3742568085349812859[14] = 0;
   out_3742568085349812859[15] = 0;
   out_3742568085349812859[16] = 0;
   out_3742568085349812859[17] = 0;
   out_3742568085349812859[18] = 0;
   out_3742568085349812859[19] = 0;
   out_3742568085349812859[20] = 0;
   out_3742568085349812859[21] = 0;
   out_3742568085349812859[22] = 0;
   out_3742568085349812859[23] = 0;
   out_3742568085349812859[24] = 0;
   out_3742568085349812859[25] = 0;
   out_3742568085349812859[26] = 0;
   out_3742568085349812859[27] = 0;
   out_3742568085349812859[28] = 0;
   out_3742568085349812859[29] = 0;
   out_3742568085349812859[30] = 1;
   out_3742568085349812859[31] = 0;
   out_3742568085349812859[32] = 0;
   out_3742568085349812859[33] = 0;
   out_3742568085349812859[34] = 0;
   out_3742568085349812859[35] = 0;
   out_3742568085349812859[36] = 0;
   out_3742568085349812859[37] = 0;
   out_3742568085349812859[38] = 0;
   out_3742568085349812859[39] = 0;
   out_3742568085349812859[40] = 0;
   out_3742568085349812859[41] = 0;
   out_3742568085349812859[42] = 0;
   out_3742568085349812859[43] = 0;
   out_3742568085349812859[44] = 0;
   out_3742568085349812859[45] = 0;
   out_3742568085349812859[46] = 0;
   out_3742568085349812859[47] = 0;
   out_3742568085349812859[48] = 0;
   out_3742568085349812859[49] = 0;
   out_3742568085349812859[50] = 0;
   out_3742568085349812859[51] = 0;
   out_3742568085349812859[52] = 0;
   out_3742568085349812859[53] = 1;
   out_3742568085349812859[54] = 0;
   out_3742568085349812859[55] = 0;
   out_3742568085349812859[56] = 0;
   out_3742568085349812859[57] = 0;
   out_3742568085349812859[58] = 0;
   out_3742568085349812859[59] = 0;
   out_3742568085349812859[60] = 0;
   out_3742568085349812859[61] = 0;
   out_3742568085349812859[62] = 0;
   out_3742568085349812859[63] = 0;
   out_3742568085349812859[64] = 0;
   out_3742568085349812859[65] = 0;
}
void h_32(double *state, double *unused, double *out_8532485529187637580) {
   out_8532485529187637580[0] = state[3];
   out_8532485529187637580[1] = state[4];
   out_8532485529187637580[2] = state[5];
   out_8532485529187637580[3] = state[6];
}
void H_32(double *state, double *unused, double *out_476131152322096211) {
   out_476131152322096211[0] = 0;
   out_476131152322096211[1] = 0;
   out_476131152322096211[2] = 0;
   out_476131152322096211[3] = 1;
   out_476131152322096211[4] = 0;
   out_476131152322096211[5] = 0;
   out_476131152322096211[6] = 0;
   out_476131152322096211[7] = 0;
   out_476131152322096211[8] = 0;
   out_476131152322096211[9] = 0;
   out_476131152322096211[10] = 0;
   out_476131152322096211[11] = 0;
   out_476131152322096211[12] = 0;
   out_476131152322096211[13] = 0;
   out_476131152322096211[14] = 0;
   out_476131152322096211[15] = 0;
   out_476131152322096211[16] = 0;
   out_476131152322096211[17] = 0;
   out_476131152322096211[18] = 0;
   out_476131152322096211[19] = 0;
   out_476131152322096211[20] = 0;
   out_476131152322096211[21] = 0;
   out_476131152322096211[22] = 0;
   out_476131152322096211[23] = 0;
   out_476131152322096211[24] = 0;
   out_476131152322096211[25] = 0;
   out_476131152322096211[26] = 1;
   out_476131152322096211[27] = 0;
   out_476131152322096211[28] = 0;
   out_476131152322096211[29] = 0;
   out_476131152322096211[30] = 0;
   out_476131152322096211[31] = 0;
   out_476131152322096211[32] = 0;
   out_476131152322096211[33] = 0;
   out_476131152322096211[34] = 0;
   out_476131152322096211[35] = 0;
   out_476131152322096211[36] = 0;
   out_476131152322096211[37] = 0;
   out_476131152322096211[38] = 0;
   out_476131152322096211[39] = 0;
   out_476131152322096211[40] = 0;
   out_476131152322096211[41] = 0;
   out_476131152322096211[42] = 0;
   out_476131152322096211[43] = 0;
   out_476131152322096211[44] = 0;
   out_476131152322096211[45] = 0;
   out_476131152322096211[46] = 0;
   out_476131152322096211[47] = 0;
   out_476131152322096211[48] = 0;
   out_476131152322096211[49] = 1;
   out_476131152322096211[50] = 0;
   out_476131152322096211[51] = 0;
   out_476131152322096211[52] = 0;
   out_476131152322096211[53] = 0;
   out_476131152322096211[54] = 0;
   out_476131152322096211[55] = 0;
   out_476131152322096211[56] = 0;
   out_476131152322096211[57] = 0;
   out_476131152322096211[58] = 0;
   out_476131152322096211[59] = 0;
   out_476131152322096211[60] = 0;
   out_476131152322096211[61] = 0;
   out_476131152322096211[62] = 0;
   out_476131152322096211[63] = 0;
   out_476131152322096211[64] = 0;
   out_476131152322096211[65] = 0;
   out_476131152322096211[66] = 0;
   out_476131152322096211[67] = 0;
   out_476131152322096211[68] = 0;
   out_476131152322096211[69] = 0;
   out_476131152322096211[70] = 0;
   out_476131152322096211[71] = 0;
   out_476131152322096211[72] = 1;
   out_476131152322096211[73] = 0;
   out_476131152322096211[74] = 0;
   out_476131152322096211[75] = 0;
   out_476131152322096211[76] = 0;
   out_476131152322096211[77] = 0;
   out_476131152322096211[78] = 0;
   out_476131152322096211[79] = 0;
   out_476131152322096211[80] = 0;
   out_476131152322096211[81] = 0;
   out_476131152322096211[82] = 0;
   out_476131152322096211[83] = 0;
   out_476131152322096211[84] = 0;
   out_476131152322096211[85] = 0;
   out_476131152322096211[86] = 0;
   out_476131152322096211[87] = 0;
}
void h_13(double *state, double *unused, double *out_8566284159131548696) {
   out_8566284159131548696[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8566284159131548696[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8566284159131548696[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8854944051461326356) {
   out_8854944051461326356[0] = 0;
   out_8854944051461326356[1] = 0;
   out_8854944051461326356[2] = 0;
   out_8854944051461326356[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8854944051461326356[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8854944051461326356[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8854944051461326356[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8854944051461326356[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8854944051461326356[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8854944051461326356[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8854944051461326356[10] = 0;
   out_8854944051461326356[11] = 0;
   out_8854944051461326356[12] = 0;
   out_8854944051461326356[13] = 0;
   out_8854944051461326356[14] = 0;
   out_8854944051461326356[15] = 0;
   out_8854944051461326356[16] = 0;
   out_8854944051461326356[17] = 0;
   out_8854944051461326356[18] = 0;
   out_8854944051461326356[19] = 0;
   out_8854944051461326356[20] = 0;
   out_8854944051461326356[21] = 0;
   out_8854944051461326356[22] = 0;
   out_8854944051461326356[23] = 0;
   out_8854944051461326356[24] = 0;
   out_8854944051461326356[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8854944051461326356[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8854944051461326356[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8854944051461326356[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8854944051461326356[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8854944051461326356[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8854944051461326356[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8854944051461326356[32] = 0;
   out_8854944051461326356[33] = 0;
   out_8854944051461326356[34] = 0;
   out_8854944051461326356[35] = 0;
   out_8854944051461326356[36] = 0;
   out_8854944051461326356[37] = 0;
   out_8854944051461326356[38] = 0;
   out_8854944051461326356[39] = 0;
   out_8854944051461326356[40] = 0;
   out_8854944051461326356[41] = 0;
   out_8854944051461326356[42] = 0;
   out_8854944051461326356[43] = 0;
   out_8854944051461326356[44] = 0;
   out_8854944051461326356[45] = 0;
   out_8854944051461326356[46] = 0;
   out_8854944051461326356[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8854944051461326356[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8854944051461326356[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8854944051461326356[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8854944051461326356[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8854944051461326356[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8854944051461326356[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8854944051461326356[54] = 0;
   out_8854944051461326356[55] = 0;
   out_8854944051461326356[56] = 0;
   out_8854944051461326356[57] = 0;
   out_8854944051461326356[58] = 0;
   out_8854944051461326356[59] = 0;
   out_8854944051461326356[60] = 0;
   out_8854944051461326356[61] = 0;
   out_8854944051461326356[62] = 0;
   out_8854944051461326356[63] = 0;
   out_8854944051461326356[64] = 0;
   out_8854944051461326356[65] = 0;
}
void h_14(double *state, double *unused, double *out_5580534141958831212) {
   out_5580534141958831212[0] = state[10];
   out_5580534141958831212[1] = state[11];
   out_5580534141958831212[2] = state[12];
}
void H_14(double *state, double *unused, double *out_617095674606796128) {
   out_617095674606796128[0] = 0;
   out_617095674606796128[1] = 0;
   out_617095674606796128[2] = 0;
   out_617095674606796128[3] = 0;
   out_617095674606796128[4] = 0;
   out_617095674606796128[5] = 0;
   out_617095674606796128[6] = 0;
   out_617095674606796128[7] = 0;
   out_617095674606796128[8] = 0;
   out_617095674606796128[9] = 0;
   out_617095674606796128[10] = 1;
   out_617095674606796128[11] = 0;
   out_617095674606796128[12] = 0;
   out_617095674606796128[13] = 0;
   out_617095674606796128[14] = 0;
   out_617095674606796128[15] = 0;
   out_617095674606796128[16] = 0;
   out_617095674606796128[17] = 0;
   out_617095674606796128[18] = 0;
   out_617095674606796128[19] = 0;
   out_617095674606796128[20] = 0;
   out_617095674606796128[21] = 0;
   out_617095674606796128[22] = 0;
   out_617095674606796128[23] = 0;
   out_617095674606796128[24] = 0;
   out_617095674606796128[25] = 0;
   out_617095674606796128[26] = 0;
   out_617095674606796128[27] = 0;
   out_617095674606796128[28] = 0;
   out_617095674606796128[29] = 0;
   out_617095674606796128[30] = 0;
   out_617095674606796128[31] = 0;
   out_617095674606796128[32] = 0;
   out_617095674606796128[33] = 1;
   out_617095674606796128[34] = 0;
   out_617095674606796128[35] = 0;
   out_617095674606796128[36] = 0;
   out_617095674606796128[37] = 0;
   out_617095674606796128[38] = 0;
   out_617095674606796128[39] = 0;
   out_617095674606796128[40] = 0;
   out_617095674606796128[41] = 0;
   out_617095674606796128[42] = 0;
   out_617095674606796128[43] = 0;
   out_617095674606796128[44] = 0;
   out_617095674606796128[45] = 0;
   out_617095674606796128[46] = 0;
   out_617095674606796128[47] = 0;
   out_617095674606796128[48] = 0;
   out_617095674606796128[49] = 0;
   out_617095674606796128[50] = 0;
   out_617095674606796128[51] = 0;
   out_617095674606796128[52] = 0;
   out_617095674606796128[53] = 0;
   out_617095674606796128[54] = 0;
   out_617095674606796128[55] = 0;
   out_617095674606796128[56] = 1;
   out_617095674606796128[57] = 0;
   out_617095674606796128[58] = 0;
   out_617095674606796128[59] = 0;
   out_617095674606796128[60] = 0;
   out_617095674606796128[61] = 0;
   out_617095674606796128[62] = 0;
   out_617095674606796128[63] = 0;
   out_617095674606796128[64] = 0;
   out_617095674606796128[65] = 0;
}
void h_33(double *state, double *unused, double *out_1844279387418215934) {
   out_1844279387418215934[0] = state[16];
   out_1844279387418215934[1] = state[17];
   out_1844279387418215934[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6893125089988670463) {
   out_6893125089988670463[0] = 0;
   out_6893125089988670463[1] = 0;
   out_6893125089988670463[2] = 0;
   out_6893125089988670463[3] = 0;
   out_6893125089988670463[4] = 0;
   out_6893125089988670463[5] = 0;
   out_6893125089988670463[6] = 0;
   out_6893125089988670463[7] = 0;
   out_6893125089988670463[8] = 0;
   out_6893125089988670463[9] = 0;
   out_6893125089988670463[10] = 0;
   out_6893125089988670463[11] = 0;
   out_6893125089988670463[12] = 0;
   out_6893125089988670463[13] = 0;
   out_6893125089988670463[14] = 0;
   out_6893125089988670463[15] = 0;
   out_6893125089988670463[16] = 1;
   out_6893125089988670463[17] = 0;
   out_6893125089988670463[18] = 0;
   out_6893125089988670463[19] = 0;
   out_6893125089988670463[20] = 0;
   out_6893125089988670463[21] = 0;
   out_6893125089988670463[22] = 0;
   out_6893125089988670463[23] = 0;
   out_6893125089988670463[24] = 0;
   out_6893125089988670463[25] = 0;
   out_6893125089988670463[26] = 0;
   out_6893125089988670463[27] = 0;
   out_6893125089988670463[28] = 0;
   out_6893125089988670463[29] = 0;
   out_6893125089988670463[30] = 0;
   out_6893125089988670463[31] = 0;
   out_6893125089988670463[32] = 0;
   out_6893125089988670463[33] = 0;
   out_6893125089988670463[34] = 0;
   out_6893125089988670463[35] = 0;
   out_6893125089988670463[36] = 0;
   out_6893125089988670463[37] = 0;
   out_6893125089988670463[38] = 0;
   out_6893125089988670463[39] = 1;
   out_6893125089988670463[40] = 0;
   out_6893125089988670463[41] = 0;
   out_6893125089988670463[42] = 0;
   out_6893125089988670463[43] = 0;
   out_6893125089988670463[44] = 0;
   out_6893125089988670463[45] = 0;
   out_6893125089988670463[46] = 0;
   out_6893125089988670463[47] = 0;
   out_6893125089988670463[48] = 0;
   out_6893125089988670463[49] = 0;
   out_6893125089988670463[50] = 0;
   out_6893125089988670463[51] = 0;
   out_6893125089988670463[52] = 0;
   out_6893125089988670463[53] = 0;
   out_6893125089988670463[54] = 0;
   out_6893125089988670463[55] = 0;
   out_6893125089988670463[56] = 0;
   out_6893125089988670463[57] = 0;
   out_6893125089988670463[58] = 0;
   out_6893125089988670463[59] = 0;
   out_6893125089988670463[60] = 0;
   out_6893125089988670463[61] = 0;
   out_6893125089988670463[62] = 1;
   out_6893125089988670463[63] = 0;
   out_6893125089988670463[64] = 0;
   out_6893125089988670463[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1991592219369938753) {
  H(in_vec, out_1991592219369938753);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3639961615079265529) {
  err_fun(nom_x, delta_x, out_3639961615079265529);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7023904112673253952) {
  inv_err_fun(nom_x, true_x, out_7023904112673253952);
}
void live_H_mod_fun(double *state, double *out_1302798251589193323) {
  H_mod_fun(state, out_1302798251589193323);
}
void live_f_fun(double *state, double dt, double *out_2931219080927465885) {
  f_fun(state,  dt, out_2931219080927465885);
}
void live_F_fun(double *state, double dt, double *out_6249431750817435550) {
  F_fun(state,  dt, out_6249431750817435550);
}
void live_h_4(double *state, double *unused, double *out_2859119737322213304) {
  h_4(state, unused, out_2859119737322213304);
}
void live_H_4(double *state, double *unused, double *out_375906027977205483) {
  H_4(state, unused, out_375906027977205483);
}
void live_h_9(double *state, double *unused, double *out_5580534141958831212) {
  h_9(state, unused, out_5580534141958831212);
}
void live_H_9(double *state, double *unused, double *out_617095674606796128) {
  H_9(state, unused, out_617095674606796128);
}
void live_h_10(double *state, double *unused, double *out_2575181299569282501) {
  h_10(state, unused, out_2575181299569282501);
}
void live_H_10(double *state, double *unused, double *out_7454213660328130964) {
  H_10(state, unused, out_7454213660328130964);
}
void live_h_12(double *state, double *unused, double *out_7930170621330713120) {
  h_12(state, unused, out_7930170621330713120);
}
void live_H_12(double *state, double *unused, double *out_5395362436009167278) {
  H_12(state, unused, out_5395362436009167278);
}
void live_h_35(double *state, double *unused, double *out_7571399747222618377) {
  h_35(state, unused, out_7571399747222618377);
}
void live_H_35(double *state, double *unused, double *out_3742568085349812859) {
  H_35(state, unused, out_3742568085349812859);
}
void live_h_32(double *state, double *unused, double *out_8532485529187637580) {
  h_32(state, unused, out_8532485529187637580);
}
void live_H_32(double *state, double *unused, double *out_476131152322096211) {
  H_32(state, unused, out_476131152322096211);
}
void live_h_13(double *state, double *unused, double *out_8566284159131548696) {
  h_13(state, unused, out_8566284159131548696);
}
void live_H_13(double *state, double *unused, double *out_8854944051461326356) {
  H_13(state, unused, out_8854944051461326356);
}
void live_h_14(double *state, double *unused, double *out_5580534141958831212) {
  h_14(state, unused, out_5580534141958831212);
}
void live_H_14(double *state, double *unused, double *out_617095674606796128) {
  H_14(state, unused, out_617095674606796128);
}
void live_h_33(double *state, double *unused, double *out_1844279387418215934) {
  h_33(state, unused, out_1844279387418215934);
}
void live_H_33(double *state, double *unused, double *out_6893125089988670463) {
  H_33(state, unused, out_6893125089988670463);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
