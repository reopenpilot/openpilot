#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6885504313352436873) {
   out_6885504313352436873[0] = 0;
   out_6885504313352436873[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6885504313352436873[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6885504313352436873[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6885504313352436873[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6885504313352436873[5] = -sin(in_vec[1]);
   out_6885504313352436873[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6885504313352436873[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6885504313352436873[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6885504313352436873[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6885504313352436873[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6885504313352436873[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6885504313352436873[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6885504313352436873[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6885504313352436873[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6885504313352436873[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6885504313352436873[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6885504313352436873[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_152958078878653680) {
   out_152958078878653680[0] = delta_x[0] + nom_x[0];
   out_152958078878653680[1] = delta_x[1] + nom_x[1];
   out_152958078878653680[2] = delta_x[2] + nom_x[2];
   out_152958078878653680[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_152958078878653680[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_152958078878653680[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_152958078878653680[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_152958078878653680[7] = delta_x[6] + nom_x[7];
   out_152958078878653680[8] = delta_x[7] + nom_x[8];
   out_152958078878653680[9] = delta_x[8] + nom_x[9];
   out_152958078878653680[10] = delta_x[9] + nom_x[10];
   out_152958078878653680[11] = delta_x[10] + nom_x[11];
   out_152958078878653680[12] = delta_x[11] + nom_x[12];
   out_152958078878653680[13] = delta_x[12] + nom_x[13];
   out_152958078878653680[14] = delta_x[13] + nom_x[14];
   out_152958078878653680[15] = delta_x[14] + nom_x[15];
   out_152958078878653680[16] = delta_x[15] + nom_x[16];
   out_152958078878653680[17] = delta_x[16] + nom_x[17];
   out_152958078878653680[18] = delta_x[17] + nom_x[18];
   out_152958078878653680[19] = delta_x[18] + nom_x[19];
   out_152958078878653680[20] = delta_x[19] + nom_x[20];
   out_152958078878653680[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8296264345891091047) {
   out_8296264345891091047[0] = -nom_x[0] + true_x[0];
   out_8296264345891091047[1] = -nom_x[1] + true_x[1];
   out_8296264345891091047[2] = -nom_x[2] + true_x[2];
   out_8296264345891091047[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8296264345891091047[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8296264345891091047[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8296264345891091047[6] = -nom_x[7] + true_x[7];
   out_8296264345891091047[7] = -nom_x[8] + true_x[8];
   out_8296264345891091047[8] = -nom_x[9] + true_x[9];
   out_8296264345891091047[9] = -nom_x[10] + true_x[10];
   out_8296264345891091047[10] = -nom_x[11] + true_x[11];
   out_8296264345891091047[11] = -nom_x[12] + true_x[12];
   out_8296264345891091047[12] = -nom_x[13] + true_x[13];
   out_8296264345891091047[13] = -nom_x[14] + true_x[14];
   out_8296264345891091047[14] = -nom_x[15] + true_x[15];
   out_8296264345891091047[15] = -nom_x[16] + true_x[16];
   out_8296264345891091047[16] = -nom_x[17] + true_x[17];
   out_8296264345891091047[17] = -nom_x[18] + true_x[18];
   out_8296264345891091047[18] = -nom_x[19] + true_x[19];
   out_8296264345891091047[19] = -nom_x[20] + true_x[20];
   out_8296264345891091047[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8834843621671259754) {
   out_8834843621671259754[0] = 1.0;
   out_8834843621671259754[1] = 0;
   out_8834843621671259754[2] = 0;
   out_8834843621671259754[3] = 0;
   out_8834843621671259754[4] = 0;
   out_8834843621671259754[5] = 0;
   out_8834843621671259754[6] = 0;
   out_8834843621671259754[7] = 0;
   out_8834843621671259754[8] = 0;
   out_8834843621671259754[9] = 0;
   out_8834843621671259754[10] = 0;
   out_8834843621671259754[11] = 0;
   out_8834843621671259754[12] = 0;
   out_8834843621671259754[13] = 0;
   out_8834843621671259754[14] = 0;
   out_8834843621671259754[15] = 0;
   out_8834843621671259754[16] = 0;
   out_8834843621671259754[17] = 0;
   out_8834843621671259754[18] = 0;
   out_8834843621671259754[19] = 0;
   out_8834843621671259754[20] = 0;
   out_8834843621671259754[21] = 0;
   out_8834843621671259754[22] = 1.0;
   out_8834843621671259754[23] = 0;
   out_8834843621671259754[24] = 0;
   out_8834843621671259754[25] = 0;
   out_8834843621671259754[26] = 0;
   out_8834843621671259754[27] = 0;
   out_8834843621671259754[28] = 0;
   out_8834843621671259754[29] = 0;
   out_8834843621671259754[30] = 0;
   out_8834843621671259754[31] = 0;
   out_8834843621671259754[32] = 0;
   out_8834843621671259754[33] = 0;
   out_8834843621671259754[34] = 0;
   out_8834843621671259754[35] = 0;
   out_8834843621671259754[36] = 0;
   out_8834843621671259754[37] = 0;
   out_8834843621671259754[38] = 0;
   out_8834843621671259754[39] = 0;
   out_8834843621671259754[40] = 0;
   out_8834843621671259754[41] = 0;
   out_8834843621671259754[42] = 0;
   out_8834843621671259754[43] = 0;
   out_8834843621671259754[44] = 1.0;
   out_8834843621671259754[45] = 0;
   out_8834843621671259754[46] = 0;
   out_8834843621671259754[47] = 0;
   out_8834843621671259754[48] = 0;
   out_8834843621671259754[49] = 0;
   out_8834843621671259754[50] = 0;
   out_8834843621671259754[51] = 0;
   out_8834843621671259754[52] = 0;
   out_8834843621671259754[53] = 0;
   out_8834843621671259754[54] = 0;
   out_8834843621671259754[55] = 0;
   out_8834843621671259754[56] = 0;
   out_8834843621671259754[57] = 0;
   out_8834843621671259754[58] = 0;
   out_8834843621671259754[59] = 0;
   out_8834843621671259754[60] = 0;
   out_8834843621671259754[61] = 0;
   out_8834843621671259754[62] = 0;
   out_8834843621671259754[63] = 0;
   out_8834843621671259754[64] = 0;
   out_8834843621671259754[65] = 0;
   out_8834843621671259754[66] = -0.5*state[4];
   out_8834843621671259754[67] = -0.5*state[5];
   out_8834843621671259754[68] = -0.5*state[6];
   out_8834843621671259754[69] = 0;
   out_8834843621671259754[70] = 0;
   out_8834843621671259754[71] = 0;
   out_8834843621671259754[72] = 0;
   out_8834843621671259754[73] = 0;
   out_8834843621671259754[74] = 0;
   out_8834843621671259754[75] = 0;
   out_8834843621671259754[76] = 0;
   out_8834843621671259754[77] = 0;
   out_8834843621671259754[78] = 0;
   out_8834843621671259754[79] = 0;
   out_8834843621671259754[80] = 0;
   out_8834843621671259754[81] = 0;
   out_8834843621671259754[82] = 0;
   out_8834843621671259754[83] = 0;
   out_8834843621671259754[84] = 0;
   out_8834843621671259754[85] = 0;
   out_8834843621671259754[86] = 0;
   out_8834843621671259754[87] = 0.5*state[3];
   out_8834843621671259754[88] = 0.5*state[6];
   out_8834843621671259754[89] = -0.5*state[5];
   out_8834843621671259754[90] = 0;
   out_8834843621671259754[91] = 0;
   out_8834843621671259754[92] = 0;
   out_8834843621671259754[93] = 0;
   out_8834843621671259754[94] = 0;
   out_8834843621671259754[95] = 0;
   out_8834843621671259754[96] = 0;
   out_8834843621671259754[97] = 0;
   out_8834843621671259754[98] = 0;
   out_8834843621671259754[99] = 0;
   out_8834843621671259754[100] = 0;
   out_8834843621671259754[101] = 0;
   out_8834843621671259754[102] = 0;
   out_8834843621671259754[103] = 0;
   out_8834843621671259754[104] = 0;
   out_8834843621671259754[105] = 0;
   out_8834843621671259754[106] = 0;
   out_8834843621671259754[107] = 0;
   out_8834843621671259754[108] = -0.5*state[6];
   out_8834843621671259754[109] = 0.5*state[3];
   out_8834843621671259754[110] = 0.5*state[4];
   out_8834843621671259754[111] = 0;
   out_8834843621671259754[112] = 0;
   out_8834843621671259754[113] = 0;
   out_8834843621671259754[114] = 0;
   out_8834843621671259754[115] = 0;
   out_8834843621671259754[116] = 0;
   out_8834843621671259754[117] = 0;
   out_8834843621671259754[118] = 0;
   out_8834843621671259754[119] = 0;
   out_8834843621671259754[120] = 0;
   out_8834843621671259754[121] = 0;
   out_8834843621671259754[122] = 0;
   out_8834843621671259754[123] = 0;
   out_8834843621671259754[124] = 0;
   out_8834843621671259754[125] = 0;
   out_8834843621671259754[126] = 0;
   out_8834843621671259754[127] = 0;
   out_8834843621671259754[128] = 0;
   out_8834843621671259754[129] = 0.5*state[5];
   out_8834843621671259754[130] = -0.5*state[4];
   out_8834843621671259754[131] = 0.5*state[3];
   out_8834843621671259754[132] = 0;
   out_8834843621671259754[133] = 0;
   out_8834843621671259754[134] = 0;
   out_8834843621671259754[135] = 0;
   out_8834843621671259754[136] = 0;
   out_8834843621671259754[137] = 0;
   out_8834843621671259754[138] = 0;
   out_8834843621671259754[139] = 0;
   out_8834843621671259754[140] = 0;
   out_8834843621671259754[141] = 0;
   out_8834843621671259754[142] = 0;
   out_8834843621671259754[143] = 0;
   out_8834843621671259754[144] = 0;
   out_8834843621671259754[145] = 0;
   out_8834843621671259754[146] = 0;
   out_8834843621671259754[147] = 0;
   out_8834843621671259754[148] = 0;
   out_8834843621671259754[149] = 0;
   out_8834843621671259754[150] = 0;
   out_8834843621671259754[151] = 0;
   out_8834843621671259754[152] = 0;
   out_8834843621671259754[153] = 1.0;
   out_8834843621671259754[154] = 0;
   out_8834843621671259754[155] = 0;
   out_8834843621671259754[156] = 0;
   out_8834843621671259754[157] = 0;
   out_8834843621671259754[158] = 0;
   out_8834843621671259754[159] = 0;
   out_8834843621671259754[160] = 0;
   out_8834843621671259754[161] = 0;
   out_8834843621671259754[162] = 0;
   out_8834843621671259754[163] = 0;
   out_8834843621671259754[164] = 0;
   out_8834843621671259754[165] = 0;
   out_8834843621671259754[166] = 0;
   out_8834843621671259754[167] = 0;
   out_8834843621671259754[168] = 0;
   out_8834843621671259754[169] = 0;
   out_8834843621671259754[170] = 0;
   out_8834843621671259754[171] = 0;
   out_8834843621671259754[172] = 0;
   out_8834843621671259754[173] = 0;
   out_8834843621671259754[174] = 0;
   out_8834843621671259754[175] = 1.0;
   out_8834843621671259754[176] = 0;
   out_8834843621671259754[177] = 0;
   out_8834843621671259754[178] = 0;
   out_8834843621671259754[179] = 0;
   out_8834843621671259754[180] = 0;
   out_8834843621671259754[181] = 0;
   out_8834843621671259754[182] = 0;
   out_8834843621671259754[183] = 0;
   out_8834843621671259754[184] = 0;
   out_8834843621671259754[185] = 0;
   out_8834843621671259754[186] = 0;
   out_8834843621671259754[187] = 0;
   out_8834843621671259754[188] = 0;
   out_8834843621671259754[189] = 0;
   out_8834843621671259754[190] = 0;
   out_8834843621671259754[191] = 0;
   out_8834843621671259754[192] = 0;
   out_8834843621671259754[193] = 0;
   out_8834843621671259754[194] = 0;
   out_8834843621671259754[195] = 0;
   out_8834843621671259754[196] = 0;
   out_8834843621671259754[197] = 1.0;
   out_8834843621671259754[198] = 0;
   out_8834843621671259754[199] = 0;
   out_8834843621671259754[200] = 0;
   out_8834843621671259754[201] = 0;
   out_8834843621671259754[202] = 0;
   out_8834843621671259754[203] = 0;
   out_8834843621671259754[204] = 0;
   out_8834843621671259754[205] = 0;
   out_8834843621671259754[206] = 0;
   out_8834843621671259754[207] = 0;
   out_8834843621671259754[208] = 0;
   out_8834843621671259754[209] = 0;
   out_8834843621671259754[210] = 0;
   out_8834843621671259754[211] = 0;
   out_8834843621671259754[212] = 0;
   out_8834843621671259754[213] = 0;
   out_8834843621671259754[214] = 0;
   out_8834843621671259754[215] = 0;
   out_8834843621671259754[216] = 0;
   out_8834843621671259754[217] = 0;
   out_8834843621671259754[218] = 0;
   out_8834843621671259754[219] = 1.0;
   out_8834843621671259754[220] = 0;
   out_8834843621671259754[221] = 0;
   out_8834843621671259754[222] = 0;
   out_8834843621671259754[223] = 0;
   out_8834843621671259754[224] = 0;
   out_8834843621671259754[225] = 0;
   out_8834843621671259754[226] = 0;
   out_8834843621671259754[227] = 0;
   out_8834843621671259754[228] = 0;
   out_8834843621671259754[229] = 0;
   out_8834843621671259754[230] = 0;
   out_8834843621671259754[231] = 0;
   out_8834843621671259754[232] = 0;
   out_8834843621671259754[233] = 0;
   out_8834843621671259754[234] = 0;
   out_8834843621671259754[235] = 0;
   out_8834843621671259754[236] = 0;
   out_8834843621671259754[237] = 0;
   out_8834843621671259754[238] = 0;
   out_8834843621671259754[239] = 0;
   out_8834843621671259754[240] = 0;
   out_8834843621671259754[241] = 1.0;
   out_8834843621671259754[242] = 0;
   out_8834843621671259754[243] = 0;
   out_8834843621671259754[244] = 0;
   out_8834843621671259754[245] = 0;
   out_8834843621671259754[246] = 0;
   out_8834843621671259754[247] = 0;
   out_8834843621671259754[248] = 0;
   out_8834843621671259754[249] = 0;
   out_8834843621671259754[250] = 0;
   out_8834843621671259754[251] = 0;
   out_8834843621671259754[252] = 0;
   out_8834843621671259754[253] = 0;
   out_8834843621671259754[254] = 0;
   out_8834843621671259754[255] = 0;
   out_8834843621671259754[256] = 0;
   out_8834843621671259754[257] = 0;
   out_8834843621671259754[258] = 0;
   out_8834843621671259754[259] = 0;
   out_8834843621671259754[260] = 0;
   out_8834843621671259754[261] = 0;
   out_8834843621671259754[262] = 0;
   out_8834843621671259754[263] = 1.0;
   out_8834843621671259754[264] = 0;
   out_8834843621671259754[265] = 0;
   out_8834843621671259754[266] = 0;
   out_8834843621671259754[267] = 0;
   out_8834843621671259754[268] = 0;
   out_8834843621671259754[269] = 0;
   out_8834843621671259754[270] = 0;
   out_8834843621671259754[271] = 0;
   out_8834843621671259754[272] = 0;
   out_8834843621671259754[273] = 0;
   out_8834843621671259754[274] = 0;
   out_8834843621671259754[275] = 0;
   out_8834843621671259754[276] = 0;
   out_8834843621671259754[277] = 0;
   out_8834843621671259754[278] = 0;
   out_8834843621671259754[279] = 0;
   out_8834843621671259754[280] = 0;
   out_8834843621671259754[281] = 0;
   out_8834843621671259754[282] = 0;
   out_8834843621671259754[283] = 0;
   out_8834843621671259754[284] = 0;
   out_8834843621671259754[285] = 1.0;
   out_8834843621671259754[286] = 0;
   out_8834843621671259754[287] = 0;
   out_8834843621671259754[288] = 0;
   out_8834843621671259754[289] = 0;
   out_8834843621671259754[290] = 0;
   out_8834843621671259754[291] = 0;
   out_8834843621671259754[292] = 0;
   out_8834843621671259754[293] = 0;
   out_8834843621671259754[294] = 0;
   out_8834843621671259754[295] = 0;
   out_8834843621671259754[296] = 0;
   out_8834843621671259754[297] = 0;
   out_8834843621671259754[298] = 0;
   out_8834843621671259754[299] = 0;
   out_8834843621671259754[300] = 0;
   out_8834843621671259754[301] = 0;
   out_8834843621671259754[302] = 0;
   out_8834843621671259754[303] = 0;
   out_8834843621671259754[304] = 0;
   out_8834843621671259754[305] = 0;
   out_8834843621671259754[306] = 0;
   out_8834843621671259754[307] = 1.0;
   out_8834843621671259754[308] = 0;
   out_8834843621671259754[309] = 0;
   out_8834843621671259754[310] = 0;
   out_8834843621671259754[311] = 0;
   out_8834843621671259754[312] = 0;
   out_8834843621671259754[313] = 0;
   out_8834843621671259754[314] = 0;
   out_8834843621671259754[315] = 0;
   out_8834843621671259754[316] = 0;
   out_8834843621671259754[317] = 0;
   out_8834843621671259754[318] = 0;
   out_8834843621671259754[319] = 0;
   out_8834843621671259754[320] = 0;
   out_8834843621671259754[321] = 0;
   out_8834843621671259754[322] = 0;
   out_8834843621671259754[323] = 0;
   out_8834843621671259754[324] = 0;
   out_8834843621671259754[325] = 0;
   out_8834843621671259754[326] = 0;
   out_8834843621671259754[327] = 0;
   out_8834843621671259754[328] = 0;
   out_8834843621671259754[329] = 1.0;
   out_8834843621671259754[330] = 0;
   out_8834843621671259754[331] = 0;
   out_8834843621671259754[332] = 0;
   out_8834843621671259754[333] = 0;
   out_8834843621671259754[334] = 0;
   out_8834843621671259754[335] = 0;
   out_8834843621671259754[336] = 0;
   out_8834843621671259754[337] = 0;
   out_8834843621671259754[338] = 0;
   out_8834843621671259754[339] = 0;
   out_8834843621671259754[340] = 0;
   out_8834843621671259754[341] = 0;
   out_8834843621671259754[342] = 0;
   out_8834843621671259754[343] = 0;
   out_8834843621671259754[344] = 0;
   out_8834843621671259754[345] = 0;
   out_8834843621671259754[346] = 0;
   out_8834843621671259754[347] = 0;
   out_8834843621671259754[348] = 0;
   out_8834843621671259754[349] = 0;
   out_8834843621671259754[350] = 0;
   out_8834843621671259754[351] = 1.0;
   out_8834843621671259754[352] = 0;
   out_8834843621671259754[353] = 0;
   out_8834843621671259754[354] = 0;
   out_8834843621671259754[355] = 0;
   out_8834843621671259754[356] = 0;
   out_8834843621671259754[357] = 0;
   out_8834843621671259754[358] = 0;
   out_8834843621671259754[359] = 0;
   out_8834843621671259754[360] = 0;
   out_8834843621671259754[361] = 0;
   out_8834843621671259754[362] = 0;
   out_8834843621671259754[363] = 0;
   out_8834843621671259754[364] = 0;
   out_8834843621671259754[365] = 0;
   out_8834843621671259754[366] = 0;
   out_8834843621671259754[367] = 0;
   out_8834843621671259754[368] = 0;
   out_8834843621671259754[369] = 0;
   out_8834843621671259754[370] = 0;
   out_8834843621671259754[371] = 0;
   out_8834843621671259754[372] = 0;
   out_8834843621671259754[373] = 1.0;
   out_8834843621671259754[374] = 0;
   out_8834843621671259754[375] = 0;
   out_8834843621671259754[376] = 0;
   out_8834843621671259754[377] = 0;
   out_8834843621671259754[378] = 0;
   out_8834843621671259754[379] = 0;
   out_8834843621671259754[380] = 0;
   out_8834843621671259754[381] = 0;
   out_8834843621671259754[382] = 0;
   out_8834843621671259754[383] = 0;
   out_8834843621671259754[384] = 0;
   out_8834843621671259754[385] = 0;
   out_8834843621671259754[386] = 0;
   out_8834843621671259754[387] = 0;
   out_8834843621671259754[388] = 0;
   out_8834843621671259754[389] = 0;
   out_8834843621671259754[390] = 0;
   out_8834843621671259754[391] = 0;
   out_8834843621671259754[392] = 0;
   out_8834843621671259754[393] = 0;
   out_8834843621671259754[394] = 0;
   out_8834843621671259754[395] = 1.0;
   out_8834843621671259754[396] = 0;
   out_8834843621671259754[397] = 0;
   out_8834843621671259754[398] = 0;
   out_8834843621671259754[399] = 0;
   out_8834843621671259754[400] = 0;
   out_8834843621671259754[401] = 0;
   out_8834843621671259754[402] = 0;
   out_8834843621671259754[403] = 0;
   out_8834843621671259754[404] = 0;
   out_8834843621671259754[405] = 0;
   out_8834843621671259754[406] = 0;
   out_8834843621671259754[407] = 0;
   out_8834843621671259754[408] = 0;
   out_8834843621671259754[409] = 0;
   out_8834843621671259754[410] = 0;
   out_8834843621671259754[411] = 0;
   out_8834843621671259754[412] = 0;
   out_8834843621671259754[413] = 0;
   out_8834843621671259754[414] = 0;
   out_8834843621671259754[415] = 0;
   out_8834843621671259754[416] = 0;
   out_8834843621671259754[417] = 1.0;
   out_8834843621671259754[418] = 0;
   out_8834843621671259754[419] = 0;
   out_8834843621671259754[420] = 0;
   out_8834843621671259754[421] = 0;
   out_8834843621671259754[422] = 0;
   out_8834843621671259754[423] = 0;
   out_8834843621671259754[424] = 0;
   out_8834843621671259754[425] = 0;
   out_8834843621671259754[426] = 0;
   out_8834843621671259754[427] = 0;
   out_8834843621671259754[428] = 0;
   out_8834843621671259754[429] = 0;
   out_8834843621671259754[430] = 0;
   out_8834843621671259754[431] = 0;
   out_8834843621671259754[432] = 0;
   out_8834843621671259754[433] = 0;
   out_8834843621671259754[434] = 0;
   out_8834843621671259754[435] = 0;
   out_8834843621671259754[436] = 0;
   out_8834843621671259754[437] = 0;
   out_8834843621671259754[438] = 0;
   out_8834843621671259754[439] = 1.0;
   out_8834843621671259754[440] = 0;
   out_8834843621671259754[441] = 0;
   out_8834843621671259754[442] = 0;
   out_8834843621671259754[443] = 0;
   out_8834843621671259754[444] = 0;
   out_8834843621671259754[445] = 0;
   out_8834843621671259754[446] = 0;
   out_8834843621671259754[447] = 0;
   out_8834843621671259754[448] = 0;
   out_8834843621671259754[449] = 0;
   out_8834843621671259754[450] = 0;
   out_8834843621671259754[451] = 0;
   out_8834843621671259754[452] = 0;
   out_8834843621671259754[453] = 0;
   out_8834843621671259754[454] = 0;
   out_8834843621671259754[455] = 0;
   out_8834843621671259754[456] = 0;
   out_8834843621671259754[457] = 0;
   out_8834843621671259754[458] = 0;
   out_8834843621671259754[459] = 0;
   out_8834843621671259754[460] = 0;
   out_8834843621671259754[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4802251474288259999) {
   out_4802251474288259999[0] = dt*state[7] + state[0];
   out_4802251474288259999[1] = dt*state[8] + state[1];
   out_4802251474288259999[2] = dt*state[9] + state[2];
   out_4802251474288259999[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4802251474288259999[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4802251474288259999[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4802251474288259999[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4802251474288259999[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4802251474288259999[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4802251474288259999[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4802251474288259999[10] = state[10];
   out_4802251474288259999[11] = state[11];
   out_4802251474288259999[12] = state[12];
   out_4802251474288259999[13] = state[13];
   out_4802251474288259999[14] = state[14];
   out_4802251474288259999[15] = state[15];
   out_4802251474288259999[16] = state[16];
   out_4802251474288259999[17] = state[17];
   out_4802251474288259999[18] = state[18];
   out_4802251474288259999[19] = state[19];
   out_4802251474288259999[20] = state[20];
   out_4802251474288259999[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4477925892734512016) {
   out_4477925892734512016[0] = 1;
   out_4477925892734512016[1] = 0;
   out_4477925892734512016[2] = 0;
   out_4477925892734512016[3] = 0;
   out_4477925892734512016[4] = 0;
   out_4477925892734512016[5] = 0;
   out_4477925892734512016[6] = dt;
   out_4477925892734512016[7] = 0;
   out_4477925892734512016[8] = 0;
   out_4477925892734512016[9] = 0;
   out_4477925892734512016[10] = 0;
   out_4477925892734512016[11] = 0;
   out_4477925892734512016[12] = 0;
   out_4477925892734512016[13] = 0;
   out_4477925892734512016[14] = 0;
   out_4477925892734512016[15] = 0;
   out_4477925892734512016[16] = 0;
   out_4477925892734512016[17] = 0;
   out_4477925892734512016[18] = 0;
   out_4477925892734512016[19] = 0;
   out_4477925892734512016[20] = 0;
   out_4477925892734512016[21] = 0;
   out_4477925892734512016[22] = 1;
   out_4477925892734512016[23] = 0;
   out_4477925892734512016[24] = 0;
   out_4477925892734512016[25] = 0;
   out_4477925892734512016[26] = 0;
   out_4477925892734512016[27] = 0;
   out_4477925892734512016[28] = dt;
   out_4477925892734512016[29] = 0;
   out_4477925892734512016[30] = 0;
   out_4477925892734512016[31] = 0;
   out_4477925892734512016[32] = 0;
   out_4477925892734512016[33] = 0;
   out_4477925892734512016[34] = 0;
   out_4477925892734512016[35] = 0;
   out_4477925892734512016[36] = 0;
   out_4477925892734512016[37] = 0;
   out_4477925892734512016[38] = 0;
   out_4477925892734512016[39] = 0;
   out_4477925892734512016[40] = 0;
   out_4477925892734512016[41] = 0;
   out_4477925892734512016[42] = 0;
   out_4477925892734512016[43] = 0;
   out_4477925892734512016[44] = 1;
   out_4477925892734512016[45] = 0;
   out_4477925892734512016[46] = 0;
   out_4477925892734512016[47] = 0;
   out_4477925892734512016[48] = 0;
   out_4477925892734512016[49] = 0;
   out_4477925892734512016[50] = dt;
   out_4477925892734512016[51] = 0;
   out_4477925892734512016[52] = 0;
   out_4477925892734512016[53] = 0;
   out_4477925892734512016[54] = 0;
   out_4477925892734512016[55] = 0;
   out_4477925892734512016[56] = 0;
   out_4477925892734512016[57] = 0;
   out_4477925892734512016[58] = 0;
   out_4477925892734512016[59] = 0;
   out_4477925892734512016[60] = 0;
   out_4477925892734512016[61] = 0;
   out_4477925892734512016[62] = 0;
   out_4477925892734512016[63] = 0;
   out_4477925892734512016[64] = 0;
   out_4477925892734512016[65] = 0;
   out_4477925892734512016[66] = 1;
   out_4477925892734512016[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4477925892734512016[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4477925892734512016[69] = 0;
   out_4477925892734512016[70] = 0;
   out_4477925892734512016[71] = 0;
   out_4477925892734512016[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4477925892734512016[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4477925892734512016[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4477925892734512016[75] = 0;
   out_4477925892734512016[76] = 0;
   out_4477925892734512016[77] = 0;
   out_4477925892734512016[78] = 0;
   out_4477925892734512016[79] = 0;
   out_4477925892734512016[80] = 0;
   out_4477925892734512016[81] = 0;
   out_4477925892734512016[82] = 0;
   out_4477925892734512016[83] = 0;
   out_4477925892734512016[84] = 0;
   out_4477925892734512016[85] = 0;
   out_4477925892734512016[86] = 0;
   out_4477925892734512016[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4477925892734512016[88] = 1;
   out_4477925892734512016[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4477925892734512016[90] = 0;
   out_4477925892734512016[91] = 0;
   out_4477925892734512016[92] = 0;
   out_4477925892734512016[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4477925892734512016[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4477925892734512016[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4477925892734512016[96] = 0;
   out_4477925892734512016[97] = 0;
   out_4477925892734512016[98] = 0;
   out_4477925892734512016[99] = 0;
   out_4477925892734512016[100] = 0;
   out_4477925892734512016[101] = 0;
   out_4477925892734512016[102] = 0;
   out_4477925892734512016[103] = 0;
   out_4477925892734512016[104] = 0;
   out_4477925892734512016[105] = 0;
   out_4477925892734512016[106] = 0;
   out_4477925892734512016[107] = 0;
   out_4477925892734512016[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4477925892734512016[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4477925892734512016[110] = 1;
   out_4477925892734512016[111] = 0;
   out_4477925892734512016[112] = 0;
   out_4477925892734512016[113] = 0;
   out_4477925892734512016[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4477925892734512016[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4477925892734512016[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4477925892734512016[117] = 0;
   out_4477925892734512016[118] = 0;
   out_4477925892734512016[119] = 0;
   out_4477925892734512016[120] = 0;
   out_4477925892734512016[121] = 0;
   out_4477925892734512016[122] = 0;
   out_4477925892734512016[123] = 0;
   out_4477925892734512016[124] = 0;
   out_4477925892734512016[125] = 0;
   out_4477925892734512016[126] = 0;
   out_4477925892734512016[127] = 0;
   out_4477925892734512016[128] = 0;
   out_4477925892734512016[129] = 0;
   out_4477925892734512016[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4477925892734512016[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4477925892734512016[132] = 1;
   out_4477925892734512016[133] = 0;
   out_4477925892734512016[134] = 0;
   out_4477925892734512016[135] = 0;
   out_4477925892734512016[136] = 0;
   out_4477925892734512016[137] = 0;
   out_4477925892734512016[138] = 0;
   out_4477925892734512016[139] = 0;
   out_4477925892734512016[140] = 0;
   out_4477925892734512016[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4477925892734512016[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4477925892734512016[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4477925892734512016[144] = 0;
   out_4477925892734512016[145] = 0;
   out_4477925892734512016[146] = 0;
   out_4477925892734512016[147] = 0;
   out_4477925892734512016[148] = 0;
   out_4477925892734512016[149] = 0;
   out_4477925892734512016[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4477925892734512016[151] = 0;
   out_4477925892734512016[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4477925892734512016[153] = 0;
   out_4477925892734512016[154] = 1;
   out_4477925892734512016[155] = 0;
   out_4477925892734512016[156] = 0;
   out_4477925892734512016[157] = 0;
   out_4477925892734512016[158] = 0;
   out_4477925892734512016[159] = 0;
   out_4477925892734512016[160] = 0;
   out_4477925892734512016[161] = 0;
   out_4477925892734512016[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4477925892734512016[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4477925892734512016[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4477925892734512016[165] = 0;
   out_4477925892734512016[166] = 0;
   out_4477925892734512016[167] = 0;
   out_4477925892734512016[168] = 0;
   out_4477925892734512016[169] = 0;
   out_4477925892734512016[170] = 0;
   out_4477925892734512016[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4477925892734512016[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4477925892734512016[173] = 0;
   out_4477925892734512016[174] = 0;
   out_4477925892734512016[175] = 0;
   out_4477925892734512016[176] = 1;
   out_4477925892734512016[177] = 0;
   out_4477925892734512016[178] = 0;
   out_4477925892734512016[179] = 0;
   out_4477925892734512016[180] = 0;
   out_4477925892734512016[181] = 0;
   out_4477925892734512016[182] = 0;
   out_4477925892734512016[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4477925892734512016[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4477925892734512016[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4477925892734512016[186] = 0;
   out_4477925892734512016[187] = 0;
   out_4477925892734512016[188] = 0;
   out_4477925892734512016[189] = 0;
   out_4477925892734512016[190] = 0;
   out_4477925892734512016[191] = 0;
   out_4477925892734512016[192] = 0;
   out_4477925892734512016[193] = 0;
   out_4477925892734512016[194] = 0;
   out_4477925892734512016[195] = 0;
   out_4477925892734512016[196] = 0;
   out_4477925892734512016[197] = 0;
   out_4477925892734512016[198] = 1;
   out_4477925892734512016[199] = 0;
   out_4477925892734512016[200] = 0;
   out_4477925892734512016[201] = 0;
   out_4477925892734512016[202] = 0;
   out_4477925892734512016[203] = 0;
   out_4477925892734512016[204] = 0;
   out_4477925892734512016[205] = 0;
   out_4477925892734512016[206] = 0;
   out_4477925892734512016[207] = 0;
   out_4477925892734512016[208] = 0;
   out_4477925892734512016[209] = 0;
   out_4477925892734512016[210] = 0;
   out_4477925892734512016[211] = 0;
   out_4477925892734512016[212] = 0;
   out_4477925892734512016[213] = 0;
   out_4477925892734512016[214] = 0;
   out_4477925892734512016[215] = 0;
   out_4477925892734512016[216] = 0;
   out_4477925892734512016[217] = 0;
   out_4477925892734512016[218] = 0;
   out_4477925892734512016[219] = 0;
   out_4477925892734512016[220] = 1;
   out_4477925892734512016[221] = 0;
   out_4477925892734512016[222] = 0;
   out_4477925892734512016[223] = 0;
   out_4477925892734512016[224] = 0;
   out_4477925892734512016[225] = 0;
   out_4477925892734512016[226] = 0;
   out_4477925892734512016[227] = 0;
   out_4477925892734512016[228] = 0;
   out_4477925892734512016[229] = 0;
   out_4477925892734512016[230] = 0;
   out_4477925892734512016[231] = 0;
   out_4477925892734512016[232] = 0;
   out_4477925892734512016[233] = 0;
   out_4477925892734512016[234] = 0;
   out_4477925892734512016[235] = 0;
   out_4477925892734512016[236] = 0;
   out_4477925892734512016[237] = 0;
   out_4477925892734512016[238] = 0;
   out_4477925892734512016[239] = 0;
   out_4477925892734512016[240] = 0;
   out_4477925892734512016[241] = 0;
   out_4477925892734512016[242] = 1;
   out_4477925892734512016[243] = 0;
   out_4477925892734512016[244] = 0;
   out_4477925892734512016[245] = 0;
   out_4477925892734512016[246] = 0;
   out_4477925892734512016[247] = 0;
   out_4477925892734512016[248] = 0;
   out_4477925892734512016[249] = 0;
   out_4477925892734512016[250] = 0;
   out_4477925892734512016[251] = 0;
   out_4477925892734512016[252] = 0;
   out_4477925892734512016[253] = 0;
   out_4477925892734512016[254] = 0;
   out_4477925892734512016[255] = 0;
   out_4477925892734512016[256] = 0;
   out_4477925892734512016[257] = 0;
   out_4477925892734512016[258] = 0;
   out_4477925892734512016[259] = 0;
   out_4477925892734512016[260] = 0;
   out_4477925892734512016[261] = 0;
   out_4477925892734512016[262] = 0;
   out_4477925892734512016[263] = 0;
   out_4477925892734512016[264] = 1;
   out_4477925892734512016[265] = 0;
   out_4477925892734512016[266] = 0;
   out_4477925892734512016[267] = 0;
   out_4477925892734512016[268] = 0;
   out_4477925892734512016[269] = 0;
   out_4477925892734512016[270] = 0;
   out_4477925892734512016[271] = 0;
   out_4477925892734512016[272] = 0;
   out_4477925892734512016[273] = 0;
   out_4477925892734512016[274] = 0;
   out_4477925892734512016[275] = 0;
   out_4477925892734512016[276] = 0;
   out_4477925892734512016[277] = 0;
   out_4477925892734512016[278] = 0;
   out_4477925892734512016[279] = 0;
   out_4477925892734512016[280] = 0;
   out_4477925892734512016[281] = 0;
   out_4477925892734512016[282] = 0;
   out_4477925892734512016[283] = 0;
   out_4477925892734512016[284] = 0;
   out_4477925892734512016[285] = 0;
   out_4477925892734512016[286] = 1;
   out_4477925892734512016[287] = 0;
   out_4477925892734512016[288] = 0;
   out_4477925892734512016[289] = 0;
   out_4477925892734512016[290] = 0;
   out_4477925892734512016[291] = 0;
   out_4477925892734512016[292] = 0;
   out_4477925892734512016[293] = 0;
   out_4477925892734512016[294] = 0;
   out_4477925892734512016[295] = 0;
   out_4477925892734512016[296] = 0;
   out_4477925892734512016[297] = 0;
   out_4477925892734512016[298] = 0;
   out_4477925892734512016[299] = 0;
   out_4477925892734512016[300] = 0;
   out_4477925892734512016[301] = 0;
   out_4477925892734512016[302] = 0;
   out_4477925892734512016[303] = 0;
   out_4477925892734512016[304] = 0;
   out_4477925892734512016[305] = 0;
   out_4477925892734512016[306] = 0;
   out_4477925892734512016[307] = 0;
   out_4477925892734512016[308] = 1;
   out_4477925892734512016[309] = 0;
   out_4477925892734512016[310] = 0;
   out_4477925892734512016[311] = 0;
   out_4477925892734512016[312] = 0;
   out_4477925892734512016[313] = 0;
   out_4477925892734512016[314] = 0;
   out_4477925892734512016[315] = 0;
   out_4477925892734512016[316] = 0;
   out_4477925892734512016[317] = 0;
   out_4477925892734512016[318] = 0;
   out_4477925892734512016[319] = 0;
   out_4477925892734512016[320] = 0;
   out_4477925892734512016[321] = 0;
   out_4477925892734512016[322] = 0;
   out_4477925892734512016[323] = 0;
   out_4477925892734512016[324] = 0;
   out_4477925892734512016[325] = 0;
   out_4477925892734512016[326] = 0;
   out_4477925892734512016[327] = 0;
   out_4477925892734512016[328] = 0;
   out_4477925892734512016[329] = 0;
   out_4477925892734512016[330] = 1;
   out_4477925892734512016[331] = 0;
   out_4477925892734512016[332] = 0;
   out_4477925892734512016[333] = 0;
   out_4477925892734512016[334] = 0;
   out_4477925892734512016[335] = 0;
   out_4477925892734512016[336] = 0;
   out_4477925892734512016[337] = 0;
   out_4477925892734512016[338] = 0;
   out_4477925892734512016[339] = 0;
   out_4477925892734512016[340] = 0;
   out_4477925892734512016[341] = 0;
   out_4477925892734512016[342] = 0;
   out_4477925892734512016[343] = 0;
   out_4477925892734512016[344] = 0;
   out_4477925892734512016[345] = 0;
   out_4477925892734512016[346] = 0;
   out_4477925892734512016[347] = 0;
   out_4477925892734512016[348] = 0;
   out_4477925892734512016[349] = 0;
   out_4477925892734512016[350] = 0;
   out_4477925892734512016[351] = 0;
   out_4477925892734512016[352] = 1;
   out_4477925892734512016[353] = 0;
   out_4477925892734512016[354] = 0;
   out_4477925892734512016[355] = 0;
   out_4477925892734512016[356] = 0;
   out_4477925892734512016[357] = 0;
   out_4477925892734512016[358] = 0;
   out_4477925892734512016[359] = 0;
   out_4477925892734512016[360] = 0;
   out_4477925892734512016[361] = 0;
   out_4477925892734512016[362] = 0;
   out_4477925892734512016[363] = 0;
   out_4477925892734512016[364] = 0;
   out_4477925892734512016[365] = 0;
   out_4477925892734512016[366] = 0;
   out_4477925892734512016[367] = 0;
   out_4477925892734512016[368] = 0;
   out_4477925892734512016[369] = 0;
   out_4477925892734512016[370] = 0;
   out_4477925892734512016[371] = 0;
   out_4477925892734512016[372] = 0;
   out_4477925892734512016[373] = 0;
   out_4477925892734512016[374] = 1;
   out_4477925892734512016[375] = 0;
   out_4477925892734512016[376] = 0;
   out_4477925892734512016[377] = 0;
   out_4477925892734512016[378] = 0;
   out_4477925892734512016[379] = 0;
   out_4477925892734512016[380] = 0;
   out_4477925892734512016[381] = 0;
   out_4477925892734512016[382] = 0;
   out_4477925892734512016[383] = 0;
   out_4477925892734512016[384] = 0;
   out_4477925892734512016[385] = 0;
   out_4477925892734512016[386] = 0;
   out_4477925892734512016[387] = 0;
   out_4477925892734512016[388] = 0;
   out_4477925892734512016[389] = 0;
   out_4477925892734512016[390] = 0;
   out_4477925892734512016[391] = 0;
   out_4477925892734512016[392] = 0;
   out_4477925892734512016[393] = 0;
   out_4477925892734512016[394] = 0;
   out_4477925892734512016[395] = 0;
   out_4477925892734512016[396] = 1;
   out_4477925892734512016[397] = 0;
   out_4477925892734512016[398] = 0;
   out_4477925892734512016[399] = 0;
   out_4477925892734512016[400] = 0;
   out_4477925892734512016[401] = 0;
   out_4477925892734512016[402] = 0;
   out_4477925892734512016[403] = 0;
   out_4477925892734512016[404] = 0;
   out_4477925892734512016[405] = 0;
   out_4477925892734512016[406] = 0;
   out_4477925892734512016[407] = 0;
   out_4477925892734512016[408] = 0;
   out_4477925892734512016[409] = 0;
   out_4477925892734512016[410] = 0;
   out_4477925892734512016[411] = 0;
   out_4477925892734512016[412] = 0;
   out_4477925892734512016[413] = 0;
   out_4477925892734512016[414] = 0;
   out_4477925892734512016[415] = 0;
   out_4477925892734512016[416] = 0;
   out_4477925892734512016[417] = 0;
   out_4477925892734512016[418] = 1;
   out_4477925892734512016[419] = 0;
   out_4477925892734512016[420] = 0;
   out_4477925892734512016[421] = 0;
   out_4477925892734512016[422] = 0;
   out_4477925892734512016[423] = 0;
   out_4477925892734512016[424] = 0;
   out_4477925892734512016[425] = 0;
   out_4477925892734512016[426] = 0;
   out_4477925892734512016[427] = 0;
   out_4477925892734512016[428] = 0;
   out_4477925892734512016[429] = 0;
   out_4477925892734512016[430] = 0;
   out_4477925892734512016[431] = 0;
   out_4477925892734512016[432] = 0;
   out_4477925892734512016[433] = 0;
   out_4477925892734512016[434] = 0;
   out_4477925892734512016[435] = 0;
   out_4477925892734512016[436] = 0;
   out_4477925892734512016[437] = 0;
   out_4477925892734512016[438] = 0;
   out_4477925892734512016[439] = 0;
   out_4477925892734512016[440] = 1;
}
void h_4(double *state, double *unused, double *out_2049300586775533074) {
   out_2049300586775533074[0] = state[10] + state[13];
   out_2049300586775533074[1] = state[11] + state[14];
   out_2049300586775533074[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3504908545151622782) {
   out_3504908545151622782[0] = 0;
   out_3504908545151622782[1] = 0;
   out_3504908545151622782[2] = 0;
   out_3504908545151622782[3] = 0;
   out_3504908545151622782[4] = 0;
   out_3504908545151622782[5] = 0;
   out_3504908545151622782[6] = 0;
   out_3504908545151622782[7] = 0;
   out_3504908545151622782[8] = 0;
   out_3504908545151622782[9] = 0;
   out_3504908545151622782[10] = 1;
   out_3504908545151622782[11] = 0;
   out_3504908545151622782[12] = 0;
   out_3504908545151622782[13] = 1;
   out_3504908545151622782[14] = 0;
   out_3504908545151622782[15] = 0;
   out_3504908545151622782[16] = 0;
   out_3504908545151622782[17] = 0;
   out_3504908545151622782[18] = 0;
   out_3504908545151622782[19] = 0;
   out_3504908545151622782[20] = 0;
   out_3504908545151622782[21] = 0;
   out_3504908545151622782[22] = 0;
   out_3504908545151622782[23] = 0;
   out_3504908545151622782[24] = 0;
   out_3504908545151622782[25] = 0;
   out_3504908545151622782[26] = 0;
   out_3504908545151622782[27] = 0;
   out_3504908545151622782[28] = 0;
   out_3504908545151622782[29] = 0;
   out_3504908545151622782[30] = 0;
   out_3504908545151622782[31] = 0;
   out_3504908545151622782[32] = 0;
   out_3504908545151622782[33] = 1;
   out_3504908545151622782[34] = 0;
   out_3504908545151622782[35] = 0;
   out_3504908545151622782[36] = 1;
   out_3504908545151622782[37] = 0;
   out_3504908545151622782[38] = 0;
   out_3504908545151622782[39] = 0;
   out_3504908545151622782[40] = 0;
   out_3504908545151622782[41] = 0;
   out_3504908545151622782[42] = 0;
   out_3504908545151622782[43] = 0;
   out_3504908545151622782[44] = 0;
   out_3504908545151622782[45] = 0;
   out_3504908545151622782[46] = 0;
   out_3504908545151622782[47] = 0;
   out_3504908545151622782[48] = 0;
   out_3504908545151622782[49] = 0;
   out_3504908545151622782[50] = 0;
   out_3504908545151622782[51] = 0;
   out_3504908545151622782[52] = 0;
   out_3504908545151622782[53] = 0;
   out_3504908545151622782[54] = 0;
   out_3504908545151622782[55] = 0;
   out_3504908545151622782[56] = 1;
   out_3504908545151622782[57] = 0;
   out_3504908545151622782[58] = 0;
   out_3504908545151622782[59] = 1;
   out_3504908545151622782[60] = 0;
   out_3504908545151622782[61] = 0;
   out_3504908545151622782[62] = 0;
   out_3504908545151622782[63] = 0;
   out_3504908545151622782[64] = 0;
   out_3504908545151622782[65] = 0;
}
void h_9(double *state, double *unused, double *out_3029352434737979824) {
   out_3029352434737979824[0] = state[10];
   out_3029352434737979824[1] = state[11];
   out_3029352434737979824[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3746098191781213427) {
   out_3746098191781213427[0] = 0;
   out_3746098191781213427[1] = 0;
   out_3746098191781213427[2] = 0;
   out_3746098191781213427[3] = 0;
   out_3746098191781213427[4] = 0;
   out_3746098191781213427[5] = 0;
   out_3746098191781213427[6] = 0;
   out_3746098191781213427[7] = 0;
   out_3746098191781213427[8] = 0;
   out_3746098191781213427[9] = 0;
   out_3746098191781213427[10] = 1;
   out_3746098191781213427[11] = 0;
   out_3746098191781213427[12] = 0;
   out_3746098191781213427[13] = 0;
   out_3746098191781213427[14] = 0;
   out_3746098191781213427[15] = 0;
   out_3746098191781213427[16] = 0;
   out_3746098191781213427[17] = 0;
   out_3746098191781213427[18] = 0;
   out_3746098191781213427[19] = 0;
   out_3746098191781213427[20] = 0;
   out_3746098191781213427[21] = 0;
   out_3746098191781213427[22] = 0;
   out_3746098191781213427[23] = 0;
   out_3746098191781213427[24] = 0;
   out_3746098191781213427[25] = 0;
   out_3746098191781213427[26] = 0;
   out_3746098191781213427[27] = 0;
   out_3746098191781213427[28] = 0;
   out_3746098191781213427[29] = 0;
   out_3746098191781213427[30] = 0;
   out_3746098191781213427[31] = 0;
   out_3746098191781213427[32] = 0;
   out_3746098191781213427[33] = 1;
   out_3746098191781213427[34] = 0;
   out_3746098191781213427[35] = 0;
   out_3746098191781213427[36] = 0;
   out_3746098191781213427[37] = 0;
   out_3746098191781213427[38] = 0;
   out_3746098191781213427[39] = 0;
   out_3746098191781213427[40] = 0;
   out_3746098191781213427[41] = 0;
   out_3746098191781213427[42] = 0;
   out_3746098191781213427[43] = 0;
   out_3746098191781213427[44] = 0;
   out_3746098191781213427[45] = 0;
   out_3746098191781213427[46] = 0;
   out_3746098191781213427[47] = 0;
   out_3746098191781213427[48] = 0;
   out_3746098191781213427[49] = 0;
   out_3746098191781213427[50] = 0;
   out_3746098191781213427[51] = 0;
   out_3746098191781213427[52] = 0;
   out_3746098191781213427[53] = 0;
   out_3746098191781213427[54] = 0;
   out_3746098191781213427[55] = 0;
   out_3746098191781213427[56] = 1;
   out_3746098191781213427[57] = 0;
   out_3746098191781213427[58] = 0;
   out_3746098191781213427[59] = 0;
   out_3746098191781213427[60] = 0;
   out_3746098191781213427[61] = 0;
   out_3746098191781213427[62] = 0;
   out_3746098191781213427[63] = 0;
   out_3746098191781213427[64] = 0;
   out_3746098191781213427[65] = 0;
}
void h_10(double *state, double *unused, double *out_5156096663942463150) {
   out_5156096663942463150[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5156096663942463150[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5156096663942463150[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7069380455890325937) {
   out_7069380455890325937[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7069380455890325937[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7069380455890325937[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7069380455890325937[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7069380455890325937[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7069380455890325937[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7069380455890325937[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7069380455890325937[7] = 0;
   out_7069380455890325937[8] = 0;
   out_7069380455890325937[9] = 0;
   out_7069380455890325937[10] = 0;
   out_7069380455890325937[11] = 0;
   out_7069380455890325937[12] = 0;
   out_7069380455890325937[13] = 0;
   out_7069380455890325937[14] = 0;
   out_7069380455890325937[15] = 0;
   out_7069380455890325937[16] = 1;
   out_7069380455890325937[17] = 0;
   out_7069380455890325937[18] = 0;
   out_7069380455890325937[19] = 1;
   out_7069380455890325937[20] = 0;
   out_7069380455890325937[21] = 0;
   out_7069380455890325937[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7069380455890325937[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7069380455890325937[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7069380455890325937[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7069380455890325937[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7069380455890325937[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7069380455890325937[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7069380455890325937[29] = 0;
   out_7069380455890325937[30] = 0;
   out_7069380455890325937[31] = 0;
   out_7069380455890325937[32] = 0;
   out_7069380455890325937[33] = 0;
   out_7069380455890325937[34] = 0;
   out_7069380455890325937[35] = 0;
   out_7069380455890325937[36] = 0;
   out_7069380455890325937[37] = 0;
   out_7069380455890325937[38] = 0;
   out_7069380455890325937[39] = 1;
   out_7069380455890325937[40] = 0;
   out_7069380455890325937[41] = 0;
   out_7069380455890325937[42] = 1;
   out_7069380455890325937[43] = 0;
   out_7069380455890325937[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7069380455890325937[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7069380455890325937[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7069380455890325937[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7069380455890325937[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7069380455890325937[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7069380455890325937[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7069380455890325937[51] = 0;
   out_7069380455890325937[52] = 0;
   out_7069380455890325937[53] = 0;
   out_7069380455890325937[54] = 0;
   out_7069380455890325937[55] = 0;
   out_7069380455890325937[56] = 0;
   out_7069380455890325937[57] = 0;
   out_7069380455890325937[58] = 0;
   out_7069380455890325937[59] = 0;
   out_7069380455890325937[60] = 0;
   out_7069380455890325937[61] = 0;
   out_7069380455890325937[62] = 1;
   out_7069380455890325937[63] = 0;
   out_7069380455890325937[64] = 0;
   out_7069380455890325937[65] = 1;
}
void h_12(double *state, double *unused, double *out_6327196369862355313) {
   out_6327196369862355313[0] = state[0];
   out_6327196369862355313[1] = state[1];
   out_6327196369862355313[2] = state[2];
}
void H_12(double *state, double *unused, double *out_4126007570199216449) {
   out_4126007570199216449[0] = 1;
   out_4126007570199216449[1] = 0;
   out_4126007570199216449[2] = 0;
   out_4126007570199216449[3] = 0;
   out_4126007570199216449[4] = 0;
   out_4126007570199216449[5] = 0;
   out_4126007570199216449[6] = 0;
   out_4126007570199216449[7] = 0;
   out_4126007570199216449[8] = 0;
   out_4126007570199216449[9] = 0;
   out_4126007570199216449[10] = 0;
   out_4126007570199216449[11] = 0;
   out_4126007570199216449[12] = 0;
   out_4126007570199216449[13] = 0;
   out_4126007570199216449[14] = 0;
   out_4126007570199216449[15] = 0;
   out_4126007570199216449[16] = 0;
   out_4126007570199216449[17] = 0;
   out_4126007570199216449[18] = 0;
   out_4126007570199216449[19] = 0;
   out_4126007570199216449[20] = 0;
   out_4126007570199216449[21] = 0;
   out_4126007570199216449[22] = 0;
   out_4126007570199216449[23] = 1;
   out_4126007570199216449[24] = 0;
   out_4126007570199216449[25] = 0;
   out_4126007570199216449[26] = 0;
   out_4126007570199216449[27] = 0;
   out_4126007570199216449[28] = 0;
   out_4126007570199216449[29] = 0;
   out_4126007570199216449[30] = 0;
   out_4126007570199216449[31] = 0;
   out_4126007570199216449[32] = 0;
   out_4126007570199216449[33] = 0;
   out_4126007570199216449[34] = 0;
   out_4126007570199216449[35] = 0;
   out_4126007570199216449[36] = 0;
   out_4126007570199216449[37] = 0;
   out_4126007570199216449[38] = 0;
   out_4126007570199216449[39] = 0;
   out_4126007570199216449[40] = 0;
   out_4126007570199216449[41] = 0;
   out_4126007570199216449[42] = 0;
   out_4126007570199216449[43] = 0;
   out_4126007570199216449[44] = 0;
   out_4126007570199216449[45] = 0;
   out_4126007570199216449[46] = 1;
   out_4126007570199216449[47] = 0;
   out_4126007570199216449[48] = 0;
   out_4126007570199216449[49] = 0;
   out_4126007570199216449[50] = 0;
   out_4126007570199216449[51] = 0;
   out_4126007570199216449[52] = 0;
   out_4126007570199216449[53] = 0;
   out_4126007570199216449[54] = 0;
   out_4126007570199216449[55] = 0;
   out_4126007570199216449[56] = 0;
   out_4126007570199216449[57] = 0;
   out_4126007570199216449[58] = 0;
   out_4126007570199216449[59] = 0;
   out_4126007570199216449[60] = 0;
   out_4126007570199216449[61] = 0;
   out_4126007570199216449[62] = 0;
   out_4126007570199216449[63] = 0;
   out_4126007570199216449[64] = 0;
   out_4126007570199216449[65] = 0;
}
void h_35(double *state, double *unused, double *out_3094780481565367805) {
   out_3094780481565367805[0] = state[7];
   out_3094780481565367805[1] = state[8];
   out_3094780481565367805[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6871570602524230158) {
   out_6871570602524230158[0] = 0;
   out_6871570602524230158[1] = 0;
   out_6871570602524230158[2] = 0;
   out_6871570602524230158[3] = 0;
   out_6871570602524230158[4] = 0;
   out_6871570602524230158[5] = 0;
   out_6871570602524230158[6] = 0;
   out_6871570602524230158[7] = 1;
   out_6871570602524230158[8] = 0;
   out_6871570602524230158[9] = 0;
   out_6871570602524230158[10] = 0;
   out_6871570602524230158[11] = 0;
   out_6871570602524230158[12] = 0;
   out_6871570602524230158[13] = 0;
   out_6871570602524230158[14] = 0;
   out_6871570602524230158[15] = 0;
   out_6871570602524230158[16] = 0;
   out_6871570602524230158[17] = 0;
   out_6871570602524230158[18] = 0;
   out_6871570602524230158[19] = 0;
   out_6871570602524230158[20] = 0;
   out_6871570602524230158[21] = 0;
   out_6871570602524230158[22] = 0;
   out_6871570602524230158[23] = 0;
   out_6871570602524230158[24] = 0;
   out_6871570602524230158[25] = 0;
   out_6871570602524230158[26] = 0;
   out_6871570602524230158[27] = 0;
   out_6871570602524230158[28] = 0;
   out_6871570602524230158[29] = 0;
   out_6871570602524230158[30] = 1;
   out_6871570602524230158[31] = 0;
   out_6871570602524230158[32] = 0;
   out_6871570602524230158[33] = 0;
   out_6871570602524230158[34] = 0;
   out_6871570602524230158[35] = 0;
   out_6871570602524230158[36] = 0;
   out_6871570602524230158[37] = 0;
   out_6871570602524230158[38] = 0;
   out_6871570602524230158[39] = 0;
   out_6871570602524230158[40] = 0;
   out_6871570602524230158[41] = 0;
   out_6871570602524230158[42] = 0;
   out_6871570602524230158[43] = 0;
   out_6871570602524230158[44] = 0;
   out_6871570602524230158[45] = 0;
   out_6871570602524230158[46] = 0;
   out_6871570602524230158[47] = 0;
   out_6871570602524230158[48] = 0;
   out_6871570602524230158[49] = 0;
   out_6871570602524230158[50] = 0;
   out_6871570602524230158[51] = 0;
   out_6871570602524230158[52] = 0;
   out_6871570602524230158[53] = 1;
   out_6871570602524230158[54] = 0;
   out_6871570602524230158[55] = 0;
   out_6871570602524230158[56] = 0;
   out_6871570602524230158[57] = 0;
   out_6871570602524230158[58] = 0;
   out_6871570602524230158[59] = 0;
   out_6871570602524230158[60] = 0;
   out_6871570602524230158[61] = 0;
   out_6871570602524230158[62] = 0;
   out_6871570602524230158[63] = 0;
   out_6871570602524230158[64] = 0;
   out_6871570602524230158[65] = 0;
}
void h_32(double *state, double *unused, double *out_8860832639555582272) {
   out_8860832639555582272[0] = state[3];
   out_8860832639555582272[1] = state[4];
   out_8860832639555582272[2] = state[5];
   out_8860832639555582272[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8791515306766903865) {
   out_8791515306766903865[0] = 0;
   out_8791515306766903865[1] = 0;
   out_8791515306766903865[2] = 0;
   out_8791515306766903865[3] = 1;
   out_8791515306766903865[4] = 0;
   out_8791515306766903865[5] = 0;
   out_8791515306766903865[6] = 0;
   out_8791515306766903865[7] = 0;
   out_8791515306766903865[8] = 0;
   out_8791515306766903865[9] = 0;
   out_8791515306766903865[10] = 0;
   out_8791515306766903865[11] = 0;
   out_8791515306766903865[12] = 0;
   out_8791515306766903865[13] = 0;
   out_8791515306766903865[14] = 0;
   out_8791515306766903865[15] = 0;
   out_8791515306766903865[16] = 0;
   out_8791515306766903865[17] = 0;
   out_8791515306766903865[18] = 0;
   out_8791515306766903865[19] = 0;
   out_8791515306766903865[20] = 0;
   out_8791515306766903865[21] = 0;
   out_8791515306766903865[22] = 0;
   out_8791515306766903865[23] = 0;
   out_8791515306766903865[24] = 0;
   out_8791515306766903865[25] = 0;
   out_8791515306766903865[26] = 1;
   out_8791515306766903865[27] = 0;
   out_8791515306766903865[28] = 0;
   out_8791515306766903865[29] = 0;
   out_8791515306766903865[30] = 0;
   out_8791515306766903865[31] = 0;
   out_8791515306766903865[32] = 0;
   out_8791515306766903865[33] = 0;
   out_8791515306766903865[34] = 0;
   out_8791515306766903865[35] = 0;
   out_8791515306766903865[36] = 0;
   out_8791515306766903865[37] = 0;
   out_8791515306766903865[38] = 0;
   out_8791515306766903865[39] = 0;
   out_8791515306766903865[40] = 0;
   out_8791515306766903865[41] = 0;
   out_8791515306766903865[42] = 0;
   out_8791515306766903865[43] = 0;
   out_8791515306766903865[44] = 0;
   out_8791515306766903865[45] = 0;
   out_8791515306766903865[46] = 0;
   out_8791515306766903865[47] = 0;
   out_8791515306766903865[48] = 0;
   out_8791515306766903865[49] = 1;
   out_8791515306766903865[50] = 0;
   out_8791515306766903865[51] = 0;
   out_8791515306766903865[52] = 0;
   out_8791515306766903865[53] = 0;
   out_8791515306766903865[54] = 0;
   out_8791515306766903865[55] = 0;
   out_8791515306766903865[56] = 0;
   out_8791515306766903865[57] = 0;
   out_8791515306766903865[58] = 0;
   out_8791515306766903865[59] = 0;
   out_8791515306766903865[60] = 0;
   out_8791515306766903865[61] = 0;
   out_8791515306766903865[62] = 0;
   out_8791515306766903865[63] = 0;
   out_8791515306766903865[64] = 0;
   out_8791515306766903865[65] = 0;
   out_8791515306766903865[66] = 0;
   out_8791515306766903865[67] = 0;
   out_8791515306766903865[68] = 0;
   out_8791515306766903865[69] = 0;
   out_8791515306766903865[70] = 0;
   out_8791515306766903865[71] = 0;
   out_8791515306766903865[72] = 1;
   out_8791515306766903865[73] = 0;
   out_8791515306766903865[74] = 0;
   out_8791515306766903865[75] = 0;
   out_8791515306766903865[76] = 0;
   out_8791515306766903865[77] = 0;
   out_8791515306766903865[78] = 0;
   out_8791515306766903865[79] = 0;
   out_8791515306766903865[80] = 0;
   out_8791515306766903865[81] = 0;
   out_8791515306766903865[82] = 0;
   out_8791515306766903865[83] = 0;
   out_8791515306766903865[84] = 0;
   out_8791515306766903865[85] = 0;
   out_8791515306766903865[86] = 0;
   out_8791515306766903865[87] = 0;
}
void h_13(double *state, double *unused, double *out_9051744925349511716) {
   out_9051744925349511716[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_9051744925349511716[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_9051744925349511716[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6103743478768174708) {
   out_6103743478768174708[0] = 0;
   out_6103743478768174708[1] = 0;
   out_6103743478768174708[2] = 0;
   out_6103743478768174708[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6103743478768174708[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6103743478768174708[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6103743478768174708[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6103743478768174708[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6103743478768174708[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6103743478768174708[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6103743478768174708[10] = 0;
   out_6103743478768174708[11] = 0;
   out_6103743478768174708[12] = 0;
   out_6103743478768174708[13] = 0;
   out_6103743478768174708[14] = 0;
   out_6103743478768174708[15] = 0;
   out_6103743478768174708[16] = 0;
   out_6103743478768174708[17] = 0;
   out_6103743478768174708[18] = 0;
   out_6103743478768174708[19] = 0;
   out_6103743478768174708[20] = 0;
   out_6103743478768174708[21] = 0;
   out_6103743478768174708[22] = 0;
   out_6103743478768174708[23] = 0;
   out_6103743478768174708[24] = 0;
   out_6103743478768174708[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6103743478768174708[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6103743478768174708[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6103743478768174708[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6103743478768174708[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6103743478768174708[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6103743478768174708[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6103743478768174708[32] = 0;
   out_6103743478768174708[33] = 0;
   out_6103743478768174708[34] = 0;
   out_6103743478768174708[35] = 0;
   out_6103743478768174708[36] = 0;
   out_6103743478768174708[37] = 0;
   out_6103743478768174708[38] = 0;
   out_6103743478768174708[39] = 0;
   out_6103743478768174708[40] = 0;
   out_6103743478768174708[41] = 0;
   out_6103743478768174708[42] = 0;
   out_6103743478768174708[43] = 0;
   out_6103743478768174708[44] = 0;
   out_6103743478768174708[45] = 0;
   out_6103743478768174708[46] = 0;
   out_6103743478768174708[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6103743478768174708[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6103743478768174708[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6103743478768174708[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6103743478768174708[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6103743478768174708[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6103743478768174708[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6103743478768174708[54] = 0;
   out_6103743478768174708[55] = 0;
   out_6103743478768174708[56] = 0;
   out_6103743478768174708[57] = 0;
   out_6103743478768174708[58] = 0;
   out_6103743478768174708[59] = 0;
   out_6103743478768174708[60] = 0;
   out_6103743478768174708[61] = 0;
   out_6103743478768174708[62] = 0;
   out_6103743478768174708[63] = 0;
   out_6103743478768174708[64] = 0;
   out_6103743478768174708[65] = 0;
}
void h_14(double *state, double *unused, double *out_3029352434737979824) {
   out_3029352434737979824[0] = state[10];
   out_3029352434737979824[1] = state[11];
   out_3029352434737979824[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3746098191781213427) {
   out_3746098191781213427[0] = 0;
   out_3746098191781213427[1] = 0;
   out_3746098191781213427[2] = 0;
   out_3746098191781213427[3] = 0;
   out_3746098191781213427[4] = 0;
   out_3746098191781213427[5] = 0;
   out_3746098191781213427[6] = 0;
   out_3746098191781213427[7] = 0;
   out_3746098191781213427[8] = 0;
   out_3746098191781213427[9] = 0;
   out_3746098191781213427[10] = 1;
   out_3746098191781213427[11] = 0;
   out_3746098191781213427[12] = 0;
   out_3746098191781213427[13] = 0;
   out_3746098191781213427[14] = 0;
   out_3746098191781213427[15] = 0;
   out_3746098191781213427[16] = 0;
   out_3746098191781213427[17] = 0;
   out_3746098191781213427[18] = 0;
   out_3746098191781213427[19] = 0;
   out_3746098191781213427[20] = 0;
   out_3746098191781213427[21] = 0;
   out_3746098191781213427[22] = 0;
   out_3746098191781213427[23] = 0;
   out_3746098191781213427[24] = 0;
   out_3746098191781213427[25] = 0;
   out_3746098191781213427[26] = 0;
   out_3746098191781213427[27] = 0;
   out_3746098191781213427[28] = 0;
   out_3746098191781213427[29] = 0;
   out_3746098191781213427[30] = 0;
   out_3746098191781213427[31] = 0;
   out_3746098191781213427[32] = 0;
   out_3746098191781213427[33] = 1;
   out_3746098191781213427[34] = 0;
   out_3746098191781213427[35] = 0;
   out_3746098191781213427[36] = 0;
   out_3746098191781213427[37] = 0;
   out_3746098191781213427[38] = 0;
   out_3746098191781213427[39] = 0;
   out_3746098191781213427[40] = 0;
   out_3746098191781213427[41] = 0;
   out_3746098191781213427[42] = 0;
   out_3746098191781213427[43] = 0;
   out_3746098191781213427[44] = 0;
   out_3746098191781213427[45] = 0;
   out_3746098191781213427[46] = 0;
   out_3746098191781213427[47] = 0;
   out_3746098191781213427[48] = 0;
   out_3746098191781213427[49] = 0;
   out_3746098191781213427[50] = 0;
   out_3746098191781213427[51] = 0;
   out_3746098191781213427[52] = 0;
   out_3746098191781213427[53] = 0;
   out_3746098191781213427[54] = 0;
   out_3746098191781213427[55] = 0;
   out_3746098191781213427[56] = 1;
   out_3746098191781213427[57] = 0;
   out_3746098191781213427[58] = 0;
   out_3746098191781213427[59] = 0;
   out_3746098191781213427[60] = 0;
   out_3746098191781213427[61] = 0;
   out_3746098191781213427[62] = 0;
   out_3746098191781213427[63] = 0;
   out_3746098191781213427[64] = 0;
   out_3746098191781213427[65] = 0;
}
void h_33(double *state, double *unused, double *out_7771651507720581050) {
   out_7771651507720581050[0] = state[16];
   out_7771651507720581050[1] = state[17];
   out_7771651507720581050[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8424616466546463854) {
   out_8424616466546463854[0] = 0;
   out_8424616466546463854[1] = 0;
   out_8424616466546463854[2] = 0;
   out_8424616466546463854[3] = 0;
   out_8424616466546463854[4] = 0;
   out_8424616466546463854[5] = 0;
   out_8424616466546463854[6] = 0;
   out_8424616466546463854[7] = 0;
   out_8424616466546463854[8] = 0;
   out_8424616466546463854[9] = 0;
   out_8424616466546463854[10] = 0;
   out_8424616466546463854[11] = 0;
   out_8424616466546463854[12] = 0;
   out_8424616466546463854[13] = 0;
   out_8424616466546463854[14] = 0;
   out_8424616466546463854[15] = 0;
   out_8424616466546463854[16] = 1;
   out_8424616466546463854[17] = 0;
   out_8424616466546463854[18] = 0;
   out_8424616466546463854[19] = 0;
   out_8424616466546463854[20] = 0;
   out_8424616466546463854[21] = 0;
   out_8424616466546463854[22] = 0;
   out_8424616466546463854[23] = 0;
   out_8424616466546463854[24] = 0;
   out_8424616466546463854[25] = 0;
   out_8424616466546463854[26] = 0;
   out_8424616466546463854[27] = 0;
   out_8424616466546463854[28] = 0;
   out_8424616466546463854[29] = 0;
   out_8424616466546463854[30] = 0;
   out_8424616466546463854[31] = 0;
   out_8424616466546463854[32] = 0;
   out_8424616466546463854[33] = 0;
   out_8424616466546463854[34] = 0;
   out_8424616466546463854[35] = 0;
   out_8424616466546463854[36] = 0;
   out_8424616466546463854[37] = 0;
   out_8424616466546463854[38] = 0;
   out_8424616466546463854[39] = 1;
   out_8424616466546463854[40] = 0;
   out_8424616466546463854[41] = 0;
   out_8424616466546463854[42] = 0;
   out_8424616466546463854[43] = 0;
   out_8424616466546463854[44] = 0;
   out_8424616466546463854[45] = 0;
   out_8424616466546463854[46] = 0;
   out_8424616466546463854[47] = 0;
   out_8424616466546463854[48] = 0;
   out_8424616466546463854[49] = 0;
   out_8424616466546463854[50] = 0;
   out_8424616466546463854[51] = 0;
   out_8424616466546463854[52] = 0;
   out_8424616466546463854[53] = 0;
   out_8424616466546463854[54] = 0;
   out_8424616466546463854[55] = 0;
   out_8424616466546463854[56] = 0;
   out_8424616466546463854[57] = 0;
   out_8424616466546463854[58] = 0;
   out_8424616466546463854[59] = 0;
   out_8424616466546463854[60] = 0;
   out_8424616466546463854[61] = 0;
   out_8424616466546463854[62] = 1;
   out_8424616466546463854[63] = 0;
   out_8424616466546463854[64] = 0;
   out_8424616466546463854[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6885504313352436873) {
  H(in_vec, out_6885504313352436873);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_152958078878653680) {
  err_fun(nom_x, delta_x, out_152958078878653680);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8296264345891091047) {
  inv_err_fun(nom_x, true_x, out_8296264345891091047);
}
void live_H_mod_fun(double *state, double *out_8834843621671259754) {
  H_mod_fun(state, out_8834843621671259754);
}
void live_f_fun(double *state, double dt, double *out_4802251474288259999) {
  f_fun(state,  dt, out_4802251474288259999);
}
void live_F_fun(double *state, double dt, double *out_4477925892734512016) {
  F_fun(state,  dt, out_4477925892734512016);
}
void live_h_4(double *state, double *unused, double *out_2049300586775533074) {
  h_4(state, unused, out_2049300586775533074);
}
void live_H_4(double *state, double *unused, double *out_3504908545151622782) {
  H_4(state, unused, out_3504908545151622782);
}
void live_h_9(double *state, double *unused, double *out_3029352434737979824) {
  h_9(state, unused, out_3029352434737979824);
}
void live_H_9(double *state, double *unused, double *out_3746098191781213427) {
  H_9(state, unused, out_3746098191781213427);
}
void live_h_10(double *state, double *unused, double *out_5156096663942463150) {
  h_10(state, unused, out_5156096663942463150);
}
void live_H_10(double *state, double *unused, double *out_7069380455890325937) {
  H_10(state, unused, out_7069380455890325937);
}
void live_h_12(double *state, double *unused, double *out_6327196369862355313) {
  h_12(state, unused, out_6327196369862355313);
}
void live_H_12(double *state, double *unused, double *out_4126007570199216449) {
  H_12(state, unused, out_4126007570199216449);
}
void live_h_35(double *state, double *unused, double *out_3094780481565367805) {
  h_35(state, unused, out_3094780481565367805);
}
void live_H_35(double *state, double *unused, double *out_6871570602524230158) {
  H_35(state, unused, out_6871570602524230158);
}
void live_h_32(double *state, double *unused, double *out_8860832639555582272) {
  h_32(state, unused, out_8860832639555582272);
}
void live_H_32(double *state, double *unused, double *out_8791515306766903865) {
  H_32(state, unused, out_8791515306766903865);
}
void live_h_13(double *state, double *unused, double *out_9051744925349511716) {
  h_13(state, unused, out_9051744925349511716);
}
void live_H_13(double *state, double *unused, double *out_6103743478768174708) {
  H_13(state, unused, out_6103743478768174708);
}
void live_h_14(double *state, double *unused, double *out_3029352434737979824) {
  h_14(state, unused, out_3029352434737979824);
}
void live_H_14(double *state, double *unused, double *out_3746098191781213427) {
  H_14(state, unused, out_3746098191781213427);
}
void live_h_33(double *state, double *unused, double *out_7771651507720581050) {
  h_33(state, unused, out_7771651507720581050);
}
void live_H_33(double *state, double *unused, double *out_8424616466546463854) {
  H_33(state, unused, out_8424616466546463854);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
