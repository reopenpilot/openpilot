#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3726115798685262350) {
   out_3726115798685262350[0] = 0;
   out_3726115798685262350[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3726115798685262350[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3726115798685262350[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3726115798685262350[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3726115798685262350[5] = -sin(in_vec[1]);
   out_3726115798685262350[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3726115798685262350[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3726115798685262350[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3726115798685262350[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3726115798685262350[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3726115798685262350[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3726115798685262350[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3726115798685262350[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3726115798685262350[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3726115798685262350[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3726115798685262350[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3726115798685262350[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2257357520338428177) {
   out_2257357520338428177[0] = delta_x[0] + nom_x[0];
   out_2257357520338428177[1] = delta_x[1] + nom_x[1];
   out_2257357520338428177[2] = delta_x[2] + nom_x[2];
   out_2257357520338428177[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2257357520338428177[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2257357520338428177[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2257357520338428177[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2257357520338428177[7] = delta_x[6] + nom_x[7];
   out_2257357520338428177[8] = delta_x[7] + nom_x[8];
   out_2257357520338428177[9] = delta_x[8] + nom_x[9];
   out_2257357520338428177[10] = delta_x[9] + nom_x[10];
   out_2257357520338428177[11] = delta_x[10] + nom_x[11];
   out_2257357520338428177[12] = delta_x[11] + nom_x[12];
   out_2257357520338428177[13] = delta_x[12] + nom_x[13];
   out_2257357520338428177[14] = delta_x[13] + nom_x[14];
   out_2257357520338428177[15] = delta_x[14] + nom_x[15];
   out_2257357520338428177[16] = delta_x[15] + nom_x[16];
   out_2257357520338428177[17] = delta_x[16] + nom_x[17];
   out_2257357520338428177[18] = delta_x[17] + nom_x[18];
   out_2257357520338428177[19] = delta_x[18] + nom_x[19];
   out_2257357520338428177[20] = delta_x[19] + nom_x[20];
   out_2257357520338428177[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4709508731410798279) {
   out_4709508731410798279[0] = -nom_x[0] + true_x[0];
   out_4709508731410798279[1] = -nom_x[1] + true_x[1];
   out_4709508731410798279[2] = -nom_x[2] + true_x[2];
   out_4709508731410798279[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4709508731410798279[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4709508731410798279[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4709508731410798279[6] = -nom_x[7] + true_x[7];
   out_4709508731410798279[7] = -nom_x[8] + true_x[8];
   out_4709508731410798279[8] = -nom_x[9] + true_x[9];
   out_4709508731410798279[9] = -nom_x[10] + true_x[10];
   out_4709508731410798279[10] = -nom_x[11] + true_x[11];
   out_4709508731410798279[11] = -nom_x[12] + true_x[12];
   out_4709508731410798279[12] = -nom_x[13] + true_x[13];
   out_4709508731410798279[13] = -nom_x[14] + true_x[14];
   out_4709508731410798279[14] = -nom_x[15] + true_x[15];
   out_4709508731410798279[15] = -nom_x[16] + true_x[16];
   out_4709508731410798279[16] = -nom_x[17] + true_x[17];
   out_4709508731410798279[17] = -nom_x[18] + true_x[18];
   out_4709508731410798279[18] = -nom_x[19] + true_x[19];
   out_4709508731410798279[19] = -nom_x[20] + true_x[20];
   out_4709508731410798279[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3509015753735998796) {
   out_3509015753735998796[0] = 1.0;
   out_3509015753735998796[1] = 0;
   out_3509015753735998796[2] = 0;
   out_3509015753735998796[3] = 0;
   out_3509015753735998796[4] = 0;
   out_3509015753735998796[5] = 0;
   out_3509015753735998796[6] = 0;
   out_3509015753735998796[7] = 0;
   out_3509015753735998796[8] = 0;
   out_3509015753735998796[9] = 0;
   out_3509015753735998796[10] = 0;
   out_3509015753735998796[11] = 0;
   out_3509015753735998796[12] = 0;
   out_3509015753735998796[13] = 0;
   out_3509015753735998796[14] = 0;
   out_3509015753735998796[15] = 0;
   out_3509015753735998796[16] = 0;
   out_3509015753735998796[17] = 0;
   out_3509015753735998796[18] = 0;
   out_3509015753735998796[19] = 0;
   out_3509015753735998796[20] = 0;
   out_3509015753735998796[21] = 0;
   out_3509015753735998796[22] = 1.0;
   out_3509015753735998796[23] = 0;
   out_3509015753735998796[24] = 0;
   out_3509015753735998796[25] = 0;
   out_3509015753735998796[26] = 0;
   out_3509015753735998796[27] = 0;
   out_3509015753735998796[28] = 0;
   out_3509015753735998796[29] = 0;
   out_3509015753735998796[30] = 0;
   out_3509015753735998796[31] = 0;
   out_3509015753735998796[32] = 0;
   out_3509015753735998796[33] = 0;
   out_3509015753735998796[34] = 0;
   out_3509015753735998796[35] = 0;
   out_3509015753735998796[36] = 0;
   out_3509015753735998796[37] = 0;
   out_3509015753735998796[38] = 0;
   out_3509015753735998796[39] = 0;
   out_3509015753735998796[40] = 0;
   out_3509015753735998796[41] = 0;
   out_3509015753735998796[42] = 0;
   out_3509015753735998796[43] = 0;
   out_3509015753735998796[44] = 1.0;
   out_3509015753735998796[45] = 0;
   out_3509015753735998796[46] = 0;
   out_3509015753735998796[47] = 0;
   out_3509015753735998796[48] = 0;
   out_3509015753735998796[49] = 0;
   out_3509015753735998796[50] = 0;
   out_3509015753735998796[51] = 0;
   out_3509015753735998796[52] = 0;
   out_3509015753735998796[53] = 0;
   out_3509015753735998796[54] = 0;
   out_3509015753735998796[55] = 0;
   out_3509015753735998796[56] = 0;
   out_3509015753735998796[57] = 0;
   out_3509015753735998796[58] = 0;
   out_3509015753735998796[59] = 0;
   out_3509015753735998796[60] = 0;
   out_3509015753735998796[61] = 0;
   out_3509015753735998796[62] = 0;
   out_3509015753735998796[63] = 0;
   out_3509015753735998796[64] = 0;
   out_3509015753735998796[65] = 0;
   out_3509015753735998796[66] = -0.5*state[4];
   out_3509015753735998796[67] = -0.5*state[5];
   out_3509015753735998796[68] = -0.5*state[6];
   out_3509015753735998796[69] = 0;
   out_3509015753735998796[70] = 0;
   out_3509015753735998796[71] = 0;
   out_3509015753735998796[72] = 0;
   out_3509015753735998796[73] = 0;
   out_3509015753735998796[74] = 0;
   out_3509015753735998796[75] = 0;
   out_3509015753735998796[76] = 0;
   out_3509015753735998796[77] = 0;
   out_3509015753735998796[78] = 0;
   out_3509015753735998796[79] = 0;
   out_3509015753735998796[80] = 0;
   out_3509015753735998796[81] = 0;
   out_3509015753735998796[82] = 0;
   out_3509015753735998796[83] = 0;
   out_3509015753735998796[84] = 0;
   out_3509015753735998796[85] = 0;
   out_3509015753735998796[86] = 0;
   out_3509015753735998796[87] = 0.5*state[3];
   out_3509015753735998796[88] = 0.5*state[6];
   out_3509015753735998796[89] = -0.5*state[5];
   out_3509015753735998796[90] = 0;
   out_3509015753735998796[91] = 0;
   out_3509015753735998796[92] = 0;
   out_3509015753735998796[93] = 0;
   out_3509015753735998796[94] = 0;
   out_3509015753735998796[95] = 0;
   out_3509015753735998796[96] = 0;
   out_3509015753735998796[97] = 0;
   out_3509015753735998796[98] = 0;
   out_3509015753735998796[99] = 0;
   out_3509015753735998796[100] = 0;
   out_3509015753735998796[101] = 0;
   out_3509015753735998796[102] = 0;
   out_3509015753735998796[103] = 0;
   out_3509015753735998796[104] = 0;
   out_3509015753735998796[105] = 0;
   out_3509015753735998796[106] = 0;
   out_3509015753735998796[107] = 0;
   out_3509015753735998796[108] = -0.5*state[6];
   out_3509015753735998796[109] = 0.5*state[3];
   out_3509015753735998796[110] = 0.5*state[4];
   out_3509015753735998796[111] = 0;
   out_3509015753735998796[112] = 0;
   out_3509015753735998796[113] = 0;
   out_3509015753735998796[114] = 0;
   out_3509015753735998796[115] = 0;
   out_3509015753735998796[116] = 0;
   out_3509015753735998796[117] = 0;
   out_3509015753735998796[118] = 0;
   out_3509015753735998796[119] = 0;
   out_3509015753735998796[120] = 0;
   out_3509015753735998796[121] = 0;
   out_3509015753735998796[122] = 0;
   out_3509015753735998796[123] = 0;
   out_3509015753735998796[124] = 0;
   out_3509015753735998796[125] = 0;
   out_3509015753735998796[126] = 0;
   out_3509015753735998796[127] = 0;
   out_3509015753735998796[128] = 0;
   out_3509015753735998796[129] = 0.5*state[5];
   out_3509015753735998796[130] = -0.5*state[4];
   out_3509015753735998796[131] = 0.5*state[3];
   out_3509015753735998796[132] = 0;
   out_3509015753735998796[133] = 0;
   out_3509015753735998796[134] = 0;
   out_3509015753735998796[135] = 0;
   out_3509015753735998796[136] = 0;
   out_3509015753735998796[137] = 0;
   out_3509015753735998796[138] = 0;
   out_3509015753735998796[139] = 0;
   out_3509015753735998796[140] = 0;
   out_3509015753735998796[141] = 0;
   out_3509015753735998796[142] = 0;
   out_3509015753735998796[143] = 0;
   out_3509015753735998796[144] = 0;
   out_3509015753735998796[145] = 0;
   out_3509015753735998796[146] = 0;
   out_3509015753735998796[147] = 0;
   out_3509015753735998796[148] = 0;
   out_3509015753735998796[149] = 0;
   out_3509015753735998796[150] = 0;
   out_3509015753735998796[151] = 0;
   out_3509015753735998796[152] = 0;
   out_3509015753735998796[153] = 1.0;
   out_3509015753735998796[154] = 0;
   out_3509015753735998796[155] = 0;
   out_3509015753735998796[156] = 0;
   out_3509015753735998796[157] = 0;
   out_3509015753735998796[158] = 0;
   out_3509015753735998796[159] = 0;
   out_3509015753735998796[160] = 0;
   out_3509015753735998796[161] = 0;
   out_3509015753735998796[162] = 0;
   out_3509015753735998796[163] = 0;
   out_3509015753735998796[164] = 0;
   out_3509015753735998796[165] = 0;
   out_3509015753735998796[166] = 0;
   out_3509015753735998796[167] = 0;
   out_3509015753735998796[168] = 0;
   out_3509015753735998796[169] = 0;
   out_3509015753735998796[170] = 0;
   out_3509015753735998796[171] = 0;
   out_3509015753735998796[172] = 0;
   out_3509015753735998796[173] = 0;
   out_3509015753735998796[174] = 0;
   out_3509015753735998796[175] = 1.0;
   out_3509015753735998796[176] = 0;
   out_3509015753735998796[177] = 0;
   out_3509015753735998796[178] = 0;
   out_3509015753735998796[179] = 0;
   out_3509015753735998796[180] = 0;
   out_3509015753735998796[181] = 0;
   out_3509015753735998796[182] = 0;
   out_3509015753735998796[183] = 0;
   out_3509015753735998796[184] = 0;
   out_3509015753735998796[185] = 0;
   out_3509015753735998796[186] = 0;
   out_3509015753735998796[187] = 0;
   out_3509015753735998796[188] = 0;
   out_3509015753735998796[189] = 0;
   out_3509015753735998796[190] = 0;
   out_3509015753735998796[191] = 0;
   out_3509015753735998796[192] = 0;
   out_3509015753735998796[193] = 0;
   out_3509015753735998796[194] = 0;
   out_3509015753735998796[195] = 0;
   out_3509015753735998796[196] = 0;
   out_3509015753735998796[197] = 1.0;
   out_3509015753735998796[198] = 0;
   out_3509015753735998796[199] = 0;
   out_3509015753735998796[200] = 0;
   out_3509015753735998796[201] = 0;
   out_3509015753735998796[202] = 0;
   out_3509015753735998796[203] = 0;
   out_3509015753735998796[204] = 0;
   out_3509015753735998796[205] = 0;
   out_3509015753735998796[206] = 0;
   out_3509015753735998796[207] = 0;
   out_3509015753735998796[208] = 0;
   out_3509015753735998796[209] = 0;
   out_3509015753735998796[210] = 0;
   out_3509015753735998796[211] = 0;
   out_3509015753735998796[212] = 0;
   out_3509015753735998796[213] = 0;
   out_3509015753735998796[214] = 0;
   out_3509015753735998796[215] = 0;
   out_3509015753735998796[216] = 0;
   out_3509015753735998796[217] = 0;
   out_3509015753735998796[218] = 0;
   out_3509015753735998796[219] = 1.0;
   out_3509015753735998796[220] = 0;
   out_3509015753735998796[221] = 0;
   out_3509015753735998796[222] = 0;
   out_3509015753735998796[223] = 0;
   out_3509015753735998796[224] = 0;
   out_3509015753735998796[225] = 0;
   out_3509015753735998796[226] = 0;
   out_3509015753735998796[227] = 0;
   out_3509015753735998796[228] = 0;
   out_3509015753735998796[229] = 0;
   out_3509015753735998796[230] = 0;
   out_3509015753735998796[231] = 0;
   out_3509015753735998796[232] = 0;
   out_3509015753735998796[233] = 0;
   out_3509015753735998796[234] = 0;
   out_3509015753735998796[235] = 0;
   out_3509015753735998796[236] = 0;
   out_3509015753735998796[237] = 0;
   out_3509015753735998796[238] = 0;
   out_3509015753735998796[239] = 0;
   out_3509015753735998796[240] = 0;
   out_3509015753735998796[241] = 1.0;
   out_3509015753735998796[242] = 0;
   out_3509015753735998796[243] = 0;
   out_3509015753735998796[244] = 0;
   out_3509015753735998796[245] = 0;
   out_3509015753735998796[246] = 0;
   out_3509015753735998796[247] = 0;
   out_3509015753735998796[248] = 0;
   out_3509015753735998796[249] = 0;
   out_3509015753735998796[250] = 0;
   out_3509015753735998796[251] = 0;
   out_3509015753735998796[252] = 0;
   out_3509015753735998796[253] = 0;
   out_3509015753735998796[254] = 0;
   out_3509015753735998796[255] = 0;
   out_3509015753735998796[256] = 0;
   out_3509015753735998796[257] = 0;
   out_3509015753735998796[258] = 0;
   out_3509015753735998796[259] = 0;
   out_3509015753735998796[260] = 0;
   out_3509015753735998796[261] = 0;
   out_3509015753735998796[262] = 0;
   out_3509015753735998796[263] = 1.0;
   out_3509015753735998796[264] = 0;
   out_3509015753735998796[265] = 0;
   out_3509015753735998796[266] = 0;
   out_3509015753735998796[267] = 0;
   out_3509015753735998796[268] = 0;
   out_3509015753735998796[269] = 0;
   out_3509015753735998796[270] = 0;
   out_3509015753735998796[271] = 0;
   out_3509015753735998796[272] = 0;
   out_3509015753735998796[273] = 0;
   out_3509015753735998796[274] = 0;
   out_3509015753735998796[275] = 0;
   out_3509015753735998796[276] = 0;
   out_3509015753735998796[277] = 0;
   out_3509015753735998796[278] = 0;
   out_3509015753735998796[279] = 0;
   out_3509015753735998796[280] = 0;
   out_3509015753735998796[281] = 0;
   out_3509015753735998796[282] = 0;
   out_3509015753735998796[283] = 0;
   out_3509015753735998796[284] = 0;
   out_3509015753735998796[285] = 1.0;
   out_3509015753735998796[286] = 0;
   out_3509015753735998796[287] = 0;
   out_3509015753735998796[288] = 0;
   out_3509015753735998796[289] = 0;
   out_3509015753735998796[290] = 0;
   out_3509015753735998796[291] = 0;
   out_3509015753735998796[292] = 0;
   out_3509015753735998796[293] = 0;
   out_3509015753735998796[294] = 0;
   out_3509015753735998796[295] = 0;
   out_3509015753735998796[296] = 0;
   out_3509015753735998796[297] = 0;
   out_3509015753735998796[298] = 0;
   out_3509015753735998796[299] = 0;
   out_3509015753735998796[300] = 0;
   out_3509015753735998796[301] = 0;
   out_3509015753735998796[302] = 0;
   out_3509015753735998796[303] = 0;
   out_3509015753735998796[304] = 0;
   out_3509015753735998796[305] = 0;
   out_3509015753735998796[306] = 0;
   out_3509015753735998796[307] = 1.0;
   out_3509015753735998796[308] = 0;
   out_3509015753735998796[309] = 0;
   out_3509015753735998796[310] = 0;
   out_3509015753735998796[311] = 0;
   out_3509015753735998796[312] = 0;
   out_3509015753735998796[313] = 0;
   out_3509015753735998796[314] = 0;
   out_3509015753735998796[315] = 0;
   out_3509015753735998796[316] = 0;
   out_3509015753735998796[317] = 0;
   out_3509015753735998796[318] = 0;
   out_3509015753735998796[319] = 0;
   out_3509015753735998796[320] = 0;
   out_3509015753735998796[321] = 0;
   out_3509015753735998796[322] = 0;
   out_3509015753735998796[323] = 0;
   out_3509015753735998796[324] = 0;
   out_3509015753735998796[325] = 0;
   out_3509015753735998796[326] = 0;
   out_3509015753735998796[327] = 0;
   out_3509015753735998796[328] = 0;
   out_3509015753735998796[329] = 1.0;
   out_3509015753735998796[330] = 0;
   out_3509015753735998796[331] = 0;
   out_3509015753735998796[332] = 0;
   out_3509015753735998796[333] = 0;
   out_3509015753735998796[334] = 0;
   out_3509015753735998796[335] = 0;
   out_3509015753735998796[336] = 0;
   out_3509015753735998796[337] = 0;
   out_3509015753735998796[338] = 0;
   out_3509015753735998796[339] = 0;
   out_3509015753735998796[340] = 0;
   out_3509015753735998796[341] = 0;
   out_3509015753735998796[342] = 0;
   out_3509015753735998796[343] = 0;
   out_3509015753735998796[344] = 0;
   out_3509015753735998796[345] = 0;
   out_3509015753735998796[346] = 0;
   out_3509015753735998796[347] = 0;
   out_3509015753735998796[348] = 0;
   out_3509015753735998796[349] = 0;
   out_3509015753735998796[350] = 0;
   out_3509015753735998796[351] = 1.0;
   out_3509015753735998796[352] = 0;
   out_3509015753735998796[353] = 0;
   out_3509015753735998796[354] = 0;
   out_3509015753735998796[355] = 0;
   out_3509015753735998796[356] = 0;
   out_3509015753735998796[357] = 0;
   out_3509015753735998796[358] = 0;
   out_3509015753735998796[359] = 0;
   out_3509015753735998796[360] = 0;
   out_3509015753735998796[361] = 0;
   out_3509015753735998796[362] = 0;
   out_3509015753735998796[363] = 0;
   out_3509015753735998796[364] = 0;
   out_3509015753735998796[365] = 0;
   out_3509015753735998796[366] = 0;
   out_3509015753735998796[367] = 0;
   out_3509015753735998796[368] = 0;
   out_3509015753735998796[369] = 0;
   out_3509015753735998796[370] = 0;
   out_3509015753735998796[371] = 0;
   out_3509015753735998796[372] = 0;
   out_3509015753735998796[373] = 1.0;
   out_3509015753735998796[374] = 0;
   out_3509015753735998796[375] = 0;
   out_3509015753735998796[376] = 0;
   out_3509015753735998796[377] = 0;
   out_3509015753735998796[378] = 0;
   out_3509015753735998796[379] = 0;
   out_3509015753735998796[380] = 0;
   out_3509015753735998796[381] = 0;
   out_3509015753735998796[382] = 0;
   out_3509015753735998796[383] = 0;
   out_3509015753735998796[384] = 0;
   out_3509015753735998796[385] = 0;
   out_3509015753735998796[386] = 0;
   out_3509015753735998796[387] = 0;
   out_3509015753735998796[388] = 0;
   out_3509015753735998796[389] = 0;
   out_3509015753735998796[390] = 0;
   out_3509015753735998796[391] = 0;
   out_3509015753735998796[392] = 0;
   out_3509015753735998796[393] = 0;
   out_3509015753735998796[394] = 0;
   out_3509015753735998796[395] = 1.0;
   out_3509015753735998796[396] = 0;
   out_3509015753735998796[397] = 0;
   out_3509015753735998796[398] = 0;
   out_3509015753735998796[399] = 0;
   out_3509015753735998796[400] = 0;
   out_3509015753735998796[401] = 0;
   out_3509015753735998796[402] = 0;
   out_3509015753735998796[403] = 0;
   out_3509015753735998796[404] = 0;
   out_3509015753735998796[405] = 0;
   out_3509015753735998796[406] = 0;
   out_3509015753735998796[407] = 0;
   out_3509015753735998796[408] = 0;
   out_3509015753735998796[409] = 0;
   out_3509015753735998796[410] = 0;
   out_3509015753735998796[411] = 0;
   out_3509015753735998796[412] = 0;
   out_3509015753735998796[413] = 0;
   out_3509015753735998796[414] = 0;
   out_3509015753735998796[415] = 0;
   out_3509015753735998796[416] = 0;
   out_3509015753735998796[417] = 1.0;
   out_3509015753735998796[418] = 0;
   out_3509015753735998796[419] = 0;
   out_3509015753735998796[420] = 0;
   out_3509015753735998796[421] = 0;
   out_3509015753735998796[422] = 0;
   out_3509015753735998796[423] = 0;
   out_3509015753735998796[424] = 0;
   out_3509015753735998796[425] = 0;
   out_3509015753735998796[426] = 0;
   out_3509015753735998796[427] = 0;
   out_3509015753735998796[428] = 0;
   out_3509015753735998796[429] = 0;
   out_3509015753735998796[430] = 0;
   out_3509015753735998796[431] = 0;
   out_3509015753735998796[432] = 0;
   out_3509015753735998796[433] = 0;
   out_3509015753735998796[434] = 0;
   out_3509015753735998796[435] = 0;
   out_3509015753735998796[436] = 0;
   out_3509015753735998796[437] = 0;
   out_3509015753735998796[438] = 0;
   out_3509015753735998796[439] = 1.0;
   out_3509015753735998796[440] = 0;
   out_3509015753735998796[441] = 0;
   out_3509015753735998796[442] = 0;
   out_3509015753735998796[443] = 0;
   out_3509015753735998796[444] = 0;
   out_3509015753735998796[445] = 0;
   out_3509015753735998796[446] = 0;
   out_3509015753735998796[447] = 0;
   out_3509015753735998796[448] = 0;
   out_3509015753735998796[449] = 0;
   out_3509015753735998796[450] = 0;
   out_3509015753735998796[451] = 0;
   out_3509015753735998796[452] = 0;
   out_3509015753735998796[453] = 0;
   out_3509015753735998796[454] = 0;
   out_3509015753735998796[455] = 0;
   out_3509015753735998796[456] = 0;
   out_3509015753735998796[457] = 0;
   out_3509015753735998796[458] = 0;
   out_3509015753735998796[459] = 0;
   out_3509015753735998796[460] = 0;
   out_3509015753735998796[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7183862674799437649) {
   out_7183862674799437649[0] = dt*state[7] + state[0];
   out_7183862674799437649[1] = dt*state[8] + state[1];
   out_7183862674799437649[2] = dt*state[9] + state[2];
   out_7183862674799437649[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7183862674799437649[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7183862674799437649[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7183862674799437649[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7183862674799437649[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7183862674799437649[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7183862674799437649[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7183862674799437649[10] = state[10];
   out_7183862674799437649[11] = state[11];
   out_7183862674799437649[12] = state[12];
   out_7183862674799437649[13] = state[13];
   out_7183862674799437649[14] = state[14];
   out_7183862674799437649[15] = state[15];
   out_7183862674799437649[16] = state[16];
   out_7183862674799437649[17] = state[17];
   out_7183862674799437649[18] = state[18];
   out_7183862674799437649[19] = state[19];
   out_7183862674799437649[20] = state[20];
   out_7183862674799437649[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7822426575519798474) {
   out_7822426575519798474[0] = 1;
   out_7822426575519798474[1] = 0;
   out_7822426575519798474[2] = 0;
   out_7822426575519798474[3] = 0;
   out_7822426575519798474[4] = 0;
   out_7822426575519798474[5] = 0;
   out_7822426575519798474[6] = dt;
   out_7822426575519798474[7] = 0;
   out_7822426575519798474[8] = 0;
   out_7822426575519798474[9] = 0;
   out_7822426575519798474[10] = 0;
   out_7822426575519798474[11] = 0;
   out_7822426575519798474[12] = 0;
   out_7822426575519798474[13] = 0;
   out_7822426575519798474[14] = 0;
   out_7822426575519798474[15] = 0;
   out_7822426575519798474[16] = 0;
   out_7822426575519798474[17] = 0;
   out_7822426575519798474[18] = 0;
   out_7822426575519798474[19] = 0;
   out_7822426575519798474[20] = 0;
   out_7822426575519798474[21] = 0;
   out_7822426575519798474[22] = 1;
   out_7822426575519798474[23] = 0;
   out_7822426575519798474[24] = 0;
   out_7822426575519798474[25] = 0;
   out_7822426575519798474[26] = 0;
   out_7822426575519798474[27] = 0;
   out_7822426575519798474[28] = dt;
   out_7822426575519798474[29] = 0;
   out_7822426575519798474[30] = 0;
   out_7822426575519798474[31] = 0;
   out_7822426575519798474[32] = 0;
   out_7822426575519798474[33] = 0;
   out_7822426575519798474[34] = 0;
   out_7822426575519798474[35] = 0;
   out_7822426575519798474[36] = 0;
   out_7822426575519798474[37] = 0;
   out_7822426575519798474[38] = 0;
   out_7822426575519798474[39] = 0;
   out_7822426575519798474[40] = 0;
   out_7822426575519798474[41] = 0;
   out_7822426575519798474[42] = 0;
   out_7822426575519798474[43] = 0;
   out_7822426575519798474[44] = 1;
   out_7822426575519798474[45] = 0;
   out_7822426575519798474[46] = 0;
   out_7822426575519798474[47] = 0;
   out_7822426575519798474[48] = 0;
   out_7822426575519798474[49] = 0;
   out_7822426575519798474[50] = dt;
   out_7822426575519798474[51] = 0;
   out_7822426575519798474[52] = 0;
   out_7822426575519798474[53] = 0;
   out_7822426575519798474[54] = 0;
   out_7822426575519798474[55] = 0;
   out_7822426575519798474[56] = 0;
   out_7822426575519798474[57] = 0;
   out_7822426575519798474[58] = 0;
   out_7822426575519798474[59] = 0;
   out_7822426575519798474[60] = 0;
   out_7822426575519798474[61] = 0;
   out_7822426575519798474[62] = 0;
   out_7822426575519798474[63] = 0;
   out_7822426575519798474[64] = 0;
   out_7822426575519798474[65] = 0;
   out_7822426575519798474[66] = 1;
   out_7822426575519798474[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7822426575519798474[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7822426575519798474[69] = 0;
   out_7822426575519798474[70] = 0;
   out_7822426575519798474[71] = 0;
   out_7822426575519798474[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7822426575519798474[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7822426575519798474[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7822426575519798474[75] = 0;
   out_7822426575519798474[76] = 0;
   out_7822426575519798474[77] = 0;
   out_7822426575519798474[78] = 0;
   out_7822426575519798474[79] = 0;
   out_7822426575519798474[80] = 0;
   out_7822426575519798474[81] = 0;
   out_7822426575519798474[82] = 0;
   out_7822426575519798474[83] = 0;
   out_7822426575519798474[84] = 0;
   out_7822426575519798474[85] = 0;
   out_7822426575519798474[86] = 0;
   out_7822426575519798474[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7822426575519798474[88] = 1;
   out_7822426575519798474[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7822426575519798474[90] = 0;
   out_7822426575519798474[91] = 0;
   out_7822426575519798474[92] = 0;
   out_7822426575519798474[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7822426575519798474[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7822426575519798474[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7822426575519798474[96] = 0;
   out_7822426575519798474[97] = 0;
   out_7822426575519798474[98] = 0;
   out_7822426575519798474[99] = 0;
   out_7822426575519798474[100] = 0;
   out_7822426575519798474[101] = 0;
   out_7822426575519798474[102] = 0;
   out_7822426575519798474[103] = 0;
   out_7822426575519798474[104] = 0;
   out_7822426575519798474[105] = 0;
   out_7822426575519798474[106] = 0;
   out_7822426575519798474[107] = 0;
   out_7822426575519798474[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7822426575519798474[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7822426575519798474[110] = 1;
   out_7822426575519798474[111] = 0;
   out_7822426575519798474[112] = 0;
   out_7822426575519798474[113] = 0;
   out_7822426575519798474[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7822426575519798474[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7822426575519798474[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7822426575519798474[117] = 0;
   out_7822426575519798474[118] = 0;
   out_7822426575519798474[119] = 0;
   out_7822426575519798474[120] = 0;
   out_7822426575519798474[121] = 0;
   out_7822426575519798474[122] = 0;
   out_7822426575519798474[123] = 0;
   out_7822426575519798474[124] = 0;
   out_7822426575519798474[125] = 0;
   out_7822426575519798474[126] = 0;
   out_7822426575519798474[127] = 0;
   out_7822426575519798474[128] = 0;
   out_7822426575519798474[129] = 0;
   out_7822426575519798474[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7822426575519798474[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7822426575519798474[132] = 1;
   out_7822426575519798474[133] = 0;
   out_7822426575519798474[134] = 0;
   out_7822426575519798474[135] = 0;
   out_7822426575519798474[136] = 0;
   out_7822426575519798474[137] = 0;
   out_7822426575519798474[138] = 0;
   out_7822426575519798474[139] = 0;
   out_7822426575519798474[140] = 0;
   out_7822426575519798474[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7822426575519798474[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7822426575519798474[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7822426575519798474[144] = 0;
   out_7822426575519798474[145] = 0;
   out_7822426575519798474[146] = 0;
   out_7822426575519798474[147] = 0;
   out_7822426575519798474[148] = 0;
   out_7822426575519798474[149] = 0;
   out_7822426575519798474[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7822426575519798474[151] = 0;
   out_7822426575519798474[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7822426575519798474[153] = 0;
   out_7822426575519798474[154] = 1;
   out_7822426575519798474[155] = 0;
   out_7822426575519798474[156] = 0;
   out_7822426575519798474[157] = 0;
   out_7822426575519798474[158] = 0;
   out_7822426575519798474[159] = 0;
   out_7822426575519798474[160] = 0;
   out_7822426575519798474[161] = 0;
   out_7822426575519798474[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7822426575519798474[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7822426575519798474[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7822426575519798474[165] = 0;
   out_7822426575519798474[166] = 0;
   out_7822426575519798474[167] = 0;
   out_7822426575519798474[168] = 0;
   out_7822426575519798474[169] = 0;
   out_7822426575519798474[170] = 0;
   out_7822426575519798474[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7822426575519798474[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7822426575519798474[173] = 0;
   out_7822426575519798474[174] = 0;
   out_7822426575519798474[175] = 0;
   out_7822426575519798474[176] = 1;
   out_7822426575519798474[177] = 0;
   out_7822426575519798474[178] = 0;
   out_7822426575519798474[179] = 0;
   out_7822426575519798474[180] = 0;
   out_7822426575519798474[181] = 0;
   out_7822426575519798474[182] = 0;
   out_7822426575519798474[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7822426575519798474[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7822426575519798474[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7822426575519798474[186] = 0;
   out_7822426575519798474[187] = 0;
   out_7822426575519798474[188] = 0;
   out_7822426575519798474[189] = 0;
   out_7822426575519798474[190] = 0;
   out_7822426575519798474[191] = 0;
   out_7822426575519798474[192] = 0;
   out_7822426575519798474[193] = 0;
   out_7822426575519798474[194] = 0;
   out_7822426575519798474[195] = 0;
   out_7822426575519798474[196] = 0;
   out_7822426575519798474[197] = 0;
   out_7822426575519798474[198] = 1;
   out_7822426575519798474[199] = 0;
   out_7822426575519798474[200] = 0;
   out_7822426575519798474[201] = 0;
   out_7822426575519798474[202] = 0;
   out_7822426575519798474[203] = 0;
   out_7822426575519798474[204] = 0;
   out_7822426575519798474[205] = 0;
   out_7822426575519798474[206] = 0;
   out_7822426575519798474[207] = 0;
   out_7822426575519798474[208] = 0;
   out_7822426575519798474[209] = 0;
   out_7822426575519798474[210] = 0;
   out_7822426575519798474[211] = 0;
   out_7822426575519798474[212] = 0;
   out_7822426575519798474[213] = 0;
   out_7822426575519798474[214] = 0;
   out_7822426575519798474[215] = 0;
   out_7822426575519798474[216] = 0;
   out_7822426575519798474[217] = 0;
   out_7822426575519798474[218] = 0;
   out_7822426575519798474[219] = 0;
   out_7822426575519798474[220] = 1;
   out_7822426575519798474[221] = 0;
   out_7822426575519798474[222] = 0;
   out_7822426575519798474[223] = 0;
   out_7822426575519798474[224] = 0;
   out_7822426575519798474[225] = 0;
   out_7822426575519798474[226] = 0;
   out_7822426575519798474[227] = 0;
   out_7822426575519798474[228] = 0;
   out_7822426575519798474[229] = 0;
   out_7822426575519798474[230] = 0;
   out_7822426575519798474[231] = 0;
   out_7822426575519798474[232] = 0;
   out_7822426575519798474[233] = 0;
   out_7822426575519798474[234] = 0;
   out_7822426575519798474[235] = 0;
   out_7822426575519798474[236] = 0;
   out_7822426575519798474[237] = 0;
   out_7822426575519798474[238] = 0;
   out_7822426575519798474[239] = 0;
   out_7822426575519798474[240] = 0;
   out_7822426575519798474[241] = 0;
   out_7822426575519798474[242] = 1;
   out_7822426575519798474[243] = 0;
   out_7822426575519798474[244] = 0;
   out_7822426575519798474[245] = 0;
   out_7822426575519798474[246] = 0;
   out_7822426575519798474[247] = 0;
   out_7822426575519798474[248] = 0;
   out_7822426575519798474[249] = 0;
   out_7822426575519798474[250] = 0;
   out_7822426575519798474[251] = 0;
   out_7822426575519798474[252] = 0;
   out_7822426575519798474[253] = 0;
   out_7822426575519798474[254] = 0;
   out_7822426575519798474[255] = 0;
   out_7822426575519798474[256] = 0;
   out_7822426575519798474[257] = 0;
   out_7822426575519798474[258] = 0;
   out_7822426575519798474[259] = 0;
   out_7822426575519798474[260] = 0;
   out_7822426575519798474[261] = 0;
   out_7822426575519798474[262] = 0;
   out_7822426575519798474[263] = 0;
   out_7822426575519798474[264] = 1;
   out_7822426575519798474[265] = 0;
   out_7822426575519798474[266] = 0;
   out_7822426575519798474[267] = 0;
   out_7822426575519798474[268] = 0;
   out_7822426575519798474[269] = 0;
   out_7822426575519798474[270] = 0;
   out_7822426575519798474[271] = 0;
   out_7822426575519798474[272] = 0;
   out_7822426575519798474[273] = 0;
   out_7822426575519798474[274] = 0;
   out_7822426575519798474[275] = 0;
   out_7822426575519798474[276] = 0;
   out_7822426575519798474[277] = 0;
   out_7822426575519798474[278] = 0;
   out_7822426575519798474[279] = 0;
   out_7822426575519798474[280] = 0;
   out_7822426575519798474[281] = 0;
   out_7822426575519798474[282] = 0;
   out_7822426575519798474[283] = 0;
   out_7822426575519798474[284] = 0;
   out_7822426575519798474[285] = 0;
   out_7822426575519798474[286] = 1;
   out_7822426575519798474[287] = 0;
   out_7822426575519798474[288] = 0;
   out_7822426575519798474[289] = 0;
   out_7822426575519798474[290] = 0;
   out_7822426575519798474[291] = 0;
   out_7822426575519798474[292] = 0;
   out_7822426575519798474[293] = 0;
   out_7822426575519798474[294] = 0;
   out_7822426575519798474[295] = 0;
   out_7822426575519798474[296] = 0;
   out_7822426575519798474[297] = 0;
   out_7822426575519798474[298] = 0;
   out_7822426575519798474[299] = 0;
   out_7822426575519798474[300] = 0;
   out_7822426575519798474[301] = 0;
   out_7822426575519798474[302] = 0;
   out_7822426575519798474[303] = 0;
   out_7822426575519798474[304] = 0;
   out_7822426575519798474[305] = 0;
   out_7822426575519798474[306] = 0;
   out_7822426575519798474[307] = 0;
   out_7822426575519798474[308] = 1;
   out_7822426575519798474[309] = 0;
   out_7822426575519798474[310] = 0;
   out_7822426575519798474[311] = 0;
   out_7822426575519798474[312] = 0;
   out_7822426575519798474[313] = 0;
   out_7822426575519798474[314] = 0;
   out_7822426575519798474[315] = 0;
   out_7822426575519798474[316] = 0;
   out_7822426575519798474[317] = 0;
   out_7822426575519798474[318] = 0;
   out_7822426575519798474[319] = 0;
   out_7822426575519798474[320] = 0;
   out_7822426575519798474[321] = 0;
   out_7822426575519798474[322] = 0;
   out_7822426575519798474[323] = 0;
   out_7822426575519798474[324] = 0;
   out_7822426575519798474[325] = 0;
   out_7822426575519798474[326] = 0;
   out_7822426575519798474[327] = 0;
   out_7822426575519798474[328] = 0;
   out_7822426575519798474[329] = 0;
   out_7822426575519798474[330] = 1;
   out_7822426575519798474[331] = 0;
   out_7822426575519798474[332] = 0;
   out_7822426575519798474[333] = 0;
   out_7822426575519798474[334] = 0;
   out_7822426575519798474[335] = 0;
   out_7822426575519798474[336] = 0;
   out_7822426575519798474[337] = 0;
   out_7822426575519798474[338] = 0;
   out_7822426575519798474[339] = 0;
   out_7822426575519798474[340] = 0;
   out_7822426575519798474[341] = 0;
   out_7822426575519798474[342] = 0;
   out_7822426575519798474[343] = 0;
   out_7822426575519798474[344] = 0;
   out_7822426575519798474[345] = 0;
   out_7822426575519798474[346] = 0;
   out_7822426575519798474[347] = 0;
   out_7822426575519798474[348] = 0;
   out_7822426575519798474[349] = 0;
   out_7822426575519798474[350] = 0;
   out_7822426575519798474[351] = 0;
   out_7822426575519798474[352] = 1;
   out_7822426575519798474[353] = 0;
   out_7822426575519798474[354] = 0;
   out_7822426575519798474[355] = 0;
   out_7822426575519798474[356] = 0;
   out_7822426575519798474[357] = 0;
   out_7822426575519798474[358] = 0;
   out_7822426575519798474[359] = 0;
   out_7822426575519798474[360] = 0;
   out_7822426575519798474[361] = 0;
   out_7822426575519798474[362] = 0;
   out_7822426575519798474[363] = 0;
   out_7822426575519798474[364] = 0;
   out_7822426575519798474[365] = 0;
   out_7822426575519798474[366] = 0;
   out_7822426575519798474[367] = 0;
   out_7822426575519798474[368] = 0;
   out_7822426575519798474[369] = 0;
   out_7822426575519798474[370] = 0;
   out_7822426575519798474[371] = 0;
   out_7822426575519798474[372] = 0;
   out_7822426575519798474[373] = 0;
   out_7822426575519798474[374] = 1;
   out_7822426575519798474[375] = 0;
   out_7822426575519798474[376] = 0;
   out_7822426575519798474[377] = 0;
   out_7822426575519798474[378] = 0;
   out_7822426575519798474[379] = 0;
   out_7822426575519798474[380] = 0;
   out_7822426575519798474[381] = 0;
   out_7822426575519798474[382] = 0;
   out_7822426575519798474[383] = 0;
   out_7822426575519798474[384] = 0;
   out_7822426575519798474[385] = 0;
   out_7822426575519798474[386] = 0;
   out_7822426575519798474[387] = 0;
   out_7822426575519798474[388] = 0;
   out_7822426575519798474[389] = 0;
   out_7822426575519798474[390] = 0;
   out_7822426575519798474[391] = 0;
   out_7822426575519798474[392] = 0;
   out_7822426575519798474[393] = 0;
   out_7822426575519798474[394] = 0;
   out_7822426575519798474[395] = 0;
   out_7822426575519798474[396] = 1;
   out_7822426575519798474[397] = 0;
   out_7822426575519798474[398] = 0;
   out_7822426575519798474[399] = 0;
   out_7822426575519798474[400] = 0;
   out_7822426575519798474[401] = 0;
   out_7822426575519798474[402] = 0;
   out_7822426575519798474[403] = 0;
   out_7822426575519798474[404] = 0;
   out_7822426575519798474[405] = 0;
   out_7822426575519798474[406] = 0;
   out_7822426575519798474[407] = 0;
   out_7822426575519798474[408] = 0;
   out_7822426575519798474[409] = 0;
   out_7822426575519798474[410] = 0;
   out_7822426575519798474[411] = 0;
   out_7822426575519798474[412] = 0;
   out_7822426575519798474[413] = 0;
   out_7822426575519798474[414] = 0;
   out_7822426575519798474[415] = 0;
   out_7822426575519798474[416] = 0;
   out_7822426575519798474[417] = 0;
   out_7822426575519798474[418] = 1;
   out_7822426575519798474[419] = 0;
   out_7822426575519798474[420] = 0;
   out_7822426575519798474[421] = 0;
   out_7822426575519798474[422] = 0;
   out_7822426575519798474[423] = 0;
   out_7822426575519798474[424] = 0;
   out_7822426575519798474[425] = 0;
   out_7822426575519798474[426] = 0;
   out_7822426575519798474[427] = 0;
   out_7822426575519798474[428] = 0;
   out_7822426575519798474[429] = 0;
   out_7822426575519798474[430] = 0;
   out_7822426575519798474[431] = 0;
   out_7822426575519798474[432] = 0;
   out_7822426575519798474[433] = 0;
   out_7822426575519798474[434] = 0;
   out_7822426575519798474[435] = 0;
   out_7822426575519798474[436] = 0;
   out_7822426575519798474[437] = 0;
   out_7822426575519798474[438] = 0;
   out_7822426575519798474[439] = 0;
   out_7822426575519798474[440] = 1;
}
void h_4(double *state, double *unused, double *out_2671820401492287832) {
   out_2671820401492287832[0] = state[10] + state[13];
   out_2671820401492287832[1] = state[11] + state[14];
   out_2671820401492287832[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4591726632096983202) {
   out_4591726632096983202[0] = 0;
   out_4591726632096983202[1] = 0;
   out_4591726632096983202[2] = 0;
   out_4591726632096983202[3] = 0;
   out_4591726632096983202[4] = 0;
   out_4591726632096983202[5] = 0;
   out_4591726632096983202[6] = 0;
   out_4591726632096983202[7] = 0;
   out_4591726632096983202[8] = 0;
   out_4591726632096983202[9] = 0;
   out_4591726632096983202[10] = 1;
   out_4591726632096983202[11] = 0;
   out_4591726632096983202[12] = 0;
   out_4591726632096983202[13] = 1;
   out_4591726632096983202[14] = 0;
   out_4591726632096983202[15] = 0;
   out_4591726632096983202[16] = 0;
   out_4591726632096983202[17] = 0;
   out_4591726632096983202[18] = 0;
   out_4591726632096983202[19] = 0;
   out_4591726632096983202[20] = 0;
   out_4591726632096983202[21] = 0;
   out_4591726632096983202[22] = 0;
   out_4591726632096983202[23] = 0;
   out_4591726632096983202[24] = 0;
   out_4591726632096983202[25] = 0;
   out_4591726632096983202[26] = 0;
   out_4591726632096983202[27] = 0;
   out_4591726632096983202[28] = 0;
   out_4591726632096983202[29] = 0;
   out_4591726632096983202[30] = 0;
   out_4591726632096983202[31] = 0;
   out_4591726632096983202[32] = 0;
   out_4591726632096983202[33] = 1;
   out_4591726632096983202[34] = 0;
   out_4591726632096983202[35] = 0;
   out_4591726632096983202[36] = 1;
   out_4591726632096983202[37] = 0;
   out_4591726632096983202[38] = 0;
   out_4591726632096983202[39] = 0;
   out_4591726632096983202[40] = 0;
   out_4591726632096983202[41] = 0;
   out_4591726632096983202[42] = 0;
   out_4591726632096983202[43] = 0;
   out_4591726632096983202[44] = 0;
   out_4591726632096983202[45] = 0;
   out_4591726632096983202[46] = 0;
   out_4591726632096983202[47] = 0;
   out_4591726632096983202[48] = 0;
   out_4591726632096983202[49] = 0;
   out_4591726632096983202[50] = 0;
   out_4591726632096983202[51] = 0;
   out_4591726632096983202[52] = 0;
   out_4591726632096983202[53] = 0;
   out_4591726632096983202[54] = 0;
   out_4591726632096983202[55] = 0;
   out_4591726632096983202[56] = 1;
   out_4591726632096983202[57] = 0;
   out_4591726632096983202[58] = 0;
   out_4591726632096983202[59] = 1;
   out_4591726632096983202[60] = 0;
   out_4591726632096983202[61] = 0;
   out_4591726632096983202[62] = 0;
   out_4591726632096983202[63] = 0;
   out_4591726632096983202[64] = 0;
   out_4591726632096983202[65] = 0;
}
void h_9(double *state, double *unused, double *out_9145317158372918643) {
   out_9145317158372918643[0] = state[10];
   out_9145317158372918643[1] = state[11];
   out_9145317158372918643[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6567798506348120944) {
   out_6567798506348120944[0] = 0;
   out_6567798506348120944[1] = 0;
   out_6567798506348120944[2] = 0;
   out_6567798506348120944[3] = 0;
   out_6567798506348120944[4] = 0;
   out_6567798506348120944[5] = 0;
   out_6567798506348120944[6] = 0;
   out_6567798506348120944[7] = 0;
   out_6567798506348120944[8] = 0;
   out_6567798506348120944[9] = 0;
   out_6567798506348120944[10] = 1;
   out_6567798506348120944[11] = 0;
   out_6567798506348120944[12] = 0;
   out_6567798506348120944[13] = 0;
   out_6567798506348120944[14] = 0;
   out_6567798506348120944[15] = 0;
   out_6567798506348120944[16] = 0;
   out_6567798506348120944[17] = 0;
   out_6567798506348120944[18] = 0;
   out_6567798506348120944[19] = 0;
   out_6567798506348120944[20] = 0;
   out_6567798506348120944[21] = 0;
   out_6567798506348120944[22] = 0;
   out_6567798506348120944[23] = 0;
   out_6567798506348120944[24] = 0;
   out_6567798506348120944[25] = 0;
   out_6567798506348120944[26] = 0;
   out_6567798506348120944[27] = 0;
   out_6567798506348120944[28] = 0;
   out_6567798506348120944[29] = 0;
   out_6567798506348120944[30] = 0;
   out_6567798506348120944[31] = 0;
   out_6567798506348120944[32] = 0;
   out_6567798506348120944[33] = 1;
   out_6567798506348120944[34] = 0;
   out_6567798506348120944[35] = 0;
   out_6567798506348120944[36] = 0;
   out_6567798506348120944[37] = 0;
   out_6567798506348120944[38] = 0;
   out_6567798506348120944[39] = 0;
   out_6567798506348120944[40] = 0;
   out_6567798506348120944[41] = 0;
   out_6567798506348120944[42] = 0;
   out_6567798506348120944[43] = 0;
   out_6567798506348120944[44] = 0;
   out_6567798506348120944[45] = 0;
   out_6567798506348120944[46] = 0;
   out_6567798506348120944[47] = 0;
   out_6567798506348120944[48] = 0;
   out_6567798506348120944[49] = 0;
   out_6567798506348120944[50] = 0;
   out_6567798506348120944[51] = 0;
   out_6567798506348120944[52] = 0;
   out_6567798506348120944[53] = 0;
   out_6567798506348120944[54] = 0;
   out_6567798506348120944[55] = 0;
   out_6567798506348120944[56] = 1;
   out_6567798506348120944[57] = 0;
   out_6567798506348120944[58] = 0;
   out_6567798506348120944[59] = 0;
   out_6567798506348120944[60] = 0;
   out_6567798506348120944[61] = 0;
   out_6567798506348120944[62] = 0;
   out_6567798506348120944[63] = 0;
   out_6567798506348120944[64] = 0;
   out_6567798506348120944[65] = 0;
}
void h_10(double *state, double *unused, double *out_7176757818209557453) {
   out_7176757818209557453[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7176757818209557453[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7176757818209557453[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6175982007627651595) {
   out_6175982007627651595[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6175982007627651595[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6175982007627651595[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6175982007627651595[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6175982007627651595[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6175982007627651595[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6175982007627651595[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6175982007627651595[7] = 0;
   out_6175982007627651595[8] = 0;
   out_6175982007627651595[9] = 0;
   out_6175982007627651595[10] = 0;
   out_6175982007627651595[11] = 0;
   out_6175982007627651595[12] = 0;
   out_6175982007627651595[13] = 0;
   out_6175982007627651595[14] = 0;
   out_6175982007627651595[15] = 0;
   out_6175982007627651595[16] = 1;
   out_6175982007627651595[17] = 0;
   out_6175982007627651595[18] = 0;
   out_6175982007627651595[19] = 1;
   out_6175982007627651595[20] = 0;
   out_6175982007627651595[21] = 0;
   out_6175982007627651595[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6175982007627651595[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6175982007627651595[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6175982007627651595[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6175982007627651595[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6175982007627651595[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6175982007627651595[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6175982007627651595[29] = 0;
   out_6175982007627651595[30] = 0;
   out_6175982007627651595[31] = 0;
   out_6175982007627651595[32] = 0;
   out_6175982007627651595[33] = 0;
   out_6175982007627651595[34] = 0;
   out_6175982007627651595[35] = 0;
   out_6175982007627651595[36] = 0;
   out_6175982007627651595[37] = 0;
   out_6175982007627651595[38] = 0;
   out_6175982007627651595[39] = 1;
   out_6175982007627651595[40] = 0;
   out_6175982007627651595[41] = 0;
   out_6175982007627651595[42] = 1;
   out_6175982007627651595[43] = 0;
   out_6175982007627651595[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6175982007627651595[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6175982007627651595[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6175982007627651595[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6175982007627651595[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6175982007627651595[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6175982007627651595[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6175982007627651595[51] = 0;
   out_6175982007627651595[52] = 0;
   out_6175982007627651595[53] = 0;
   out_6175982007627651595[54] = 0;
   out_6175982007627651595[55] = 0;
   out_6175982007627651595[56] = 0;
   out_6175982007627651595[57] = 0;
   out_6175982007627651595[58] = 0;
   out_6175982007627651595[59] = 0;
   out_6175982007627651595[60] = 0;
   out_6175982007627651595[61] = 0;
   out_6175982007627651595[62] = 1;
   out_6175982007627651595[63] = 0;
   out_6175982007627651595[64] = 0;
   out_6175982007627651595[65] = 1;
}
void h_12(double *state, double *unused, double *out_6364178269392813634) {
   out_6364178269392813634[0] = state[0];
   out_6364178269392813634[1] = state[1];
   out_6364178269392813634[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6187889127930117922) {
   out_6187889127930117922[0] = 1;
   out_6187889127930117922[1] = 0;
   out_6187889127930117922[2] = 0;
   out_6187889127930117922[3] = 0;
   out_6187889127930117922[4] = 0;
   out_6187889127930117922[5] = 0;
   out_6187889127930117922[6] = 0;
   out_6187889127930117922[7] = 0;
   out_6187889127930117922[8] = 0;
   out_6187889127930117922[9] = 0;
   out_6187889127930117922[10] = 0;
   out_6187889127930117922[11] = 0;
   out_6187889127930117922[12] = 0;
   out_6187889127930117922[13] = 0;
   out_6187889127930117922[14] = 0;
   out_6187889127930117922[15] = 0;
   out_6187889127930117922[16] = 0;
   out_6187889127930117922[17] = 0;
   out_6187889127930117922[18] = 0;
   out_6187889127930117922[19] = 0;
   out_6187889127930117922[20] = 0;
   out_6187889127930117922[21] = 0;
   out_6187889127930117922[22] = 0;
   out_6187889127930117922[23] = 1;
   out_6187889127930117922[24] = 0;
   out_6187889127930117922[25] = 0;
   out_6187889127930117922[26] = 0;
   out_6187889127930117922[27] = 0;
   out_6187889127930117922[28] = 0;
   out_6187889127930117922[29] = 0;
   out_6187889127930117922[30] = 0;
   out_6187889127930117922[31] = 0;
   out_6187889127930117922[32] = 0;
   out_6187889127930117922[33] = 0;
   out_6187889127930117922[34] = 0;
   out_6187889127930117922[35] = 0;
   out_6187889127930117922[36] = 0;
   out_6187889127930117922[37] = 0;
   out_6187889127930117922[38] = 0;
   out_6187889127930117922[39] = 0;
   out_6187889127930117922[40] = 0;
   out_6187889127930117922[41] = 0;
   out_6187889127930117922[42] = 0;
   out_6187889127930117922[43] = 0;
   out_6187889127930117922[44] = 0;
   out_6187889127930117922[45] = 0;
   out_6187889127930117922[46] = 1;
   out_6187889127930117922[47] = 0;
   out_6187889127930117922[48] = 0;
   out_6187889127930117922[49] = 0;
   out_6187889127930117922[50] = 0;
   out_6187889127930117922[51] = 0;
   out_6187889127930117922[52] = 0;
   out_6187889127930117922[53] = 0;
   out_6187889127930117922[54] = 0;
   out_6187889127930117922[55] = 0;
   out_6187889127930117922[56] = 0;
   out_6187889127930117922[57] = 0;
   out_6187889127930117922[58] = 0;
   out_6187889127930117922[59] = 0;
   out_6187889127930117922[60] = 0;
   out_6187889127930117922[61] = 0;
   out_6187889127930117922[62] = 0;
   out_6187889127930117922[63] = 0;
   out_6187889127930117922[64] = 0;
   out_6187889127930117922[65] = 0;
}
void h_35(double *state, double *unused, double *out_8430199971281015512) {
   out_8430199971281015512[0] = state[7];
   out_8430199971281015512[1] = state[8];
   out_8430199971281015512[2] = state[9];
}
void H_35(double *state, double *unused, double *out_7958388689469590578) {
   out_7958388689469590578[0] = 0;
   out_7958388689469590578[1] = 0;
   out_7958388689469590578[2] = 0;
   out_7958388689469590578[3] = 0;
   out_7958388689469590578[4] = 0;
   out_7958388689469590578[5] = 0;
   out_7958388689469590578[6] = 0;
   out_7958388689469590578[7] = 1;
   out_7958388689469590578[8] = 0;
   out_7958388689469590578[9] = 0;
   out_7958388689469590578[10] = 0;
   out_7958388689469590578[11] = 0;
   out_7958388689469590578[12] = 0;
   out_7958388689469590578[13] = 0;
   out_7958388689469590578[14] = 0;
   out_7958388689469590578[15] = 0;
   out_7958388689469590578[16] = 0;
   out_7958388689469590578[17] = 0;
   out_7958388689469590578[18] = 0;
   out_7958388689469590578[19] = 0;
   out_7958388689469590578[20] = 0;
   out_7958388689469590578[21] = 0;
   out_7958388689469590578[22] = 0;
   out_7958388689469590578[23] = 0;
   out_7958388689469590578[24] = 0;
   out_7958388689469590578[25] = 0;
   out_7958388689469590578[26] = 0;
   out_7958388689469590578[27] = 0;
   out_7958388689469590578[28] = 0;
   out_7958388689469590578[29] = 0;
   out_7958388689469590578[30] = 1;
   out_7958388689469590578[31] = 0;
   out_7958388689469590578[32] = 0;
   out_7958388689469590578[33] = 0;
   out_7958388689469590578[34] = 0;
   out_7958388689469590578[35] = 0;
   out_7958388689469590578[36] = 0;
   out_7958388689469590578[37] = 0;
   out_7958388689469590578[38] = 0;
   out_7958388689469590578[39] = 0;
   out_7958388689469590578[40] = 0;
   out_7958388689469590578[41] = 0;
   out_7958388689469590578[42] = 0;
   out_7958388689469590578[43] = 0;
   out_7958388689469590578[44] = 0;
   out_7958388689469590578[45] = 0;
   out_7958388689469590578[46] = 0;
   out_7958388689469590578[47] = 0;
   out_7958388689469590578[48] = 0;
   out_7958388689469590578[49] = 0;
   out_7958388689469590578[50] = 0;
   out_7958388689469590578[51] = 0;
   out_7958388689469590578[52] = 0;
   out_7958388689469590578[53] = 1;
   out_7958388689469590578[54] = 0;
   out_7958388689469590578[55] = 0;
   out_7958388689469590578[56] = 0;
   out_7958388689469590578[57] = 0;
   out_7958388689469590578[58] = 0;
   out_7958388689469590578[59] = 0;
   out_7958388689469590578[60] = 0;
   out_7958388689469590578[61] = 0;
   out_7958388689469590578[62] = 0;
   out_7958388689469590578[63] = 0;
   out_7958388689469590578[64] = 0;
   out_7958388689469590578[65] = 0;
}
void h_32(double *state, double *unused, double *out_3818995440712379057) {
   out_3818995440712379057[0] = state[3];
   out_3818995440712379057[1] = state[4];
   out_3818995440712379057[2] = state[5];
   out_3818995440712379057[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2358978276602508345) {
   out_2358978276602508345[0] = 0;
   out_2358978276602508345[1] = 0;
   out_2358978276602508345[2] = 0;
   out_2358978276602508345[3] = 1;
   out_2358978276602508345[4] = 0;
   out_2358978276602508345[5] = 0;
   out_2358978276602508345[6] = 0;
   out_2358978276602508345[7] = 0;
   out_2358978276602508345[8] = 0;
   out_2358978276602508345[9] = 0;
   out_2358978276602508345[10] = 0;
   out_2358978276602508345[11] = 0;
   out_2358978276602508345[12] = 0;
   out_2358978276602508345[13] = 0;
   out_2358978276602508345[14] = 0;
   out_2358978276602508345[15] = 0;
   out_2358978276602508345[16] = 0;
   out_2358978276602508345[17] = 0;
   out_2358978276602508345[18] = 0;
   out_2358978276602508345[19] = 0;
   out_2358978276602508345[20] = 0;
   out_2358978276602508345[21] = 0;
   out_2358978276602508345[22] = 0;
   out_2358978276602508345[23] = 0;
   out_2358978276602508345[24] = 0;
   out_2358978276602508345[25] = 0;
   out_2358978276602508345[26] = 1;
   out_2358978276602508345[27] = 0;
   out_2358978276602508345[28] = 0;
   out_2358978276602508345[29] = 0;
   out_2358978276602508345[30] = 0;
   out_2358978276602508345[31] = 0;
   out_2358978276602508345[32] = 0;
   out_2358978276602508345[33] = 0;
   out_2358978276602508345[34] = 0;
   out_2358978276602508345[35] = 0;
   out_2358978276602508345[36] = 0;
   out_2358978276602508345[37] = 0;
   out_2358978276602508345[38] = 0;
   out_2358978276602508345[39] = 0;
   out_2358978276602508345[40] = 0;
   out_2358978276602508345[41] = 0;
   out_2358978276602508345[42] = 0;
   out_2358978276602508345[43] = 0;
   out_2358978276602508345[44] = 0;
   out_2358978276602508345[45] = 0;
   out_2358978276602508345[46] = 0;
   out_2358978276602508345[47] = 0;
   out_2358978276602508345[48] = 0;
   out_2358978276602508345[49] = 1;
   out_2358978276602508345[50] = 0;
   out_2358978276602508345[51] = 0;
   out_2358978276602508345[52] = 0;
   out_2358978276602508345[53] = 0;
   out_2358978276602508345[54] = 0;
   out_2358978276602508345[55] = 0;
   out_2358978276602508345[56] = 0;
   out_2358978276602508345[57] = 0;
   out_2358978276602508345[58] = 0;
   out_2358978276602508345[59] = 0;
   out_2358978276602508345[60] = 0;
   out_2358978276602508345[61] = 0;
   out_2358978276602508345[62] = 0;
   out_2358978276602508345[63] = 0;
   out_2358978276602508345[64] = 0;
   out_2358978276602508345[65] = 0;
   out_2358978276602508345[66] = 0;
   out_2358978276602508345[67] = 0;
   out_2358978276602508345[68] = 0;
   out_2358978276602508345[69] = 0;
   out_2358978276602508345[70] = 0;
   out_2358978276602508345[71] = 0;
   out_2358978276602508345[72] = 1;
   out_2358978276602508345[73] = 0;
   out_2358978276602508345[74] = 0;
   out_2358978276602508345[75] = 0;
   out_2358978276602508345[76] = 0;
   out_2358978276602508345[77] = 0;
   out_2358978276602508345[78] = 0;
   out_2358978276602508345[79] = 0;
   out_2358978276602508345[80] = 0;
   out_2358978276602508345[81] = 0;
   out_2358978276602508345[82] = 0;
   out_2358978276602508345[83] = 0;
   out_2358978276602508345[84] = 0;
   out_2358978276602508345[85] = 0;
   out_2358978276602508345[86] = 0;
   out_2358978276602508345[87] = 0;
}
void h_13(double *state, double *unused, double *out_537019485396887597) {
   out_537019485396887597[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_537019485396887597[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_537019485396887597[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5458509516200356163) {
   out_5458509516200356163[0] = 0;
   out_5458509516200356163[1] = 0;
   out_5458509516200356163[2] = 0;
   out_5458509516200356163[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5458509516200356163[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5458509516200356163[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5458509516200356163[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5458509516200356163[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5458509516200356163[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5458509516200356163[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5458509516200356163[10] = 0;
   out_5458509516200356163[11] = 0;
   out_5458509516200356163[12] = 0;
   out_5458509516200356163[13] = 0;
   out_5458509516200356163[14] = 0;
   out_5458509516200356163[15] = 0;
   out_5458509516200356163[16] = 0;
   out_5458509516200356163[17] = 0;
   out_5458509516200356163[18] = 0;
   out_5458509516200356163[19] = 0;
   out_5458509516200356163[20] = 0;
   out_5458509516200356163[21] = 0;
   out_5458509516200356163[22] = 0;
   out_5458509516200356163[23] = 0;
   out_5458509516200356163[24] = 0;
   out_5458509516200356163[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5458509516200356163[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5458509516200356163[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5458509516200356163[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5458509516200356163[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5458509516200356163[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5458509516200356163[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5458509516200356163[32] = 0;
   out_5458509516200356163[33] = 0;
   out_5458509516200356163[34] = 0;
   out_5458509516200356163[35] = 0;
   out_5458509516200356163[36] = 0;
   out_5458509516200356163[37] = 0;
   out_5458509516200356163[38] = 0;
   out_5458509516200356163[39] = 0;
   out_5458509516200356163[40] = 0;
   out_5458509516200356163[41] = 0;
   out_5458509516200356163[42] = 0;
   out_5458509516200356163[43] = 0;
   out_5458509516200356163[44] = 0;
   out_5458509516200356163[45] = 0;
   out_5458509516200356163[46] = 0;
   out_5458509516200356163[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5458509516200356163[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5458509516200356163[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5458509516200356163[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5458509516200356163[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5458509516200356163[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5458509516200356163[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5458509516200356163[54] = 0;
   out_5458509516200356163[55] = 0;
   out_5458509516200356163[56] = 0;
   out_5458509516200356163[57] = 0;
   out_5458509516200356163[58] = 0;
   out_5458509516200356163[59] = 0;
   out_5458509516200356163[60] = 0;
   out_5458509516200356163[61] = 0;
   out_5458509516200356163[62] = 0;
   out_5458509516200356163[63] = 0;
   out_5458509516200356163[64] = 0;
   out_5458509516200356163[65] = 0;
}
void h_14(double *state, double *unused, double *out_9145317158372918643) {
   out_9145317158372918643[0] = state[10];
   out_9145317158372918643[1] = state[11];
   out_9145317158372918643[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6567798506348120944) {
   out_6567798506348120944[0] = 0;
   out_6567798506348120944[1] = 0;
   out_6567798506348120944[2] = 0;
   out_6567798506348120944[3] = 0;
   out_6567798506348120944[4] = 0;
   out_6567798506348120944[5] = 0;
   out_6567798506348120944[6] = 0;
   out_6567798506348120944[7] = 0;
   out_6567798506348120944[8] = 0;
   out_6567798506348120944[9] = 0;
   out_6567798506348120944[10] = 1;
   out_6567798506348120944[11] = 0;
   out_6567798506348120944[12] = 0;
   out_6567798506348120944[13] = 0;
   out_6567798506348120944[14] = 0;
   out_6567798506348120944[15] = 0;
   out_6567798506348120944[16] = 0;
   out_6567798506348120944[17] = 0;
   out_6567798506348120944[18] = 0;
   out_6567798506348120944[19] = 0;
   out_6567798506348120944[20] = 0;
   out_6567798506348120944[21] = 0;
   out_6567798506348120944[22] = 0;
   out_6567798506348120944[23] = 0;
   out_6567798506348120944[24] = 0;
   out_6567798506348120944[25] = 0;
   out_6567798506348120944[26] = 0;
   out_6567798506348120944[27] = 0;
   out_6567798506348120944[28] = 0;
   out_6567798506348120944[29] = 0;
   out_6567798506348120944[30] = 0;
   out_6567798506348120944[31] = 0;
   out_6567798506348120944[32] = 0;
   out_6567798506348120944[33] = 1;
   out_6567798506348120944[34] = 0;
   out_6567798506348120944[35] = 0;
   out_6567798506348120944[36] = 0;
   out_6567798506348120944[37] = 0;
   out_6567798506348120944[38] = 0;
   out_6567798506348120944[39] = 0;
   out_6567798506348120944[40] = 0;
   out_6567798506348120944[41] = 0;
   out_6567798506348120944[42] = 0;
   out_6567798506348120944[43] = 0;
   out_6567798506348120944[44] = 0;
   out_6567798506348120944[45] = 0;
   out_6567798506348120944[46] = 0;
   out_6567798506348120944[47] = 0;
   out_6567798506348120944[48] = 0;
   out_6567798506348120944[49] = 0;
   out_6567798506348120944[50] = 0;
   out_6567798506348120944[51] = 0;
   out_6567798506348120944[52] = 0;
   out_6567798506348120944[53] = 0;
   out_6567798506348120944[54] = 0;
   out_6567798506348120944[55] = 0;
   out_6567798506348120944[56] = 1;
   out_6567798506348120944[57] = 0;
   out_6567798506348120944[58] = 0;
   out_6567798506348120944[59] = 0;
   out_6567798506348120944[60] = 0;
   out_6567798506348120944[61] = 0;
   out_6567798506348120944[62] = 0;
   out_6567798506348120944[63] = 0;
   out_6567798506348120944[64] = 0;
   out_6567798506348120944[65] = 0;
}
void h_33(double *state, double *unused, double *out_6376543165466627227) {
   out_6376543165466627227[0] = state[16];
   out_6376543165466627227[1] = state[17];
   out_6376543165466627227[2] = state[18];
}
void H_33(double *state, double *unused, double *out_291769090966246609) {
   out_291769090966246609[0] = 0;
   out_291769090966246609[1] = 0;
   out_291769090966246609[2] = 0;
   out_291769090966246609[3] = 0;
   out_291769090966246609[4] = 0;
   out_291769090966246609[5] = 0;
   out_291769090966246609[6] = 0;
   out_291769090966246609[7] = 0;
   out_291769090966246609[8] = 0;
   out_291769090966246609[9] = 0;
   out_291769090966246609[10] = 0;
   out_291769090966246609[11] = 0;
   out_291769090966246609[12] = 0;
   out_291769090966246609[13] = 0;
   out_291769090966246609[14] = 0;
   out_291769090966246609[15] = 0;
   out_291769090966246609[16] = 1;
   out_291769090966246609[17] = 0;
   out_291769090966246609[18] = 0;
   out_291769090966246609[19] = 0;
   out_291769090966246609[20] = 0;
   out_291769090966246609[21] = 0;
   out_291769090966246609[22] = 0;
   out_291769090966246609[23] = 0;
   out_291769090966246609[24] = 0;
   out_291769090966246609[25] = 0;
   out_291769090966246609[26] = 0;
   out_291769090966246609[27] = 0;
   out_291769090966246609[28] = 0;
   out_291769090966246609[29] = 0;
   out_291769090966246609[30] = 0;
   out_291769090966246609[31] = 0;
   out_291769090966246609[32] = 0;
   out_291769090966246609[33] = 0;
   out_291769090966246609[34] = 0;
   out_291769090966246609[35] = 0;
   out_291769090966246609[36] = 0;
   out_291769090966246609[37] = 0;
   out_291769090966246609[38] = 0;
   out_291769090966246609[39] = 1;
   out_291769090966246609[40] = 0;
   out_291769090966246609[41] = 0;
   out_291769090966246609[42] = 0;
   out_291769090966246609[43] = 0;
   out_291769090966246609[44] = 0;
   out_291769090966246609[45] = 0;
   out_291769090966246609[46] = 0;
   out_291769090966246609[47] = 0;
   out_291769090966246609[48] = 0;
   out_291769090966246609[49] = 0;
   out_291769090966246609[50] = 0;
   out_291769090966246609[51] = 0;
   out_291769090966246609[52] = 0;
   out_291769090966246609[53] = 0;
   out_291769090966246609[54] = 0;
   out_291769090966246609[55] = 0;
   out_291769090966246609[56] = 0;
   out_291769090966246609[57] = 0;
   out_291769090966246609[58] = 0;
   out_291769090966246609[59] = 0;
   out_291769090966246609[60] = 0;
   out_291769090966246609[61] = 0;
   out_291769090966246609[62] = 1;
   out_291769090966246609[63] = 0;
   out_291769090966246609[64] = 0;
   out_291769090966246609[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3726115798685262350) {
  H(in_vec, out_3726115798685262350);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2257357520338428177) {
  err_fun(nom_x, delta_x, out_2257357520338428177);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4709508731410798279) {
  inv_err_fun(nom_x, true_x, out_4709508731410798279);
}
void live_H_mod_fun(double *state, double *out_3509015753735998796) {
  H_mod_fun(state, out_3509015753735998796);
}
void live_f_fun(double *state, double dt, double *out_7183862674799437649) {
  f_fun(state,  dt, out_7183862674799437649);
}
void live_F_fun(double *state, double dt, double *out_7822426575519798474) {
  F_fun(state,  dt, out_7822426575519798474);
}
void live_h_4(double *state, double *unused, double *out_2671820401492287832) {
  h_4(state, unused, out_2671820401492287832);
}
void live_H_4(double *state, double *unused, double *out_4591726632096983202) {
  H_4(state, unused, out_4591726632096983202);
}
void live_h_9(double *state, double *unused, double *out_9145317158372918643) {
  h_9(state, unused, out_9145317158372918643);
}
void live_H_9(double *state, double *unused, double *out_6567798506348120944) {
  H_9(state, unused, out_6567798506348120944);
}
void live_h_10(double *state, double *unused, double *out_7176757818209557453) {
  h_10(state, unused, out_7176757818209557453);
}
void live_H_10(double *state, double *unused, double *out_6175982007627651595) {
  H_10(state, unused, out_6175982007627651595);
}
void live_h_12(double *state, double *unused, double *out_6364178269392813634) {
  h_12(state, unused, out_6364178269392813634);
}
void live_H_12(double *state, double *unused, double *out_6187889127930117922) {
  H_12(state, unused, out_6187889127930117922);
}
void live_h_35(double *state, double *unused, double *out_8430199971281015512) {
  h_35(state, unused, out_8430199971281015512);
}
void live_H_35(double *state, double *unused, double *out_7958388689469590578) {
  H_35(state, unused, out_7958388689469590578);
}
void live_h_32(double *state, double *unused, double *out_3818995440712379057) {
  h_32(state, unused, out_3818995440712379057);
}
void live_H_32(double *state, double *unused, double *out_2358978276602508345) {
  H_32(state, unused, out_2358978276602508345);
}
void live_h_13(double *state, double *unused, double *out_537019485396887597) {
  h_13(state, unused, out_537019485396887597);
}
void live_H_13(double *state, double *unused, double *out_5458509516200356163) {
  H_13(state, unused, out_5458509516200356163);
}
void live_h_14(double *state, double *unused, double *out_9145317158372918643) {
  h_14(state, unused, out_9145317158372918643);
}
void live_H_14(double *state, double *unused, double *out_6567798506348120944) {
  H_14(state, unused, out_6567798506348120944);
}
void live_h_33(double *state, double *unused, double *out_6376543165466627227) {
  h_33(state, unused, out_6376543165466627227);
}
void live_H_33(double *state, double *unused, double *out_291769090966246609) {
  H_33(state, unused, out_291769090966246609);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
