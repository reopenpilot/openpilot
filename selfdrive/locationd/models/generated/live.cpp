#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7723672591224272044) {
   out_7723672591224272044[0] = 0;
   out_7723672591224272044[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7723672591224272044[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7723672591224272044[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7723672591224272044[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7723672591224272044[5] = -sin(in_vec[1]);
   out_7723672591224272044[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7723672591224272044[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7723672591224272044[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7723672591224272044[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7723672591224272044[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7723672591224272044[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7723672591224272044[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7723672591224272044[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7723672591224272044[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7723672591224272044[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7723672591224272044[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7723672591224272044[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5999034876196663610) {
   out_5999034876196663610[0] = delta_x[0] + nom_x[0];
   out_5999034876196663610[1] = delta_x[1] + nom_x[1];
   out_5999034876196663610[2] = delta_x[2] + nom_x[2];
   out_5999034876196663610[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5999034876196663610[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5999034876196663610[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5999034876196663610[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5999034876196663610[7] = delta_x[6] + nom_x[7];
   out_5999034876196663610[8] = delta_x[7] + nom_x[8];
   out_5999034876196663610[9] = delta_x[8] + nom_x[9];
   out_5999034876196663610[10] = delta_x[9] + nom_x[10];
   out_5999034876196663610[11] = delta_x[10] + nom_x[11];
   out_5999034876196663610[12] = delta_x[11] + nom_x[12];
   out_5999034876196663610[13] = delta_x[12] + nom_x[13];
   out_5999034876196663610[14] = delta_x[13] + nom_x[14];
   out_5999034876196663610[15] = delta_x[14] + nom_x[15];
   out_5999034876196663610[16] = delta_x[15] + nom_x[16];
   out_5999034876196663610[17] = delta_x[16] + nom_x[17];
   out_5999034876196663610[18] = delta_x[17] + nom_x[18];
   out_5999034876196663610[19] = delta_x[18] + nom_x[19];
   out_5999034876196663610[20] = delta_x[19] + nom_x[20];
   out_5999034876196663610[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_768101308681296878) {
   out_768101308681296878[0] = -nom_x[0] + true_x[0];
   out_768101308681296878[1] = -nom_x[1] + true_x[1];
   out_768101308681296878[2] = -nom_x[2] + true_x[2];
   out_768101308681296878[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_768101308681296878[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_768101308681296878[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_768101308681296878[6] = -nom_x[7] + true_x[7];
   out_768101308681296878[7] = -nom_x[8] + true_x[8];
   out_768101308681296878[8] = -nom_x[9] + true_x[9];
   out_768101308681296878[9] = -nom_x[10] + true_x[10];
   out_768101308681296878[10] = -nom_x[11] + true_x[11];
   out_768101308681296878[11] = -nom_x[12] + true_x[12];
   out_768101308681296878[12] = -nom_x[13] + true_x[13];
   out_768101308681296878[13] = -nom_x[14] + true_x[14];
   out_768101308681296878[14] = -nom_x[15] + true_x[15];
   out_768101308681296878[15] = -nom_x[16] + true_x[16];
   out_768101308681296878[16] = -nom_x[17] + true_x[17];
   out_768101308681296878[17] = -nom_x[18] + true_x[18];
   out_768101308681296878[18] = -nom_x[19] + true_x[19];
   out_768101308681296878[19] = -nom_x[20] + true_x[20];
   out_768101308681296878[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3063576851526030361) {
   out_3063576851526030361[0] = 1.0;
   out_3063576851526030361[1] = 0;
   out_3063576851526030361[2] = 0;
   out_3063576851526030361[3] = 0;
   out_3063576851526030361[4] = 0;
   out_3063576851526030361[5] = 0;
   out_3063576851526030361[6] = 0;
   out_3063576851526030361[7] = 0;
   out_3063576851526030361[8] = 0;
   out_3063576851526030361[9] = 0;
   out_3063576851526030361[10] = 0;
   out_3063576851526030361[11] = 0;
   out_3063576851526030361[12] = 0;
   out_3063576851526030361[13] = 0;
   out_3063576851526030361[14] = 0;
   out_3063576851526030361[15] = 0;
   out_3063576851526030361[16] = 0;
   out_3063576851526030361[17] = 0;
   out_3063576851526030361[18] = 0;
   out_3063576851526030361[19] = 0;
   out_3063576851526030361[20] = 0;
   out_3063576851526030361[21] = 0;
   out_3063576851526030361[22] = 1.0;
   out_3063576851526030361[23] = 0;
   out_3063576851526030361[24] = 0;
   out_3063576851526030361[25] = 0;
   out_3063576851526030361[26] = 0;
   out_3063576851526030361[27] = 0;
   out_3063576851526030361[28] = 0;
   out_3063576851526030361[29] = 0;
   out_3063576851526030361[30] = 0;
   out_3063576851526030361[31] = 0;
   out_3063576851526030361[32] = 0;
   out_3063576851526030361[33] = 0;
   out_3063576851526030361[34] = 0;
   out_3063576851526030361[35] = 0;
   out_3063576851526030361[36] = 0;
   out_3063576851526030361[37] = 0;
   out_3063576851526030361[38] = 0;
   out_3063576851526030361[39] = 0;
   out_3063576851526030361[40] = 0;
   out_3063576851526030361[41] = 0;
   out_3063576851526030361[42] = 0;
   out_3063576851526030361[43] = 0;
   out_3063576851526030361[44] = 1.0;
   out_3063576851526030361[45] = 0;
   out_3063576851526030361[46] = 0;
   out_3063576851526030361[47] = 0;
   out_3063576851526030361[48] = 0;
   out_3063576851526030361[49] = 0;
   out_3063576851526030361[50] = 0;
   out_3063576851526030361[51] = 0;
   out_3063576851526030361[52] = 0;
   out_3063576851526030361[53] = 0;
   out_3063576851526030361[54] = 0;
   out_3063576851526030361[55] = 0;
   out_3063576851526030361[56] = 0;
   out_3063576851526030361[57] = 0;
   out_3063576851526030361[58] = 0;
   out_3063576851526030361[59] = 0;
   out_3063576851526030361[60] = 0;
   out_3063576851526030361[61] = 0;
   out_3063576851526030361[62] = 0;
   out_3063576851526030361[63] = 0;
   out_3063576851526030361[64] = 0;
   out_3063576851526030361[65] = 0;
   out_3063576851526030361[66] = -0.5*state[4];
   out_3063576851526030361[67] = -0.5*state[5];
   out_3063576851526030361[68] = -0.5*state[6];
   out_3063576851526030361[69] = 0;
   out_3063576851526030361[70] = 0;
   out_3063576851526030361[71] = 0;
   out_3063576851526030361[72] = 0;
   out_3063576851526030361[73] = 0;
   out_3063576851526030361[74] = 0;
   out_3063576851526030361[75] = 0;
   out_3063576851526030361[76] = 0;
   out_3063576851526030361[77] = 0;
   out_3063576851526030361[78] = 0;
   out_3063576851526030361[79] = 0;
   out_3063576851526030361[80] = 0;
   out_3063576851526030361[81] = 0;
   out_3063576851526030361[82] = 0;
   out_3063576851526030361[83] = 0;
   out_3063576851526030361[84] = 0;
   out_3063576851526030361[85] = 0;
   out_3063576851526030361[86] = 0;
   out_3063576851526030361[87] = 0.5*state[3];
   out_3063576851526030361[88] = 0.5*state[6];
   out_3063576851526030361[89] = -0.5*state[5];
   out_3063576851526030361[90] = 0;
   out_3063576851526030361[91] = 0;
   out_3063576851526030361[92] = 0;
   out_3063576851526030361[93] = 0;
   out_3063576851526030361[94] = 0;
   out_3063576851526030361[95] = 0;
   out_3063576851526030361[96] = 0;
   out_3063576851526030361[97] = 0;
   out_3063576851526030361[98] = 0;
   out_3063576851526030361[99] = 0;
   out_3063576851526030361[100] = 0;
   out_3063576851526030361[101] = 0;
   out_3063576851526030361[102] = 0;
   out_3063576851526030361[103] = 0;
   out_3063576851526030361[104] = 0;
   out_3063576851526030361[105] = 0;
   out_3063576851526030361[106] = 0;
   out_3063576851526030361[107] = 0;
   out_3063576851526030361[108] = -0.5*state[6];
   out_3063576851526030361[109] = 0.5*state[3];
   out_3063576851526030361[110] = 0.5*state[4];
   out_3063576851526030361[111] = 0;
   out_3063576851526030361[112] = 0;
   out_3063576851526030361[113] = 0;
   out_3063576851526030361[114] = 0;
   out_3063576851526030361[115] = 0;
   out_3063576851526030361[116] = 0;
   out_3063576851526030361[117] = 0;
   out_3063576851526030361[118] = 0;
   out_3063576851526030361[119] = 0;
   out_3063576851526030361[120] = 0;
   out_3063576851526030361[121] = 0;
   out_3063576851526030361[122] = 0;
   out_3063576851526030361[123] = 0;
   out_3063576851526030361[124] = 0;
   out_3063576851526030361[125] = 0;
   out_3063576851526030361[126] = 0;
   out_3063576851526030361[127] = 0;
   out_3063576851526030361[128] = 0;
   out_3063576851526030361[129] = 0.5*state[5];
   out_3063576851526030361[130] = -0.5*state[4];
   out_3063576851526030361[131] = 0.5*state[3];
   out_3063576851526030361[132] = 0;
   out_3063576851526030361[133] = 0;
   out_3063576851526030361[134] = 0;
   out_3063576851526030361[135] = 0;
   out_3063576851526030361[136] = 0;
   out_3063576851526030361[137] = 0;
   out_3063576851526030361[138] = 0;
   out_3063576851526030361[139] = 0;
   out_3063576851526030361[140] = 0;
   out_3063576851526030361[141] = 0;
   out_3063576851526030361[142] = 0;
   out_3063576851526030361[143] = 0;
   out_3063576851526030361[144] = 0;
   out_3063576851526030361[145] = 0;
   out_3063576851526030361[146] = 0;
   out_3063576851526030361[147] = 0;
   out_3063576851526030361[148] = 0;
   out_3063576851526030361[149] = 0;
   out_3063576851526030361[150] = 0;
   out_3063576851526030361[151] = 0;
   out_3063576851526030361[152] = 0;
   out_3063576851526030361[153] = 1.0;
   out_3063576851526030361[154] = 0;
   out_3063576851526030361[155] = 0;
   out_3063576851526030361[156] = 0;
   out_3063576851526030361[157] = 0;
   out_3063576851526030361[158] = 0;
   out_3063576851526030361[159] = 0;
   out_3063576851526030361[160] = 0;
   out_3063576851526030361[161] = 0;
   out_3063576851526030361[162] = 0;
   out_3063576851526030361[163] = 0;
   out_3063576851526030361[164] = 0;
   out_3063576851526030361[165] = 0;
   out_3063576851526030361[166] = 0;
   out_3063576851526030361[167] = 0;
   out_3063576851526030361[168] = 0;
   out_3063576851526030361[169] = 0;
   out_3063576851526030361[170] = 0;
   out_3063576851526030361[171] = 0;
   out_3063576851526030361[172] = 0;
   out_3063576851526030361[173] = 0;
   out_3063576851526030361[174] = 0;
   out_3063576851526030361[175] = 1.0;
   out_3063576851526030361[176] = 0;
   out_3063576851526030361[177] = 0;
   out_3063576851526030361[178] = 0;
   out_3063576851526030361[179] = 0;
   out_3063576851526030361[180] = 0;
   out_3063576851526030361[181] = 0;
   out_3063576851526030361[182] = 0;
   out_3063576851526030361[183] = 0;
   out_3063576851526030361[184] = 0;
   out_3063576851526030361[185] = 0;
   out_3063576851526030361[186] = 0;
   out_3063576851526030361[187] = 0;
   out_3063576851526030361[188] = 0;
   out_3063576851526030361[189] = 0;
   out_3063576851526030361[190] = 0;
   out_3063576851526030361[191] = 0;
   out_3063576851526030361[192] = 0;
   out_3063576851526030361[193] = 0;
   out_3063576851526030361[194] = 0;
   out_3063576851526030361[195] = 0;
   out_3063576851526030361[196] = 0;
   out_3063576851526030361[197] = 1.0;
   out_3063576851526030361[198] = 0;
   out_3063576851526030361[199] = 0;
   out_3063576851526030361[200] = 0;
   out_3063576851526030361[201] = 0;
   out_3063576851526030361[202] = 0;
   out_3063576851526030361[203] = 0;
   out_3063576851526030361[204] = 0;
   out_3063576851526030361[205] = 0;
   out_3063576851526030361[206] = 0;
   out_3063576851526030361[207] = 0;
   out_3063576851526030361[208] = 0;
   out_3063576851526030361[209] = 0;
   out_3063576851526030361[210] = 0;
   out_3063576851526030361[211] = 0;
   out_3063576851526030361[212] = 0;
   out_3063576851526030361[213] = 0;
   out_3063576851526030361[214] = 0;
   out_3063576851526030361[215] = 0;
   out_3063576851526030361[216] = 0;
   out_3063576851526030361[217] = 0;
   out_3063576851526030361[218] = 0;
   out_3063576851526030361[219] = 1.0;
   out_3063576851526030361[220] = 0;
   out_3063576851526030361[221] = 0;
   out_3063576851526030361[222] = 0;
   out_3063576851526030361[223] = 0;
   out_3063576851526030361[224] = 0;
   out_3063576851526030361[225] = 0;
   out_3063576851526030361[226] = 0;
   out_3063576851526030361[227] = 0;
   out_3063576851526030361[228] = 0;
   out_3063576851526030361[229] = 0;
   out_3063576851526030361[230] = 0;
   out_3063576851526030361[231] = 0;
   out_3063576851526030361[232] = 0;
   out_3063576851526030361[233] = 0;
   out_3063576851526030361[234] = 0;
   out_3063576851526030361[235] = 0;
   out_3063576851526030361[236] = 0;
   out_3063576851526030361[237] = 0;
   out_3063576851526030361[238] = 0;
   out_3063576851526030361[239] = 0;
   out_3063576851526030361[240] = 0;
   out_3063576851526030361[241] = 1.0;
   out_3063576851526030361[242] = 0;
   out_3063576851526030361[243] = 0;
   out_3063576851526030361[244] = 0;
   out_3063576851526030361[245] = 0;
   out_3063576851526030361[246] = 0;
   out_3063576851526030361[247] = 0;
   out_3063576851526030361[248] = 0;
   out_3063576851526030361[249] = 0;
   out_3063576851526030361[250] = 0;
   out_3063576851526030361[251] = 0;
   out_3063576851526030361[252] = 0;
   out_3063576851526030361[253] = 0;
   out_3063576851526030361[254] = 0;
   out_3063576851526030361[255] = 0;
   out_3063576851526030361[256] = 0;
   out_3063576851526030361[257] = 0;
   out_3063576851526030361[258] = 0;
   out_3063576851526030361[259] = 0;
   out_3063576851526030361[260] = 0;
   out_3063576851526030361[261] = 0;
   out_3063576851526030361[262] = 0;
   out_3063576851526030361[263] = 1.0;
   out_3063576851526030361[264] = 0;
   out_3063576851526030361[265] = 0;
   out_3063576851526030361[266] = 0;
   out_3063576851526030361[267] = 0;
   out_3063576851526030361[268] = 0;
   out_3063576851526030361[269] = 0;
   out_3063576851526030361[270] = 0;
   out_3063576851526030361[271] = 0;
   out_3063576851526030361[272] = 0;
   out_3063576851526030361[273] = 0;
   out_3063576851526030361[274] = 0;
   out_3063576851526030361[275] = 0;
   out_3063576851526030361[276] = 0;
   out_3063576851526030361[277] = 0;
   out_3063576851526030361[278] = 0;
   out_3063576851526030361[279] = 0;
   out_3063576851526030361[280] = 0;
   out_3063576851526030361[281] = 0;
   out_3063576851526030361[282] = 0;
   out_3063576851526030361[283] = 0;
   out_3063576851526030361[284] = 0;
   out_3063576851526030361[285] = 1.0;
   out_3063576851526030361[286] = 0;
   out_3063576851526030361[287] = 0;
   out_3063576851526030361[288] = 0;
   out_3063576851526030361[289] = 0;
   out_3063576851526030361[290] = 0;
   out_3063576851526030361[291] = 0;
   out_3063576851526030361[292] = 0;
   out_3063576851526030361[293] = 0;
   out_3063576851526030361[294] = 0;
   out_3063576851526030361[295] = 0;
   out_3063576851526030361[296] = 0;
   out_3063576851526030361[297] = 0;
   out_3063576851526030361[298] = 0;
   out_3063576851526030361[299] = 0;
   out_3063576851526030361[300] = 0;
   out_3063576851526030361[301] = 0;
   out_3063576851526030361[302] = 0;
   out_3063576851526030361[303] = 0;
   out_3063576851526030361[304] = 0;
   out_3063576851526030361[305] = 0;
   out_3063576851526030361[306] = 0;
   out_3063576851526030361[307] = 1.0;
   out_3063576851526030361[308] = 0;
   out_3063576851526030361[309] = 0;
   out_3063576851526030361[310] = 0;
   out_3063576851526030361[311] = 0;
   out_3063576851526030361[312] = 0;
   out_3063576851526030361[313] = 0;
   out_3063576851526030361[314] = 0;
   out_3063576851526030361[315] = 0;
   out_3063576851526030361[316] = 0;
   out_3063576851526030361[317] = 0;
   out_3063576851526030361[318] = 0;
   out_3063576851526030361[319] = 0;
   out_3063576851526030361[320] = 0;
   out_3063576851526030361[321] = 0;
   out_3063576851526030361[322] = 0;
   out_3063576851526030361[323] = 0;
   out_3063576851526030361[324] = 0;
   out_3063576851526030361[325] = 0;
   out_3063576851526030361[326] = 0;
   out_3063576851526030361[327] = 0;
   out_3063576851526030361[328] = 0;
   out_3063576851526030361[329] = 1.0;
   out_3063576851526030361[330] = 0;
   out_3063576851526030361[331] = 0;
   out_3063576851526030361[332] = 0;
   out_3063576851526030361[333] = 0;
   out_3063576851526030361[334] = 0;
   out_3063576851526030361[335] = 0;
   out_3063576851526030361[336] = 0;
   out_3063576851526030361[337] = 0;
   out_3063576851526030361[338] = 0;
   out_3063576851526030361[339] = 0;
   out_3063576851526030361[340] = 0;
   out_3063576851526030361[341] = 0;
   out_3063576851526030361[342] = 0;
   out_3063576851526030361[343] = 0;
   out_3063576851526030361[344] = 0;
   out_3063576851526030361[345] = 0;
   out_3063576851526030361[346] = 0;
   out_3063576851526030361[347] = 0;
   out_3063576851526030361[348] = 0;
   out_3063576851526030361[349] = 0;
   out_3063576851526030361[350] = 0;
   out_3063576851526030361[351] = 1.0;
   out_3063576851526030361[352] = 0;
   out_3063576851526030361[353] = 0;
   out_3063576851526030361[354] = 0;
   out_3063576851526030361[355] = 0;
   out_3063576851526030361[356] = 0;
   out_3063576851526030361[357] = 0;
   out_3063576851526030361[358] = 0;
   out_3063576851526030361[359] = 0;
   out_3063576851526030361[360] = 0;
   out_3063576851526030361[361] = 0;
   out_3063576851526030361[362] = 0;
   out_3063576851526030361[363] = 0;
   out_3063576851526030361[364] = 0;
   out_3063576851526030361[365] = 0;
   out_3063576851526030361[366] = 0;
   out_3063576851526030361[367] = 0;
   out_3063576851526030361[368] = 0;
   out_3063576851526030361[369] = 0;
   out_3063576851526030361[370] = 0;
   out_3063576851526030361[371] = 0;
   out_3063576851526030361[372] = 0;
   out_3063576851526030361[373] = 1.0;
   out_3063576851526030361[374] = 0;
   out_3063576851526030361[375] = 0;
   out_3063576851526030361[376] = 0;
   out_3063576851526030361[377] = 0;
   out_3063576851526030361[378] = 0;
   out_3063576851526030361[379] = 0;
   out_3063576851526030361[380] = 0;
   out_3063576851526030361[381] = 0;
   out_3063576851526030361[382] = 0;
   out_3063576851526030361[383] = 0;
   out_3063576851526030361[384] = 0;
   out_3063576851526030361[385] = 0;
   out_3063576851526030361[386] = 0;
   out_3063576851526030361[387] = 0;
   out_3063576851526030361[388] = 0;
   out_3063576851526030361[389] = 0;
   out_3063576851526030361[390] = 0;
   out_3063576851526030361[391] = 0;
   out_3063576851526030361[392] = 0;
   out_3063576851526030361[393] = 0;
   out_3063576851526030361[394] = 0;
   out_3063576851526030361[395] = 1.0;
   out_3063576851526030361[396] = 0;
   out_3063576851526030361[397] = 0;
   out_3063576851526030361[398] = 0;
   out_3063576851526030361[399] = 0;
   out_3063576851526030361[400] = 0;
   out_3063576851526030361[401] = 0;
   out_3063576851526030361[402] = 0;
   out_3063576851526030361[403] = 0;
   out_3063576851526030361[404] = 0;
   out_3063576851526030361[405] = 0;
   out_3063576851526030361[406] = 0;
   out_3063576851526030361[407] = 0;
   out_3063576851526030361[408] = 0;
   out_3063576851526030361[409] = 0;
   out_3063576851526030361[410] = 0;
   out_3063576851526030361[411] = 0;
   out_3063576851526030361[412] = 0;
   out_3063576851526030361[413] = 0;
   out_3063576851526030361[414] = 0;
   out_3063576851526030361[415] = 0;
   out_3063576851526030361[416] = 0;
   out_3063576851526030361[417] = 1.0;
   out_3063576851526030361[418] = 0;
   out_3063576851526030361[419] = 0;
   out_3063576851526030361[420] = 0;
   out_3063576851526030361[421] = 0;
   out_3063576851526030361[422] = 0;
   out_3063576851526030361[423] = 0;
   out_3063576851526030361[424] = 0;
   out_3063576851526030361[425] = 0;
   out_3063576851526030361[426] = 0;
   out_3063576851526030361[427] = 0;
   out_3063576851526030361[428] = 0;
   out_3063576851526030361[429] = 0;
   out_3063576851526030361[430] = 0;
   out_3063576851526030361[431] = 0;
   out_3063576851526030361[432] = 0;
   out_3063576851526030361[433] = 0;
   out_3063576851526030361[434] = 0;
   out_3063576851526030361[435] = 0;
   out_3063576851526030361[436] = 0;
   out_3063576851526030361[437] = 0;
   out_3063576851526030361[438] = 0;
   out_3063576851526030361[439] = 1.0;
   out_3063576851526030361[440] = 0;
   out_3063576851526030361[441] = 0;
   out_3063576851526030361[442] = 0;
   out_3063576851526030361[443] = 0;
   out_3063576851526030361[444] = 0;
   out_3063576851526030361[445] = 0;
   out_3063576851526030361[446] = 0;
   out_3063576851526030361[447] = 0;
   out_3063576851526030361[448] = 0;
   out_3063576851526030361[449] = 0;
   out_3063576851526030361[450] = 0;
   out_3063576851526030361[451] = 0;
   out_3063576851526030361[452] = 0;
   out_3063576851526030361[453] = 0;
   out_3063576851526030361[454] = 0;
   out_3063576851526030361[455] = 0;
   out_3063576851526030361[456] = 0;
   out_3063576851526030361[457] = 0;
   out_3063576851526030361[458] = 0;
   out_3063576851526030361[459] = 0;
   out_3063576851526030361[460] = 0;
   out_3063576851526030361[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1683524968433238714) {
   out_1683524968433238714[0] = dt*state[7] + state[0];
   out_1683524968433238714[1] = dt*state[8] + state[1];
   out_1683524968433238714[2] = dt*state[9] + state[2];
   out_1683524968433238714[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1683524968433238714[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1683524968433238714[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1683524968433238714[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1683524968433238714[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1683524968433238714[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1683524968433238714[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1683524968433238714[10] = state[10];
   out_1683524968433238714[11] = state[11];
   out_1683524968433238714[12] = state[12];
   out_1683524968433238714[13] = state[13];
   out_1683524968433238714[14] = state[14];
   out_1683524968433238714[15] = state[15];
   out_1683524968433238714[16] = state[16];
   out_1683524968433238714[17] = state[17];
   out_1683524968433238714[18] = state[18];
   out_1683524968433238714[19] = state[19];
   out_1683524968433238714[20] = state[20];
   out_1683524968433238714[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6144835325197934906) {
   out_6144835325197934906[0] = 1;
   out_6144835325197934906[1] = 0;
   out_6144835325197934906[2] = 0;
   out_6144835325197934906[3] = 0;
   out_6144835325197934906[4] = 0;
   out_6144835325197934906[5] = 0;
   out_6144835325197934906[6] = dt;
   out_6144835325197934906[7] = 0;
   out_6144835325197934906[8] = 0;
   out_6144835325197934906[9] = 0;
   out_6144835325197934906[10] = 0;
   out_6144835325197934906[11] = 0;
   out_6144835325197934906[12] = 0;
   out_6144835325197934906[13] = 0;
   out_6144835325197934906[14] = 0;
   out_6144835325197934906[15] = 0;
   out_6144835325197934906[16] = 0;
   out_6144835325197934906[17] = 0;
   out_6144835325197934906[18] = 0;
   out_6144835325197934906[19] = 0;
   out_6144835325197934906[20] = 0;
   out_6144835325197934906[21] = 0;
   out_6144835325197934906[22] = 1;
   out_6144835325197934906[23] = 0;
   out_6144835325197934906[24] = 0;
   out_6144835325197934906[25] = 0;
   out_6144835325197934906[26] = 0;
   out_6144835325197934906[27] = 0;
   out_6144835325197934906[28] = dt;
   out_6144835325197934906[29] = 0;
   out_6144835325197934906[30] = 0;
   out_6144835325197934906[31] = 0;
   out_6144835325197934906[32] = 0;
   out_6144835325197934906[33] = 0;
   out_6144835325197934906[34] = 0;
   out_6144835325197934906[35] = 0;
   out_6144835325197934906[36] = 0;
   out_6144835325197934906[37] = 0;
   out_6144835325197934906[38] = 0;
   out_6144835325197934906[39] = 0;
   out_6144835325197934906[40] = 0;
   out_6144835325197934906[41] = 0;
   out_6144835325197934906[42] = 0;
   out_6144835325197934906[43] = 0;
   out_6144835325197934906[44] = 1;
   out_6144835325197934906[45] = 0;
   out_6144835325197934906[46] = 0;
   out_6144835325197934906[47] = 0;
   out_6144835325197934906[48] = 0;
   out_6144835325197934906[49] = 0;
   out_6144835325197934906[50] = dt;
   out_6144835325197934906[51] = 0;
   out_6144835325197934906[52] = 0;
   out_6144835325197934906[53] = 0;
   out_6144835325197934906[54] = 0;
   out_6144835325197934906[55] = 0;
   out_6144835325197934906[56] = 0;
   out_6144835325197934906[57] = 0;
   out_6144835325197934906[58] = 0;
   out_6144835325197934906[59] = 0;
   out_6144835325197934906[60] = 0;
   out_6144835325197934906[61] = 0;
   out_6144835325197934906[62] = 0;
   out_6144835325197934906[63] = 0;
   out_6144835325197934906[64] = 0;
   out_6144835325197934906[65] = 0;
   out_6144835325197934906[66] = 1;
   out_6144835325197934906[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6144835325197934906[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6144835325197934906[69] = 0;
   out_6144835325197934906[70] = 0;
   out_6144835325197934906[71] = 0;
   out_6144835325197934906[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6144835325197934906[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6144835325197934906[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6144835325197934906[75] = 0;
   out_6144835325197934906[76] = 0;
   out_6144835325197934906[77] = 0;
   out_6144835325197934906[78] = 0;
   out_6144835325197934906[79] = 0;
   out_6144835325197934906[80] = 0;
   out_6144835325197934906[81] = 0;
   out_6144835325197934906[82] = 0;
   out_6144835325197934906[83] = 0;
   out_6144835325197934906[84] = 0;
   out_6144835325197934906[85] = 0;
   out_6144835325197934906[86] = 0;
   out_6144835325197934906[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6144835325197934906[88] = 1;
   out_6144835325197934906[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6144835325197934906[90] = 0;
   out_6144835325197934906[91] = 0;
   out_6144835325197934906[92] = 0;
   out_6144835325197934906[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6144835325197934906[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6144835325197934906[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6144835325197934906[96] = 0;
   out_6144835325197934906[97] = 0;
   out_6144835325197934906[98] = 0;
   out_6144835325197934906[99] = 0;
   out_6144835325197934906[100] = 0;
   out_6144835325197934906[101] = 0;
   out_6144835325197934906[102] = 0;
   out_6144835325197934906[103] = 0;
   out_6144835325197934906[104] = 0;
   out_6144835325197934906[105] = 0;
   out_6144835325197934906[106] = 0;
   out_6144835325197934906[107] = 0;
   out_6144835325197934906[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6144835325197934906[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6144835325197934906[110] = 1;
   out_6144835325197934906[111] = 0;
   out_6144835325197934906[112] = 0;
   out_6144835325197934906[113] = 0;
   out_6144835325197934906[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6144835325197934906[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6144835325197934906[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6144835325197934906[117] = 0;
   out_6144835325197934906[118] = 0;
   out_6144835325197934906[119] = 0;
   out_6144835325197934906[120] = 0;
   out_6144835325197934906[121] = 0;
   out_6144835325197934906[122] = 0;
   out_6144835325197934906[123] = 0;
   out_6144835325197934906[124] = 0;
   out_6144835325197934906[125] = 0;
   out_6144835325197934906[126] = 0;
   out_6144835325197934906[127] = 0;
   out_6144835325197934906[128] = 0;
   out_6144835325197934906[129] = 0;
   out_6144835325197934906[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6144835325197934906[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6144835325197934906[132] = 1;
   out_6144835325197934906[133] = 0;
   out_6144835325197934906[134] = 0;
   out_6144835325197934906[135] = 0;
   out_6144835325197934906[136] = 0;
   out_6144835325197934906[137] = 0;
   out_6144835325197934906[138] = 0;
   out_6144835325197934906[139] = 0;
   out_6144835325197934906[140] = 0;
   out_6144835325197934906[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6144835325197934906[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6144835325197934906[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6144835325197934906[144] = 0;
   out_6144835325197934906[145] = 0;
   out_6144835325197934906[146] = 0;
   out_6144835325197934906[147] = 0;
   out_6144835325197934906[148] = 0;
   out_6144835325197934906[149] = 0;
   out_6144835325197934906[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6144835325197934906[151] = 0;
   out_6144835325197934906[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6144835325197934906[153] = 0;
   out_6144835325197934906[154] = 1;
   out_6144835325197934906[155] = 0;
   out_6144835325197934906[156] = 0;
   out_6144835325197934906[157] = 0;
   out_6144835325197934906[158] = 0;
   out_6144835325197934906[159] = 0;
   out_6144835325197934906[160] = 0;
   out_6144835325197934906[161] = 0;
   out_6144835325197934906[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6144835325197934906[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6144835325197934906[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6144835325197934906[165] = 0;
   out_6144835325197934906[166] = 0;
   out_6144835325197934906[167] = 0;
   out_6144835325197934906[168] = 0;
   out_6144835325197934906[169] = 0;
   out_6144835325197934906[170] = 0;
   out_6144835325197934906[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6144835325197934906[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6144835325197934906[173] = 0;
   out_6144835325197934906[174] = 0;
   out_6144835325197934906[175] = 0;
   out_6144835325197934906[176] = 1;
   out_6144835325197934906[177] = 0;
   out_6144835325197934906[178] = 0;
   out_6144835325197934906[179] = 0;
   out_6144835325197934906[180] = 0;
   out_6144835325197934906[181] = 0;
   out_6144835325197934906[182] = 0;
   out_6144835325197934906[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6144835325197934906[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6144835325197934906[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6144835325197934906[186] = 0;
   out_6144835325197934906[187] = 0;
   out_6144835325197934906[188] = 0;
   out_6144835325197934906[189] = 0;
   out_6144835325197934906[190] = 0;
   out_6144835325197934906[191] = 0;
   out_6144835325197934906[192] = 0;
   out_6144835325197934906[193] = 0;
   out_6144835325197934906[194] = 0;
   out_6144835325197934906[195] = 0;
   out_6144835325197934906[196] = 0;
   out_6144835325197934906[197] = 0;
   out_6144835325197934906[198] = 1;
   out_6144835325197934906[199] = 0;
   out_6144835325197934906[200] = 0;
   out_6144835325197934906[201] = 0;
   out_6144835325197934906[202] = 0;
   out_6144835325197934906[203] = 0;
   out_6144835325197934906[204] = 0;
   out_6144835325197934906[205] = 0;
   out_6144835325197934906[206] = 0;
   out_6144835325197934906[207] = 0;
   out_6144835325197934906[208] = 0;
   out_6144835325197934906[209] = 0;
   out_6144835325197934906[210] = 0;
   out_6144835325197934906[211] = 0;
   out_6144835325197934906[212] = 0;
   out_6144835325197934906[213] = 0;
   out_6144835325197934906[214] = 0;
   out_6144835325197934906[215] = 0;
   out_6144835325197934906[216] = 0;
   out_6144835325197934906[217] = 0;
   out_6144835325197934906[218] = 0;
   out_6144835325197934906[219] = 0;
   out_6144835325197934906[220] = 1;
   out_6144835325197934906[221] = 0;
   out_6144835325197934906[222] = 0;
   out_6144835325197934906[223] = 0;
   out_6144835325197934906[224] = 0;
   out_6144835325197934906[225] = 0;
   out_6144835325197934906[226] = 0;
   out_6144835325197934906[227] = 0;
   out_6144835325197934906[228] = 0;
   out_6144835325197934906[229] = 0;
   out_6144835325197934906[230] = 0;
   out_6144835325197934906[231] = 0;
   out_6144835325197934906[232] = 0;
   out_6144835325197934906[233] = 0;
   out_6144835325197934906[234] = 0;
   out_6144835325197934906[235] = 0;
   out_6144835325197934906[236] = 0;
   out_6144835325197934906[237] = 0;
   out_6144835325197934906[238] = 0;
   out_6144835325197934906[239] = 0;
   out_6144835325197934906[240] = 0;
   out_6144835325197934906[241] = 0;
   out_6144835325197934906[242] = 1;
   out_6144835325197934906[243] = 0;
   out_6144835325197934906[244] = 0;
   out_6144835325197934906[245] = 0;
   out_6144835325197934906[246] = 0;
   out_6144835325197934906[247] = 0;
   out_6144835325197934906[248] = 0;
   out_6144835325197934906[249] = 0;
   out_6144835325197934906[250] = 0;
   out_6144835325197934906[251] = 0;
   out_6144835325197934906[252] = 0;
   out_6144835325197934906[253] = 0;
   out_6144835325197934906[254] = 0;
   out_6144835325197934906[255] = 0;
   out_6144835325197934906[256] = 0;
   out_6144835325197934906[257] = 0;
   out_6144835325197934906[258] = 0;
   out_6144835325197934906[259] = 0;
   out_6144835325197934906[260] = 0;
   out_6144835325197934906[261] = 0;
   out_6144835325197934906[262] = 0;
   out_6144835325197934906[263] = 0;
   out_6144835325197934906[264] = 1;
   out_6144835325197934906[265] = 0;
   out_6144835325197934906[266] = 0;
   out_6144835325197934906[267] = 0;
   out_6144835325197934906[268] = 0;
   out_6144835325197934906[269] = 0;
   out_6144835325197934906[270] = 0;
   out_6144835325197934906[271] = 0;
   out_6144835325197934906[272] = 0;
   out_6144835325197934906[273] = 0;
   out_6144835325197934906[274] = 0;
   out_6144835325197934906[275] = 0;
   out_6144835325197934906[276] = 0;
   out_6144835325197934906[277] = 0;
   out_6144835325197934906[278] = 0;
   out_6144835325197934906[279] = 0;
   out_6144835325197934906[280] = 0;
   out_6144835325197934906[281] = 0;
   out_6144835325197934906[282] = 0;
   out_6144835325197934906[283] = 0;
   out_6144835325197934906[284] = 0;
   out_6144835325197934906[285] = 0;
   out_6144835325197934906[286] = 1;
   out_6144835325197934906[287] = 0;
   out_6144835325197934906[288] = 0;
   out_6144835325197934906[289] = 0;
   out_6144835325197934906[290] = 0;
   out_6144835325197934906[291] = 0;
   out_6144835325197934906[292] = 0;
   out_6144835325197934906[293] = 0;
   out_6144835325197934906[294] = 0;
   out_6144835325197934906[295] = 0;
   out_6144835325197934906[296] = 0;
   out_6144835325197934906[297] = 0;
   out_6144835325197934906[298] = 0;
   out_6144835325197934906[299] = 0;
   out_6144835325197934906[300] = 0;
   out_6144835325197934906[301] = 0;
   out_6144835325197934906[302] = 0;
   out_6144835325197934906[303] = 0;
   out_6144835325197934906[304] = 0;
   out_6144835325197934906[305] = 0;
   out_6144835325197934906[306] = 0;
   out_6144835325197934906[307] = 0;
   out_6144835325197934906[308] = 1;
   out_6144835325197934906[309] = 0;
   out_6144835325197934906[310] = 0;
   out_6144835325197934906[311] = 0;
   out_6144835325197934906[312] = 0;
   out_6144835325197934906[313] = 0;
   out_6144835325197934906[314] = 0;
   out_6144835325197934906[315] = 0;
   out_6144835325197934906[316] = 0;
   out_6144835325197934906[317] = 0;
   out_6144835325197934906[318] = 0;
   out_6144835325197934906[319] = 0;
   out_6144835325197934906[320] = 0;
   out_6144835325197934906[321] = 0;
   out_6144835325197934906[322] = 0;
   out_6144835325197934906[323] = 0;
   out_6144835325197934906[324] = 0;
   out_6144835325197934906[325] = 0;
   out_6144835325197934906[326] = 0;
   out_6144835325197934906[327] = 0;
   out_6144835325197934906[328] = 0;
   out_6144835325197934906[329] = 0;
   out_6144835325197934906[330] = 1;
   out_6144835325197934906[331] = 0;
   out_6144835325197934906[332] = 0;
   out_6144835325197934906[333] = 0;
   out_6144835325197934906[334] = 0;
   out_6144835325197934906[335] = 0;
   out_6144835325197934906[336] = 0;
   out_6144835325197934906[337] = 0;
   out_6144835325197934906[338] = 0;
   out_6144835325197934906[339] = 0;
   out_6144835325197934906[340] = 0;
   out_6144835325197934906[341] = 0;
   out_6144835325197934906[342] = 0;
   out_6144835325197934906[343] = 0;
   out_6144835325197934906[344] = 0;
   out_6144835325197934906[345] = 0;
   out_6144835325197934906[346] = 0;
   out_6144835325197934906[347] = 0;
   out_6144835325197934906[348] = 0;
   out_6144835325197934906[349] = 0;
   out_6144835325197934906[350] = 0;
   out_6144835325197934906[351] = 0;
   out_6144835325197934906[352] = 1;
   out_6144835325197934906[353] = 0;
   out_6144835325197934906[354] = 0;
   out_6144835325197934906[355] = 0;
   out_6144835325197934906[356] = 0;
   out_6144835325197934906[357] = 0;
   out_6144835325197934906[358] = 0;
   out_6144835325197934906[359] = 0;
   out_6144835325197934906[360] = 0;
   out_6144835325197934906[361] = 0;
   out_6144835325197934906[362] = 0;
   out_6144835325197934906[363] = 0;
   out_6144835325197934906[364] = 0;
   out_6144835325197934906[365] = 0;
   out_6144835325197934906[366] = 0;
   out_6144835325197934906[367] = 0;
   out_6144835325197934906[368] = 0;
   out_6144835325197934906[369] = 0;
   out_6144835325197934906[370] = 0;
   out_6144835325197934906[371] = 0;
   out_6144835325197934906[372] = 0;
   out_6144835325197934906[373] = 0;
   out_6144835325197934906[374] = 1;
   out_6144835325197934906[375] = 0;
   out_6144835325197934906[376] = 0;
   out_6144835325197934906[377] = 0;
   out_6144835325197934906[378] = 0;
   out_6144835325197934906[379] = 0;
   out_6144835325197934906[380] = 0;
   out_6144835325197934906[381] = 0;
   out_6144835325197934906[382] = 0;
   out_6144835325197934906[383] = 0;
   out_6144835325197934906[384] = 0;
   out_6144835325197934906[385] = 0;
   out_6144835325197934906[386] = 0;
   out_6144835325197934906[387] = 0;
   out_6144835325197934906[388] = 0;
   out_6144835325197934906[389] = 0;
   out_6144835325197934906[390] = 0;
   out_6144835325197934906[391] = 0;
   out_6144835325197934906[392] = 0;
   out_6144835325197934906[393] = 0;
   out_6144835325197934906[394] = 0;
   out_6144835325197934906[395] = 0;
   out_6144835325197934906[396] = 1;
   out_6144835325197934906[397] = 0;
   out_6144835325197934906[398] = 0;
   out_6144835325197934906[399] = 0;
   out_6144835325197934906[400] = 0;
   out_6144835325197934906[401] = 0;
   out_6144835325197934906[402] = 0;
   out_6144835325197934906[403] = 0;
   out_6144835325197934906[404] = 0;
   out_6144835325197934906[405] = 0;
   out_6144835325197934906[406] = 0;
   out_6144835325197934906[407] = 0;
   out_6144835325197934906[408] = 0;
   out_6144835325197934906[409] = 0;
   out_6144835325197934906[410] = 0;
   out_6144835325197934906[411] = 0;
   out_6144835325197934906[412] = 0;
   out_6144835325197934906[413] = 0;
   out_6144835325197934906[414] = 0;
   out_6144835325197934906[415] = 0;
   out_6144835325197934906[416] = 0;
   out_6144835325197934906[417] = 0;
   out_6144835325197934906[418] = 1;
   out_6144835325197934906[419] = 0;
   out_6144835325197934906[420] = 0;
   out_6144835325197934906[421] = 0;
   out_6144835325197934906[422] = 0;
   out_6144835325197934906[423] = 0;
   out_6144835325197934906[424] = 0;
   out_6144835325197934906[425] = 0;
   out_6144835325197934906[426] = 0;
   out_6144835325197934906[427] = 0;
   out_6144835325197934906[428] = 0;
   out_6144835325197934906[429] = 0;
   out_6144835325197934906[430] = 0;
   out_6144835325197934906[431] = 0;
   out_6144835325197934906[432] = 0;
   out_6144835325197934906[433] = 0;
   out_6144835325197934906[434] = 0;
   out_6144835325197934906[435] = 0;
   out_6144835325197934906[436] = 0;
   out_6144835325197934906[437] = 0;
   out_6144835325197934906[438] = 0;
   out_6144835325197934906[439] = 0;
   out_6144835325197934906[440] = 1;
}
void h_4(double *state, double *unused, double *out_6369242007888120186) {
   out_6369242007888120186[0] = state[10] + state[13];
   out_6369242007888120186[1] = state[11] + state[14];
   out_6369242007888120186[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8109223682162723064) {
   out_8109223682162723064[0] = 0;
   out_8109223682162723064[1] = 0;
   out_8109223682162723064[2] = 0;
   out_8109223682162723064[3] = 0;
   out_8109223682162723064[4] = 0;
   out_8109223682162723064[5] = 0;
   out_8109223682162723064[6] = 0;
   out_8109223682162723064[7] = 0;
   out_8109223682162723064[8] = 0;
   out_8109223682162723064[9] = 0;
   out_8109223682162723064[10] = 1;
   out_8109223682162723064[11] = 0;
   out_8109223682162723064[12] = 0;
   out_8109223682162723064[13] = 1;
   out_8109223682162723064[14] = 0;
   out_8109223682162723064[15] = 0;
   out_8109223682162723064[16] = 0;
   out_8109223682162723064[17] = 0;
   out_8109223682162723064[18] = 0;
   out_8109223682162723064[19] = 0;
   out_8109223682162723064[20] = 0;
   out_8109223682162723064[21] = 0;
   out_8109223682162723064[22] = 0;
   out_8109223682162723064[23] = 0;
   out_8109223682162723064[24] = 0;
   out_8109223682162723064[25] = 0;
   out_8109223682162723064[26] = 0;
   out_8109223682162723064[27] = 0;
   out_8109223682162723064[28] = 0;
   out_8109223682162723064[29] = 0;
   out_8109223682162723064[30] = 0;
   out_8109223682162723064[31] = 0;
   out_8109223682162723064[32] = 0;
   out_8109223682162723064[33] = 1;
   out_8109223682162723064[34] = 0;
   out_8109223682162723064[35] = 0;
   out_8109223682162723064[36] = 1;
   out_8109223682162723064[37] = 0;
   out_8109223682162723064[38] = 0;
   out_8109223682162723064[39] = 0;
   out_8109223682162723064[40] = 0;
   out_8109223682162723064[41] = 0;
   out_8109223682162723064[42] = 0;
   out_8109223682162723064[43] = 0;
   out_8109223682162723064[44] = 0;
   out_8109223682162723064[45] = 0;
   out_8109223682162723064[46] = 0;
   out_8109223682162723064[47] = 0;
   out_8109223682162723064[48] = 0;
   out_8109223682162723064[49] = 0;
   out_8109223682162723064[50] = 0;
   out_8109223682162723064[51] = 0;
   out_8109223682162723064[52] = 0;
   out_8109223682162723064[53] = 0;
   out_8109223682162723064[54] = 0;
   out_8109223682162723064[55] = 0;
   out_8109223682162723064[56] = 1;
   out_8109223682162723064[57] = 0;
   out_8109223682162723064[58] = 0;
   out_8109223682162723064[59] = 1;
   out_8109223682162723064[60] = 0;
   out_8109223682162723064[61] = 0;
   out_8109223682162723064[62] = 0;
   out_8109223682162723064[63] = 0;
   out_8109223682162723064[64] = 0;
   out_8109223682162723064[65] = 0;
}
void h_9(double *state, double *unused, double *out_8486394807783164478) {
   out_8486394807783164478[0] = state[10];
   out_8486394807783164478[1] = state[11];
   out_8486394807783164478[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7868034035533132419) {
   out_7868034035533132419[0] = 0;
   out_7868034035533132419[1] = 0;
   out_7868034035533132419[2] = 0;
   out_7868034035533132419[3] = 0;
   out_7868034035533132419[4] = 0;
   out_7868034035533132419[5] = 0;
   out_7868034035533132419[6] = 0;
   out_7868034035533132419[7] = 0;
   out_7868034035533132419[8] = 0;
   out_7868034035533132419[9] = 0;
   out_7868034035533132419[10] = 1;
   out_7868034035533132419[11] = 0;
   out_7868034035533132419[12] = 0;
   out_7868034035533132419[13] = 0;
   out_7868034035533132419[14] = 0;
   out_7868034035533132419[15] = 0;
   out_7868034035533132419[16] = 0;
   out_7868034035533132419[17] = 0;
   out_7868034035533132419[18] = 0;
   out_7868034035533132419[19] = 0;
   out_7868034035533132419[20] = 0;
   out_7868034035533132419[21] = 0;
   out_7868034035533132419[22] = 0;
   out_7868034035533132419[23] = 0;
   out_7868034035533132419[24] = 0;
   out_7868034035533132419[25] = 0;
   out_7868034035533132419[26] = 0;
   out_7868034035533132419[27] = 0;
   out_7868034035533132419[28] = 0;
   out_7868034035533132419[29] = 0;
   out_7868034035533132419[30] = 0;
   out_7868034035533132419[31] = 0;
   out_7868034035533132419[32] = 0;
   out_7868034035533132419[33] = 1;
   out_7868034035533132419[34] = 0;
   out_7868034035533132419[35] = 0;
   out_7868034035533132419[36] = 0;
   out_7868034035533132419[37] = 0;
   out_7868034035533132419[38] = 0;
   out_7868034035533132419[39] = 0;
   out_7868034035533132419[40] = 0;
   out_7868034035533132419[41] = 0;
   out_7868034035533132419[42] = 0;
   out_7868034035533132419[43] = 0;
   out_7868034035533132419[44] = 0;
   out_7868034035533132419[45] = 0;
   out_7868034035533132419[46] = 0;
   out_7868034035533132419[47] = 0;
   out_7868034035533132419[48] = 0;
   out_7868034035533132419[49] = 0;
   out_7868034035533132419[50] = 0;
   out_7868034035533132419[51] = 0;
   out_7868034035533132419[52] = 0;
   out_7868034035533132419[53] = 0;
   out_7868034035533132419[54] = 0;
   out_7868034035533132419[55] = 0;
   out_7868034035533132419[56] = 1;
   out_7868034035533132419[57] = 0;
   out_7868034035533132419[58] = 0;
   out_7868034035533132419[59] = 0;
   out_7868034035533132419[60] = 0;
   out_7868034035533132419[61] = 0;
   out_7868034035533132419[62] = 0;
   out_7868034035533132419[63] = 0;
   out_7868034035533132419[64] = 0;
   out_7868034035533132419[65] = 0;
}
void h_10(double *state, double *unused, double *out_9180573746597889495) {
   out_9180573746597889495[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_9180573746597889495[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_9180573746597889495[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6348372789211446222) {
   out_6348372789211446222[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6348372789211446222[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6348372789211446222[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6348372789211446222[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6348372789211446222[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6348372789211446222[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6348372789211446222[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6348372789211446222[7] = 0;
   out_6348372789211446222[8] = 0;
   out_6348372789211446222[9] = 0;
   out_6348372789211446222[10] = 0;
   out_6348372789211446222[11] = 0;
   out_6348372789211446222[12] = 0;
   out_6348372789211446222[13] = 0;
   out_6348372789211446222[14] = 0;
   out_6348372789211446222[15] = 0;
   out_6348372789211446222[16] = 1;
   out_6348372789211446222[17] = 0;
   out_6348372789211446222[18] = 0;
   out_6348372789211446222[19] = 1;
   out_6348372789211446222[20] = 0;
   out_6348372789211446222[21] = 0;
   out_6348372789211446222[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6348372789211446222[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6348372789211446222[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6348372789211446222[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6348372789211446222[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6348372789211446222[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6348372789211446222[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6348372789211446222[29] = 0;
   out_6348372789211446222[30] = 0;
   out_6348372789211446222[31] = 0;
   out_6348372789211446222[32] = 0;
   out_6348372789211446222[33] = 0;
   out_6348372789211446222[34] = 0;
   out_6348372789211446222[35] = 0;
   out_6348372789211446222[36] = 0;
   out_6348372789211446222[37] = 0;
   out_6348372789211446222[38] = 0;
   out_6348372789211446222[39] = 1;
   out_6348372789211446222[40] = 0;
   out_6348372789211446222[41] = 0;
   out_6348372789211446222[42] = 1;
   out_6348372789211446222[43] = 0;
   out_6348372789211446222[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6348372789211446222[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6348372789211446222[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6348372789211446222[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6348372789211446222[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6348372789211446222[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6348372789211446222[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6348372789211446222[51] = 0;
   out_6348372789211446222[52] = 0;
   out_6348372789211446222[53] = 0;
   out_6348372789211446222[54] = 0;
   out_6348372789211446222[55] = 0;
   out_6348372789211446222[56] = 0;
   out_6348372789211446222[57] = 0;
   out_6348372789211446222[58] = 0;
   out_6348372789211446222[59] = 0;
   out_6348372789211446222[60] = 0;
   out_6348372789211446222[61] = 0;
   out_6348372789211446222[62] = 1;
   out_6348372789211446222[63] = 0;
   out_6348372789211446222[64] = 0;
   out_6348372789211446222[65] = 1;
}
void h_12(double *state, double *unused, double *out_1644227134959228976) {
   out_1644227134959228976[0] = state[0];
   out_1644227134959228976[1] = state[1];
   out_1644227134959228976[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3089767274130761269) {
   out_3089767274130761269[0] = 1;
   out_3089767274130761269[1] = 0;
   out_3089767274130761269[2] = 0;
   out_3089767274130761269[3] = 0;
   out_3089767274130761269[4] = 0;
   out_3089767274130761269[5] = 0;
   out_3089767274130761269[6] = 0;
   out_3089767274130761269[7] = 0;
   out_3089767274130761269[8] = 0;
   out_3089767274130761269[9] = 0;
   out_3089767274130761269[10] = 0;
   out_3089767274130761269[11] = 0;
   out_3089767274130761269[12] = 0;
   out_3089767274130761269[13] = 0;
   out_3089767274130761269[14] = 0;
   out_3089767274130761269[15] = 0;
   out_3089767274130761269[16] = 0;
   out_3089767274130761269[17] = 0;
   out_3089767274130761269[18] = 0;
   out_3089767274130761269[19] = 0;
   out_3089767274130761269[20] = 0;
   out_3089767274130761269[21] = 0;
   out_3089767274130761269[22] = 0;
   out_3089767274130761269[23] = 1;
   out_3089767274130761269[24] = 0;
   out_3089767274130761269[25] = 0;
   out_3089767274130761269[26] = 0;
   out_3089767274130761269[27] = 0;
   out_3089767274130761269[28] = 0;
   out_3089767274130761269[29] = 0;
   out_3089767274130761269[30] = 0;
   out_3089767274130761269[31] = 0;
   out_3089767274130761269[32] = 0;
   out_3089767274130761269[33] = 0;
   out_3089767274130761269[34] = 0;
   out_3089767274130761269[35] = 0;
   out_3089767274130761269[36] = 0;
   out_3089767274130761269[37] = 0;
   out_3089767274130761269[38] = 0;
   out_3089767274130761269[39] = 0;
   out_3089767274130761269[40] = 0;
   out_3089767274130761269[41] = 0;
   out_3089767274130761269[42] = 0;
   out_3089767274130761269[43] = 0;
   out_3089767274130761269[44] = 0;
   out_3089767274130761269[45] = 0;
   out_3089767274130761269[46] = 1;
   out_3089767274130761269[47] = 0;
   out_3089767274130761269[48] = 0;
   out_3089767274130761269[49] = 0;
   out_3089767274130761269[50] = 0;
   out_3089767274130761269[51] = 0;
   out_3089767274130761269[52] = 0;
   out_3089767274130761269[53] = 0;
   out_3089767274130761269[54] = 0;
   out_3089767274130761269[55] = 0;
   out_3089767274130761269[56] = 0;
   out_3089767274130761269[57] = 0;
   out_3089767274130761269[58] = 0;
   out_3089767274130761269[59] = 0;
   out_3089767274130761269[60] = 0;
   out_3089767274130761269[61] = 0;
   out_3089767274130761269[62] = 0;
   out_3089767274130761269[63] = 0;
   out_3089767274130761269[64] = 0;
   out_3089767274130761269[65] = 0;
}
void h_35(double *state, double *unused, double *out_2422138527033430767) {
   out_2422138527033430767[0] = state[7];
   out_2422138527033430767[1] = state[8];
   out_2422138527033430767[2] = state[9];
}
void H_35(double *state, double *unused, double *out_4742561624790115688) {
   out_4742561624790115688[0] = 0;
   out_4742561624790115688[1] = 0;
   out_4742561624790115688[2] = 0;
   out_4742561624790115688[3] = 0;
   out_4742561624790115688[4] = 0;
   out_4742561624790115688[5] = 0;
   out_4742561624790115688[6] = 0;
   out_4742561624790115688[7] = 1;
   out_4742561624790115688[8] = 0;
   out_4742561624790115688[9] = 0;
   out_4742561624790115688[10] = 0;
   out_4742561624790115688[11] = 0;
   out_4742561624790115688[12] = 0;
   out_4742561624790115688[13] = 0;
   out_4742561624790115688[14] = 0;
   out_4742561624790115688[15] = 0;
   out_4742561624790115688[16] = 0;
   out_4742561624790115688[17] = 0;
   out_4742561624790115688[18] = 0;
   out_4742561624790115688[19] = 0;
   out_4742561624790115688[20] = 0;
   out_4742561624790115688[21] = 0;
   out_4742561624790115688[22] = 0;
   out_4742561624790115688[23] = 0;
   out_4742561624790115688[24] = 0;
   out_4742561624790115688[25] = 0;
   out_4742561624790115688[26] = 0;
   out_4742561624790115688[27] = 0;
   out_4742561624790115688[28] = 0;
   out_4742561624790115688[29] = 0;
   out_4742561624790115688[30] = 1;
   out_4742561624790115688[31] = 0;
   out_4742561624790115688[32] = 0;
   out_4742561624790115688[33] = 0;
   out_4742561624790115688[34] = 0;
   out_4742561624790115688[35] = 0;
   out_4742561624790115688[36] = 0;
   out_4742561624790115688[37] = 0;
   out_4742561624790115688[38] = 0;
   out_4742561624790115688[39] = 0;
   out_4742561624790115688[40] = 0;
   out_4742561624790115688[41] = 0;
   out_4742561624790115688[42] = 0;
   out_4742561624790115688[43] = 0;
   out_4742561624790115688[44] = 0;
   out_4742561624790115688[45] = 0;
   out_4742561624790115688[46] = 0;
   out_4742561624790115688[47] = 0;
   out_4742561624790115688[48] = 0;
   out_4742561624790115688[49] = 0;
   out_4742561624790115688[50] = 0;
   out_4742561624790115688[51] = 0;
   out_4742561624790115688[52] = 0;
   out_4742561624790115688[53] = 1;
   out_4742561624790115688[54] = 0;
   out_4742561624790115688[55] = 0;
   out_4742561624790115688[56] = 0;
   out_4742561624790115688[57] = 0;
   out_4742561624790115688[58] = 0;
   out_4742561624790115688[59] = 0;
   out_4742561624790115688[60] = 0;
   out_4742561624790115688[61] = 0;
   out_4742561624790115688[62] = 0;
   out_4742561624790115688[63] = 0;
   out_4742561624790115688[64] = 0;
   out_4742561624790115688[65] = 0;
}
void h_32(double *state, double *unused, double *out_7627172961347473786) {
   out_7627172961347473786[0] = state[3];
   out_7627172961347473786[1] = state[4];
   out_7627172961347473786[2] = state[5];
   out_7627172961347473786[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2360820271096002377) {
   out_2360820271096002377[0] = 0;
   out_2360820271096002377[1] = 0;
   out_2360820271096002377[2] = 0;
   out_2360820271096002377[3] = 1;
   out_2360820271096002377[4] = 0;
   out_2360820271096002377[5] = 0;
   out_2360820271096002377[6] = 0;
   out_2360820271096002377[7] = 0;
   out_2360820271096002377[8] = 0;
   out_2360820271096002377[9] = 0;
   out_2360820271096002377[10] = 0;
   out_2360820271096002377[11] = 0;
   out_2360820271096002377[12] = 0;
   out_2360820271096002377[13] = 0;
   out_2360820271096002377[14] = 0;
   out_2360820271096002377[15] = 0;
   out_2360820271096002377[16] = 0;
   out_2360820271096002377[17] = 0;
   out_2360820271096002377[18] = 0;
   out_2360820271096002377[19] = 0;
   out_2360820271096002377[20] = 0;
   out_2360820271096002377[21] = 0;
   out_2360820271096002377[22] = 0;
   out_2360820271096002377[23] = 0;
   out_2360820271096002377[24] = 0;
   out_2360820271096002377[25] = 0;
   out_2360820271096002377[26] = 1;
   out_2360820271096002377[27] = 0;
   out_2360820271096002377[28] = 0;
   out_2360820271096002377[29] = 0;
   out_2360820271096002377[30] = 0;
   out_2360820271096002377[31] = 0;
   out_2360820271096002377[32] = 0;
   out_2360820271096002377[33] = 0;
   out_2360820271096002377[34] = 0;
   out_2360820271096002377[35] = 0;
   out_2360820271096002377[36] = 0;
   out_2360820271096002377[37] = 0;
   out_2360820271096002377[38] = 0;
   out_2360820271096002377[39] = 0;
   out_2360820271096002377[40] = 0;
   out_2360820271096002377[41] = 0;
   out_2360820271096002377[42] = 0;
   out_2360820271096002377[43] = 0;
   out_2360820271096002377[44] = 0;
   out_2360820271096002377[45] = 0;
   out_2360820271096002377[46] = 0;
   out_2360820271096002377[47] = 0;
   out_2360820271096002377[48] = 0;
   out_2360820271096002377[49] = 1;
   out_2360820271096002377[50] = 0;
   out_2360820271096002377[51] = 0;
   out_2360820271096002377[52] = 0;
   out_2360820271096002377[53] = 0;
   out_2360820271096002377[54] = 0;
   out_2360820271096002377[55] = 0;
   out_2360820271096002377[56] = 0;
   out_2360820271096002377[57] = 0;
   out_2360820271096002377[58] = 0;
   out_2360820271096002377[59] = 0;
   out_2360820271096002377[60] = 0;
   out_2360820271096002377[61] = 0;
   out_2360820271096002377[62] = 0;
   out_2360820271096002377[63] = 0;
   out_2360820271096002377[64] = 0;
   out_2360820271096002377[65] = 0;
   out_2360820271096002377[66] = 0;
   out_2360820271096002377[67] = 0;
   out_2360820271096002377[68] = 0;
   out_2360820271096002377[69] = 0;
   out_2360820271096002377[70] = 0;
   out_2360820271096002377[71] = 0;
   out_2360820271096002377[72] = 1;
   out_2360820271096002377[73] = 0;
   out_2360820271096002377[74] = 0;
   out_2360820271096002377[75] = 0;
   out_2360820271096002377[76] = 0;
   out_2360820271096002377[77] = 0;
   out_2360820271096002377[78] = 0;
   out_2360820271096002377[79] = 0;
   out_2360820271096002377[80] = 0;
   out_2360820271096002377[81] = 0;
   out_2360820271096002377[82] = 0;
   out_2360820271096002377[83] = 0;
   out_2360820271096002377[84] = 0;
   out_2360820271096002377[85] = 0;
   out_2360820271096002377[86] = 0;
   out_2360820271096002377[87] = 0;
}
void h_13(double *state, double *unused, double *out_5335968963236182439) {
   out_5335968963236182439[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5335968963236182439[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5335968963236182439[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8884777395272312778) {
   out_8884777395272312778[0] = 0;
   out_8884777395272312778[1] = 0;
   out_8884777395272312778[2] = 0;
   out_8884777395272312778[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8884777395272312778[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8884777395272312778[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8884777395272312778[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8884777395272312778[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8884777395272312778[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8884777395272312778[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8884777395272312778[10] = 0;
   out_8884777395272312778[11] = 0;
   out_8884777395272312778[12] = 0;
   out_8884777395272312778[13] = 0;
   out_8884777395272312778[14] = 0;
   out_8884777395272312778[15] = 0;
   out_8884777395272312778[16] = 0;
   out_8884777395272312778[17] = 0;
   out_8884777395272312778[18] = 0;
   out_8884777395272312778[19] = 0;
   out_8884777395272312778[20] = 0;
   out_8884777395272312778[21] = 0;
   out_8884777395272312778[22] = 0;
   out_8884777395272312778[23] = 0;
   out_8884777395272312778[24] = 0;
   out_8884777395272312778[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8884777395272312778[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8884777395272312778[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8884777395272312778[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8884777395272312778[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8884777395272312778[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8884777395272312778[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8884777395272312778[32] = 0;
   out_8884777395272312778[33] = 0;
   out_8884777395272312778[34] = 0;
   out_8884777395272312778[35] = 0;
   out_8884777395272312778[36] = 0;
   out_8884777395272312778[37] = 0;
   out_8884777395272312778[38] = 0;
   out_8884777395272312778[39] = 0;
   out_8884777395272312778[40] = 0;
   out_8884777395272312778[41] = 0;
   out_8884777395272312778[42] = 0;
   out_8884777395272312778[43] = 0;
   out_8884777395272312778[44] = 0;
   out_8884777395272312778[45] = 0;
   out_8884777395272312778[46] = 0;
   out_8884777395272312778[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8884777395272312778[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8884777395272312778[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8884777395272312778[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8884777395272312778[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8884777395272312778[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8884777395272312778[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8884777395272312778[54] = 0;
   out_8884777395272312778[55] = 0;
   out_8884777395272312778[56] = 0;
   out_8884777395272312778[57] = 0;
   out_8884777395272312778[58] = 0;
   out_8884777395272312778[59] = 0;
   out_8884777395272312778[60] = 0;
   out_8884777395272312778[61] = 0;
   out_8884777395272312778[62] = 0;
   out_8884777395272312778[63] = 0;
   out_8884777395272312778[64] = 0;
   out_8884777395272312778[65] = 0;
}
void h_14(double *state, double *unused, double *out_8486394807783164478) {
   out_8486394807783164478[0] = state[10];
   out_8486394807783164478[1] = state[11];
   out_8486394807783164478[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7868034035533132419) {
   out_7868034035533132419[0] = 0;
   out_7868034035533132419[1] = 0;
   out_7868034035533132419[2] = 0;
   out_7868034035533132419[3] = 0;
   out_7868034035533132419[4] = 0;
   out_7868034035533132419[5] = 0;
   out_7868034035533132419[6] = 0;
   out_7868034035533132419[7] = 0;
   out_7868034035533132419[8] = 0;
   out_7868034035533132419[9] = 0;
   out_7868034035533132419[10] = 1;
   out_7868034035533132419[11] = 0;
   out_7868034035533132419[12] = 0;
   out_7868034035533132419[13] = 0;
   out_7868034035533132419[14] = 0;
   out_7868034035533132419[15] = 0;
   out_7868034035533132419[16] = 0;
   out_7868034035533132419[17] = 0;
   out_7868034035533132419[18] = 0;
   out_7868034035533132419[19] = 0;
   out_7868034035533132419[20] = 0;
   out_7868034035533132419[21] = 0;
   out_7868034035533132419[22] = 0;
   out_7868034035533132419[23] = 0;
   out_7868034035533132419[24] = 0;
   out_7868034035533132419[25] = 0;
   out_7868034035533132419[26] = 0;
   out_7868034035533132419[27] = 0;
   out_7868034035533132419[28] = 0;
   out_7868034035533132419[29] = 0;
   out_7868034035533132419[30] = 0;
   out_7868034035533132419[31] = 0;
   out_7868034035533132419[32] = 0;
   out_7868034035533132419[33] = 1;
   out_7868034035533132419[34] = 0;
   out_7868034035533132419[35] = 0;
   out_7868034035533132419[36] = 0;
   out_7868034035533132419[37] = 0;
   out_7868034035533132419[38] = 0;
   out_7868034035533132419[39] = 0;
   out_7868034035533132419[40] = 0;
   out_7868034035533132419[41] = 0;
   out_7868034035533132419[42] = 0;
   out_7868034035533132419[43] = 0;
   out_7868034035533132419[44] = 0;
   out_7868034035533132419[45] = 0;
   out_7868034035533132419[46] = 0;
   out_7868034035533132419[47] = 0;
   out_7868034035533132419[48] = 0;
   out_7868034035533132419[49] = 0;
   out_7868034035533132419[50] = 0;
   out_7868034035533132419[51] = 0;
   out_7868034035533132419[52] = 0;
   out_7868034035533132419[53] = 0;
   out_7868034035533132419[54] = 0;
   out_7868034035533132419[55] = 0;
   out_7868034035533132419[56] = 1;
   out_7868034035533132419[57] = 0;
   out_7868034035533132419[58] = 0;
   out_7868034035533132419[59] = 0;
   out_7868034035533132419[60] = 0;
   out_7868034035533132419[61] = 0;
   out_7868034035533132419[62] = 0;
   out_7868034035533132419[63] = 0;
   out_7868034035533132419[64] = 0;
   out_7868034035533132419[65] = 0;
}
void h_33(double *state, double *unused, double *out_8731149429075311574) {
   out_8731149429075311574[0] = state[16];
   out_8731149429075311574[1] = state[17];
   out_8731149429075311574[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1592004620151258084) {
   out_1592004620151258084[0] = 0;
   out_1592004620151258084[1] = 0;
   out_1592004620151258084[2] = 0;
   out_1592004620151258084[3] = 0;
   out_1592004620151258084[4] = 0;
   out_1592004620151258084[5] = 0;
   out_1592004620151258084[6] = 0;
   out_1592004620151258084[7] = 0;
   out_1592004620151258084[8] = 0;
   out_1592004620151258084[9] = 0;
   out_1592004620151258084[10] = 0;
   out_1592004620151258084[11] = 0;
   out_1592004620151258084[12] = 0;
   out_1592004620151258084[13] = 0;
   out_1592004620151258084[14] = 0;
   out_1592004620151258084[15] = 0;
   out_1592004620151258084[16] = 1;
   out_1592004620151258084[17] = 0;
   out_1592004620151258084[18] = 0;
   out_1592004620151258084[19] = 0;
   out_1592004620151258084[20] = 0;
   out_1592004620151258084[21] = 0;
   out_1592004620151258084[22] = 0;
   out_1592004620151258084[23] = 0;
   out_1592004620151258084[24] = 0;
   out_1592004620151258084[25] = 0;
   out_1592004620151258084[26] = 0;
   out_1592004620151258084[27] = 0;
   out_1592004620151258084[28] = 0;
   out_1592004620151258084[29] = 0;
   out_1592004620151258084[30] = 0;
   out_1592004620151258084[31] = 0;
   out_1592004620151258084[32] = 0;
   out_1592004620151258084[33] = 0;
   out_1592004620151258084[34] = 0;
   out_1592004620151258084[35] = 0;
   out_1592004620151258084[36] = 0;
   out_1592004620151258084[37] = 0;
   out_1592004620151258084[38] = 0;
   out_1592004620151258084[39] = 1;
   out_1592004620151258084[40] = 0;
   out_1592004620151258084[41] = 0;
   out_1592004620151258084[42] = 0;
   out_1592004620151258084[43] = 0;
   out_1592004620151258084[44] = 0;
   out_1592004620151258084[45] = 0;
   out_1592004620151258084[46] = 0;
   out_1592004620151258084[47] = 0;
   out_1592004620151258084[48] = 0;
   out_1592004620151258084[49] = 0;
   out_1592004620151258084[50] = 0;
   out_1592004620151258084[51] = 0;
   out_1592004620151258084[52] = 0;
   out_1592004620151258084[53] = 0;
   out_1592004620151258084[54] = 0;
   out_1592004620151258084[55] = 0;
   out_1592004620151258084[56] = 0;
   out_1592004620151258084[57] = 0;
   out_1592004620151258084[58] = 0;
   out_1592004620151258084[59] = 0;
   out_1592004620151258084[60] = 0;
   out_1592004620151258084[61] = 0;
   out_1592004620151258084[62] = 1;
   out_1592004620151258084[63] = 0;
   out_1592004620151258084[64] = 0;
   out_1592004620151258084[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7723672591224272044) {
  H(in_vec, out_7723672591224272044);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5999034876196663610) {
  err_fun(nom_x, delta_x, out_5999034876196663610);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_768101308681296878) {
  inv_err_fun(nom_x, true_x, out_768101308681296878);
}
void live_H_mod_fun(double *state, double *out_3063576851526030361) {
  H_mod_fun(state, out_3063576851526030361);
}
void live_f_fun(double *state, double dt, double *out_1683524968433238714) {
  f_fun(state,  dt, out_1683524968433238714);
}
void live_F_fun(double *state, double dt, double *out_6144835325197934906) {
  F_fun(state,  dt, out_6144835325197934906);
}
void live_h_4(double *state, double *unused, double *out_6369242007888120186) {
  h_4(state, unused, out_6369242007888120186);
}
void live_H_4(double *state, double *unused, double *out_8109223682162723064) {
  H_4(state, unused, out_8109223682162723064);
}
void live_h_9(double *state, double *unused, double *out_8486394807783164478) {
  h_9(state, unused, out_8486394807783164478);
}
void live_H_9(double *state, double *unused, double *out_7868034035533132419) {
  H_9(state, unused, out_7868034035533132419);
}
void live_h_10(double *state, double *unused, double *out_9180573746597889495) {
  h_10(state, unused, out_9180573746597889495);
}
void live_H_10(double *state, double *unused, double *out_6348372789211446222) {
  H_10(state, unused, out_6348372789211446222);
}
void live_h_12(double *state, double *unused, double *out_1644227134959228976) {
  h_12(state, unused, out_1644227134959228976);
}
void live_H_12(double *state, double *unused, double *out_3089767274130761269) {
  H_12(state, unused, out_3089767274130761269);
}
void live_h_35(double *state, double *unused, double *out_2422138527033430767) {
  h_35(state, unused, out_2422138527033430767);
}
void live_H_35(double *state, double *unused, double *out_4742561624790115688) {
  H_35(state, unused, out_4742561624790115688);
}
void live_h_32(double *state, double *unused, double *out_7627172961347473786) {
  h_32(state, unused, out_7627172961347473786);
}
void live_H_32(double *state, double *unused, double *out_2360820271096002377) {
  H_32(state, unused, out_2360820271096002377);
}
void live_h_13(double *state, double *unused, double *out_5335968963236182439) {
  h_13(state, unused, out_5335968963236182439);
}
void live_H_13(double *state, double *unused, double *out_8884777395272312778) {
  H_13(state, unused, out_8884777395272312778);
}
void live_h_14(double *state, double *unused, double *out_8486394807783164478) {
  h_14(state, unused, out_8486394807783164478);
}
void live_H_14(double *state, double *unused, double *out_7868034035533132419) {
  H_14(state, unused, out_7868034035533132419);
}
void live_h_33(double *state, double *unused, double *out_8731149429075311574) {
  h_33(state, unused, out_8731149429075311574);
}
void live_H_33(double *state, double *unused, double *out_1592004620151258084) {
  H_33(state, unused, out_1592004620151258084);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
