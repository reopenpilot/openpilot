#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5868829834089122411) {
   out_5868829834089122411[0] = 0;
   out_5868829834089122411[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5868829834089122411[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5868829834089122411[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5868829834089122411[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5868829834089122411[5] = -sin(in_vec[1]);
   out_5868829834089122411[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5868829834089122411[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5868829834089122411[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5868829834089122411[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5868829834089122411[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5868829834089122411[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5868829834089122411[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5868829834089122411[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5868829834089122411[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5868829834089122411[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5868829834089122411[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5868829834089122411[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5707678381819063740) {
   out_5707678381819063740[0] = delta_x[0] + nom_x[0];
   out_5707678381819063740[1] = delta_x[1] + nom_x[1];
   out_5707678381819063740[2] = delta_x[2] + nom_x[2];
   out_5707678381819063740[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5707678381819063740[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5707678381819063740[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5707678381819063740[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5707678381819063740[7] = delta_x[6] + nom_x[7];
   out_5707678381819063740[8] = delta_x[7] + nom_x[8];
   out_5707678381819063740[9] = delta_x[8] + nom_x[9];
   out_5707678381819063740[10] = delta_x[9] + nom_x[10];
   out_5707678381819063740[11] = delta_x[10] + nom_x[11];
   out_5707678381819063740[12] = delta_x[11] + nom_x[12];
   out_5707678381819063740[13] = delta_x[12] + nom_x[13];
   out_5707678381819063740[14] = delta_x[13] + nom_x[14];
   out_5707678381819063740[15] = delta_x[14] + nom_x[15];
   out_5707678381819063740[16] = delta_x[15] + nom_x[16];
   out_5707678381819063740[17] = delta_x[16] + nom_x[17];
   out_5707678381819063740[18] = delta_x[17] + nom_x[18];
   out_5707678381819063740[19] = delta_x[18] + nom_x[19];
   out_5707678381819063740[20] = delta_x[19] + nom_x[20];
   out_5707678381819063740[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7029823815973809391) {
   out_7029823815973809391[0] = -nom_x[0] + true_x[0];
   out_7029823815973809391[1] = -nom_x[1] + true_x[1];
   out_7029823815973809391[2] = -nom_x[2] + true_x[2];
   out_7029823815973809391[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7029823815973809391[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7029823815973809391[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7029823815973809391[6] = -nom_x[7] + true_x[7];
   out_7029823815973809391[7] = -nom_x[8] + true_x[8];
   out_7029823815973809391[8] = -nom_x[9] + true_x[9];
   out_7029823815973809391[9] = -nom_x[10] + true_x[10];
   out_7029823815973809391[10] = -nom_x[11] + true_x[11];
   out_7029823815973809391[11] = -nom_x[12] + true_x[12];
   out_7029823815973809391[12] = -nom_x[13] + true_x[13];
   out_7029823815973809391[13] = -nom_x[14] + true_x[14];
   out_7029823815973809391[14] = -nom_x[15] + true_x[15];
   out_7029823815973809391[15] = -nom_x[16] + true_x[16];
   out_7029823815973809391[16] = -nom_x[17] + true_x[17];
   out_7029823815973809391[17] = -nom_x[18] + true_x[18];
   out_7029823815973809391[18] = -nom_x[19] + true_x[19];
   out_7029823815973809391[19] = -nom_x[20] + true_x[20];
   out_7029823815973809391[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2916808608387793704) {
   out_2916808608387793704[0] = 1.0;
   out_2916808608387793704[1] = 0;
   out_2916808608387793704[2] = 0;
   out_2916808608387793704[3] = 0;
   out_2916808608387793704[4] = 0;
   out_2916808608387793704[5] = 0;
   out_2916808608387793704[6] = 0;
   out_2916808608387793704[7] = 0;
   out_2916808608387793704[8] = 0;
   out_2916808608387793704[9] = 0;
   out_2916808608387793704[10] = 0;
   out_2916808608387793704[11] = 0;
   out_2916808608387793704[12] = 0;
   out_2916808608387793704[13] = 0;
   out_2916808608387793704[14] = 0;
   out_2916808608387793704[15] = 0;
   out_2916808608387793704[16] = 0;
   out_2916808608387793704[17] = 0;
   out_2916808608387793704[18] = 0;
   out_2916808608387793704[19] = 0;
   out_2916808608387793704[20] = 0;
   out_2916808608387793704[21] = 0;
   out_2916808608387793704[22] = 1.0;
   out_2916808608387793704[23] = 0;
   out_2916808608387793704[24] = 0;
   out_2916808608387793704[25] = 0;
   out_2916808608387793704[26] = 0;
   out_2916808608387793704[27] = 0;
   out_2916808608387793704[28] = 0;
   out_2916808608387793704[29] = 0;
   out_2916808608387793704[30] = 0;
   out_2916808608387793704[31] = 0;
   out_2916808608387793704[32] = 0;
   out_2916808608387793704[33] = 0;
   out_2916808608387793704[34] = 0;
   out_2916808608387793704[35] = 0;
   out_2916808608387793704[36] = 0;
   out_2916808608387793704[37] = 0;
   out_2916808608387793704[38] = 0;
   out_2916808608387793704[39] = 0;
   out_2916808608387793704[40] = 0;
   out_2916808608387793704[41] = 0;
   out_2916808608387793704[42] = 0;
   out_2916808608387793704[43] = 0;
   out_2916808608387793704[44] = 1.0;
   out_2916808608387793704[45] = 0;
   out_2916808608387793704[46] = 0;
   out_2916808608387793704[47] = 0;
   out_2916808608387793704[48] = 0;
   out_2916808608387793704[49] = 0;
   out_2916808608387793704[50] = 0;
   out_2916808608387793704[51] = 0;
   out_2916808608387793704[52] = 0;
   out_2916808608387793704[53] = 0;
   out_2916808608387793704[54] = 0;
   out_2916808608387793704[55] = 0;
   out_2916808608387793704[56] = 0;
   out_2916808608387793704[57] = 0;
   out_2916808608387793704[58] = 0;
   out_2916808608387793704[59] = 0;
   out_2916808608387793704[60] = 0;
   out_2916808608387793704[61] = 0;
   out_2916808608387793704[62] = 0;
   out_2916808608387793704[63] = 0;
   out_2916808608387793704[64] = 0;
   out_2916808608387793704[65] = 0;
   out_2916808608387793704[66] = -0.5*state[4];
   out_2916808608387793704[67] = -0.5*state[5];
   out_2916808608387793704[68] = -0.5*state[6];
   out_2916808608387793704[69] = 0;
   out_2916808608387793704[70] = 0;
   out_2916808608387793704[71] = 0;
   out_2916808608387793704[72] = 0;
   out_2916808608387793704[73] = 0;
   out_2916808608387793704[74] = 0;
   out_2916808608387793704[75] = 0;
   out_2916808608387793704[76] = 0;
   out_2916808608387793704[77] = 0;
   out_2916808608387793704[78] = 0;
   out_2916808608387793704[79] = 0;
   out_2916808608387793704[80] = 0;
   out_2916808608387793704[81] = 0;
   out_2916808608387793704[82] = 0;
   out_2916808608387793704[83] = 0;
   out_2916808608387793704[84] = 0;
   out_2916808608387793704[85] = 0;
   out_2916808608387793704[86] = 0;
   out_2916808608387793704[87] = 0.5*state[3];
   out_2916808608387793704[88] = 0.5*state[6];
   out_2916808608387793704[89] = -0.5*state[5];
   out_2916808608387793704[90] = 0;
   out_2916808608387793704[91] = 0;
   out_2916808608387793704[92] = 0;
   out_2916808608387793704[93] = 0;
   out_2916808608387793704[94] = 0;
   out_2916808608387793704[95] = 0;
   out_2916808608387793704[96] = 0;
   out_2916808608387793704[97] = 0;
   out_2916808608387793704[98] = 0;
   out_2916808608387793704[99] = 0;
   out_2916808608387793704[100] = 0;
   out_2916808608387793704[101] = 0;
   out_2916808608387793704[102] = 0;
   out_2916808608387793704[103] = 0;
   out_2916808608387793704[104] = 0;
   out_2916808608387793704[105] = 0;
   out_2916808608387793704[106] = 0;
   out_2916808608387793704[107] = 0;
   out_2916808608387793704[108] = -0.5*state[6];
   out_2916808608387793704[109] = 0.5*state[3];
   out_2916808608387793704[110] = 0.5*state[4];
   out_2916808608387793704[111] = 0;
   out_2916808608387793704[112] = 0;
   out_2916808608387793704[113] = 0;
   out_2916808608387793704[114] = 0;
   out_2916808608387793704[115] = 0;
   out_2916808608387793704[116] = 0;
   out_2916808608387793704[117] = 0;
   out_2916808608387793704[118] = 0;
   out_2916808608387793704[119] = 0;
   out_2916808608387793704[120] = 0;
   out_2916808608387793704[121] = 0;
   out_2916808608387793704[122] = 0;
   out_2916808608387793704[123] = 0;
   out_2916808608387793704[124] = 0;
   out_2916808608387793704[125] = 0;
   out_2916808608387793704[126] = 0;
   out_2916808608387793704[127] = 0;
   out_2916808608387793704[128] = 0;
   out_2916808608387793704[129] = 0.5*state[5];
   out_2916808608387793704[130] = -0.5*state[4];
   out_2916808608387793704[131] = 0.5*state[3];
   out_2916808608387793704[132] = 0;
   out_2916808608387793704[133] = 0;
   out_2916808608387793704[134] = 0;
   out_2916808608387793704[135] = 0;
   out_2916808608387793704[136] = 0;
   out_2916808608387793704[137] = 0;
   out_2916808608387793704[138] = 0;
   out_2916808608387793704[139] = 0;
   out_2916808608387793704[140] = 0;
   out_2916808608387793704[141] = 0;
   out_2916808608387793704[142] = 0;
   out_2916808608387793704[143] = 0;
   out_2916808608387793704[144] = 0;
   out_2916808608387793704[145] = 0;
   out_2916808608387793704[146] = 0;
   out_2916808608387793704[147] = 0;
   out_2916808608387793704[148] = 0;
   out_2916808608387793704[149] = 0;
   out_2916808608387793704[150] = 0;
   out_2916808608387793704[151] = 0;
   out_2916808608387793704[152] = 0;
   out_2916808608387793704[153] = 1.0;
   out_2916808608387793704[154] = 0;
   out_2916808608387793704[155] = 0;
   out_2916808608387793704[156] = 0;
   out_2916808608387793704[157] = 0;
   out_2916808608387793704[158] = 0;
   out_2916808608387793704[159] = 0;
   out_2916808608387793704[160] = 0;
   out_2916808608387793704[161] = 0;
   out_2916808608387793704[162] = 0;
   out_2916808608387793704[163] = 0;
   out_2916808608387793704[164] = 0;
   out_2916808608387793704[165] = 0;
   out_2916808608387793704[166] = 0;
   out_2916808608387793704[167] = 0;
   out_2916808608387793704[168] = 0;
   out_2916808608387793704[169] = 0;
   out_2916808608387793704[170] = 0;
   out_2916808608387793704[171] = 0;
   out_2916808608387793704[172] = 0;
   out_2916808608387793704[173] = 0;
   out_2916808608387793704[174] = 0;
   out_2916808608387793704[175] = 1.0;
   out_2916808608387793704[176] = 0;
   out_2916808608387793704[177] = 0;
   out_2916808608387793704[178] = 0;
   out_2916808608387793704[179] = 0;
   out_2916808608387793704[180] = 0;
   out_2916808608387793704[181] = 0;
   out_2916808608387793704[182] = 0;
   out_2916808608387793704[183] = 0;
   out_2916808608387793704[184] = 0;
   out_2916808608387793704[185] = 0;
   out_2916808608387793704[186] = 0;
   out_2916808608387793704[187] = 0;
   out_2916808608387793704[188] = 0;
   out_2916808608387793704[189] = 0;
   out_2916808608387793704[190] = 0;
   out_2916808608387793704[191] = 0;
   out_2916808608387793704[192] = 0;
   out_2916808608387793704[193] = 0;
   out_2916808608387793704[194] = 0;
   out_2916808608387793704[195] = 0;
   out_2916808608387793704[196] = 0;
   out_2916808608387793704[197] = 1.0;
   out_2916808608387793704[198] = 0;
   out_2916808608387793704[199] = 0;
   out_2916808608387793704[200] = 0;
   out_2916808608387793704[201] = 0;
   out_2916808608387793704[202] = 0;
   out_2916808608387793704[203] = 0;
   out_2916808608387793704[204] = 0;
   out_2916808608387793704[205] = 0;
   out_2916808608387793704[206] = 0;
   out_2916808608387793704[207] = 0;
   out_2916808608387793704[208] = 0;
   out_2916808608387793704[209] = 0;
   out_2916808608387793704[210] = 0;
   out_2916808608387793704[211] = 0;
   out_2916808608387793704[212] = 0;
   out_2916808608387793704[213] = 0;
   out_2916808608387793704[214] = 0;
   out_2916808608387793704[215] = 0;
   out_2916808608387793704[216] = 0;
   out_2916808608387793704[217] = 0;
   out_2916808608387793704[218] = 0;
   out_2916808608387793704[219] = 1.0;
   out_2916808608387793704[220] = 0;
   out_2916808608387793704[221] = 0;
   out_2916808608387793704[222] = 0;
   out_2916808608387793704[223] = 0;
   out_2916808608387793704[224] = 0;
   out_2916808608387793704[225] = 0;
   out_2916808608387793704[226] = 0;
   out_2916808608387793704[227] = 0;
   out_2916808608387793704[228] = 0;
   out_2916808608387793704[229] = 0;
   out_2916808608387793704[230] = 0;
   out_2916808608387793704[231] = 0;
   out_2916808608387793704[232] = 0;
   out_2916808608387793704[233] = 0;
   out_2916808608387793704[234] = 0;
   out_2916808608387793704[235] = 0;
   out_2916808608387793704[236] = 0;
   out_2916808608387793704[237] = 0;
   out_2916808608387793704[238] = 0;
   out_2916808608387793704[239] = 0;
   out_2916808608387793704[240] = 0;
   out_2916808608387793704[241] = 1.0;
   out_2916808608387793704[242] = 0;
   out_2916808608387793704[243] = 0;
   out_2916808608387793704[244] = 0;
   out_2916808608387793704[245] = 0;
   out_2916808608387793704[246] = 0;
   out_2916808608387793704[247] = 0;
   out_2916808608387793704[248] = 0;
   out_2916808608387793704[249] = 0;
   out_2916808608387793704[250] = 0;
   out_2916808608387793704[251] = 0;
   out_2916808608387793704[252] = 0;
   out_2916808608387793704[253] = 0;
   out_2916808608387793704[254] = 0;
   out_2916808608387793704[255] = 0;
   out_2916808608387793704[256] = 0;
   out_2916808608387793704[257] = 0;
   out_2916808608387793704[258] = 0;
   out_2916808608387793704[259] = 0;
   out_2916808608387793704[260] = 0;
   out_2916808608387793704[261] = 0;
   out_2916808608387793704[262] = 0;
   out_2916808608387793704[263] = 1.0;
   out_2916808608387793704[264] = 0;
   out_2916808608387793704[265] = 0;
   out_2916808608387793704[266] = 0;
   out_2916808608387793704[267] = 0;
   out_2916808608387793704[268] = 0;
   out_2916808608387793704[269] = 0;
   out_2916808608387793704[270] = 0;
   out_2916808608387793704[271] = 0;
   out_2916808608387793704[272] = 0;
   out_2916808608387793704[273] = 0;
   out_2916808608387793704[274] = 0;
   out_2916808608387793704[275] = 0;
   out_2916808608387793704[276] = 0;
   out_2916808608387793704[277] = 0;
   out_2916808608387793704[278] = 0;
   out_2916808608387793704[279] = 0;
   out_2916808608387793704[280] = 0;
   out_2916808608387793704[281] = 0;
   out_2916808608387793704[282] = 0;
   out_2916808608387793704[283] = 0;
   out_2916808608387793704[284] = 0;
   out_2916808608387793704[285] = 1.0;
   out_2916808608387793704[286] = 0;
   out_2916808608387793704[287] = 0;
   out_2916808608387793704[288] = 0;
   out_2916808608387793704[289] = 0;
   out_2916808608387793704[290] = 0;
   out_2916808608387793704[291] = 0;
   out_2916808608387793704[292] = 0;
   out_2916808608387793704[293] = 0;
   out_2916808608387793704[294] = 0;
   out_2916808608387793704[295] = 0;
   out_2916808608387793704[296] = 0;
   out_2916808608387793704[297] = 0;
   out_2916808608387793704[298] = 0;
   out_2916808608387793704[299] = 0;
   out_2916808608387793704[300] = 0;
   out_2916808608387793704[301] = 0;
   out_2916808608387793704[302] = 0;
   out_2916808608387793704[303] = 0;
   out_2916808608387793704[304] = 0;
   out_2916808608387793704[305] = 0;
   out_2916808608387793704[306] = 0;
   out_2916808608387793704[307] = 1.0;
   out_2916808608387793704[308] = 0;
   out_2916808608387793704[309] = 0;
   out_2916808608387793704[310] = 0;
   out_2916808608387793704[311] = 0;
   out_2916808608387793704[312] = 0;
   out_2916808608387793704[313] = 0;
   out_2916808608387793704[314] = 0;
   out_2916808608387793704[315] = 0;
   out_2916808608387793704[316] = 0;
   out_2916808608387793704[317] = 0;
   out_2916808608387793704[318] = 0;
   out_2916808608387793704[319] = 0;
   out_2916808608387793704[320] = 0;
   out_2916808608387793704[321] = 0;
   out_2916808608387793704[322] = 0;
   out_2916808608387793704[323] = 0;
   out_2916808608387793704[324] = 0;
   out_2916808608387793704[325] = 0;
   out_2916808608387793704[326] = 0;
   out_2916808608387793704[327] = 0;
   out_2916808608387793704[328] = 0;
   out_2916808608387793704[329] = 1.0;
   out_2916808608387793704[330] = 0;
   out_2916808608387793704[331] = 0;
   out_2916808608387793704[332] = 0;
   out_2916808608387793704[333] = 0;
   out_2916808608387793704[334] = 0;
   out_2916808608387793704[335] = 0;
   out_2916808608387793704[336] = 0;
   out_2916808608387793704[337] = 0;
   out_2916808608387793704[338] = 0;
   out_2916808608387793704[339] = 0;
   out_2916808608387793704[340] = 0;
   out_2916808608387793704[341] = 0;
   out_2916808608387793704[342] = 0;
   out_2916808608387793704[343] = 0;
   out_2916808608387793704[344] = 0;
   out_2916808608387793704[345] = 0;
   out_2916808608387793704[346] = 0;
   out_2916808608387793704[347] = 0;
   out_2916808608387793704[348] = 0;
   out_2916808608387793704[349] = 0;
   out_2916808608387793704[350] = 0;
   out_2916808608387793704[351] = 1.0;
   out_2916808608387793704[352] = 0;
   out_2916808608387793704[353] = 0;
   out_2916808608387793704[354] = 0;
   out_2916808608387793704[355] = 0;
   out_2916808608387793704[356] = 0;
   out_2916808608387793704[357] = 0;
   out_2916808608387793704[358] = 0;
   out_2916808608387793704[359] = 0;
   out_2916808608387793704[360] = 0;
   out_2916808608387793704[361] = 0;
   out_2916808608387793704[362] = 0;
   out_2916808608387793704[363] = 0;
   out_2916808608387793704[364] = 0;
   out_2916808608387793704[365] = 0;
   out_2916808608387793704[366] = 0;
   out_2916808608387793704[367] = 0;
   out_2916808608387793704[368] = 0;
   out_2916808608387793704[369] = 0;
   out_2916808608387793704[370] = 0;
   out_2916808608387793704[371] = 0;
   out_2916808608387793704[372] = 0;
   out_2916808608387793704[373] = 1.0;
   out_2916808608387793704[374] = 0;
   out_2916808608387793704[375] = 0;
   out_2916808608387793704[376] = 0;
   out_2916808608387793704[377] = 0;
   out_2916808608387793704[378] = 0;
   out_2916808608387793704[379] = 0;
   out_2916808608387793704[380] = 0;
   out_2916808608387793704[381] = 0;
   out_2916808608387793704[382] = 0;
   out_2916808608387793704[383] = 0;
   out_2916808608387793704[384] = 0;
   out_2916808608387793704[385] = 0;
   out_2916808608387793704[386] = 0;
   out_2916808608387793704[387] = 0;
   out_2916808608387793704[388] = 0;
   out_2916808608387793704[389] = 0;
   out_2916808608387793704[390] = 0;
   out_2916808608387793704[391] = 0;
   out_2916808608387793704[392] = 0;
   out_2916808608387793704[393] = 0;
   out_2916808608387793704[394] = 0;
   out_2916808608387793704[395] = 1.0;
   out_2916808608387793704[396] = 0;
   out_2916808608387793704[397] = 0;
   out_2916808608387793704[398] = 0;
   out_2916808608387793704[399] = 0;
   out_2916808608387793704[400] = 0;
   out_2916808608387793704[401] = 0;
   out_2916808608387793704[402] = 0;
   out_2916808608387793704[403] = 0;
   out_2916808608387793704[404] = 0;
   out_2916808608387793704[405] = 0;
   out_2916808608387793704[406] = 0;
   out_2916808608387793704[407] = 0;
   out_2916808608387793704[408] = 0;
   out_2916808608387793704[409] = 0;
   out_2916808608387793704[410] = 0;
   out_2916808608387793704[411] = 0;
   out_2916808608387793704[412] = 0;
   out_2916808608387793704[413] = 0;
   out_2916808608387793704[414] = 0;
   out_2916808608387793704[415] = 0;
   out_2916808608387793704[416] = 0;
   out_2916808608387793704[417] = 1.0;
   out_2916808608387793704[418] = 0;
   out_2916808608387793704[419] = 0;
   out_2916808608387793704[420] = 0;
   out_2916808608387793704[421] = 0;
   out_2916808608387793704[422] = 0;
   out_2916808608387793704[423] = 0;
   out_2916808608387793704[424] = 0;
   out_2916808608387793704[425] = 0;
   out_2916808608387793704[426] = 0;
   out_2916808608387793704[427] = 0;
   out_2916808608387793704[428] = 0;
   out_2916808608387793704[429] = 0;
   out_2916808608387793704[430] = 0;
   out_2916808608387793704[431] = 0;
   out_2916808608387793704[432] = 0;
   out_2916808608387793704[433] = 0;
   out_2916808608387793704[434] = 0;
   out_2916808608387793704[435] = 0;
   out_2916808608387793704[436] = 0;
   out_2916808608387793704[437] = 0;
   out_2916808608387793704[438] = 0;
   out_2916808608387793704[439] = 1.0;
   out_2916808608387793704[440] = 0;
   out_2916808608387793704[441] = 0;
   out_2916808608387793704[442] = 0;
   out_2916808608387793704[443] = 0;
   out_2916808608387793704[444] = 0;
   out_2916808608387793704[445] = 0;
   out_2916808608387793704[446] = 0;
   out_2916808608387793704[447] = 0;
   out_2916808608387793704[448] = 0;
   out_2916808608387793704[449] = 0;
   out_2916808608387793704[450] = 0;
   out_2916808608387793704[451] = 0;
   out_2916808608387793704[452] = 0;
   out_2916808608387793704[453] = 0;
   out_2916808608387793704[454] = 0;
   out_2916808608387793704[455] = 0;
   out_2916808608387793704[456] = 0;
   out_2916808608387793704[457] = 0;
   out_2916808608387793704[458] = 0;
   out_2916808608387793704[459] = 0;
   out_2916808608387793704[460] = 0;
   out_2916808608387793704[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3198981689702931158) {
   out_3198981689702931158[0] = dt*state[7] + state[0];
   out_3198981689702931158[1] = dt*state[8] + state[1];
   out_3198981689702931158[2] = dt*state[9] + state[2];
   out_3198981689702931158[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3198981689702931158[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3198981689702931158[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3198981689702931158[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3198981689702931158[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3198981689702931158[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3198981689702931158[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3198981689702931158[10] = state[10];
   out_3198981689702931158[11] = state[11];
   out_3198981689702931158[12] = state[12];
   out_3198981689702931158[13] = state[13];
   out_3198981689702931158[14] = state[14];
   out_3198981689702931158[15] = state[15];
   out_3198981689702931158[16] = state[16];
   out_3198981689702931158[17] = state[17];
   out_3198981689702931158[18] = state[18];
   out_3198981689702931158[19] = state[19];
   out_3198981689702931158[20] = state[20];
   out_3198981689702931158[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7326586676369564012) {
   out_7326586676369564012[0] = 1;
   out_7326586676369564012[1] = 0;
   out_7326586676369564012[2] = 0;
   out_7326586676369564012[3] = 0;
   out_7326586676369564012[4] = 0;
   out_7326586676369564012[5] = 0;
   out_7326586676369564012[6] = dt;
   out_7326586676369564012[7] = 0;
   out_7326586676369564012[8] = 0;
   out_7326586676369564012[9] = 0;
   out_7326586676369564012[10] = 0;
   out_7326586676369564012[11] = 0;
   out_7326586676369564012[12] = 0;
   out_7326586676369564012[13] = 0;
   out_7326586676369564012[14] = 0;
   out_7326586676369564012[15] = 0;
   out_7326586676369564012[16] = 0;
   out_7326586676369564012[17] = 0;
   out_7326586676369564012[18] = 0;
   out_7326586676369564012[19] = 0;
   out_7326586676369564012[20] = 0;
   out_7326586676369564012[21] = 0;
   out_7326586676369564012[22] = 1;
   out_7326586676369564012[23] = 0;
   out_7326586676369564012[24] = 0;
   out_7326586676369564012[25] = 0;
   out_7326586676369564012[26] = 0;
   out_7326586676369564012[27] = 0;
   out_7326586676369564012[28] = dt;
   out_7326586676369564012[29] = 0;
   out_7326586676369564012[30] = 0;
   out_7326586676369564012[31] = 0;
   out_7326586676369564012[32] = 0;
   out_7326586676369564012[33] = 0;
   out_7326586676369564012[34] = 0;
   out_7326586676369564012[35] = 0;
   out_7326586676369564012[36] = 0;
   out_7326586676369564012[37] = 0;
   out_7326586676369564012[38] = 0;
   out_7326586676369564012[39] = 0;
   out_7326586676369564012[40] = 0;
   out_7326586676369564012[41] = 0;
   out_7326586676369564012[42] = 0;
   out_7326586676369564012[43] = 0;
   out_7326586676369564012[44] = 1;
   out_7326586676369564012[45] = 0;
   out_7326586676369564012[46] = 0;
   out_7326586676369564012[47] = 0;
   out_7326586676369564012[48] = 0;
   out_7326586676369564012[49] = 0;
   out_7326586676369564012[50] = dt;
   out_7326586676369564012[51] = 0;
   out_7326586676369564012[52] = 0;
   out_7326586676369564012[53] = 0;
   out_7326586676369564012[54] = 0;
   out_7326586676369564012[55] = 0;
   out_7326586676369564012[56] = 0;
   out_7326586676369564012[57] = 0;
   out_7326586676369564012[58] = 0;
   out_7326586676369564012[59] = 0;
   out_7326586676369564012[60] = 0;
   out_7326586676369564012[61] = 0;
   out_7326586676369564012[62] = 0;
   out_7326586676369564012[63] = 0;
   out_7326586676369564012[64] = 0;
   out_7326586676369564012[65] = 0;
   out_7326586676369564012[66] = 1;
   out_7326586676369564012[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7326586676369564012[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7326586676369564012[69] = 0;
   out_7326586676369564012[70] = 0;
   out_7326586676369564012[71] = 0;
   out_7326586676369564012[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7326586676369564012[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7326586676369564012[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7326586676369564012[75] = 0;
   out_7326586676369564012[76] = 0;
   out_7326586676369564012[77] = 0;
   out_7326586676369564012[78] = 0;
   out_7326586676369564012[79] = 0;
   out_7326586676369564012[80] = 0;
   out_7326586676369564012[81] = 0;
   out_7326586676369564012[82] = 0;
   out_7326586676369564012[83] = 0;
   out_7326586676369564012[84] = 0;
   out_7326586676369564012[85] = 0;
   out_7326586676369564012[86] = 0;
   out_7326586676369564012[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7326586676369564012[88] = 1;
   out_7326586676369564012[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7326586676369564012[90] = 0;
   out_7326586676369564012[91] = 0;
   out_7326586676369564012[92] = 0;
   out_7326586676369564012[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7326586676369564012[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7326586676369564012[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7326586676369564012[96] = 0;
   out_7326586676369564012[97] = 0;
   out_7326586676369564012[98] = 0;
   out_7326586676369564012[99] = 0;
   out_7326586676369564012[100] = 0;
   out_7326586676369564012[101] = 0;
   out_7326586676369564012[102] = 0;
   out_7326586676369564012[103] = 0;
   out_7326586676369564012[104] = 0;
   out_7326586676369564012[105] = 0;
   out_7326586676369564012[106] = 0;
   out_7326586676369564012[107] = 0;
   out_7326586676369564012[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7326586676369564012[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7326586676369564012[110] = 1;
   out_7326586676369564012[111] = 0;
   out_7326586676369564012[112] = 0;
   out_7326586676369564012[113] = 0;
   out_7326586676369564012[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7326586676369564012[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7326586676369564012[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7326586676369564012[117] = 0;
   out_7326586676369564012[118] = 0;
   out_7326586676369564012[119] = 0;
   out_7326586676369564012[120] = 0;
   out_7326586676369564012[121] = 0;
   out_7326586676369564012[122] = 0;
   out_7326586676369564012[123] = 0;
   out_7326586676369564012[124] = 0;
   out_7326586676369564012[125] = 0;
   out_7326586676369564012[126] = 0;
   out_7326586676369564012[127] = 0;
   out_7326586676369564012[128] = 0;
   out_7326586676369564012[129] = 0;
   out_7326586676369564012[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7326586676369564012[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7326586676369564012[132] = 1;
   out_7326586676369564012[133] = 0;
   out_7326586676369564012[134] = 0;
   out_7326586676369564012[135] = 0;
   out_7326586676369564012[136] = 0;
   out_7326586676369564012[137] = 0;
   out_7326586676369564012[138] = 0;
   out_7326586676369564012[139] = 0;
   out_7326586676369564012[140] = 0;
   out_7326586676369564012[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7326586676369564012[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7326586676369564012[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7326586676369564012[144] = 0;
   out_7326586676369564012[145] = 0;
   out_7326586676369564012[146] = 0;
   out_7326586676369564012[147] = 0;
   out_7326586676369564012[148] = 0;
   out_7326586676369564012[149] = 0;
   out_7326586676369564012[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7326586676369564012[151] = 0;
   out_7326586676369564012[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7326586676369564012[153] = 0;
   out_7326586676369564012[154] = 1;
   out_7326586676369564012[155] = 0;
   out_7326586676369564012[156] = 0;
   out_7326586676369564012[157] = 0;
   out_7326586676369564012[158] = 0;
   out_7326586676369564012[159] = 0;
   out_7326586676369564012[160] = 0;
   out_7326586676369564012[161] = 0;
   out_7326586676369564012[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7326586676369564012[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7326586676369564012[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7326586676369564012[165] = 0;
   out_7326586676369564012[166] = 0;
   out_7326586676369564012[167] = 0;
   out_7326586676369564012[168] = 0;
   out_7326586676369564012[169] = 0;
   out_7326586676369564012[170] = 0;
   out_7326586676369564012[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7326586676369564012[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7326586676369564012[173] = 0;
   out_7326586676369564012[174] = 0;
   out_7326586676369564012[175] = 0;
   out_7326586676369564012[176] = 1;
   out_7326586676369564012[177] = 0;
   out_7326586676369564012[178] = 0;
   out_7326586676369564012[179] = 0;
   out_7326586676369564012[180] = 0;
   out_7326586676369564012[181] = 0;
   out_7326586676369564012[182] = 0;
   out_7326586676369564012[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7326586676369564012[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7326586676369564012[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7326586676369564012[186] = 0;
   out_7326586676369564012[187] = 0;
   out_7326586676369564012[188] = 0;
   out_7326586676369564012[189] = 0;
   out_7326586676369564012[190] = 0;
   out_7326586676369564012[191] = 0;
   out_7326586676369564012[192] = 0;
   out_7326586676369564012[193] = 0;
   out_7326586676369564012[194] = 0;
   out_7326586676369564012[195] = 0;
   out_7326586676369564012[196] = 0;
   out_7326586676369564012[197] = 0;
   out_7326586676369564012[198] = 1;
   out_7326586676369564012[199] = 0;
   out_7326586676369564012[200] = 0;
   out_7326586676369564012[201] = 0;
   out_7326586676369564012[202] = 0;
   out_7326586676369564012[203] = 0;
   out_7326586676369564012[204] = 0;
   out_7326586676369564012[205] = 0;
   out_7326586676369564012[206] = 0;
   out_7326586676369564012[207] = 0;
   out_7326586676369564012[208] = 0;
   out_7326586676369564012[209] = 0;
   out_7326586676369564012[210] = 0;
   out_7326586676369564012[211] = 0;
   out_7326586676369564012[212] = 0;
   out_7326586676369564012[213] = 0;
   out_7326586676369564012[214] = 0;
   out_7326586676369564012[215] = 0;
   out_7326586676369564012[216] = 0;
   out_7326586676369564012[217] = 0;
   out_7326586676369564012[218] = 0;
   out_7326586676369564012[219] = 0;
   out_7326586676369564012[220] = 1;
   out_7326586676369564012[221] = 0;
   out_7326586676369564012[222] = 0;
   out_7326586676369564012[223] = 0;
   out_7326586676369564012[224] = 0;
   out_7326586676369564012[225] = 0;
   out_7326586676369564012[226] = 0;
   out_7326586676369564012[227] = 0;
   out_7326586676369564012[228] = 0;
   out_7326586676369564012[229] = 0;
   out_7326586676369564012[230] = 0;
   out_7326586676369564012[231] = 0;
   out_7326586676369564012[232] = 0;
   out_7326586676369564012[233] = 0;
   out_7326586676369564012[234] = 0;
   out_7326586676369564012[235] = 0;
   out_7326586676369564012[236] = 0;
   out_7326586676369564012[237] = 0;
   out_7326586676369564012[238] = 0;
   out_7326586676369564012[239] = 0;
   out_7326586676369564012[240] = 0;
   out_7326586676369564012[241] = 0;
   out_7326586676369564012[242] = 1;
   out_7326586676369564012[243] = 0;
   out_7326586676369564012[244] = 0;
   out_7326586676369564012[245] = 0;
   out_7326586676369564012[246] = 0;
   out_7326586676369564012[247] = 0;
   out_7326586676369564012[248] = 0;
   out_7326586676369564012[249] = 0;
   out_7326586676369564012[250] = 0;
   out_7326586676369564012[251] = 0;
   out_7326586676369564012[252] = 0;
   out_7326586676369564012[253] = 0;
   out_7326586676369564012[254] = 0;
   out_7326586676369564012[255] = 0;
   out_7326586676369564012[256] = 0;
   out_7326586676369564012[257] = 0;
   out_7326586676369564012[258] = 0;
   out_7326586676369564012[259] = 0;
   out_7326586676369564012[260] = 0;
   out_7326586676369564012[261] = 0;
   out_7326586676369564012[262] = 0;
   out_7326586676369564012[263] = 0;
   out_7326586676369564012[264] = 1;
   out_7326586676369564012[265] = 0;
   out_7326586676369564012[266] = 0;
   out_7326586676369564012[267] = 0;
   out_7326586676369564012[268] = 0;
   out_7326586676369564012[269] = 0;
   out_7326586676369564012[270] = 0;
   out_7326586676369564012[271] = 0;
   out_7326586676369564012[272] = 0;
   out_7326586676369564012[273] = 0;
   out_7326586676369564012[274] = 0;
   out_7326586676369564012[275] = 0;
   out_7326586676369564012[276] = 0;
   out_7326586676369564012[277] = 0;
   out_7326586676369564012[278] = 0;
   out_7326586676369564012[279] = 0;
   out_7326586676369564012[280] = 0;
   out_7326586676369564012[281] = 0;
   out_7326586676369564012[282] = 0;
   out_7326586676369564012[283] = 0;
   out_7326586676369564012[284] = 0;
   out_7326586676369564012[285] = 0;
   out_7326586676369564012[286] = 1;
   out_7326586676369564012[287] = 0;
   out_7326586676369564012[288] = 0;
   out_7326586676369564012[289] = 0;
   out_7326586676369564012[290] = 0;
   out_7326586676369564012[291] = 0;
   out_7326586676369564012[292] = 0;
   out_7326586676369564012[293] = 0;
   out_7326586676369564012[294] = 0;
   out_7326586676369564012[295] = 0;
   out_7326586676369564012[296] = 0;
   out_7326586676369564012[297] = 0;
   out_7326586676369564012[298] = 0;
   out_7326586676369564012[299] = 0;
   out_7326586676369564012[300] = 0;
   out_7326586676369564012[301] = 0;
   out_7326586676369564012[302] = 0;
   out_7326586676369564012[303] = 0;
   out_7326586676369564012[304] = 0;
   out_7326586676369564012[305] = 0;
   out_7326586676369564012[306] = 0;
   out_7326586676369564012[307] = 0;
   out_7326586676369564012[308] = 1;
   out_7326586676369564012[309] = 0;
   out_7326586676369564012[310] = 0;
   out_7326586676369564012[311] = 0;
   out_7326586676369564012[312] = 0;
   out_7326586676369564012[313] = 0;
   out_7326586676369564012[314] = 0;
   out_7326586676369564012[315] = 0;
   out_7326586676369564012[316] = 0;
   out_7326586676369564012[317] = 0;
   out_7326586676369564012[318] = 0;
   out_7326586676369564012[319] = 0;
   out_7326586676369564012[320] = 0;
   out_7326586676369564012[321] = 0;
   out_7326586676369564012[322] = 0;
   out_7326586676369564012[323] = 0;
   out_7326586676369564012[324] = 0;
   out_7326586676369564012[325] = 0;
   out_7326586676369564012[326] = 0;
   out_7326586676369564012[327] = 0;
   out_7326586676369564012[328] = 0;
   out_7326586676369564012[329] = 0;
   out_7326586676369564012[330] = 1;
   out_7326586676369564012[331] = 0;
   out_7326586676369564012[332] = 0;
   out_7326586676369564012[333] = 0;
   out_7326586676369564012[334] = 0;
   out_7326586676369564012[335] = 0;
   out_7326586676369564012[336] = 0;
   out_7326586676369564012[337] = 0;
   out_7326586676369564012[338] = 0;
   out_7326586676369564012[339] = 0;
   out_7326586676369564012[340] = 0;
   out_7326586676369564012[341] = 0;
   out_7326586676369564012[342] = 0;
   out_7326586676369564012[343] = 0;
   out_7326586676369564012[344] = 0;
   out_7326586676369564012[345] = 0;
   out_7326586676369564012[346] = 0;
   out_7326586676369564012[347] = 0;
   out_7326586676369564012[348] = 0;
   out_7326586676369564012[349] = 0;
   out_7326586676369564012[350] = 0;
   out_7326586676369564012[351] = 0;
   out_7326586676369564012[352] = 1;
   out_7326586676369564012[353] = 0;
   out_7326586676369564012[354] = 0;
   out_7326586676369564012[355] = 0;
   out_7326586676369564012[356] = 0;
   out_7326586676369564012[357] = 0;
   out_7326586676369564012[358] = 0;
   out_7326586676369564012[359] = 0;
   out_7326586676369564012[360] = 0;
   out_7326586676369564012[361] = 0;
   out_7326586676369564012[362] = 0;
   out_7326586676369564012[363] = 0;
   out_7326586676369564012[364] = 0;
   out_7326586676369564012[365] = 0;
   out_7326586676369564012[366] = 0;
   out_7326586676369564012[367] = 0;
   out_7326586676369564012[368] = 0;
   out_7326586676369564012[369] = 0;
   out_7326586676369564012[370] = 0;
   out_7326586676369564012[371] = 0;
   out_7326586676369564012[372] = 0;
   out_7326586676369564012[373] = 0;
   out_7326586676369564012[374] = 1;
   out_7326586676369564012[375] = 0;
   out_7326586676369564012[376] = 0;
   out_7326586676369564012[377] = 0;
   out_7326586676369564012[378] = 0;
   out_7326586676369564012[379] = 0;
   out_7326586676369564012[380] = 0;
   out_7326586676369564012[381] = 0;
   out_7326586676369564012[382] = 0;
   out_7326586676369564012[383] = 0;
   out_7326586676369564012[384] = 0;
   out_7326586676369564012[385] = 0;
   out_7326586676369564012[386] = 0;
   out_7326586676369564012[387] = 0;
   out_7326586676369564012[388] = 0;
   out_7326586676369564012[389] = 0;
   out_7326586676369564012[390] = 0;
   out_7326586676369564012[391] = 0;
   out_7326586676369564012[392] = 0;
   out_7326586676369564012[393] = 0;
   out_7326586676369564012[394] = 0;
   out_7326586676369564012[395] = 0;
   out_7326586676369564012[396] = 1;
   out_7326586676369564012[397] = 0;
   out_7326586676369564012[398] = 0;
   out_7326586676369564012[399] = 0;
   out_7326586676369564012[400] = 0;
   out_7326586676369564012[401] = 0;
   out_7326586676369564012[402] = 0;
   out_7326586676369564012[403] = 0;
   out_7326586676369564012[404] = 0;
   out_7326586676369564012[405] = 0;
   out_7326586676369564012[406] = 0;
   out_7326586676369564012[407] = 0;
   out_7326586676369564012[408] = 0;
   out_7326586676369564012[409] = 0;
   out_7326586676369564012[410] = 0;
   out_7326586676369564012[411] = 0;
   out_7326586676369564012[412] = 0;
   out_7326586676369564012[413] = 0;
   out_7326586676369564012[414] = 0;
   out_7326586676369564012[415] = 0;
   out_7326586676369564012[416] = 0;
   out_7326586676369564012[417] = 0;
   out_7326586676369564012[418] = 1;
   out_7326586676369564012[419] = 0;
   out_7326586676369564012[420] = 0;
   out_7326586676369564012[421] = 0;
   out_7326586676369564012[422] = 0;
   out_7326586676369564012[423] = 0;
   out_7326586676369564012[424] = 0;
   out_7326586676369564012[425] = 0;
   out_7326586676369564012[426] = 0;
   out_7326586676369564012[427] = 0;
   out_7326586676369564012[428] = 0;
   out_7326586676369564012[429] = 0;
   out_7326586676369564012[430] = 0;
   out_7326586676369564012[431] = 0;
   out_7326586676369564012[432] = 0;
   out_7326586676369564012[433] = 0;
   out_7326586676369564012[434] = 0;
   out_7326586676369564012[435] = 0;
   out_7326586676369564012[436] = 0;
   out_7326586676369564012[437] = 0;
   out_7326586676369564012[438] = 0;
   out_7326586676369564012[439] = 0;
   out_7326586676369564012[440] = 1;
}
void h_4(double *state, double *unused, double *out_8285505906979784391) {
   out_8285505906979784391[0] = state[10] + state[13];
   out_8285505906979784391[1] = state[11] + state[14];
   out_8285505906979784391[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6430719217234783925) {
   out_6430719217234783925[0] = 0;
   out_6430719217234783925[1] = 0;
   out_6430719217234783925[2] = 0;
   out_6430719217234783925[3] = 0;
   out_6430719217234783925[4] = 0;
   out_6430719217234783925[5] = 0;
   out_6430719217234783925[6] = 0;
   out_6430719217234783925[7] = 0;
   out_6430719217234783925[8] = 0;
   out_6430719217234783925[9] = 0;
   out_6430719217234783925[10] = 1;
   out_6430719217234783925[11] = 0;
   out_6430719217234783925[12] = 0;
   out_6430719217234783925[13] = 1;
   out_6430719217234783925[14] = 0;
   out_6430719217234783925[15] = 0;
   out_6430719217234783925[16] = 0;
   out_6430719217234783925[17] = 0;
   out_6430719217234783925[18] = 0;
   out_6430719217234783925[19] = 0;
   out_6430719217234783925[20] = 0;
   out_6430719217234783925[21] = 0;
   out_6430719217234783925[22] = 0;
   out_6430719217234783925[23] = 0;
   out_6430719217234783925[24] = 0;
   out_6430719217234783925[25] = 0;
   out_6430719217234783925[26] = 0;
   out_6430719217234783925[27] = 0;
   out_6430719217234783925[28] = 0;
   out_6430719217234783925[29] = 0;
   out_6430719217234783925[30] = 0;
   out_6430719217234783925[31] = 0;
   out_6430719217234783925[32] = 0;
   out_6430719217234783925[33] = 1;
   out_6430719217234783925[34] = 0;
   out_6430719217234783925[35] = 0;
   out_6430719217234783925[36] = 1;
   out_6430719217234783925[37] = 0;
   out_6430719217234783925[38] = 0;
   out_6430719217234783925[39] = 0;
   out_6430719217234783925[40] = 0;
   out_6430719217234783925[41] = 0;
   out_6430719217234783925[42] = 0;
   out_6430719217234783925[43] = 0;
   out_6430719217234783925[44] = 0;
   out_6430719217234783925[45] = 0;
   out_6430719217234783925[46] = 0;
   out_6430719217234783925[47] = 0;
   out_6430719217234783925[48] = 0;
   out_6430719217234783925[49] = 0;
   out_6430719217234783925[50] = 0;
   out_6430719217234783925[51] = 0;
   out_6430719217234783925[52] = 0;
   out_6430719217234783925[53] = 0;
   out_6430719217234783925[54] = 0;
   out_6430719217234783925[55] = 0;
   out_6430719217234783925[56] = 1;
   out_6430719217234783925[57] = 0;
   out_6430719217234783925[58] = 0;
   out_6430719217234783925[59] = 1;
   out_6430719217234783925[60] = 0;
   out_6430719217234783925[61] = 0;
   out_6430719217234783925[62] = 0;
   out_6430719217234783925[63] = 0;
   out_6430719217234783925[64] = 0;
   out_6430719217234783925[65] = 0;
}
void h_9(double *state, double *unused, double *out_6400555035463500974) {
   out_6400555035463500974[0] = state[10];
   out_6400555035463500974[1] = state[11];
   out_6400555035463500974[2] = state[12];
}
void H_9(double *state, double *unused, double *out_856499718029663545) {
   out_856499718029663545[0] = 0;
   out_856499718029663545[1] = 0;
   out_856499718029663545[2] = 0;
   out_856499718029663545[3] = 0;
   out_856499718029663545[4] = 0;
   out_856499718029663545[5] = 0;
   out_856499718029663545[6] = 0;
   out_856499718029663545[7] = 0;
   out_856499718029663545[8] = 0;
   out_856499718029663545[9] = 0;
   out_856499718029663545[10] = 1;
   out_856499718029663545[11] = 0;
   out_856499718029663545[12] = 0;
   out_856499718029663545[13] = 0;
   out_856499718029663545[14] = 0;
   out_856499718029663545[15] = 0;
   out_856499718029663545[16] = 0;
   out_856499718029663545[17] = 0;
   out_856499718029663545[18] = 0;
   out_856499718029663545[19] = 0;
   out_856499718029663545[20] = 0;
   out_856499718029663545[21] = 0;
   out_856499718029663545[22] = 0;
   out_856499718029663545[23] = 0;
   out_856499718029663545[24] = 0;
   out_856499718029663545[25] = 0;
   out_856499718029663545[26] = 0;
   out_856499718029663545[27] = 0;
   out_856499718029663545[28] = 0;
   out_856499718029663545[29] = 0;
   out_856499718029663545[30] = 0;
   out_856499718029663545[31] = 0;
   out_856499718029663545[32] = 0;
   out_856499718029663545[33] = 1;
   out_856499718029663545[34] = 0;
   out_856499718029663545[35] = 0;
   out_856499718029663545[36] = 0;
   out_856499718029663545[37] = 0;
   out_856499718029663545[38] = 0;
   out_856499718029663545[39] = 0;
   out_856499718029663545[40] = 0;
   out_856499718029663545[41] = 0;
   out_856499718029663545[42] = 0;
   out_856499718029663545[43] = 0;
   out_856499718029663545[44] = 0;
   out_856499718029663545[45] = 0;
   out_856499718029663545[46] = 0;
   out_856499718029663545[47] = 0;
   out_856499718029663545[48] = 0;
   out_856499718029663545[49] = 0;
   out_856499718029663545[50] = 0;
   out_856499718029663545[51] = 0;
   out_856499718029663545[52] = 0;
   out_856499718029663545[53] = 0;
   out_856499718029663545[54] = 0;
   out_856499718029663545[55] = 0;
   out_856499718029663545[56] = 1;
   out_856499718029663545[57] = 0;
   out_856499718029663545[58] = 0;
   out_856499718029663545[59] = 0;
   out_856499718029663545[60] = 0;
   out_856499718029663545[61] = 0;
   out_856499718029663545[62] = 0;
   out_856499718029663545[63] = 0;
   out_856499718029663545[64] = 0;
   out_856499718029663545[65] = 0;
}
void h_10(double *state, double *unused, double *out_953605315290247005) {
   out_953605315290247005[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_953605315290247005[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_953605315290247005[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_2167839464501704117) {
   out_2167839464501704117[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2167839464501704117[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2167839464501704117[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2167839464501704117[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2167839464501704117[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2167839464501704117[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2167839464501704117[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2167839464501704117[7] = 0;
   out_2167839464501704117[8] = 0;
   out_2167839464501704117[9] = 0;
   out_2167839464501704117[10] = 0;
   out_2167839464501704117[11] = 0;
   out_2167839464501704117[12] = 0;
   out_2167839464501704117[13] = 0;
   out_2167839464501704117[14] = 0;
   out_2167839464501704117[15] = 0;
   out_2167839464501704117[16] = 1;
   out_2167839464501704117[17] = 0;
   out_2167839464501704117[18] = 0;
   out_2167839464501704117[19] = 1;
   out_2167839464501704117[20] = 0;
   out_2167839464501704117[21] = 0;
   out_2167839464501704117[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2167839464501704117[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2167839464501704117[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2167839464501704117[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2167839464501704117[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2167839464501704117[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2167839464501704117[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2167839464501704117[29] = 0;
   out_2167839464501704117[30] = 0;
   out_2167839464501704117[31] = 0;
   out_2167839464501704117[32] = 0;
   out_2167839464501704117[33] = 0;
   out_2167839464501704117[34] = 0;
   out_2167839464501704117[35] = 0;
   out_2167839464501704117[36] = 0;
   out_2167839464501704117[37] = 0;
   out_2167839464501704117[38] = 0;
   out_2167839464501704117[39] = 1;
   out_2167839464501704117[40] = 0;
   out_2167839464501704117[41] = 0;
   out_2167839464501704117[42] = 1;
   out_2167839464501704117[43] = 0;
   out_2167839464501704117[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2167839464501704117[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2167839464501704117[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2167839464501704117[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2167839464501704117[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2167839464501704117[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2167839464501704117[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2167839464501704117[51] = 0;
   out_2167839464501704117[52] = 0;
   out_2167839464501704117[53] = 0;
   out_2167839464501704117[54] = 0;
   out_2167839464501704117[55] = 0;
   out_2167839464501704117[56] = 0;
   out_2167839464501704117[57] = 0;
   out_2167839464501704117[58] = 0;
   out_2167839464501704117[59] = 0;
   out_2167839464501704117[60] = 0;
   out_2167839464501704117[61] = 0;
   out_2167839464501704117[62] = 1;
   out_2167839464501704117[63] = 0;
   out_2167839464501704117[64] = 0;
   out_2167839464501704117[65] = 1;
}
void h_12(double *state, double *unused, double *out_1559980189455246494) {
   out_1559980189455246494[0] = state[0];
   out_1559980189455246494[1] = state[1];
   out_1559980189455246494[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1411262809202822130) {
   out_1411262809202822130[0] = 1;
   out_1411262809202822130[1] = 0;
   out_1411262809202822130[2] = 0;
   out_1411262809202822130[3] = 0;
   out_1411262809202822130[4] = 0;
   out_1411262809202822130[5] = 0;
   out_1411262809202822130[6] = 0;
   out_1411262809202822130[7] = 0;
   out_1411262809202822130[8] = 0;
   out_1411262809202822130[9] = 0;
   out_1411262809202822130[10] = 0;
   out_1411262809202822130[11] = 0;
   out_1411262809202822130[12] = 0;
   out_1411262809202822130[13] = 0;
   out_1411262809202822130[14] = 0;
   out_1411262809202822130[15] = 0;
   out_1411262809202822130[16] = 0;
   out_1411262809202822130[17] = 0;
   out_1411262809202822130[18] = 0;
   out_1411262809202822130[19] = 0;
   out_1411262809202822130[20] = 0;
   out_1411262809202822130[21] = 0;
   out_1411262809202822130[22] = 0;
   out_1411262809202822130[23] = 1;
   out_1411262809202822130[24] = 0;
   out_1411262809202822130[25] = 0;
   out_1411262809202822130[26] = 0;
   out_1411262809202822130[27] = 0;
   out_1411262809202822130[28] = 0;
   out_1411262809202822130[29] = 0;
   out_1411262809202822130[30] = 0;
   out_1411262809202822130[31] = 0;
   out_1411262809202822130[32] = 0;
   out_1411262809202822130[33] = 0;
   out_1411262809202822130[34] = 0;
   out_1411262809202822130[35] = 0;
   out_1411262809202822130[36] = 0;
   out_1411262809202822130[37] = 0;
   out_1411262809202822130[38] = 0;
   out_1411262809202822130[39] = 0;
   out_1411262809202822130[40] = 0;
   out_1411262809202822130[41] = 0;
   out_1411262809202822130[42] = 0;
   out_1411262809202822130[43] = 0;
   out_1411262809202822130[44] = 0;
   out_1411262809202822130[45] = 0;
   out_1411262809202822130[46] = 1;
   out_1411262809202822130[47] = 0;
   out_1411262809202822130[48] = 0;
   out_1411262809202822130[49] = 0;
   out_1411262809202822130[50] = 0;
   out_1411262809202822130[51] = 0;
   out_1411262809202822130[52] = 0;
   out_1411262809202822130[53] = 0;
   out_1411262809202822130[54] = 0;
   out_1411262809202822130[55] = 0;
   out_1411262809202822130[56] = 0;
   out_1411262809202822130[57] = 0;
   out_1411262809202822130[58] = 0;
   out_1411262809202822130[59] = 0;
   out_1411262809202822130[60] = 0;
   out_1411262809202822130[61] = 0;
   out_1411262809202822130[62] = 0;
   out_1411262809202822130[63] = 0;
   out_1411262809202822130[64] = 0;
   out_1411262809202822130[65] = 0;
}
void h_35(double *state, double *unused, double *out_3799330306980543987) {
   out_3799330306980543987[0] = state[7];
   out_3799330306980543987[1] = state[8];
   out_3799330306980543987[2] = state[9];
}
void H_35(double *state, double *unused, double *out_3064057159862176549) {
   out_3064057159862176549[0] = 0;
   out_3064057159862176549[1] = 0;
   out_3064057159862176549[2] = 0;
   out_3064057159862176549[3] = 0;
   out_3064057159862176549[4] = 0;
   out_3064057159862176549[5] = 0;
   out_3064057159862176549[6] = 0;
   out_3064057159862176549[7] = 1;
   out_3064057159862176549[8] = 0;
   out_3064057159862176549[9] = 0;
   out_3064057159862176549[10] = 0;
   out_3064057159862176549[11] = 0;
   out_3064057159862176549[12] = 0;
   out_3064057159862176549[13] = 0;
   out_3064057159862176549[14] = 0;
   out_3064057159862176549[15] = 0;
   out_3064057159862176549[16] = 0;
   out_3064057159862176549[17] = 0;
   out_3064057159862176549[18] = 0;
   out_3064057159862176549[19] = 0;
   out_3064057159862176549[20] = 0;
   out_3064057159862176549[21] = 0;
   out_3064057159862176549[22] = 0;
   out_3064057159862176549[23] = 0;
   out_3064057159862176549[24] = 0;
   out_3064057159862176549[25] = 0;
   out_3064057159862176549[26] = 0;
   out_3064057159862176549[27] = 0;
   out_3064057159862176549[28] = 0;
   out_3064057159862176549[29] = 0;
   out_3064057159862176549[30] = 1;
   out_3064057159862176549[31] = 0;
   out_3064057159862176549[32] = 0;
   out_3064057159862176549[33] = 0;
   out_3064057159862176549[34] = 0;
   out_3064057159862176549[35] = 0;
   out_3064057159862176549[36] = 0;
   out_3064057159862176549[37] = 0;
   out_3064057159862176549[38] = 0;
   out_3064057159862176549[39] = 0;
   out_3064057159862176549[40] = 0;
   out_3064057159862176549[41] = 0;
   out_3064057159862176549[42] = 0;
   out_3064057159862176549[43] = 0;
   out_3064057159862176549[44] = 0;
   out_3064057159862176549[45] = 0;
   out_3064057159862176549[46] = 0;
   out_3064057159862176549[47] = 0;
   out_3064057159862176549[48] = 0;
   out_3064057159862176549[49] = 0;
   out_3064057159862176549[50] = 0;
   out_3064057159862176549[51] = 0;
   out_3064057159862176549[52] = 0;
   out_3064057159862176549[53] = 1;
   out_3064057159862176549[54] = 0;
   out_3064057159862176549[55] = 0;
   out_3064057159862176549[56] = 0;
   out_3064057159862176549[57] = 0;
   out_3064057159862176549[58] = 0;
   out_3064057159862176549[59] = 0;
   out_3064057159862176549[60] = 0;
   out_3064057159862176549[61] = 0;
   out_3064057159862176549[62] = 0;
   out_3064057159862176549[63] = 0;
   out_3064057159862176549[64] = 0;
   out_3064057159862176549[65] = 0;
}
void h_32(double *state, double *unused, double *out_8471134452095245760) {
   out_8471134452095245760[0] = state[3];
   out_8471134452095245760[1] = state[4];
   out_8471134452095245760[2] = state[5];
   out_8471134452095245760[3] = state[6];
}
void H_32(double *state, double *unused, double *out_359032646960426612) {
   out_359032646960426612[0] = 0;
   out_359032646960426612[1] = 0;
   out_359032646960426612[2] = 0;
   out_359032646960426612[3] = 1;
   out_359032646960426612[4] = 0;
   out_359032646960426612[5] = 0;
   out_359032646960426612[6] = 0;
   out_359032646960426612[7] = 0;
   out_359032646960426612[8] = 0;
   out_359032646960426612[9] = 0;
   out_359032646960426612[10] = 0;
   out_359032646960426612[11] = 0;
   out_359032646960426612[12] = 0;
   out_359032646960426612[13] = 0;
   out_359032646960426612[14] = 0;
   out_359032646960426612[15] = 0;
   out_359032646960426612[16] = 0;
   out_359032646960426612[17] = 0;
   out_359032646960426612[18] = 0;
   out_359032646960426612[19] = 0;
   out_359032646960426612[20] = 0;
   out_359032646960426612[21] = 0;
   out_359032646960426612[22] = 0;
   out_359032646960426612[23] = 0;
   out_359032646960426612[24] = 0;
   out_359032646960426612[25] = 0;
   out_359032646960426612[26] = 1;
   out_359032646960426612[27] = 0;
   out_359032646960426612[28] = 0;
   out_359032646960426612[29] = 0;
   out_359032646960426612[30] = 0;
   out_359032646960426612[31] = 0;
   out_359032646960426612[32] = 0;
   out_359032646960426612[33] = 0;
   out_359032646960426612[34] = 0;
   out_359032646960426612[35] = 0;
   out_359032646960426612[36] = 0;
   out_359032646960426612[37] = 0;
   out_359032646960426612[38] = 0;
   out_359032646960426612[39] = 0;
   out_359032646960426612[40] = 0;
   out_359032646960426612[41] = 0;
   out_359032646960426612[42] = 0;
   out_359032646960426612[43] = 0;
   out_359032646960426612[44] = 0;
   out_359032646960426612[45] = 0;
   out_359032646960426612[46] = 0;
   out_359032646960426612[47] = 0;
   out_359032646960426612[48] = 0;
   out_359032646960426612[49] = 1;
   out_359032646960426612[50] = 0;
   out_359032646960426612[51] = 0;
   out_359032646960426612[52] = 0;
   out_359032646960426612[53] = 0;
   out_359032646960426612[54] = 0;
   out_359032646960426612[55] = 0;
   out_359032646960426612[56] = 0;
   out_359032646960426612[57] = 0;
   out_359032646960426612[58] = 0;
   out_359032646960426612[59] = 0;
   out_359032646960426612[60] = 0;
   out_359032646960426612[61] = 0;
   out_359032646960426612[62] = 0;
   out_359032646960426612[63] = 0;
   out_359032646960426612[64] = 0;
   out_359032646960426612[65] = 0;
   out_359032646960426612[66] = 0;
   out_359032646960426612[67] = 0;
   out_359032646960426612[68] = 0;
   out_359032646960426612[69] = 0;
   out_359032646960426612[70] = 0;
   out_359032646960426612[71] = 0;
   out_359032646960426612[72] = 1;
   out_359032646960426612[73] = 0;
   out_359032646960426612[74] = 0;
   out_359032646960426612[75] = 0;
   out_359032646960426612[76] = 0;
   out_359032646960426612[77] = 0;
   out_359032646960426612[78] = 0;
   out_359032646960426612[79] = 0;
   out_359032646960426612[80] = 0;
   out_359032646960426612[81] = 0;
   out_359032646960426612[82] = 0;
   out_359032646960426612[83] = 0;
   out_359032646960426612[84] = 0;
   out_359032646960426612[85] = 0;
   out_359032646960426612[86] = 0;
   out_359032646960426612[87] = 0;
}
void h_13(double *state, double *unused, double *out_5779676979998588055) {
   out_5779676979998588055[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5779676979998588055[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5779676979998588055[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1078892314269304163) {
   out_1078892314269304163[0] = 0;
   out_1078892314269304163[1] = 0;
   out_1078892314269304163[2] = 0;
   out_1078892314269304163[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1078892314269304163[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1078892314269304163[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1078892314269304163[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1078892314269304163[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1078892314269304163[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1078892314269304163[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1078892314269304163[10] = 0;
   out_1078892314269304163[11] = 0;
   out_1078892314269304163[12] = 0;
   out_1078892314269304163[13] = 0;
   out_1078892314269304163[14] = 0;
   out_1078892314269304163[15] = 0;
   out_1078892314269304163[16] = 0;
   out_1078892314269304163[17] = 0;
   out_1078892314269304163[18] = 0;
   out_1078892314269304163[19] = 0;
   out_1078892314269304163[20] = 0;
   out_1078892314269304163[21] = 0;
   out_1078892314269304163[22] = 0;
   out_1078892314269304163[23] = 0;
   out_1078892314269304163[24] = 0;
   out_1078892314269304163[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1078892314269304163[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1078892314269304163[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1078892314269304163[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1078892314269304163[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1078892314269304163[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1078892314269304163[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1078892314269304163[32] = 0;
   out_1078892314269304163[33] = 0;
   out_1078892314269304163[34] = 0;
   out_1078892314269304163[35] = 0;
   out_1078892314269304163[36] = 0;
   out_1078892314269304163[37] = 0;
   out_1078892314269304163[38] = 0;
   out_1078892314269304163[39] = 0;
   out_1078892314269304163[40] = 0;
   out_1078892314269304163[41] = 0;
   out_1078892314269304163[42] = 0;
   out_1078892314269304163[43] = 0;
   out_1078892314269304163[44] = 0;
   out_1078892314269304163[45] = 0;
   out_1078892314269304163[46] = 0;
   out_1078892314269304163[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1078892314269304163[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1078892314269304163[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1078892314269304163[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1078892314269304163[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1078892314269304163[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1078892314269304163[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1078892314269304163[54] = 0;
   out_1078892314269304163[55] = 0;
   out_1078892314269304163[56] = 0;
   out_1078892314269304163[57] = 0;
   out_1078892314269304163[58] = 0;
   out_1078892314269304163[59] = 0;
   out_1078892314269304163[60] = 0;
   out_1078892314269304163[61] = 0;
   out_1078892314269304163[62] = 0;
   out_1078892314269304163[63] = 0;
   out_1078892314269304163[64] = 0;
   out_1078892314269304163[65] = 0;
}
void h_14(double *state, double *unused, double *out_6400555035463500974) {
   out_6400555035463500974[0] = state[10];
   out_6400555035463500974[1] = state[11];
   out_6400555035463500974[2] = state[12];
}
void H_14(double *state, double *unused, double *out_856499718029663545) {
   out_856499718029663545[0] = 0;
   out_856499718029663545[1] = 0;
   out_856499718029663545[2] = 0;
   out_856499718029663545[3] = 0;
   out_856499718029663545[4] = 0;
   out_856499718029663545[5] = 0;
   out_856499718029663545[6] = 0;
   out_856499718029663545[7] = 0;
   out_856499718029663545[8] = 0;
   out_856499718029663545[9] = 0;
   out_856499718029663545[10] = 1;
   out_856499718029663545[11] = 0;
   out_856499718029663545[12] = 0;
   out_856499718029663545[13] = 0;
   out_856499718029663545[14] = 0;
   out_856499718029663545[15] = 0;
   out_856499718029663545[16] = 0;
   out_856499718029663545[17] = 0;
   out_856499718029663545[18] = 0;
   out_856499718029663545[19] = 0;
   out_856499718029663545[20] = 0;
   out_856499718029663545[21] = 0;
   out_856499718029663545[22] = 0;
   out_856499718029663545[23] = 0;
   out_856499718029663545[24] = 0;
   out_856499718029663545[25] = 0;
   out_856499718029663545[26] = 0;
   out_856499718029663545[27] = 0;
   out_856499718029663545[28] = 0;
   out_856499718029663545[29] = 0;
   out_856499718029663545[30] = 0;
   out_856499718029663545[31] = 0;
   out_856499718029663545[32] = 0;
   out_856499718029663545[33] = 1;
   out_856499718029663545[34] = 0;
   out_856499718029663545[35] = 0;
   out_856499718029663545[36] = 0;
   out_856499718029663545[37] = 0;
   out_856499718029663545[38] = 0;
   out_856499718029663545[39] = 0;
   out_856499718029663545[40] = 0;
   out_856499718029663545[41] = 0;
   out_856499718029663545[42] = 0;
   out_856499718029663545[43] = 0;
   out_856499718029663545[44] = 0;
   out_856499718029663545[45] = 0;
   out_856499718029663545[46] = 0;
   out_856499718029663545[47] = 0;
   out_856499718029663545[48] = 0;
   out_856499718029663545[49] = 0;
   out_856499718029663545[50] = 0;
   out_856499718029663545[51] = 0;
   out_856499718029663545[52] = 0;
   out_856499718029663545[53] = 0;
   out_856499718029663545[54] = 0;
   out_856499718029663545[55] = 0;
   out_856499718029663545[56] = 1;
   out_856499718029663545[57] = 0;
   out_856499718029663545[58] = 0;
   out_856499718029663545[59] = 0;
   out_856499718029663545[60] = 0;
   out_856499718029663545[61] = 0;
   out_856499718029663545[62] = 0;
   out_856499718029663545[63] = 0;
   out_856499718029663545[64] = 0;
   out_856499718029663545[65] = 0;
}
void h_33(double *state, double *unused, double *out_8334300283892479829) {
   out_8334300283892479829[0] = state[16];
   out_8334300283892479829[1] = state[17];
   out_8334300283892479829[2] = state[18];
}
void H_33(double *state, double *unused, double *out_86499844776681055) {
   out_86499844776681055[0] = 0;
   out_86499844776681055[1] = 0;
   out_86499844776681055[2] = 0;
   out_86499844776681055[3] = 0;
   out_86499844776681055[4] = 0;
   out_86499844776681055[5] = 0;
   out_86499844776681055[6] = 0;
   out_86499844776681055[7] = 0;
   out_86499844776681055[8] = 0;
   out_86499844776681055[9] = 0;
   out_86499844776681055[10] = 0;
   out_86499844776681055[11] = 0;
   out_86499844776681055[12] = 0;
   out_86499844776681055[13] = 0;
   out_86499844776681055[14] = 0;
   out_86499844776681055[15] = 0;
   out_86499844776681055[16] = 1;
   out_86499844776681055[17] = 0;
   out_86499844776681055[18] = 0;
   out_86499844776681055[19] = 0;
   out_86499844776681055[20] = 0;
   out_86499844776681055[21] = 0;
   out_86499844776681055[22] = 0;
   out_86499844776681055[23] = 0;
   out_86499844776681055[24] = 0;
   out_86499844776681055[25] = 0;
   out_86499844776681055[26] = 0;
   out_86499844776681055[27] = 0;
   out_86499844776681055[28] = 0;
   out_86499844776681055[29] = 0;
   out_86499844776681055[30] = 0;
   out_86499844776681055[31] = 0;
   out_86499844776681055[32] = 0;
   out_86499844776681055[33] = 0;
   out_86499844776681055[34] = 0;
   out_86499844776681055[35] = 0;
   out_86499844776681055[36] = 0;
   out_86499844776681055[37] = 0;
   out_86499844776681055[38] = 0;
   out_86499844776681055[39] = 1;
   out_86499844776681055[40] = 0;
   out_86499844776681055[41] = 0;
   out_86499844776681055[42] = 0;
   out_86499844776681055[43] = 0;
   out_86499844776681055[44] = 0;
   out_86499844776681055[45] = 0;
   out_86499844776681055[46] = 0;
   out_86499844776681055[47] = 0;
   out_86499844776681055[48] = 0;
   out_86499844776681055[49] = 0;
   out_86499844776681055[50] = 0;
   out_86499844776681055[51] = 0;
   out_86499844776681055[52] = 0;
   out_86499844776681055[53] = 0;
   out_86499844776681055[54] = 0;
   out_86499844776681055[55] = 0;
   out_86499844776681055[56] = 0;
   out_86499844776681055[57] = 0;
   out_86499844776681055[58] = 0;
   out_86499844776681055[59] = 0;
   out_86499844776681055[60] = 0;
   out_86499844776681055[61] = 0;
   out_86499844776681055[62] = 1;
   out_86499844776681055[63] = 0;
   out_86499844776681055[64] = 0;
   out_86499844776681055[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5868829834089122411) {
  H(in_vec, out_5868829834089122411);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5707678381819063740) {
  err_fun(nom_x, delta_x, out_5707678381819063740);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7029823815973809391) {
  inv_err_fun(nom_x, true_x, out_7029823815973809391);
}
void live_H_mod_fun(double *state, double *out_2916808608387793704) {
  H_mod_fun(state, out_2916808608387793704);
}
void live_f_fun(double *state, double dt, double *out_3198981689702931158) {
  f_fun(state,  dt, out_3198981689702931158);
}
void live_F_fun(double *state, double dt, double *out_7326586676369564012) {
  F_fun(state,  dt, out_7326586676369564012);
}
void live_h_4(double *state, double *unused, double *out_8285505906979784391) {
  h_4(state, unused, out_8285505906979784391);
}
void live_H_4(double *state, double *unused, double *out_6430719217234783925) {
  H_4(state, unused, out_6430719217234783925);
}
void live_h_9(double *state, double *unused, double *out_6400555035463500974) {
  h_9(state, unused, out_6400555035463500974);
}
void live_H_9(double *state, double *unused, double *out_856499718029663545) {
  H_9(state, unused, out_856499718029663545);
}
void live_h_10(double *state, double *unused, double *out_953605315290247005) {
  h_10(state, unused, out_953605315290247005);
}
void live_H_10(double *state, double *unused, double *out_2167839464501704117) {
  H_10(state, unused, out_2167839464501704117);
}
void live_h_12(double *state, double *unused, double *out_1559980189455246494) {
  h_12(state, unused, out_1559980189455246494);
}
void live_H_12(double *state, double *unused, double *out_1411262809202822130) {
  H_12(state, unused, out_1411262809202822130);
}
void live_h_35(double *state, double *unused, double *out_3799330306980543987) {
  h_35(state, unused, out_3799330306980543987);
}
void live_H_35(double *state, double *unused, double *out_3064057159862176549) {
  H_35(state, unused, out_3064057159862176549);
}
void live_h_32(double *state, double *unused, double *out_8471134452095245760) {
  h_32(state, unused, out_8471134452095245760);
}
void live_H_32(double *state, double *unused, double *out_359032646960426612) {
  H_32(state, unused, out_359032646960426612);
}
void live_h_13(double *state, double *unused, double *out_5779676979998588055) {
  h_13(state, unused, out_5779676979998588055);
}
void live_H_13(double *state, double *unused, double *out_1078892314269304163) {
  H_13(state, unused, out_1078892314269304163);
}
void live_h_14(double *state, double *unused, double *out_6400555035463500974) {
  h_14(state, unused, out_6400555035463500974);
}
void live_H_14(double *state, double *unused, double *out_856499718029663545) {
  H_14(state, unused, out_856499718029663545);
}
void live_h_33(double *state, double *unused, double *out_8334300283892479829) {
  h_33(state, unused, out_8334300283892479829);
}
void live_H_33(double *state, double *unused, double *out_86499844776681055) {
  H_33(state, unused, out_86499844776681055);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
