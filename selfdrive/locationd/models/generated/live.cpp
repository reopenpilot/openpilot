#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8807178854572675291) {
   out_8807178854572675291[0] = 0;
   out_8807178854572675291[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8807178854572675291[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8807178854572675291[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8807178854572675291[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8807178854572675291[5] = -sin(in_vec[1]);
   out_8807178854572675291[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8807178854572675291[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8807178854572675291[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8807178854572675291[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8807178854572675291[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8807178854572675291[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8807178854572675291[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8807178854572675291[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8807178854572675291[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8807178854572675291[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8807178854572675291[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8807178854572675291[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5382157062787930162) {
   out_5382157062787930162[0] = delta_x[0] + nom_x[0];
   out_5382157062787930162[1] = delta_x[1] + nom_x[1];
   out_5382157062787930162[2] = delta_x[2] + nom_x[2];
   out_5382157062787930162[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5382157062787930162[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5382157062787930162[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5382157062787930162[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5382157062787930162[7] = delta_x[6] + nom_x[7];
   out_5382157062787930162[8] = delta_x[7] + nom_x[8];
   out_5382157062787930162[9] = delta_x[8] + nom_x[9];
   out_5382157062787930162[10] = delta_x[9] + nom_x[10];
   out_5382157062787930162[11] = delta_x[10] + nom_x[11];
   out_5382157062787930162[12] = delta_x[11] + nom_x[12];
   out_5382157062787930162[13] = delta_x[12] + nom_x[13];
   out_5382157062787930162[14] = delta_x[13] + nom_x[14];
   out_5382157062787930162[15] = delta_x[14] + nom_x[15];
   out_5382157062787930162[16] = delta_x[15] + nom_x[16];
   out_5382157062787930162[17] = delta_x[16] + nom_x[17];
   out_5382157062787930162[18] = delta_x[17] + nom_x[18];
   out_5382157062787930162[19] = delta_x[18] + nom_x[19];
   out_5382157062787930162[20] = delta_x[19] + nom_x[20];
   out_5382157062787930162[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6604846359355455733) {
   out_6604846359355455733[0] = -nom_x[0] + true_x[0];
   out_6604846359355455733[1] = -nom_x[1] + true_x[1];
   out_6604846359355455733[2] = -nom_x[2] + true_x[2];
   out_6604846359355455733[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6604846359355455733[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6604846359355455733[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6604846359355455733[6] = -nom_x[7] + true_x[7];
   out_6604846359355455733[7] = -nom_x[8] + true_x[8];
   out_6604846359355455733[8] = -nom_x[9] + true_x[9];
   out_6604846359355455733[9] = -nom_x[10] + true_x[10];
   out_6604846359355455733[10] = -nom_x[11] + true_x[11];
   out_6604846359355455733[11] = -nom_x[12] + true_x[12];
   out_6604846359355455733[12] = -nom_x[13] + true_x[13];
   out_6604846359355455733[13] = -nom_x[14] + true_x[14];
   out_6604846359355455733[14] = -nom_x[15] + true_x[15];
   out_6604846359355455733[15] = -nom_x[16] + true_x[16];
   out_6604846359355455733[16] = -nom_x[17] + true_x[17];
   out_6604846359355455733[17] = -nom_x[18] + true_x[18];
   out_6604846359355455733[18] = -nom_x[19] + true_x[19];
   out_6604846359355455733[19] = -nom_x[20] + true_x[20];
   out_6604846359355455733[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7126146533478242279) {
   out_7126146533478242279[0] = 1.0;
   out_7126146533478242279[1] = 0;
   out_7126146533478242279[2] = 0;
   out_7126146533478242279[3] = 0;
   out_7126146533478242279[4] = 0;
   out_7126146533478242279[5] = 0;
   out_7126146533478242279[6] = 0;
   out_7126146533478242279[7] = 0;
   out_7126146533478242279[8] = 0;
   out_7126146533478242279[9] = 0;
   out_7126146533478242279[10] = 0;
   out_7126146533478242279[11] = 0;
   out_7126146533478242279[12] = 0;
   out_7126146533478242279[13] = 0;
   out_7126146533478242279[14] = 0;
   out_7126146533478242279[15] = 0;
   out_7126146533478242279[16] = 0;
   out_7126146533478242279[17] = 0;
   out_7126146533478242279[18] = 0;
   out_7126146533478242279[19] = 0;
   out_7126146533478242279[20] = 0;
   out_7126146533478242279[21] = 0;
   out_7126146533478242279[22] = 1.0;
   out_7126146533478242279[23] = 0;
   out_7126146533478242279[24] = 0;
   out_7126146533478242279[25] = 0;
   out_7126146533478242279[26] = 0;
   out_7126146533478242279[27] = 0;
   out_7126146533478242279[28] = 0;
   out_7126146533478242279[29] = 0;
   out_7126146533478242279[30] = 0;
   out_7126146533478242279[31] = 0;
   out_7126146533478242279[32] = 0;
   out_7126146533478242279[33] = 0;
   out_7126146533478242279[34] = 0;
   out_7126146533478242279[35] = 0;
   out_7126146533478242279[36] = 0;
   out_7126146533478242279[37] = 0;
   out_7126146533478242279[38] = 0;
   out_7126146533478242279[39] = 0;
   out_7126146533478242279[40] = 0;
   out_7126146533478242279[41] = 0;
   out_7126146533478242279[42] = 0;
   out_7126146533478242279[43] = 0;
   out_7126146533478242279[44] = 1.0;
   out_7126146533478242279[45] = 0;
   out_7126146533478242279[46] = 0;
   out_7126146533478242279[47] = 0;
   out_7126146533478242279[48] = 0;
   out_7126146533478242279[49] = 0;
   out_7126146533478242279[50] = 0;
   out_7126146533478242279[51] = 0;
   out_7126146533478242279[52] = 0;
   out_7126146533478242279[53] = 0;
   out_7126146533478242279[54] = 0;
   out_7126146533478242279[55] = 0;
   out_7126146533478242279[56] = 0;
   out_7126146533478242279[57] = 0;
   out_7126146533478242279[58] = 0;
   out_7126146533478242279[59] = 0;
   out_7126146533478242279[60] = 0;
   out_7126146533478242279[61] = 0;
   out_7126146533478242279[62] = 0;
   out_7126146533478242279[63] = 0;
   out_7126146533478242279[64] = 0;
   out_7126146533478242279[65] = 0;
   out_7126146533478242279[66] = -0.5*state[4];
   out_7126146533478242279[67] = -0.5*state[5];
   out_7126146533478242279[68] = -0.5*state[6];
   out_7126146533478242279[69] = 0;
   out_7126146533478242279[70] = 0;
   out_7126146533478242279[71] = 0;
   out_7126146533478242279[72] = 0;
   out_7126146533478242279[73] = 0;
   out_7126146533478242279[74] = 0;
   out_7126146533478242279[75] = 0;
   out_7126146533478242279[76] = 0;
   out_7126146533478242279[77] = 0;
   out_7126146533478242279[78] = 0;
   out_7126146533478242279[79] = 0;
   out_7126146533478242279[80] = 0;
   out_7126146533478242279[81] = 0;
   out_7126146533478242279[82] = 0;
   out_7126146533478242279[83] = 0;
   out_7126146533478242279[84] = 0;
   out_7126146533478242279[85] = 0;
   out_7126146533478242279[86] = 0;
   out_7126146533478242279[87] = 0.5*state[3];
   out_7126146533478242279[88] = 0.5*state[6];
   out_7126146533478242279[89] = -0.5*state[5];
   out_7126146533478242279[90] = 0;
   out_7126146533478242279[91] = 0;
   out_7126146533478242279[92] = 0;
   out_7126146533478242279[93] = 0;
   out_7126146533478242279[94] = 0;
   out_7126146533478242279[95] = 0;
   out_7126146533478242279[96] = 0;
   out_7126146533478242279[97] = 0;
   out_7126146533478242279[98] = 0;
   out_7126146533478242279[99] = 0;
   out_7126146533478242279[100] = 0;
   out_7126146533478242279[101] = 0;
   out_7126146533478242279[102] = 0;
   out_7126146533478242279[103] = 0;
   out_7126146533478242279[104] = 0;
   out_7126146533478242279[105] = 0;
   out_7126146533478242279[106] = 0;
   out_7126146533478242279[107] = 0;
   out_7126146533478242279[108] = -0.5*state[6];
   out_7126146533478242279[109] = 0.5*state[3];
   out_7126146533478242279[110] = 0.5*state[4];
   out_7126146533478242279[111] = 0;
   out_7126146533478242279[112] = 0;
   out_7126146533478242279[113] = 0;
   out_7126146533478242279[114] = 0;
   out_7126146533478242279[115] = 0;
   out_7126146533478242279[116] = 0;
   out_7126146533478242279[117] = 0;
   out_7126146533478242279[118] = 0;
   out_7126146533478242279[119] = 0;
   out_7126146533478242279[120] = 0;
   out_7126146533478242279[121] = 0;
   out_7126146533478242279[122] = 0;
   out_7126146533478242279[123] = 0;
   out_7126146533478242279[124] = 0;
   out_7126146533478242279[125] = 0;
   out_7126146533478242279[126] = 0;
   out_7126146533478242279[127] = 0;
   out_7126146533478242279[128] = 0;
   out_7126146533478242279[129] = 0.5*state[5];
   out_7126146533478242279[130] = -0.5*state[4];
   out_7126146533478242279[131] = 0.5*state[3];
   out_7126146533478242279[132] = 0;
   out_7126146533478242279[133] = 0;
   out_7126146533478242279[134] = 0;
   out_7126146533478242279[135] = 0;
   out_7126146533478242279[136] = 0;
   out_7126146533478242279[137] = 0;
   out_7126146533478242279[138] = 0;
   out_7126146533478242279[139] = 0;
   out_7126146533478242279[140] = 0;
   out_7126146533478242279[141] = 0;
   out_7126146533478242279[142] = 0;
   out_7126146533478242279[143] = 0;
   out_7126146533478242279[144] = 0;
   out_7126146533478242279[145] = 0;
   out_7126146533478242279[146] = 0;
   out_7126146533478242279[147] = 0;
   out_7126146533478242279[148] = 0;
   out_7126146533478242279[149] = 0;
   out_7126146533478242279[150] = 0;
   out_7126146533478242279[151] = 0;
   out_7126146533478242279[152] = 0;
   out_7126146533478242279[153] = 1.0;
   out_7126146533478242279[154] = 0;
   out_7126146533478242279[155] = 0;
   out_7126146533478242279[156] = 0;
   out_7126146533478242279[157] = 0;
   out_7126146533478242279[158] = 0;
   out_7126146533478242279[159] = 0;
   out_7126146533478242279[160] = 0;
   out_7126146533478242279[161] = 0;
   out_7126146533478242279[162] = 0;
   out_7126146533478242279[163] = 0;
   out_7126146533478242279[164] = 0;
   out_7126146533478242279[165] = 0;
   out_7126146533478242279[166] = 0;
   out_7126146533478242279[167] = 0;
   out_7126146533478242279[168] = 0;
   out_7126146533478242279[169] = 0;
   out_7126146533478242279[170] = 0;
   out_7126146533478242279[171] = 0;
   out_7126146533478242279[172] = 0;
   out_7126146533478242279[173] = 0;
   out_7126146533478242279[174] = 0;
   out_7126146533478242279[175] = 1.0;
   out_7126146533478242279[176] = 0;
   out_7126146533478242279[177] = 0;
   out_7126146533478242279[178] = 0;
   out_7126146533478242279[179] = 0;
   out_7126146533478242279[180] = 0;
   out_7126146533478242279[181] = 0;
   out_7126146533478242279[182] = 0;
   out_7126146533478242279[183] = 0;
   out_7126146533478242279[184] = 0;
   out_7126146533478242279[185] = 0;
   out_7126146533478242279[186] = 0;
   out_7126146533478242279[187] = 0;
   out_7126146533478242279[188] = 0;
   out_7126146533478242279[189] = 0;
   out_7126146533478242279[190] = 0;
   out_7126146533478242279[191] = 0;
   out_7126146533478242279[192] = 0;
   out_7126146533478242279[193] = 0;
   out_7126146533478242279[194] = 0;
   out_7126146533478242279[195] = 0;
   out_7126146533478242279[196] = 0;
   out_7126146533478242279[197] = 1.0;
   out_7126146533478242279[198] = 0;
   out_7126146533478242279[199] = 0;
   out_7126146533478242279[200] = 0;
   out_7126146533478242279[201] = 0;
   out_7126146533478242279[202] = 0;
   out_7126146533478242279[203] = 0;
   out_7126146533478242279[204] = 0;
   out_7126146533478242279[205] = 0;
   out_7126146533478242279[206] = 0;
   out_7126146533478242279[207] = 0;
   out_7126146533478242279[208] = 0;
   out_7126146533478242279[209] = 0;
   out_7126146533478242279[210] = 0;
   out_7126146533478242279[211] = 0;
   out_7126146533478242279[212] = 0;
   out_7126146533478242279[213] = 0;
   out_7126146533478242279[214] = 0;
   out_7126146533478242279[215] = 0;
   out_7126146533478242279[216] = 0;
   out_7126146533478242279[217] = 0;
   out_7126146533478242279[218] = 0;
   out_7126146533478242279[219] = 1.0;
   out_7126146533478242279[220] = 0;
   out_7126146533478242279[221] = 0;
   out_7126146533478242279[222] = 0;
   out_7126146533478242279[223] = 0;
   out_7126146533478242279[224] = 0;
   out_7126146533478242279[225] = 0;
   out_7126146533478242279[226] = 0;
   out_7126146533478242279[227] = 0;
   out_7126146533478242279[228] = 0;
   out_7126146533478242279[229] = 0;
   out_7126146533478242279[230] = 0;
   out_7126146533478242279[231] = 0;
   out_7126146533478242279[232] = 0;
   out_7126146533478242279[233] = 0;
   out_7126146533478242279[234] = 0;
   out_7126146533478242279[235] = 0;
   out_7126146533478242279[236] = 0;
   out_7126146533478242279[237] = 0;
   out_7126146533478242279[238] = 0;
   out_7126146533478242279[239] = 0;
   out_7126146533478242279[240] = 0;
   out_7126146533478242279[241] = 1.0;
   out_7126146533478242279[242] = 0;
   out_7126146533478242279[243] = 0;
   out_7126146533478242279[244] = 0;
   out_7126146533478242279[245] = 0;
   out_7126146533478242279[246] = 0;
   out_7126146533478242279[247] = 0;
   out_7126146533478242279[248] = 0;
   out_7126146533478242279[249] = 0;
   out_7126146533478242279[250] = 0;
   out_7126146533478242279[251] = 0;
   out_7126146533478242279[252] = 0;
   out_7126146533478242279[253] = 0;
   out_7126146533478242279[254] = 0;
   out_7126146533478242279[255] = 0;
   out_7126146533478242279[256] = 0;
   out_7126146533478242279[257] = 0;
   out_7126146533478242279[258] = 0;
   out_7126146533478242279[259] = 0;
   out_7126146533478242279[260] = 0;
   out_7126146533478242279[261] = 0;
   out_7126146533478242279[262] = 0;
   out_7126146533478242279[263] = 1.0;
   out_7126146533478242279[264] = 0;
   out_7126146533478242279[265] = 0;
   out_7126146533478242279[266] = 0;
   out_7126146533478242279[267] = 0;
   out_7126146533478242279[268] = 0;
   out_7126146533478242279[269] = 0;
   out_7126146533478242279[270] = 0;
   out_7126146533478242279[271] = 0;
   out_7126146533478242279[272] = 0;
   out_7126146533478242279[273] = 0;
   out_7126146533478242279[274] = 0;
   out_7126146533478242279[275] = 0;
   out_7126146533478242279[276] = 0;
   out_7126146533478242279[277] = 0;
   out_7126146533478242279[278] = 0;
   out_7126146533478242279[279] = 0;
   out_7126146533478242279[280] = 0;
   out_7126146533478242279[281] = 0;
   out_7126146533478242279[282] = 0;
   out_7126146533478242279[283] = 0;
   out_7126146533478242279[284] = 0;
   out_7126146533478242279[285] = 1.0;
   out_7126146533478242279[286] = 0;
   out_7126146533478242279[287] = 0;
   out_7126146533478242279[288] = 0;
   out_7126146533478242279[289] = 0;
   out_7126146533478242279[290] = 0;
   out_7126146533478242279[291] = 0;
   out_7126146533478242279[292] = 0;
   out_7126146533478242279[293] = 0;
   out_7126146533478242279[294] = 0;
   out_7126146533478242279[295] = 0;
   out_7126146533478242279[296] = 0;
   out_7126146533478242279[297] = 0;
   out_7126146533478242279[298] = 0;
   out_7126146533478242279[299] = 0;
   out_7126146533478242279[300] = 0;
   out_7126146533478242279[301] = 0;
   out_7126146533478242279[302] = 0;
   out_7126146533478242279[303] = 0;
   out_7126146533478242279[304] = 0;
   out_7126146533478242279[305] = 0;
   out_7126146533478242279[306] = 0;
   out_7126146533478242279[307] = 1.0;
   out_7126146533478242279[308] = 0;
   out_7126146533478242279[309] = 0;
   out_7126146533478242279[310] = 0;
   out_7126146533478242279[311] = 0;
   out_7126146533478242279[312] = 0;
   out_7126146533478242279[313] = 0;
   out_7126146533478242279[314] = 0;
   out_7126146533478242279[315] = 0;
   out_7126146533478242279[316] = 0;
   out_7126146533478242279[317] = 0;
   out_7126146533478242279[318] = 0;
   out_7126146533478242279[319] = 0;
   out_7126146533478242279[320] = 0;
   out_7126146533478242279[321] = 0;
   out_7126146533478242279[322] = 0;
   out_7126146533478242279[323] = 0;
   out_7126146533478242279[324] = 0;
   out_7126146533478242279[325] = 0;
   out_7126146533478242279[326] = 0;
   out_7126146533478242279[327] = 0;
   out_7126146533478242279[328] = 0;
   out_7126146533478242279[329] = 1.0;
   out_7126146533478242279[330] = 0;
   out_7126146533478242279[331] = 0;
   out_7126146533478242279[332] = 0;
   out_7126146533478242279[333] = 0;
   out_7126146533478242279[334] = 0;
   out_7126146533478242279[335] = 0;
   out_7126146533478242279[336] = 0;
   out_7126146533478242279[337] = 0;
   out_7126146533478242279[338] = 0;
   out_7126146533478242279[339] = 0;
   out_7126146533478242279[340] = 0;
   out_7126146533478242279[341] = 0;
   out_7126146533478242279[342] = 0;
   out_7126146533478242279[343] = 0;
   out_7126146533478242279[344] = 0;
   out_7126146533478242279[345] = 0;
   out_7126146533478242279[346] = 0;
   out_7126146533478242279[347] = 0;
   out_7126146533478242279[348] = 0;
   out_7126146533478242279[349] = 0;
   out_7126146533478242279[350] = 0;
   out_7126146533478242279[351] = 1.0;
   out_7126146533478242279[352] = 0;
   out_7126146533478242279[353] = 0;
   out_7126146533478242279[354] = 0;
   out_7126146533478242279[355] = 0;
   out_7126146533478242279[356] = 0;
   out_7126146533478242279[357] = 0;
   out_7126146533478242279[358] = 0;
   out_7126146533478242279[359] = 0;
   out_7126146533478242279[360] = 0;
   out_7126146533478242279[361] = 0;
   out_7126146533478242279[362] = 0;
   out_7126146533478242279[363] = 0;
   out_7126146533478242279[364] = 0;
   out_7126146533478242279[365] = 0;
   out_7126146533478242279[366] = 0;
   out_7126146533478242279[367] = 0;
   out_7126146533478242279[368] = 0;
   out_7126146533478242279[369] = 0;
   out_7126146533478242279[370] = 0;
   out_7126146533478242279[371] = 0;
   out_7126146533478242279[372] = 0;
   out_7126146533478242279[373] = 1.0;
   out_7126146533478242279[374] = 0;
   out_7126146533478242279[375] = 0;
   out_7126146533478242279[376] = 0;
   out_7126146533478242279[377] = 0;
   out_7126146533478242279[378] = 0;
   out_7126146533478242279[379] = 0;
   out_7126146533478242279[380] = 0;
   out_7126146533478242279[381] = 0;
   out_7126146533478242279[382] = 0;
   out_7126146533478242279[383] = 0;
   out_7126146533478242279[384] = 0;
   out_7126146533478242279[385] = 0;
   out_7126146533478242279[386] = 0;
   out_7126146533478242279[387] = 0;
   out_7126146533478242279[388] = 0;
   out_7126146533478242279[389] = 0;
   out_7126146533478242279[390] = 0;
   out_7126146533478242279[391] = 0;
   out_7126146533478242279[392] = 0;
   out_7126146533478242279[393] = 0;
   out_7126146533478242279[394] = 0;
   out_7126146533478242279[395] = 1.0;
   out_7126146533478242279[396] = 0;
   out_7126146533478242279[397] = 0;
   out_7126146533478242279[398] = 0;
   out_7126146533478242279[399] = 0;
   out_7126146533478242279[400] = 0;
   out_7126146533478242279[401] = 0;
   out_7126146533478242279[402] = 0;
   out_7126146533478242279[403] = 0;
   out_7126146533478242279[404] = 0;
   out_7126146533478242279[405] = 0;
   out_7126146533478242279[406] = 0;
   out_7126146533478242279[407] = 0;
   out_7126146533478242279[408] = 0;
   out_7126146533478242279[409] = 0;
   out_7126146533478242279[410] = 0;
   out_7126146533478242279[411] = 0;
   out_7126146533478242279[412] = 0;
   out_7126146533478242279[413] = 0;
   out_7126146533478242279[414] = 0;
   out_7126146533478242279[415] = 0;
   out_7126146533478242279[416] = 0;
   out_7126146533478242279[417] = 1.0;
   out_7126146533478242279[418] = 0;
   out_7126146533478242279[419] = 0;
   out_7126146533478242279[420] = 0;
   out_7126146533478242279[421] = 0;
   out_7126146533478242279[422] = 0;
   out_7126146533478242279[423] = 0;
   out_7126146533478242279[424] = 0;
   out_7126146533478242279[425] = 0;
   out_7126146533478242279[426] = 0;
   out_7126146533478242279[427] = 0;
   out_7126146533478242279[428] = 0;
   out_7126146533478242279[429] = 0;
   out_7126146533478242279[430] = 0;
   out_7126146533478242279[431] = 0;
   out_7126146533478242279[432] = 0;
   out_7126146533478242279[433] = 0;
   out_7126146533478242279[434] = 0;
   out_7126146533478242279[435] = 0;
   out_7126146533478242279[436] = 0;
   out_7126146533478242279[437] = 0;
   out_7126146533478242279[438] = 0;
   out_7126146533478242279[439] = 1.0;
   out_7126146533478242279[440] = 0;
   out_7126146533478242279[441] = 0;
   out_7126146533478242279[442] = 0;
   out_7126146533478242279[443] = 0;
   out_7126146533478242279[444] = 0;
   out_7126146533478242279[445] = 0;
   out_7126146533478242279[446] = 0;
   out_7126146533478242279[447] = 0;
   out_7126146533478242279[448] = 0;
   out_7126146533478242279[449] = 0;
   out_7126146533478242279[450] = 0;
   out_7126146533478242279[451] = 0;
   out_7126146533478242279[452] = 0;
   out_7126146533478242279[453] = 0;
   out_7126146533478242279[454] = 0;
   out_7126146533478242279[455] = 0;
   out_7126146533478242279[456] = 0;
   out_7126146533478242279[457] = 0;
   out_7126146533478242279[458] = 0;
   out_7126146533478242279[459] = 0;
   out_7126146533478242279[460] = 0;
   out_7126146533478242279[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4103440530608711215) {
   out_4103440530608711215[0] = dt*state[7] + state[0];
   out_4103440530608711215[1] = dt*state[8] + state[1];
   out_4103440530608711215[2] = dt*state[9] + state[2];
   out_4103440530608711215[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4103440530608711215[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4103440530608711215[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4103440530608711215[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4103440530608711215[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4103440530608711215[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4103440530608711215[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4103440530608711215[10] = state[10];
   out_4103440530608711215[11] = state[11];
   out_4103440530608711215[12] = state[12];
   out_4103440530608711215[13] = state[13];
   out_4103440530608711215[14] = state[14];
   out_4103440530608711215[15] = state[15];
   out_4103440530608711215[16] = state[16];
   out_4103440530608711215[17] = state[17];
   out_4103440530608711215[18] = state[18];
   out_4103440530608711215[19] = state[19];
   out_4103440530608711215[20] = state[20];
   out_4103440530608711215[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2044154328262551299) {
   out_2044154328262551299[0] = 1;
   out_2044154328262551299[1] = 0;
   out_2044154328262551299[2] = 0;
   out_2044154328262551299[3] = 0;
   out_2044154328262551299[4] = 0;
   out_2044154328262551299[5] = 0;
   out_2044154328262551299[6] = dt;
   out_2044154328262551299[7] = 0;
   out_2044154328262551299[8] = 0;
   out_2044154328262551299[9] = 0;
   out_2044154328262551299[10] = 0;
   out_2044154328262551299[11] = 0;
   out_2044154328262551299[12] = 0;
   out_2044154328262551299[13] = 0;
   out_2044154328262551299[14] = 0;
   out_2044154328262551299[15] = 0;
   out_2044154328262551299[16] = 0;
   out_2044154328262551299[17] = 0;
   out_2044154328262551299[18] = 0;
   out_2044154328262551299[19] = 0;
   out_2044154328262551299[20] = 0;
   out_2044154328262551299[21] = 0;
   out_2044154328262551299[22] = 1;
   out_2044154328262551299[23] = 0;
   out_2044154328262551299[24] = 0;
   out_2044154328262551299[25] = 0;
   out_2044154328262551299[26] = 0;
   out_2044154328262551299[27] = 0;
   out_2044154328262551299[28] = dt;
   out_2044154328262551299[29] = 0;
   out_2044154328262551299[30] = 0;
   out_2044154328262551299[31] = 0;
   out_2044154328262551299[32] = 0;
   out_2044154328262551299[33] = 0;
   out_2044154328262551299[34] = 0;
   out_2044154328262551299[35] = 0;
   out_2044154328262551299[36] = 0;
   out_2044154328262551299[37] = 0;
   out_2044154328262551299[38] = 0;
   out_2044154328262551299[39] = 0;
   out_2044154328262551299[40] = 0;
   out_2044154328262551299[41] = 0;
   out_2044154328262551299[42] = 0;
   out_2044154328262551299[43] = 0;
   out_2044154328262551299[44] = 1;
   out_2044154328262551299[45] = 0;
   out_2044154328262551299[46] = 0;
   out_2044154328262551299[47] = 0;
   out_2044154328262551299[48] = 0;
   out_2044154328262551299[49] = 0;
   out_2044154328262551299[50] = dt;
   out_2044154328262551299[51] = 0;
   out_2044154328262551299[52] = 0;
   out_2044154328262551299[53] = 0;
   out_2044154328262551299[54] = 0;
   out_2044154328262551299[55] = 0;
   out_2044154328262551299[56] = 0;
   out_2044154328262551299[57] = 0;
   out_2044154328262551299[58] = 0;
   out_2044154328262551299[59] = 0;
   out_2044154328262551299[60] = 0;
   out_2044154328262551299[61] = 0;
   out_2044154328262551299[62] = 0;
   out_2044154328262551299[63] = 0;
   out_2044154328262551299[64] = 0;
   out_2044154328262551299[65] = 0;
   out_2044154328262551299[66] = 1;
   out_2044154328262551299[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2044154328262551299[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2044154328262551299[69] = 0;
   out_2044154328262551299[70] = 0;
   out_2044154328262551299[71] = 0;
   out_2044154328262551299[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2044154328262551299[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2044154328262551299[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2044154328262551299[75] = 0;
   out_2044154328262551299[76] = 0;
   out_2044154328262551299[77] = 0;
   out_2044154328262551299[78] = 0;
   out_2044154328262551299[79] = 0;
   out_2044154328262551299[80] = 0;
   out_2044154328262551299[81] = 0;
   out_2044154328262551299[82] = 0;
   out_2044154328262551299[83] = 0;
   out_2044154328262551299[84] = 0;
   out_2044154328262551299[85] = 0;
   out_2044154328262551299[86] = 0;
   out_2044154328262551299[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2044154328262551299[88] = 1;
   out_2044154328262551299[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2044154328262551299[90] = 0;
   out_2044154328262551299[91] = 0;
   out_2044154328262551299[92] = 0;
   out_2044154328262551299[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2044154328262551299[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2044154328262551299[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2044154328262551299[96] = 0;
   out_2044154328262551299[97] = 0;
   out_2044154328262551299[98] = 0;
   out_2044154328262551299[99] = 0;
   out_2044154328262551299[100] = 0;
   out_2044154328262551299[101] = 0;
   out_2044154328262551299[102] = 0;
   out_2044154328262551299[103] = 0;
   out_2044154328262551299[104] = 0;
   out_2044154328262551299[105] = 0;
   out_2044154328262551299[106] = 0;
   out_2044154328262551299[107] = 0;
   out_2044154328262551299[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2044154328262551299[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2044154328262551299[110] = 1;
   out_2044154328262551299[111] = 0;
   out_2044154328262551299[112] = 0;
   out_2044154328262551299[113] = 0;
   out_2044154328262551299[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2044154328262551299[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2044154328262551299[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2044154328262551299[117] = 0;
   out_2044154328262551299[118] = 0;
   out_2044154328262551299[119] = 0;
   out_2044154328262551299[120] = 0;
   out_2044154328262551299[121] = 0;
   out_2044154328262551299[122] = 0;
   out_2044154328262551299[123] = 0;
   out_2044154328262551299[124] = 0;
   out_2044154328262551299[125] = 0;
   out_2044154328262551299[126] = 0;
   out_2044154328262551299[127] = 0;
   out_2044154328262551299[128] = 0;
   out_2044154328262551299[129] = 0;
   out_2044154328262551299[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2044154328262551299[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2044154328262551299[132] = 1;
   out_2044154328262551299[133] = 0;
   out_2044154328262551299[134] = 0;
   out_2044154328262551299[135] = 0;
   out_2044154328262551299[136] = 0;
   out_2044154328262551299[137] = 0;
   out_2044154328262551299[138] = 0;
   out_2044154328262551299[139] = 0;
   out_2044154328262551299[140] = 0;
   out_2044154328262551299[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2044154328262551299[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2044154328262551299[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2044154328262551299[144] = 0;
   out_2044154328262551299[145] = 0;
   out_2044154328262551299[146] = 0;
   out_2044154328262551299[147] = 0;
   out_2044154328262551299[148] = 0;
   out_2044154328262551299[149] = 0;
   out_2044154328262551299[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2044154328262551299[151] = 0;
   out_2044154328262551299[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2044154328262551299[153] = 0;
   out_2044154328262551299[154] = 1;
   out_2044154328262551299[155] = 0;
   out_2044154328262551299[156] = 0;
   out_2044154328262551299[157] = 0;
   out_2044154328262551299[158] = 0;
   out_2044154328262551299[159] = 0;
   out_2044154328262551299[160] = 0;
   out_2044154328262551299[161] = 0;
   out_2044154328262551299[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2044154328262551299[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2044154328262551299[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2044154328262551299[165] = 0;
   out_2044154328262551299[166] = 0;
   out_2044154328262551299[167] = 0;
   out_2044154328262551299[168] = 0;
   out_2044154328262551299[169] = 0;
   out_2044154328262551299[170] = 0;
   out_2044154328262551299[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2044154328262551299[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2044154328262551299[173] = 0;
   out_2044154328262551299[174] = 0;
   out_2044154328262551299[175] = 0;
   out_2044154328262551299[176] = 1;
   out_2044154328262551299[177] = 0;
   out_2044154328262551299[178] = 0;
   out_2044154328262551299[179] = 0;
   out_2044154328262551299[180] = 0;
   out_2044154328262551299[181] = 0;
   out_2044154328262551299[182] = 0;
   out_2044154328262551299[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2044154328262551299[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2044154328262551299[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2044154328262551299[186] = 0;
   out_2044154328262551299[187] = 0;
   out_2044154328262551299[188] = 0;
   out_2044154328262551299[189] = 0;
   out_2044154328262551299[190] = 0;
   out_2044154328262551299[191] = 0;
   out_2044154328262551299[192] = 0;
   out_2044154328262551299[193] = 0;
   out_2044154328262551299[194] = 0;
   out_2044154328262551299[195] = 0;
   out_2044154328262551299[196] = 0;
   out_2044154328262551299[197] = 0;
   out_2044154328262551299[198] = 1;
   out_2044154328262551299[199] = 0;
   out_2044154328262551299[200] = 0;
   out_2044154328262551299[201] = 0;
   out_2044154328262551299[202] = 0;
   out_2044154328262551299[203] = 0;
   out_2044154328262551299[204] = 0;
   out_2044154328262551299[205] = 0;
   out_2044154328262551299[206] = 0;
   out_2044154328262551299[207] = 0;
   out_2044154328262551299[208] = 0;
   out_2044154328262551299[209] = 0;
   out_2044154328262551299[210] = 0;
   out_2044154328262551299[211] = 0;
   out_2044154328262551299[212] = 0;
   out_2044154328262551299[213] = 0;
   out_2044154328262551299[214] = 0;
   out_2044154328262551299[215] = 0;
   out_2044154328262551299[216] = 0;
   out_2044154328262551299[217] = 0;
   out_2044154328262551299[218] = 0;
   out_2044154328262551299[219] = 0;
   out_2044154328262551299[220] = 1;
   out_2044154328262551299[221] = 0;
   out_2044154328262551299[222] = 0;
   out_2044154328262551299[223] = 0;
   out_2044154328262551299[224] = 0;
   out_2044154328262551299[225] = 0;
   out_2044154328262551299[226] = 0;
   out_2044154328262551299[227] = 0;
   out_2044154328262551299[228] = 0;
   out_2044154328262551299[229] = 0;
   out_2044154328262551299[230] = 0;
   out_2044154328262551299[231] = 0;
   out_2044154328262551299[232] = 0;
   out_2044154328262551299[233] = 0;
   out_2044154328262551299[234] = 0;
   out_2044154328262551299[235] = 0;
   out_2044154328262551299[236] = 0;
   out_2044154328262551299[237] = 0;
   out_2044154328262551299[238] = 0;
   out_2044154328262551299[239] = 0;
   out_2044154328262551299[240] = 0;
   out_2044154328262551299[241] = 0;
   out_2044154328262551299[242] = 1;
   out_2044154328262551299[243] = 0;
   out_2044154328262551299[244] = 0;
   out_2044154328262551299[245] = 0;
   out_2044154328262551299[246] = 0;
   out_2044154328262551299[247] = 0;
   out_2044154328262551299[248] = 0;
   out_2044154328262551299[249] = 0;
   out_2044154328262551299[250] = 0;
   out_2044154328262551299[251] = 0;
   out_2044154328262551299[252] = 0;
   out_2044154328262551299[253] = 0;
   out_2044154328262551299[254] = 0;
   out_2044154328262551299[255] = 0;
   out_2044154328262551299[256] = 0;
   out_2044154328262551299[257] = 0;
   out_2044154328262551299[258] = 0;
   out_2044154328262551299[259] = 0;
   out_2044154328262551299[260] = 0;
   out_2044154328262551299[261] = 0;
   out_2044154328262551299[262] = 0;
   out_2044154328262551299[263] = 0;
   out_2044154328262551299[264] = 1;
   out_2044154328262551299[265] = 0;
   out_2044154328262551299[266] = 0;
   out_2044154328262551299[267] = 0;
   out_2044154328262551299[268] = 0;
   out_2044154328262551299[269] = 0;
   out_2044154328262551299[270] = 0;
   out_2044154328262551299[271] = 0;
   out_2044154328262551299[272] = 0;
   out_2044154328262551299[273] = 0;
   out_2044154328262551299[274] = 0;
   out_2044154328262551299[275] = 0;
   out_2044154328262551299[276] = 0;
   out_2044154328262551299[277] = 0;
   out_2044154328262551299[278] = 0;
   out_2044154328262551299[279] = 0;
   out_2044154328262551299[280] = 0;
   out_2044154328262551299[281] = 0;
   out_2044154328262551299[282] = 0;
   out_2044154328262551299[283] = 0;
   out_2044154328262551299[284] = 0;
   out_2044154328262551299[285] = 0;
   out_2044154328262551299[286] = 1;
   out_2044154328262551299[287] = 0;
   out_2044154328262551299[288] = 0;
   out_2044154328262551299[289] = 0;
   out_2044154328262551299[290] = 0;
   out_2044154328262551299[291] = 0;
   out_2044154328262551299[292] = 0;
   out_2044154328262551299[293] = 0;
   out_2044154328262551299[294] = 0;
   out_2044154328262551299[295] = 0;
   out_2044154328262551299[296] = 0;
   out_2044154328262551299[297] = 0;
   out_2044154328262551299[298] = 0;
   out_2044154328262551299[299] = 0;
   out_2044154328262551299[300] = 0;
   out_2044154328262551299[301] = 0;
   out_2044154328262551299[302] = 0;
   out_2044154328262551299[303] = 0;
   out_2044154328262551299[304] = 0;
   out_2044154328262551299[305] = 0;
   out_2044154328262551299[306] = 0;
   out_2044154328262551299[307] = 0;
   out_2044154328262551299[308] = 1;
   out_2044154328262551299[309] = 0;
   out_2044154328262551299[310] = 0;
   out_2044154328262551299[311] = 0;
   out_2044154328262551299[312] = 0;
   out_2044154328262551299[313] = 0;
   out_2044154328262551299[314] = 0;
   out_2044154328262551299[315] = 0;
   out_2044154328262551299[316] = 0;
   out_2044154328262551299[317] = 0;
   out_2044154328262551299[318] = 0;
   out_2044154328262551299[319] = 0;
   out_2044154328262551299[320] = 0;
   out_2044154328262551299[321] = 0;
   out_2044154328262551299[322] = 0;
   out_2044154328262551299[323] = 0;
   out_2044154328262551299[324] = 0;
   out_2044154328262551299[325] = 0;
   out_2044154328262551299[326] = 0;
   out_2044154328262551299[327] = 0;
   out_2044154328262551299[328] = 0;
   out_2044154328262551299[329] = 0;
   out_2044154328262551299[330] = 1;
   out_2044154328262551299[331] = 0;
   out_2044154328262551299[332] = 0;
   out_2044154328262551299[333] = 0;
   out_2044154328262551299[334] = 0;
   out_2044154328262551299[335] = 0;
   out_2044154328262551299[336] = 0;
   out_2044154328262551299[337] = 0;
   out_2044154328262551299[338] = 0;
   out_2044154328262551299[339] = 0;
   out_2044154328262551299[340] = 0;
   out_2044154328262551299[341] = 0;
   out_2044154328262551299[342] = 0;
   out_2044154328262551299[343] = 0;
   out_2044154328262551299[344] = 0;
   out_2044154328262551299[345] = 0;
   out_2044154328262551299[346] = 0;
   out_2044154328262551299[347] = 0;
   out_2044154328262551299[348] = 0;
   out_2044154328262551299[349] = 0;
   out_2044154328262551299[350] = 0;
   out_2044154328262551299[351] = 0;
   out_2044154328262551299[352] = 1;
   out_2044154328262551299[353] = 0;
   out_2044154328262551299[354] = 0;
   out_2044154328262551299[355] = 0;
   out_2044154328262551299[356] = 0;
   out_2044154328262551299[357] = 0;
   out_2044154328262551299[358] = 0;
   out_2044154328262551299[359] = 0;
   out_2044154328262551299[360] = 0;
   out_2044154328262551299[361] = 0;
   out_2044154328262551299[362] = 0;
   out_2044154328262551299[363] = 0;
   out_2044154328262551299[364] = 0;
   out_2044154328262551299[365] = 0;
   out_2044154328262551299[366] = 0;
   out_2044154328262551299[367] = 0;
   out_2044154328262551299[368] = 0;
   out_2044154328262551299[369] = 0;
   out_2044154328262551299[370] = 0;
   out_2044154328262551299[371] = 0;
   out_2044154328262551299[372] = 0;
   out_2044154328262551299[373] = 0;
   out_2044154328262551299[374] = 1;
   out_2044154328262551299[375] = 0;
   out_2044154328262551299[376] = 0;
   out_2044154328262551299[377] = 0;
   out_2044154328262551299[378] = 0;
   out_2044154328262551299[379] = 0;
   out_2044154328262551299[380] = 0;
   out_2044154328262551299[381] = 0;
   out_2044154328262551299[382] = 0;
   out_2044154328262551299[383] = 0;
   out_2044154328262551299[384] = 0;
   out_2044154328262551299[385] = 0;
   out_2044154328262551299[386] = 0;
   out_2044154328262551299[387] = 0;
   out_2044154328262551299[388] = 0;
   out_2044154328262551299[389] = 0;
   out_2044154328262551299[390] = 0;
   out_2044154328262551299[391] = 0;
   out_2044154328262551299[392] = 0;
   out_2044154328262551299[393] = 0;
   out_2044154328262551299[394] = 0;
   out_2044154328262551299[395] = 0;
   out_2044154328262551299[396] = 1;
   out_2044154328262551299[397] = 0;
   out_2044154328262551299[398] = 0;
   out_2044154328262551299[399] = 0;
   out_2044154328262551299[400] = 0;
   out_2044154328262551299[401] = 0;
   out_2044154328262551299[402] = 0;
   out_2044154328262551299[403] = 0;
   out_2044154328262551299[404] = 0;
   out_2044154328262551299[405] = 0;
   out_2044154328262551299[406] = 0;
   out_2044154328262551299[407] = 0;
   out_2044154328262551299[408] = 0;
   out_2044154328262551299[409] = 0;
   out_2044154328262551299[410] = 0;
   out_2044154328262551299[411] = 0;
   out_2044154328262551299[412] = 0;
   out_2044154328262551299[413] = 0;
   out_2044154328262551299[414] = 0;
   out_2044154328262551299[415] = 0;
   out_2044154328262551299[416] = 0;
   out_2044154328262551299[417] = 0;
   out_2044154328262551299[418] = 1;
   out_2044154328262551299[419] = 0;
   out_2044154328262551299[420] = 0;
   out_2044154328262551299[421] = 0;
   out_2044154328262551299[422] = 0;
   out_2044154328262551299[423] = 0;
   out_2044154328262551299[424] = 0;
   out_2044154328262551299[425] = 0;
   out_2044154328262551299[426] = 0;
   out_2044154328262551299[427] = 0;
   out_2044154328262551299[428] = 0;
   out_2044154328262551299[429] = 0;
   out_2044154328262551299[430] = 0;
   out_2044154328262551299[431] = 0;
   out_2044154328262551299[432] = 0;
   out_2044154328262551299[433] = 0;
   out_2044154328262551299[434] = 0;
   out_2044154328262551299[435] = 0;
   out_2044154328262551299[436] = 0;
   out_2044154328262551299[437] = 0;
   out_2044154328262551299[438] = 0;
   out_2044154328262551299[439] = 0;
   out_2044154328262551299[440] = 1;
}
void h_4(double *state, double *unused, double *out_6381527960034374853) {
   out_6381527960034374853[0] = state[10] + state[13];
   out_6381527960034374853[1] = state[11] + state[14];
   out_6381527960034374853[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3254663788366363972) {
   out_3254663788366363972[0] = 0;
   out_3254663788366363972[1] = 0;
   out_3254663788366363972[2] = 0;
   out_3254663788366363972[3] = 0;
   out_3254663788366363972[4] = 0;
   out_3254663788366363972[5] = 0;
   out_3254663788366363972[6] = 0;
   out_3254663788366363972[7] = 0;
   out_3254663788366363972[8] = 0;
   out_3254663788366363972[9] = 0;
   out_3254663788366363972[10] = 1;
   out_3254663788366363972[11] = 0;
   out_3254663788366363972[12] = 0;
   out_3254663788366363972[13] = 1;
   out_3254663788366363972[14] = 0;
   out_3254663788366363972[15] = 0;
   out_3254663788366363972[16] = 0;
   out_3254663788366363972[17] = 0;
   out_3254663788366363972[18] = 0;
   out_3254663788366363972[19] = 0;
   out_3254663788366363972[20] = 0;
   out_3254663788366363972[21] = 0;
   out_3254663788366363972[22] = 0;
   out_3254663788366363972[23] = 0;
   out_3254663788366363972[24] = 0;
   out_3254663788366363972[25] = 0;
   out_3254663788366363972[26] = 0;
   out_3254663788366363972[27] = 0;
   out_3254663788366363972[28] = 0;
   out_3254663788366363972[29] = 0;
   out_3254663788366363972[30] = 0;
   out_3254663788366363972[31] = 0;
   out_3254663788366363972[32] = 0;
   out_3254663788366363972[33] = 1;
   out_3254663788366363972[34] = 0;
   out_3254663788366363972[35] = 0;
   out_3254663788366363972[36] = 1;
   out_3254663788366363972[37] = 0;
   out_3254663788366363972[38] = 0;
   out_3254663788366363972[39] = 0;
   out_3254663788366363972[40] = 0;
   out_3254663788366363972[41] = 0;
   out_3254663788366363972[42] = 0;
   out_3254663788366363972[43] = 0;
   out_3254663788366363972[44] = 0;
   out_3254663788366363972[45] = 0;
   out_3254663788366363972[46] = 0;
   out_3254663788366363972[47] = 0;
   out_3254663788366363972[48] = 0;
   out_3254663788366363972[49] = 0;
   out_3254663788366363972[50] = 0;
   out_3254663788366363972[51] = 0;
   out_3254663788366363972[52] = 0;
   out_3254663788366363972[53] = 0;
   out_3254663788366363972[54] = 0;
   out_3254663788366363972[55] = 0;
   out_3254663788366363972[56] = 1;
   out_3254663788366363972[57] = 0;
   out_3254663788366363972[58] = 0;
   out_3254663788366363972[59] = 1;
   out_3254663788366363972[60] = 0;
   out_3254663788366363972[61] = 0;
   out_3254663788366363972[62] = 0;
   out_3254663788366363972[63] = 0;
   out_3254663788366363972[64] = 0;
   out_3254663788366363972[65] = 0;
}
void h_9(double *state, double *unused, double *out_6087523134021754077) {
   out_6087523134021754077[0] = state[10];
   out_6087523134021754077[1] = state[11];
   out_6087523134021754077[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4032555146898083498) {
   out_4032555146898083498[0] = 0;
   out_4032555146898083498[1] = 0;
   out_4032555146898083498[2] = 0;
   out_4032555146898083498[3] = 0;
   out_4032555146898083498[4] = 0;
   out_4032555146898083498[5] = 0;
   out_4032555146898083498[6] = 0;
   out_4032555146898083498[7] = 0;
   out_4032555146898083498[8] = 0;
   out_4032555146898083498[9] = 0;
   out_4032555146898083498[10] = 1;
   out_4032555146898083498[11] = 0;
   out_4032555146898083498[12] = 0;
   out_4032555146898083498[13] = 0;
   out_4032555146898083498[14] = 0;
   out_4032555146898083498[15] = 0;
   out_4032555146898083498[16] = 0;
   out_4032555146898083498[17] = 0;
   out_4032555146898083498[18] = 0;
   out_4032555146898083498[19] = 0;
   out_4032555146898083498[20] = 0;
   out_4032555146898083498[21] = 0;
   out_4032555146898083498[22] = 0;
   out_4032555146898083498[23] = 0;
   out_4032555146898083498[24] = 0;
   out_4032555146898083498[25] = 0;
   out_4032555146898083498[26] = 0;
   out_4032555146898083498[27] = 0;
   out_4032555146898083498[28] = 0;
   out_4032555146898083498[29] = 0;
   out_4032555146898083498[30] = 0;
   out_4032555146898083498[31] = 0;
   out_4032555146898083498[32] = 0;
   out_4032555146898083498[33] = 1;
   out_4032555146898083498[34] = 0;
   out_4032555146898083498[35] = 0;
   out_4032555146898083498[36] = 0;
   out_4032555146898083498[37] = 0;
   out_4032555146898083498[38] = 0;
   out_4032555146898083498[39] = 0;
   out_4032555146898083498[40] = 0;
   out_4032555146898083498[41] = 0;
   out_4032555146898083498[42] = 0;
   out_4032555146898083498[43] = 0;
   out_4032555146898083498[44] = 0;
   out_4032555146898083498[45] = 0;
   out_4032555146898083498[46] = 0;
   out_4032555146898083498[47] = 0;
   out_4032555146898083498[48] = 0;
   out_4032555146898083498[49] = 0;
   out_4032555146898083498[50] = 0;
   out_4032555146898083498[51] = 0;
   out_4032555146898083498[52] = 0;
   out_4032555146898083498[53] = 0;
   out_4032555146898083498[54] = 0;
   out_4032555146898083498[55] = 0;
   out_4032555146898083498[56] = 1;
   out_4032555146898083498[57] = 0;
   out_4032555146898083498[58] = 0;
   out_4032555146898083498[59] = 0;
   out_4032555146898083498[60] = 0;
   out_4032555146898083498[61] = 0;
   out_4032555146898083498[62] = 0;
   out_4032555146898083498[63] = 0;
   out_4032555146898083498[64] = 0;
   out_4032555146898083498[65] = 0;
}
void h_10(double *state, double *unused, double *out_714147442192906185) {
   out_714147442192906185[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_714147442192906185[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_714147442192906185[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6810311018540638913) {
   out_6810311018540638913[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6810311018540638913[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6810311018540638913[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6810311018540638913[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6810311018540638913[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6810311018540638913[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6810311018540638913[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6810311018540638913[7] = 0;
   out_6810311018540638913[8] = 0;
   out_6810311018540638913[9] = 0;
   out_6810311018540638913[10] = 0;
   out_6810311018540638913[11] = 0;
   out_6810311018540638913[12] = 0;
   out_6810311018540638913[13] = 0;
   out_6810311018540638913[14] = 0;
   out_6810311018540638913[15] = 0;
   out_6810311018540638913[16] = 1;
   out_6810311018540638913[17] = 0;
   out_6810311018540638913[18] = 0;
   out_6810311018540638913[19] = 1;
   out_6810311018540638913[20] = 0;
   out_6810311018540638913[21] = 0;
   out_6810311018540638913[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6810311018540638913[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6810311018540638913[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6810311018540638913[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6810311018540638913[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6810311018540638913[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6810311018540638913[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6810311018540638913[29] = 0;
   out_6810311018540638913[30] = 0;
   out_6810311018540638913[31] = 0;
   out_6810311018540638913[32] = 0;
   out_6810311018540638913[33] = 0;
   out_6810311018540638913[34] = 0;
   out_6810311018540638913[35] = 0;
   out_6810311018540638913[36] = 0;
   out_6810311018540638913[37] = 0;
   out_6810311018540638913[38] = 0;
   out_6810311018540638913[39] = 1;
   out_6810311018540638913[40] = 0;
   out_6810311018540638913[41] = 0;
   out_6810311018540638913[42] = 1;
   out_6810311018540638913[43] = 0;
   out_6810311018540638913[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6810311018540638913[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6810311018540638913[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6810311018540638913[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6810311018540638913[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6810311018540638913[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6810311018540638913[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6810311018540638913[51] = 0;
   out_6810311018540638913[52] = 0;
   out_6810311018540638913[53] = 0;
   out_6810311018540638913[54] = 0;
   out_6810311018540638913[55] = 0;
   out_6810311018540638913[56] = 0;
   out_6810311018540638913[57] = 0;
   out_6810311018540638913[58] = 0;
   out_6810311018540638913[59] = 0;
   out_6810311018540638913[60] = 0;
   out_6810311018540638913[61] = 0;
   out_6810311018540638913[62] = 1;
   out_6810311018540638913[63] = 0;
   out_6810311018540638913[64] = 0;
   out_6810311018540638913[65] = 1;
}
void h_12(double *state, double *unused, double *out_7544590538130567919) {
   out_7544590538130567919[0] = state[0];
   out_7544590538130567919[1] = state[1];
   out_7544590538130567919[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1764792619665597823) {
   out_1764792619665597823[0] = 1;
   out_1764792619665597823[1] = 0;
   out_1764792619665597823[2] = 0;
   out_1764792619665597823[3] = 0;
   out_1764792619665597823[4] = 0;
   out_1764792619665597823[5] = 0;
   out_1764792619665597823[6] = 0;
   out_1764792619665597823[7] = 0;
   out_1764792619665597823[8] = 0;
   out_1764792619665597823[9] = 0;
   out_1764792619665597823[10] = 0;
   out_1764792619665597823[11] = 0;
   out_1764792619665597823[12] = 0;
   out_1764792619665597823[13] = 0;
   out_1764792619665597823[14] = 0;
   out_1764792619665597823[15] = 0;
   out_1764792619665597823[16] = 0;
   out_1764792619665597823[17] = 0;
   out_1764792619665597823[18] = 0;
   out_1764792619665597823[19] = 0;
   out_1764792619665597823[20] = 0;
   out_1764792619665597823[21] = 0;
   out_1764792619665597823[22] = 0;
   out_1764792619665597823[23] = 1;
   out_1764792619665597823[24] = 0;
   out_1764792619665597823[25] = 0;
   out_1764792619665597823[26] = 0;
   out_1764792619665597823[27] = 0;
   out_1764792619665597823[28] = 0;
   out_1764792619665597823[29] = 0;
   out_1764792619665597823[30] = 0;
   out_1764792619665597823[31] = 0;
   out_1764792619665597823[32] = 0;
   out_1764792619665597823[33] = 0;
   out_1764792619665597823[34] = 0;
   out_1764792619665597823[35] = 0;
   out_1764792619665597823[36] = 0;
   out_1764792619665597823[37] = 0;
   out_1764792619665597823[38] = 0;
   out_1764792619665597823[39] = 0;
   out_1764792619665597823[40] = 0;
   out_1764792619665597823[41] = 0;
   out_1764792619665597823[42] = 0;
   out_1764792619665597823[43] = 0;
   out_1764792619665597823[44] = 0;
   out_1764792619665597823[45] = 0;
   out_1764792619665597823[46] = 1;
   out_1764792619665597823[47] = 0;
   out_1764792619665597823[48] = 0;
   out_1764792619665597823[49] = 0;
   out_1764792619665597823[50] = 0;
   out_1764792619665597823[51] = 0;
   out_1764792619665597823[52] = 0;
   out_1764792619665597823[53] = 0;
   out_1764792619665597823[54] = 0;
   out_1764792619665597823[55] = 0;
   out_1764792619665597823[56] = 0;
   out_1764792619665597823[57] = 0;
   out_1764792619665597823[58] = 0;
   out_1764792619665597823[59] = 0;
   out_1764792619665597823[60] = 0;
   out_1764792619665597823[61] = 0;
   out_1764792619665597823[62] = 0;
   out_1764792619665597823[63] = 0;
   out_1764792619665597823[64] = 0;
   out_1764792619665597823[65] = 0;
}
void h_35(double *state, double *unused, double *out_6601379568062878612) {
   out_6601379568062878612[0] = state[7];
   out_6601379568062878612[1] = state[8];
   out_6601379568062878612[2] = state[9];
}
void H_35(double *state, double *unused, double *out_111998269006243404) {
   out_111998269006243404[0] = 0;
   out_111998269006243404[1] = 0;
   out_111998269006243404[2] = 0;
   out_111998269006243404[3] = 0;
   out_111998269006243404[4] = 0;
   out_111998269006243404[5] = 0;
   out_111998269006243404[6] = 0;
   out_111998269006243404[7] = 1;
   out_111998269006243404[8] = 0;
   out_111998269006243404[9] = 0;
   out_111998269006243404[10] = 0;
   out_111998269006243404[11] = 0;
   out_111998269006243404[12] = 0;
   out_111998269006243404[13] = 0;
   out_111998269006243404[14] = 0;
   out_111998269006243404[15] = 0;
   out_111998269006243404[16] = 0;
   out_111998269006243404[17] = 0;
   out_111998269006243404[18] = 0;
   out_111998269006243404[19] = 0;
   out_111998269006243404[20] = 0;
   out_111998269006243404[21] = 0;
   out_111998269006243404[22] = 0;
   out_111998269006243404[23] = 0;
   out_111998269006243404[24] = 0;
   out_111998269006243404[25] = 0;
   out_111998269006243404[26] = 0;
   out_111998269006243404[27] = 0;
   out_111998269006243404[28] = 0;
   out_111998269006243404[29] = 0;
   out_111998269006243404[30] = 1;
   out_111998269006243404[31] = 0;
   out_111998269006243404[32] = 0;
   out_111998269006243404[33] = 0;
   out_111998269006243404[34] = 0;
   out_111998269006243404[35] = 0;
   out_111998269006243404[36] = 0;
   out_111998269006243404[37] = 0;
   out_111998269006243404[38] = 0;
   out_111998269006243404[39] = 0;
   out_111998269006243404[40] = 0;
   out_111998269006243404[41] = 0;
   out_111998269006243404[42] = 0;
   out_111998269006243404[43] = 0;
   out_111998269006243404[44] = 0;
   out_111998269006243404[45] = 0;
   out_111998269006243404[46] = 0;
   out_111998269006243404[47] = 0;
   out_111998269006243404[48] = 0;
   out_111998269006243404[49] = 0;
   out_111998269006243404[50] = 0;
   out_111998269006243404[51] = 0;
   out_111998269006243404[52] = 0;
   out_111998269006243404[53] = 1;
   out_111998269006243404[54] = 0;
   out_111998269006243404[55] = 0;
   out_111998269006243404[56] = 0;
   out_111998269006243404[57] = 0;
   out_111998269006243404[58] = 0;
   out_111998269006243404[59] = 0;
   out_111998269006243404[60] = 0;
   out_111998269006243404[61] = 0;
   out_111998269006243404[62] = 0;
   out_111998269006243404[63] = 0;
   out_111998269006243404[64] = 0;
   out_111998269006243404[65] = 0;
}
void h_32(double *state, double *unused, double *out_8203422326427527504) {
   out_8203422326427527504[0] = state[3];
   out_8203422326427527504[1] = state[4];
   out_8203422326427527504[2] = state[5];
   out_8203422326427527504[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4106700968665665666) {
   out_4106700968665665666[0] = 0;
   out_4106700968665665666[1] = 0;
   out_4106700968665665666[2] = 0;
   out_4106700968665665666[3] = 1;
   out_4106700968665665666[4] = 0;
   out_4106700968665665666[5] = 0;
   out_4106700968665665666[6] = 0;
   out_4106700968665665666[7] = 0;
   out_4106700968665665666[8] = 0;
   out_4106700968665665666[9] = 0;
   out_4106700968665665666[10] = 0;
   out_4106700968665665666[11] = 0;
   out_4106700968665665666[12] = 0;
   out_4106700968665665666[13] = 0;
   out_4106700968665665666[14] = 0;
   out_4106700968665665666[15] = 0;
   out_4106700968665665666[16] = 0;
   out_4106700968665665666[17] = 0;
   out_4106700968665665666[18] = 0;
   out_4106700968665665666[19] = 0;
   out_4106700968665665666[20] = 0;
   out_4106700968665665666[21] = 0;
   out_4106700968665665666[22] = 0;
   out_4106700968665665666[23] = 0;
   out_4106700968665665666[24] = 0;
   out_4106700968665665666[25] = 0;
   out_4106700968665665666[26] = 1;
   out_4106700968665665666[27] = 0;
   out_4106700968665665666[28] = 0;
   out_4106700968665665666[29] = 0;
   out_4106700968665665666[30] = 0;
   out_4106700968665665666[31] = 0;
   out_4106700968665665666[32] = 0;
   out_4106700968665665666[33] = 0;
   out_4106700968665665666[34] = 0;
   out_4106700968665665666[35] = 0;
   out_4106700968665665666[36] = 0;
   out_4106700968665665666[37] = 0;
   out_4106700968665665666[38] = 0;
   out_4106700968665665666[39] = 0;
   out_4106700968665665666[40] = 0;
   out_4106700968665665666[41] = 0;
   out_4106700968665665666[42] = 0;
   out_4106700968665665666[43] = 0;
   out_4106700968665665666[44] = 0;
   out_4106700968665665666[45] = 0;
   out_4106700968665665666[46] = 0;
   out_4106700968665665666[47] = 0;
   out_4106700968665665666[48] = 0;
   out_4106700968665665666[49] = 1;
   out_4106700968665665666[50] = 0;
   out_4106700968665665666[51] = 0;
   out_4106700968665665666[52] = 0;
   out_4106700968665665666[53] = 0;
   out_4106700968665665666[54] = 0;
   out_4106700968665665666[55] = 0;
   out_4106700968665665666[56] = 0;
   out_4106700968665665666[57] = 0;
   out_4106700968665665666[58] = 0;
   out_4106700968665665666[59] = 0;
   out_4106700968665665666[60] = 0;
   out_4106700968665665666[61] = 0;
   out_4106700968665665666[62] = 0;
   out_4106700968665665666[63] = 0;
   out_4106700968665665666[64] = 0;
   out_4106700968665665666[65] = 0;
   out_4106700968665665666[66] = 0;
   out_4106700968665665666[67] = 0;
   out_4106700968665665666[68] = 0;
   out_4106700968665665666[69] = 0;
   out_4106700968665665666[70] = 0;
   out_4106700968665665666[71] = 0;
   out_4106700968665665666[72] = 1;
   out_4106700968665665666[73] = 0;
   out_4106700968665665666[74] = 0;
   out_4106700968665665666[75] = 0;
   out_4106700968665665666[76] = 0;
   out_4106700968665665666[77] = 0;
   out_4106700968665665666[78] = 0;
   out_4106700968665665666[79] = 0;
   out_4106700968665665666[80] = 0;
   out_4106700968665665666[81] = 0;
   out_4106700968665665666[82] = 0;
   out_4106700968665665666[83] = 0;
   out_4106700968665665666[84] = 0;
   out_4106700968665665666[85] = 0;
   out_4106700968665665666[86] = 0;
   out_4106700968665665666[87] = 0;
}
void h_13(double *state, double *unused, double *out_5722082133525248597) {
   out_5722082133525248597[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5722082133525248597[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5722082133525248597[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6210674030172184359) {
   out_6210674030172184359[0] = 0;
   out_6210674030172184359[1] = 0;
   out_6210674030172184359[2] = 0;
   out_6210674030172184359[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6210674030172184359[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6210674030172184359[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6210674030172184359[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6210674030172184359[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6210674030172184359[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6210674030172184359[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6210674030172184359[10] = 0;
   out_6210674030172184359[11] = 0;
   out_6210674030172184359[12] = 0;
   out_6210674030172184359[13] = 0;
   out_6210674030172184359[14] = 0;
   out_6210674030172184359[15] = 0;
   out_6210674030172184359[16] = 0;
   out_6210674030172184359[17] = 0;
   out_6210674030172184359[18] = 0;
   out_6210674030172184359[19] = 0;
   out_6210674030172184359[20] = 0;
   out_6210674030172184359[21] = 0;
   out_6210674030172184359[22] = 0;
   out_6210674030172184359[23] = 0;
   out_6210674030172184359[24] = 0;
   out_6210674030172184359[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6210674030172184359[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6210674030172184359[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6210674030172184359[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6210674030172184359[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6210674030172184359[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6210674030172184359[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6210674030172184359[32] = 0;
   out_6210674030172184359[33] = 0;
   out_6210674030172184359[34] = 0;
   out_6210674030172184359[35] = 0;
   out_6210674030172184359[36] = 0;
   out_6210674030172184359[37] = 0;
   out_6210674030172184359[38] = 0;
   out_6210674030172184359[39] = 0;
   out_6210674030172184359[40] = 0;
   out_6210674030172184359[41] = 0;
   out_6210674030172184359[42] = 0;
   out_6210674030172184359[43] = 0;
   out_6210674030172184359[44] = 0;
   out_6210674030172184359[45] = 0;
   out_6210674030172184359[46] = 0;
   out_6210674030172184359[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6210674030172184359[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6210674030172184359[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6210674030172184359[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6210674030172184359[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6210674030172184359[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6210674030172184359[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6210674030172184359[54] = 0;
   out_6210674030172184359[55] = 0;
   out_6210674030172184359[56] = 0;
   out_6210674030172184359[57] = 0;
   out_6210674030172184359[58] = 0;
   out_6210674030172184359[59] = 0;
   out_6210674030172184359[60] = 0;
   out_6210674030172184359[61] = 0;
   out_6210674030172184359[62] = 0;
   out_6210674030172184359[63] = 0;
   out_6210674030172184359[64] = 0;
   out_6210674030172184359[65] = 0;
}
void h_14(double *state, double *unused, double *out_6087523134021754077) {
   out_6087523134021754077[0] = state[10];
   out_6087523134021754077[1] = state[11];
   out_6087523134021754077[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4032555146898083498) {
   out_4032555146898083498[0] = 0;
   out_4032555146898083498[1] = 0;
   out_4032555146898083498[2] = 0;
   out_4032555146898083498[3] = 0;
   out_4032555146898083498[4] = 0;
   out_4032555146898083498[5] = 0;
   out_4032555146898083498[6] = 0;
   out_4032555146898083498[7] = 0;
   out_4032555146898083498[8] = 0;
   out_4032555146898083498[9] = 0;
   out_4032555146898083498[10] = 1;
   out_4032555146898083498[11] = 0;
   out_4032555146898083498[12] = 0;
   out_4032555146898083498[13] = 0;
   out_4032555146898083498[14] = 0;
   out_4032555146898083498[15] = 0;
   out_4032555146898083498[16] = 0;
   out_4032555146898083498[17] = 0;
   out_4032555146898083498[18] = 0;
   out_4032555146898083498[19] = 0;
   out_4032555146898083498[20] = 0;
   out_4032555146898083498[21] = 0;
   out_4032555146898083498[22] = 0;
   out_4032555146898083498[23] = 0;
   out_4032555146898083498[24] = 0;
   out_4032555146898083498[25] = 0;
   out_4032555146898083498[26] = 0;
   out_4032555146898083498[27] = 0;
   out_4032555146898083498[28] = 0;
   out_4032555146898083498[29] = 0;
   out_4032555146898083498[30] = 0;
   out_4032555146898083498[31] = 0;
   out_4032555146898083498[32] = 0;
   out_4032555146898083498[33] = 1;
   out_4032555146898083498[34] = 0;
   out_4032555146898083498[35] = 0;
   out_4032555146898083498[36] = 0;
   out_4032555146898083498[37] = 0;
   out_4032555146898083498[38] = 0;
   out_4032555146898083498[39] = 0;
   out_4032555146898083498[40] = 0;
   out_4032555146898083498[41] = 0;
   out_4032555146898083498[42] = 0;
   out_4032555146898083498[43] = 0;
   out_4032555146898083498[44] = 0;
   out_4032555146898083498[45] = 0;
   out_4032555146898083498[46] = 0;
   out_4032555146898083498[47] = 0;
   out_4032555146898083498[48] = 0;
   out_4032555146898083498[49] = 0;
   out_4032555146898083498[50] = 0;
   out_4032555146898083498[51] = 0;
   out_4032555146898083498[52] = 0;
   out_4032555146898083498[53] = 0;
   out_4032555146898083498[54] = 0;
   out_4032555146898083498[55] = 0;
   out_4032555146898083498[56] = 1;
   out_4032555146898083498[57] = 0;
   out_4032555146898083498[58] = 0;
   out_4032555146898083498[59] = 0;
   out_4032555146898083498[60] = 0;
   out_4032555146898083498[61] = 0;
   out_4032555146898083498[62] = 0;
   out_4032555146898083498[63] = 0;
   out_4032555146898083498[64] = 0;
   out_4032555146898083498[65] = 0;
}
void h_33(double *state, double *unused, double *out_3303067358654379799) {
   out_3303067358654379799[0] = state[16];
   out_3303067358654379799[1] = state[17];
   out_3303067358654379799[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3262555273645101008) {
   out_3262555273645101008[0] = 0;
   out_3262555273645101008[1] = 0;
   out_3262555273645101008[2] = 0;
   out_3262555273645101008[3] = 0;
   out_3262555273645101008[4] = 0;
   out_3262555273645101008[5] = 0;
   out_3262555273645101008[6] = 0;
   out_3262555273645101008[7] = 0;
   out_3262555273645101008[8] = 0;
   out_3262555273645101008[9] = 0;
   out_3262555273645101008[10] = 0;
   out_3262555273645101008[11] = 0;
   out_3262555273645101008[12] = 0;
   out_3262555273645101008[13] = 0;
   out_3262555273645101008[14] = 0;
   out_3262555273645101008[15] = 0;
   out_3262555273645101008[16] = 1;
   out_3262555273645101008[17] = 0;
   out_3262555273645101008[18] = 0;
   out_3262555273645101008[19] = 0;
   out_3262555273645101008[20] = 0;
   out_3262555273645101008[21] = 0;
   out_3262555273645101008[22] = 0;
   out_3262555273645101008[23] = 0;
   out_3262555273645101008[24] = 0;
   out_3262555273645101008[25] = 0;
   out_3262555273645101008[26] = 0;
   out_3262555273645101008[27] = 0;
   out_3262555273645101008[28] = 0;
   out_3262555273645101008[29] = 0;
   out_3262555273645101008[30] = 0;
   out_3262555273645101008[31] = 0;
   out_3262555273645101008[32] = 0;
   out_3262555273645101008[33] = 0;
   out_3262555273645101008[34] = 0;
   out_3262555273645101008[35] = 0;
   out_3262555273645101008[36] = 0;
   out_3262555273645101008[37] = 0;
   out_3262555273645101008[38] = 0;
   out_3262555273645101008[39] = 1;
   out_3262555273645101008[40] = 0;
   out_3262555273645101008[41] = 0;
   out_3262555273645101008[42] = 0;
   out_3262555273645101008[43] = 0;
   out_3262555273645101008[44] = 0;
   out_3262555273645101008[45] = 0;
   out_3262555273645101008[46] = 0;
   out_3262555273645101008[47] = 0;
   out_3262555273645101008[48] = 0;
   out_3262555273645101008[49] = 0;
   out_3262555273645101008[50] = 0;
   out_3262555273645101008[51] = 0;
   out_3262555273645101008[52] = 0;
   out_3262555273645101008[53] = 0;
   out_3262555273645101008[54] = 0;
   out_3262555273645101008[55] = 0;
   out_3262555273645101008[56] = 0;
   out_3262555273645101008[57] = 0;
   out_3262555273645101008[58] = 0;
   out_3262555273645101008[59] = 0;
   out_3262555273645101008[60] = 0;
   out_3262555273645101008[61] = 0;
   out_3262555273645101008[62] = 1;
   out_3262555273645101008[63] = 0;
   out_3262555273645101008[64] = 0;
   out_3262555273645101008[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8807178854572675291) {
  H(in_vec, out_8807178854572675291);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5382157062787930162) {
  err_fun(nom_x, delta_x, out_5382157062787930162);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6604846359355455733) {
  inv_err_fun(nom_x, true_x, out_6604846359355455733);
}
void live_H_mod_fun(double *state, double *out_7126146533478242279) {
  H_mod_fun(state, out_7126146533478242279);
}
void live_f_fun(double *state, double dt, double *out_4103440530608711215) {
  f_fun(state,  dt, out_4103440530608711215);
}
void live_F_fun(double *state, double dt, double *out_2044154328262551299) {
  F_fun(state,  dt, out_2044154328262551299);
}
void live_h_4(double *state, double *unused, double *out_6381527960034374853) {
  h_4(state, unused, out_6381527960034374853);
}
void live_H_4(double *state, double *unused, double *out_3254663788366363972) {
  H_4(state, unused, out_3254663788366363972);
}
void live_h_9(double *state, double *unused, double *out_6087523134021754077) {
  h_9(state, unused, out_6087523134021754077);
}
void live_H_9(double *state, double *unused, double *out_4032555146898083498) {
  H_9(state, unused, out_4032555146898083498);
}
void live_h_10(double *state, double *unused, double *out_714147442192906185) {
  h_10(state, unused, out_714147442192906185);
}
void live_H_10(double *state, double *unused, double *out_6810311018540638913) {
  H_10(state, unused, out_6810311018540638913);
}
void live_h_12(double *state, double *unused, double *out_7544590538130567919) {
  h_12(state, unused, out_7544590538130567919);
}
void live_H_12(double *state, double *unused, double *out_1764792619665597823) {
  H_12(state, unused, out_1764792619665597823);
}
void live_h_35(double *state, double *unused, double *out_6601379568062878612) {
  h_35(state, unused, out_6601379568062878612);
}
void live_H_35(double *state, double *unused, double *out_111998269006243404) {
  H_35(state, unused, out_111998269006243404);
}
void live_h_32(double *state, double *unused, double *out_8203422326427527504) {
  h_32(state, unused, out_8203422326427527504);
}
void live_H_32(double *state, double *unused, double *out_4106700968665665666) {
  H_32(state, unused, out_4106700968665665666);
}
void live_h_13(double *state, double *unused, double *out_5722082133525248597) {
  h_13(state, unused, out_5722082133525248597);
}
void live_H_13(double *state, double *unused, double *out_6210674030172184359) {
  H_13(state, unused, out_6210674030172184359);
}
void live_h_14(double *state, double *unused, double *out_6087523134021754077) {
  h_14(state, unused, out_6087523134021754077);
}
void live_H_14(double *state, double *unused, double *out_4032555146898083498) {
  H_14(state, unused, out_4032555146898083498);
}
void live_h_33(double *state, double *unused, double *out_3303067358654379799) {
  h_33(state, unused, out_3303067358654379799);
}
void live_H_33(double *state, double *unused, double *out_3262555273645101008) {
  H_33(state, unused, out_3262555273645101008);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
