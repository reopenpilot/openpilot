#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6455076677763199504) {
   out_6455076677763199504[0] = 0;
   out_6455076677763199504[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6455076677763199504[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6455076677763199504[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6455076677763199504[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6455076677763199504[5] = -sin(in_vec[1]);
   out_6455076677763199504[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6455076677763199504[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6455076677763199504[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6455076677763199504[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6455076677763199504[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6455076677763199504[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6455076677763199504[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6455076677763199504[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6455076677763199504[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6455076677763199504[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6455076677763199504[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6455076677763199504[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7050545546963144415) {
   out_7050545546963144415[0] = delta_x[0] + nom_x[0];
   out_7050545546963144415[1] = delta_x[1] + nom_x[1];
   out_7050545546963144415[2] = delta_x[2] + nom_x[2];
   out_7050545546963144415[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7050545546963144415[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7050545546963144415[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7050545546963144415[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7050545546963144415[7] = delta_x[6] + nom_x[7];
   out_7050545546963144415[8] = delta_x[7] + nom_x[8];
   out_7050545546963144415[9] = delta_x[8] + nom_x[9];
   out_7050545546963144415[10] = delta_x[9] + nom_x[10];
   out_7050545546963144415[11] = delta_x[10] + nom_x[11];
   out_7050545546963144415[12] = delta_x[11] + nom_x[12];
   out_7050545546963144415[13] = delta_x[12] + nom_x[13];
   out_7050545546963144415[14] = delta_x[13] + nom_x[14];
   out_7050545546963144415[15] = delta_x[14] + nom_x[15];
   out_7050545546963144415[16] = delta_x[15] + nom_x[16];
   out_7050545546963144415[17] = delta_x[16] + nom_x[17];
   out_7050545546963144415[18] = delta_x[17] + nom_x[18];
   out_7050545546963144415[19] = delta_x[18] + nom_x[19];
   out_7050545546963144415[20] = delta_x[19] + nom_x[20];
   out_7050545546963144415[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1121531341084927829) {
   out_1121531341084927829[0] = -nom_x[0] + true_x[0];
   out_1121531341084927829[1] = -nom_x[1] + true_x[1];
   out_1121531341084927829[2] = -nom_x[2] + true_x[2];
   out_1121531341084927829[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1121531341084927829[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1121531341084927829[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1121531341084927829[6] = -nom_x[7] + true_x[7];
   out_1121531341084927829[7] = -nom_x[8] + true_x[8];
   out_1121531341084927829[8] = -nom_x[9] + true_x[9];
   out_1121531341084927829[9] = -nom_x[10] + true_x[10];
   out_1121531341084927829[10] = -nom_x[11] + true_x[11];
   out_1121531341084927829[11] = -nom_x[12] + true_x[12];
   out_1121531341084927829[12] = -nom_x[13] + true_x[13];
   out_1121531341084927829[13] = -nom_x[14] + true_x[14];
   out_1121531341084927829[14] = -nom_x[15] + true_x[15];
   out_1121531341084927829[15] = -nom_x[16] + true_x[16];
   out_1121531341084927829[16] = -nom_x[17] + true_x[17];
   out_1121531341084927829[17] = -nom_x[18] + true_x[18];
   out_1121531341084927829[18] = -nom_x[19] + true_x[19];
   out_1121531341084927829[19] = -nom_x[20] + true_x[20];
   out_1121531341084927829[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8544592091623789486) {
   out_8544592091623789486[0] = 1.0;
   out_8544592091623789486[1] = 0;
   out_8544592091623789486[2] = 0;
   out_8544592091623789486[3] = 0;
   out_8544592091623789486[4] = 0;
   out_8544592091623789486[5] = 0;
   out_8544592091623789486[6] = 0;
   out_8544592091623789486[7] = 0;
   out_8544592091623789486[8] = 0;
   out_8544592091623789486[9] = 0;
   out_8544592091623789486[10] = 0;
   out_8544592091623789486[11] = 0;
   out_8544592091623789486[12] = 0;
   out_8544592091623789486[13] = 0;
   out_8544592091623789486[14] = 0;
   out_8544592091623789486[15] = 0;
   out_8544592091623789486[16] = 0;
   out_8544592091623789486[17] = 0;
   out_8544592091623789486[18] = 0;
   out_8544592091623789486[19] = 0;
   out_8544592091623789486[20] = 0;
   out_8544592091623789486[21] = 0;
   out_8544592091623789486[22] = 1.0;
   out_8544592091623789486[23] = 0;
   out_8544592091623789486[24] = 0;
   out_8544592091623789486[25] = 0;
   out_8544592091623789486[26] = 0;
   out_8544592091623789486[27] = 0;
   out_8544592091623789486[28] = 0;
   out_8544592091623789486[29] = 0;
   out_8544592091623789486[30] = 0;
   out_8544592091623789486[31] = 0;
   out_8544592091623789486[32] = 0;
   out_8544592091623789486[33] = 0;
   out_8544592091623789486[34] = 0;
   out_8544592091623789486[35] = 0;
   out_8544592091623789486[36] = 0;
   out_8544592091623789486[37] = 0;
   out_8544592091623789486[38] = 0;
   out_8544592091623789486[39] = 0;
   out_8544592091623789486[40] = 0;
   out_8544592091623789486[41] = 0;
   out_8544592091623789486[42] = 0;
   out_8544592091623789486[43] = 0;
   out_8544592091623789486[44] = 1.0;
   out_8544592091623789486[45] = 0;
   out_8544592091623789486[46] = 0;
   out_8544592091623789486[47] = 0;
   out_8544592091623789486[48] = 0;
   out_8544592091623789486[49] = 0;
   out_8544592091623789486[50] = 0;
   out_8544592091623789486[51] = 0;
   out_8544592091623789486[52] = 0;
   out_8544592091623789486[53] = 0;
   out_8544592091623789486[54] = 0;
   out_8544592091623789486[55] = 0;
   out_8544592091623789486[56] = 0;
   out_8544592091623789486[57] = 0;
   out_8544592091623789486[58] = 0;
   out_8544592091623789486[59] = 0;
   out_8544592091623789486[60] = 0;
   out_8544592091623789486[61] = 0;
   out_8544592091623789486[62] = 0;
   out_8544592091623789486[63] = 0;
   out_8544592091623789486[64] = 0;
   out_8544592091623789486[65] = 0;
   out_8544592091623789486[66] = -0.5*state[4];
   out_8544592091623789486[67] = -0.5*state[5];
   out_8544592091623789486[68] = -0.5*state[6];
   out_8544592091623789486[69] = 0;
   out_8544592091623789486[70] = 0;
   out_8544592091623789486[71] = 0;
   out_8544592091623789486[72] = 0;
   out_8544592091623789486[73] = 0;
   out_8544592091623789486[74] = 0;
   out_8544592091623789486[75] = 0;
   out_8544592091623789486[76] = 0;
   out_8544592091623789486[77] = 0;
   out_8544592091623789486[78] = 0;
   out_8544592091623789486[79] = 0;
   out_8544592091623789486[80] = 0;
   out_8544592091623789486[81] = 0;
   out_8544592091623789486[82] = 0;
   out_8544592091623789486[83] = 0;
   out_8544592091623789486[84] = 0;
   out_8544592091623789486[85] = 0;
   out_8544592091623789486[86] = 0;
   out_8544592091623789486[87] = 0.5*state[3];
   out_8544592091623789486[88] = 0.5*state[6];
   out_8544592091623789486[89] = -0.5*state[5];
   out_8544592091623789486[90] = 0;
   out_8544592091623789486[91] = 0;
   out_8544592091623789486[92] = 0;
   out_8544592091623789486[93] = 0;
   out_8544592091623789486[94] = 0;
   out_8544592091623789486[95] = 0;
   out_8544592091623789486[96] = 0;
   out_8544592091623789486[97] = 0;
   out_8544592091623789486[98] = 0;
   out_8544592091623789486[99] = 0;
   out_8544592091623789486[100] = 0;
   out_8544592091623789486[101] = 0;
   out_8544592091623789486[102] = 0;
   out_8544592091623789486[103] = 0;
   out_8544592091623789486[104] = 0;
   out_8544592091623789486[105] = 0;
   out_8544592091623789486[106] = 0;
   out_8544592091623789486[107] = 0;
   out_8544592091623789486[108] = -0.5*state[6];
   out_8544592091623789486[109] = 0.5*state[3];
   out_8544592091623789486[110] = 0.5*state[4];
   out_8544592091623789486[111] = 0;
   out_8544592091623789486[112] = 0;
   out_8544592091623789486[113] = 0;
   out_8544592091623789486[114] = 0;
   out_8544592091623789486[115] = 0;
   out_8544592091623789486[116] = 0;
   out_8544592091623789486[117] = 0;
   out_8544592091623789486[118] = 0;
   out_8544592091623789486[119] = 0;
   out_8544592091623789486[120] = 0;
   out_8544592091623789486[121] = 0;
   out_8544592091623789486[122] = 0;
   out_8544592091623789486[123] = 0;
   out_8544592091623789486[124] = 0;
   out_8544592091623789486[125] = 0;
   out_8544592091623789486[126] = 0;
   out_8544592091623789486[127] = 0;
   out_8544592091623789486[128] = 0;
   out_8544592091623789486[129] = 0.5*state[5];
   out_8544592091623789486[130] = -0.5*state[4];
   out_8544592091623789486[131] = 0.5*state[3];
   out_8544592091623789486[132] = 0;
   out_8544592091623789486[133] = 0;
   out_8544592091623789486[134] = 0;
   out_8544592091623789486[135] = 0;
   out_8544592091623789486[136] = 0;
   out_8544592091623789486[137] = 0;
   out_8544592091623789486[138] = 0;
   out_8544592091623789486[139] = 0;
   out_8544592091623789486[140] = 0;
   out_8544592091623789486[141] = 0;
   out_8544592091623789486[142] = 0;
   out_8544592091623789486[143] = 0;
   out_8544592091623789486[144] = 0;
   out_8544592091623789486[145] = 0;
   out_8544592091623789486[146] = 0;
   out_8544592091623789486[147] = 0;
   out_8544592091623789486[148] = 0;
   out_8544592091623789486[149] = 0;
   out_8544592091623789486[150] = 0;
   out_8544592091623789486[151] = 0;
   out_8544592091623789486[152] = 0;
   out_8544592091623789486[153] = 1.0;
   out_8544592091623789486[154] = 0;
   out_8544592091623789486[155] = 0;
   out_8544592091623789486[156] = 0;
   out_8544592091623789486[157] = 0;
   out_8544592091623789486[158] = 0;
   out_8544592091623789486[159] = 0;
   out_8544592091623789486[160] = 0;
   out_8544592091623789486[161] = 0;
   out_8544592091623789486[162] = 0;
   out_8544592091623789486[163] = 0;
   out_8544592091623789486[164] = 0;
   out_8544592091623789486[165] = 0;
   out_8544592091623789486[166] = 0;
   out_8544592091623789486[167] = 0;
   out_8544592091623789486[168] = 0;
   out_8544592091623789486[169] = 0;
   out_8544592091623789486[170] = 0;
   out_8544592091623789486[171] = 0;
   out_8544592091623789486[172] = 0;
   out_8544592091623789486[173] = 0;
   out_8544592091623789486[174] = 0;
   out_8544592091623789486[175] = 1.0;
   out_8544592091623789486[176] = 0;
   out_8544592091623789486[177] = 0;
   out_8544592091623789486[178] = 0;
   out_8544592091623789486[179] = 0;
   out_8544592091623789486[180] = 0;
   out_8544592091623789486[181] = 0;
   out_8544592091623789486[182] = 0;
   out_8544592091623789486[183] = 0;
   out_8544592091623789486[184] = 0;
   out_8544592091623789486[185] = 0;
   out_8544592091623789486[186] = 0;
   out_8544592091623789486[187] = 0;
   out_8544592091623789486[188] = 0;
   out_8544592091623789486[189] = 0;
   out_8544592091623789486[190] = 0;
   out_8544592091623789486[191] = 0;
   out_8544592091623789486[192] = 0;
   out_8544592091623789486[193] = 0;
   out_8544592091623789486[194] = 0;
   out_8544592091623789486[195] = 0;
   out_8544592091623789486[196] = 0;
   out_8544592091623789486[197] = 1.0;
   out_8544592091623789486[198] = 0;
   out_8544592091623789486[199] = 0;
   out_8544592091623789486[200] = 0;
   out_8544592091623789486[201] = 0;
   out_8544592091623789486[202] = 0;
   out_8544592091623789486[203] = 0;
   out_8544592091623789486[204] = 0;
   out_8544592091623789486[205] = 0;
   out_8544592091623789486[206] = 0;
   out_8544592091623789486[207] = 0;
   out_8544592091623789486[208] = 0;
   out_8544592091623789486[209] = 0;
   out_8544592091623789486[210] = 0;
   out_8544592091623789486[211] = 0;
   out_8544592091623789486[212] = 0;
   out_8544592091623789486[213] = 0;
   out_8544592091623789486[214] = 0;
   out_8544592091623789486[215] = 0;
   out_8544592091623789486[216] = 0;
   out_8544592091623789486[217] = 0;
   out_8544592091623789486[218] = 0;
   out_8544592091623789486[219] = 1.0;
   out_8544592091623789486[220] = 0;
   out_8544592091623789486[221] = 0;
   out_8544592091623789486[222] = 0;
   out_8544592091623789486[223] = 0;
   out_8544592091623789486[224] = 0;
   out_8544592091623789486[225] = 0;
   out_8544592091623789486[226] = 0;
   out_8544592091623789486[227] = 0;
   out_8544592091623789486[228] = 0;
   out_8544592091623789486[229] = 0;
   out_8544592091623789486[230] = 0;
   out_8544592091623789486[231] = 0;
   out_8544592091623789486[232] = 0;
   out_8544592091623789486[233] = 0;
   out_8544592091623789486[234] = 0;
   out_8544592091623789486[235] = 0;
   out_8544592091623789486[236] = 0;
   out_8544592091623789486[237] = 0;
   out_8544592091623789486[238] = 0;
   out_8544592091623789486[239] = 0;
   out_8544592091623789486[240] = 0;
   out_8544592091623789486[241] = 1.0;
   out_8544592091623789486[242] = 0;
   out_8544592091623789486[243] = 0;
   out_8544592091623789486[244] = 0;
   out_8544592091623789486[245] = 0;
   out_8544592091623789486[246] = 0;
   out_8544592091623789486[247] = 0;
   out_8544592091623789486[248] = 0;
   out_8544592091623789486[249] = 0;
   out_8544592091623789486[250] = 0;
   out_8544592091623789486[251] = 0;
   out_8544592091623789486[252] = 0;
   out_8544592091623789486[253] = 0;
   out_8544592091623789486[254] = 0;
   out_8544592091623789486[255] = 0;
   out_8544592091623789486[256] = 0;
   out_8544592091623789486[257] = 0;
   out_8544592091623789486[258] = 0;
   out_8544592091623789486[259] = 0;
   out_8544592091623789486[260] = 0;
   out_8544592091623789486[261] = 0;
   out_8544592091623789486[262] = 0;
   out_8544592091623789486[263] = 1.0;
   out_8544592091623789486[264] = 0;
   out_8544592091623789486[265] = 0;
   out_8544592091623789486[266] = 0;
   out_8544592091623789486[267] = 0;
   out_8544592091623789486[268] = 0;
   out_8544592091623789486[269] = 0;
   out_8544592091623789486[270] = 0;
   out_8544592091623789486[271] = 0;
   out_8544592091623789486[272] = 0;
   out_8544592091623789486[273] = 0;
   out_8544592091623789486[274] = 0;
   out_8544592091623789486[275] = 0;
   out_8544592091623789486[276] = 0;
   out_8544592091623789486[277] = 0;
   out_8544592091623789486[278] = 0;
   out_8544592091623789486[279] = 0;
   out_8544592091623789486[280] = 0;
   out_8544592091623789486[281] = 0;
   out_8544592091623789486[282] = 0;
   out_8544592091623789486[283] = 0;
   out_8544592091623789486[284] = 0;
   out_8544592091623789486[285] = 1.0;
   out_8544592091623789486[286] = 0;
   out_8544592091623789486[287] = 0;
   out_8544592091623789486[288] = 0;
   out_8544592091623789486[289] = 0;
   out_8544592091623789486[290] = 0;
   out_8544592091623789486[291] = 0;
   out_8544592091623789486[292] = 0;
   out_8544592091623789486[293] = 0;
   out_8544592091623789486[294] = 0;
   out_8544592091623789486[295] = 0;
   out_8544592091623789486[296] = 0;
   out_8544592091623789486[297] = 0;
   out_8544592091623789486[298] = 0;
   out_8544592091623789486[299] = 0;
   out_8544592091623789486[300] = 0;
   out_8544592091623789486[301] = 0;
   out_8544592091623789486[302] = 0;
   out_8544592091623789486[303] = 0;
   out_8544592091623789486[304] = 0;
   out_8544592091623789486[305] = 0;
   out_8544592091623789486[306] = 0;
   out_8544592091623789486[307] = 1.0;
   out_8544592091623789486[308] = 0;
   out_8544592091623789486[309] = 0;
   out_8544592091623789486[310] = 0;
   out_8544592091623789486[311] = 0;
   out_8544592091623789486[312] = 0;
   out_8544592091623789486[313] = 0;
   out_8544592091623789486[314] = 0;
   out_8544592091623789486[315] = 0;
   out_8544592091623789486[316] = 0;
   out_8544592091623789486[317] = 0;
   out_8544592091623789486[318] = 0;
   out_8544592091623789486[319] = 0;
   out_8544592091623789486[320] = 0;
   out_8544592091623789486[321] = 0;
   out_8544592091623789486[322] = 0;
   out_8544592091623789486[323] = 0;
   out_8544592091623789486[324] = 0;
   out_8544592091623789486[325] = 0;
   out_8544592091623789486[326] = 0;
   out_8544592091623789486[327] = 0;
   out_8544592091623789486[328] = 0;
   out_8544592091623789486[329] = 1.0;
   out_8544592091623789486[330] = 0;
   out_8544592091623789486[331] = 0;
   out_8544592091623789486[332] = 0;
   out_8544592091623789486[333] = 0;
   out_8544592091623789486[334] = 0;
   out_8544592091623789486[335] = 0;
   out_8544592091623789486[336] = 0;
   out_8544592091623789486[337] = 0;
   out_8544592091623789486[338] = 0;
   out_8544592091623789486[339] = 0;
   out_8544592091623789486[340] = 0;
   out_8544592091623789486[341] = 0;
   out_8544592091623789486[342] = 0;
   out_8544592091623789486[343] = 0;
   out_8544592091623789486[344] = 0;
   out_8544592091623789486[345] = 0;
   out_8544592091623789486[346] = 0;
   out_8544592091623789486[347] = 0;
   out_8544592091623789486[348] = 0;
   out_8544592091623789486[349] = 0;
   out_8544592091623789486[350] = 0;
   out_8544592091623789486[351] = 1.0;
   out_8544592091623789486[352] = 0;
   out_8544592091623789486[353] = 0;
   out_8544592091623789486[354] = 0;
   out_8544592091623789486[355] = 0;
   out_8544592091623789486[356] = 0;
   out_8544592091623789486[357] = 0;
   out_8544592091623789486[358] = 0;
   out_8544592091623789486[359] = 0;
   out_8544592091623789486[360] = 0;
   out_8544592091623789486[361] = 0;
   out_8544592091623789486[362] = 0;
   out_8544592091623789486[363] = 0;
   out_8544592091623789486[364] = 0;
   out_8544592091623789486[365] = 0;
   out_8544592091623789486[366] = 0;
   out_8544592091623789486[367] = 0;
   out_8544592091623789486[368] = 0;
   out_8544592091623789486[369] = 0;
   out_8544592091623789486[370] = 0;
   out_8544592091623789486[371] = 0;
   out_8544592091623789486[372] = 0;
   out_8544592091623789486[373] = 1.0;
   out_8544592091623789486[374] = 0;
   out_8544592091623789486[375] = 0;
   out_8544592091623789486[376] = 0;
   out_8544592091623789486[377] = 0;
   out_8544592091623789486[378] = 0;
   out_8544592091623789486[379] = 0;
   out_8544592091623789486[380] = 0;
   out_8544592091623789486[381] = 0;
   out_8544592091623789486[382] = 0;
   out_8544592091623789486[383] = 0;
   out_8544592091623789486[384] = 0;
   out_8544592091623789486[385] = 0;
   out_8544592091623789486[386] = 0;
   out_8544592091623789486[387] = 0;
   out_8544592091623789486[388] = 0;
   out_8544592091623789486[389] = 0;
   out_8544592091623789486[390] = 0;
   out_8544592091623789486[391] = 0;
   out_8544592091623789486[392] = 0;
   out_8544592091623789486[393] = 0;
   out_8544592091623789486[394] = 0;
   out_8544592091623789486[395] = 1.0;
   out_8544592091623789486[396] = 0;
   out_8544592091623789486[397] = 0;
   out_8544592091623789486[398] = 0;
   out_8544592091623789486[399] = 0;
   out_8544592091623789486[400] = 0;
   out_8544592091623789486[401] = 0;
   out_8544592091623789486[402] = 0;
   out_8544592091623789486[403] = 0;
   out_8544592091623789486[404] = 0;
   out_8544592091623789486[405] = 0;
   out_8544592091623789486[406] = 0;
   out_8544592091623789486[407] = 0;
   out_8544592091623789486[408] = 0;
   out_8544592091623789486[409] = 0;
   out_8544592091623789486[410] = 0;
   out_8544592091623789486[411] = 0;
   out_8544592091623789486[412] = 0;
   out_8544592091623789486[413] = 0;
   out_8544592091623789486[414] = 0;
   out_8544592091623789486[415] = 0;
   out_8544592091623789486[416] = 0;
   out_8544592091623789486[417] = 1.0;
   out_8544592091623789486[418] = 0;
   out_8544592091623789486[419] = 0;
   out_8544592091623789486[420] = 0;
   out_8544592091623789486[421] = 0;
   out_8544592091623789486[422] = 0;
   out_8544592091623789486[423] = 0;
   out_8544592091623789486[424] = 0;
   out_8544592091623789486[425] = 0;
   out_8544592091623789486[426] = 0;
   out_8544592091623789486[427] = 0;
   out_8544592091623789486[428] = 0;
   out_8544592091623789486[429] = 0;
   out_8544592091623789486[430] = 0;
   out_8544592091623789486[431] = 0;
   out_8544592091623789486[432] = 0;
   out_8544592091623789486[433] = 0;
   out_8544592091623789486[434] = 0;
   out_8544592091623789486[435] = 0;
   out_8544592091623789486[436] = 0;
   out_8544592091623789486[437] = 0;
   out_8544592091623789486[438] = 0;
   out_8544592091623789486[439] = 1.0;
   out_8544592091623789486[440] = 0;
   out_8544592091623789486[441] = 0;
   out_8544592091623789486[442] = 0;
   out_8544592091623789486[443] = 0;
   out_8544592091623789486[444] = 0;
   out_8544592091623789486[445] = 0;
   out_8544592091623789486[446] = 0;
   out_8544592091623789486[447] = 0;
   out_8544592091623789486[448] = 0;
   out_8544592091623789486[449] = 0;
   out_8544592091623789486[450] = 0;
   out_8544592091623789486[451] = 0;
   out_8544592091623789486[452] = 0;
   out_8544592091623789486[453] = 0;
   out_8544592091623789486[454] = 0;
   out_8544592091623789486[455] = 0;
   out_8544592091623789486[456] = 0;
   out_8544592091623789486[457] = 0;
   out_8544592091623789486[458] = 0;
   out_8544592091623789486[459] = 0;
   out_8544592091623789486[460] = 0;
   out_8544592091623789486[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2494934106159862300) {
   out_2494934106159862300[0] = dt*state[7] + state[0];
   out_2494934106159862300[1] = dt*state[8] + state[1];
   out_2494934106159862300[2] = dt*state[9] + state[2];
   out_2494934106159862300[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2494934106159862300[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2494934106159862300[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2494934106159862300[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2494934106159862300[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2494934106159862300[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2494934106159862300[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2494934106159862300[10] = state[10];
   out_2494934106159862300[11] = state[11];
   out_2494934106159862300[12] = state[12];
   out_2494934106159862300[13] = state[13];
   out_2494934106159862300[14] = state[14];
   out_2494934106159862300[15] = state[15];
   out_2494934106159862300[16] = state[16];
   out_2494934106159862300[17] = state[17];
   out_2494934106159862300[18] = state[18];
   out_2494934106159862300[19] = state[19];
   out_2494934106159862300[20] = state[20];
   out_2494934106159862300[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4294123518058200829) {
   out_4294123518058200829[0] = 1;
   out_4294123518058200829[1] = 0;
   out_4294123518058200829[2] = 0;
   out_4294123518058200829[3] = 0;
   out_4294123518058200829[4] = 0;
   out_4294123518058200829[5] = 0;
   out_4294123518058200829[6] = dt;
   out_4294123518058200829[7] = 0;
   out_4294123518058200829[8] = 0;
   out_4294123518058200829[9] = 0;
   out_4294123518058200829[10] = 0;
   out_4294123518058200829[11] = 0;
   out_4294123518058200829[12] = 0;
   out_4294123518058200829[13] = 0;
   out_4294123518058200829[14] = 0;
   out_4294123518058200829[15] = 0;
   out_4294123518058200829[16] = 0;
   out_4294123518058200829[17] = 0;
   out_4294123518058200829[18] = 0;
   out_4294123518058200829[19] = 0;
   out_4294123518058200829[20] = 0;
   out_4294123518058200829[21] = 0;
   out_4294123518058200829[22] = 1;
   out_4294123518058200829[23] = 0;
   out_4294123518058200829[24] = 0;
   out_4294123518058200829[25] = 0;
   out_4294123518058200829[26] = 0;
   out_4294123518058200829[27] = 0;
   out_4294123518058200829[28] = dt;
   out_4294123518058200829[29] = 0;
   out_4294123518058200829[30] = 0;
   out_4294123518058200829[31] = 0;
   out_4294123518058200829[32] = 0;
   out_4294123518058200829[33] = 0;
   out_4294123518058200829[34] = 0;
   out_4294123518058200829[35] = 0;
   out_4294123518058200829[36] = 0;
   out_4294123518058200829[37] = 0;
   out_4294123518058200829[38] = 0;
   out_4294123518058200829[39] = 0;
   out_4294123518058200829[40] = 0;
   out_4294123518058200829[41] = 0;
   out_4294123518058200829[42] = 0;
   out_4294123518058200829[43] = 0;
   out_4294123518058200829[44] = 1;
   out_4294123518058200829[45] = 0;
   out_4294123518058200829[46] = 0;
   out_4294123518058200829[47] = 0;
   out_4294123518058200829[48] = 0;
   out_4294123518058200829[49] = 0;
   out_4294123518058200829[50] = dt;
   out_4294123518058200829[51] = 0;
   out_4294123518058200829[52] = 0;
   out_4294123518058200829[53] = 0;
   out_4294123518058200829[54] = 0;
   out_4294123518058200829[55] = 0;
   out_4294123518058200829[56] = 0;
   out_4294123518058200829[57] = 0;
   out_4294123518058200829[58] = 0;
   out_4294123518058200829[59] = 0;
   out_4294123518058200829[60] = 0;
   out_4294123518058200829[61] = 0;
   out_4294123518058200829[62] = 0;
   out_4294123518058200829[63] = 0;
   out_4294123518058200829[64] = 0;
   out_4294123518058200829[65] = 0;
   out_4294123518058200829[66] = 1;
   out_4294123518058200829[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4294123518058200829[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4294123518058200829[69] = 0;
   out_4294123518058200829[70] = 0;
   out_4294123518058200829[71] = 0;
   out_4294123518058200829[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4294123518058200829[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4294123518058200829[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4294123518058200829[75] = 0;
   out_4294123518058200829[76] = 0;
   out_4294123518058200829[77] = 0;
   out_4294123518058200829[78] = 0;
   out_4294123518058200829[79] = 0;
   out_4294123518058200829[80] = 0;
   out_4294123518058200829[81] = 0;
   out_4294123518058200829[82] = 0;
   out_4294123518058200829[83] = 0;
   out_4294123518058200829[84] = 0;
   out_4294123518058200829[85] = 0;
   out_4294123518058200829[86] = 0;
   out_4294123518058200829[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4294123518058200829[88] = 1;
   out_4294123518058200829[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4294123518058200829[90] = 0;
   out_4294123518058200829[91] = 0;
   out_4294123518058200829[92] = 0;
   out_4294123518058200829[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4294123518058200829[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4294123518058200829[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4294123518058200829[96] = 0;
   out_4294123518058200829[97] = 0;
   out_4294123518058200829[98] = 0;
   out_4294123518058200829[99] = 0;
   out_4294123518058200829[100] = 0;
   out_4294123518058200829[101] = 0;
   out_4294123518058200829[102] = 0;
   out_4294123518058200829[103] = 0;
   out_4294123518058200829[104] = 0;
   out_4294123518058200829[105] = 0;
   out_4294123518058200829[106] = 0;
   out_4294123518058200829[107] = 0;
   out_4294123518058200829[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4294123518058200829[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4294123518058200829[110] = 1;
   out_4294123518058200829[111] = 0;
   out_4294123518058200829[112] = 0;
   out_4294123518058200829[113] = 0;
   out_4294123518058200829[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4294123518058200829[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4294123518058200829[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4294123518058200829[117] = 0;
   out_4294123518058200829[118] = 0;
   out_4294123518058200829[119] = 0;
   out_4294123518058200829[120] = 0;
   out_4294123518058200829[121] = 0;
   out_4294123518058200829[122] = 0;
   out_4294123518058200829[123] = 0;
   out_4294123518058200829[124] = 0;
   out_4294123518058200829[125] = 0;
   out_4294123518058200829[126] = 0;
   out_4294123518058200829[127] = 0;
   out_4294123518058200829[128] = 0;
   out_4294123518058200829[129] = 0;
   out_4294123518058200829[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4294123518058200829[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4294123518058200829[132] = 1;
   out_4294123518058200829[133] = 0;
   out_4294123518058200829[134] = 0;
   out_4294123518058200829[135] = 0;
   out_4294123518058200829[136] = 0;
   out_4294123518058200829[137] = 0;
   out_4294123518058200829[138] = 0;
   out_4294123518058200829[139] = 0;
   out_4294123518058200829[140] = 0;
   out_4294123518058200829[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4294123518058200829[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4294123518058200829[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4294123518058200829[144] = 0;
   out_4294123518058200829[145] = 0;
   out_4294123518058200829[146] = 0;
   out_4294123518058200829[147] = 0;
   out_4294123518058200829[148] = 0;
   out_4294123518058200829[149] = 0;
   out_4294123518058200829[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4294123518058200829[151] = 0;
   out_4294123518058200829[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4294123518058200829[153] = 0;
   out_4294123518058200829[154] = 1;
   out_4294123518058200829[155] = 0;
   out_4294123518058200829[156] = 0;
   out_4294123518058200829[157] = 0;
   out_4294123518058200829[158] = 0;
   out_4294123518058200829[159] = 0;
   out_4294123518058200829[160] = 0;
   out_4294123518058200829[161] = 0;
   out_4294123518058200829[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4294123518058200829[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4294123518058200829[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4294123518058200829[165] = 0;
   out_4294123518058200829[166] = 0;
   out_4294123518058200829[167] = 0;
   out_4294123518058200829[168] = 0;
   out_4294123518058200829[169] = 0;
   out_4294123518058200829[170] = 0;
   out_4294123518058200829[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4294123518058200829[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4294123518058200829[173] = 0;
   out_4294123518058200829[174] = 0;
   out_4294123518058200829[175] = 0;
   out_4294123518058200829[176] = 1;
   out_4294123518058200829[177] = 0;
   out_4294123518058200829[178] = 0;
   out_4294123518058200829[179] = 0;
   out_4294123518058200829[180] = 0;
   out_4294123518058200829[181] = 0;
   out_4294123518058200829[182] = 0;
   out_4294123518058200829[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4294123518058200829[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4294123518058200829[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4294123518058200829[186] = 0;
   out_4294123518058200829[187] = 0;
   out_4294123518058200829[188] = 0;
   out_4294123518058200829[189] = 0;
   out_4294123518058200829[190] = 0;
   out_4294123518058200829[191] = 0;
   out_4294123518058200829[192] = 0;
   out_4294123518058200829[193] = 0;
   out_4294123518058200829[194] = 0;
   out_4294123518058200829[195] = 0;
   out_4294123518058200829[196] = 0;
   out_4294123518058200829[197] = 0;
   out_4294123518058200829[198] = 1;
   out_4294123518058200829[199] = 0;
   out_4294123518058200829[200] = 0;
   out_4294123518058200829[201] = 0;
   out_4294123518058200829[202] = 0;
   out_4294123518058200829[203] = 0;
   out_4294123518058200829[204] = 0;
   out_4294123518058200829[205] = 0;
   out_4294123518058200829[206] = 0;
   out_4294123518058200829[207] = 0;
   out_4294123518058200829[208] = 0;
   out_4294123518058200829[209] = 0;
   out_4294123518058200829[210] = 0;
   out_4294123518058200829[211] = 0;
   out_4294123518058200829[212] = 0;
   out_4294123518058200829[213] = 0;
   out_4294123518058200829[214] = 0;
   out_4294123518058200829[215] = 0;
   out_4294123518058200829[216] = 0;
   out_4294123518058200829[217] = 0;
   out_4294123518058200829[218] = 0;
   out_4294123518058200829[219] = 0;
   out_4294123518058200829[220] = 1;
   out_4294123518058200829[221] = 0;
   out_4294123518058200829[222] = 0;
   out_4294123518058200829[223] = 0;
   out_4294123518058200829[224] = 0;
   out_4294123518058200829[225] = 0;
   out_4294123518058200829[226] = 0;
   out_4294123518058200829[227] = 0;
   out_4294123518058200829[228] = 0;
   out_4294123518058200829[229] = 0;
   out_4294123518058200829[230] = 0;
   out_4294123518058200829[231] = 0;
   out_4294123518058200829[232] = 0;
   out_4294123518058200829[233] = 0;
   out_4294123518058200829[234] = 0;
   out_4294123518058200829[235] = 0;
   out_4294123518058200829[236] = 0;
   out_4294123518058200829[237] = 0;
   out_4294123518058200829[238] = 0;
   out_4294123518058200829[239] = 0;
   out_4294123518058200829[240] = 0;
   out_4294123518058200829[241] = 0;
   out_4294123518058200829[242] = 1;
   out_4294123518058200829[243] = 0;
   out_4294123518058200829[244] = 0;
   out_4294123518058200829[245] = 0;
   out_4294123518058200829[246] = 0;
   out_4294123518058200829[247] = 0;
   out_4294123518058200829[248] = 0;
   out_4294123518058200829[249] = 0;
   out_4294123518058200829[250] = 0;
   out_4294123518058200829[251] = 0;
   out_4294123518058200829[252] = 0;
   out_4294123518058200829[253] = 0;
   out_4294123518058200829[254] = 0;
   out_4294123518058200829[255] = 0;
   out_4294123518058200829[256] = 0;
   out_4294123518058200829[257] = 0;
   out_4294123518058200829[258] = 0;
   out_4294123518058200829[259] = 0;
   out_4294123518058200829[260] = 0;
   out_4294123518058200829[261] = 0;
   out_4294123518058200829[262] = 0;
   out_4294123518058200829[263] = 0;
   out_4294123518058200829[264] = 1;
   out_4294123518058200829[265] = 0;
   out_4294123518058200829[266] = 0;
   out_4294123518058200829[267] = 0;
   out_4294123518058200829[268] = 0;
   out_4294123518058200829[269] = 0;
   out_4294123518058200829[270] = 0;
   out_4294123518058200829[271] = 0;
   out_4294123518058200829[272] = 0;
   out_4294123518058200829[273] = 0;
   out_4294123518058200829[274] = 0;
   out_4294123518058200829[275] = 0;
   out_4294123518058200829[276] = 0;
   out_4294123518058200829[277] = 0;
   out_4294123518058200829[278] = 0;
   out_4294123518058200829[279] = 0;
   out_4294123518058200829[280] = 0;
   out_4294123518058200829[281] = 0;
   out_4294123518058200829[282] = 0;
   out_4294123518058200829[283] = 0;
   out_4294123518058200829[284] = 0;
   out_4294123518058200829[285] = 0;
   out_4294123518058200829[286] = 1;
   out_4294123518058200829[287] = 0;
   out_4294123518058200829[288] = 0;
   out_4294123518058200829[289] = 0;
   out_4294123518058200829[290] = 0;
   out_4294123518058200829[291] = 0;
   out_4294123518058200829[292] = 0;
   out_4294123518058200829[293] = 0;
   out_4294123518058200829[294] = 0;
   out_4294123518058200829[295] = 0;
   out_4294123518058200829[296] = 0;
   out_4294123518058200829[297] = 0;
   out_4294123518058200829[298] = 0;
   out_4294123518058200829[299] = 0;
   out_4294123518058200829[300] = 0;
   out_4294123518058200829[301] = 0;
   out_4294123518058200829[302] = 0;
   out_4294123518058200829[303] = 0;
   out_4294123518058200829[304] = 0;
   out_4294123518058200829[305] = 0;
   out_4294123518058200829[306] = 0;
   out_4294123518058200829[307] = 0;
   out_4294123518058200829[308] = 1;
   out_4294123518058200829[309] = 0;
   out_4294123518058200829[310] = 0;
   out_4294123518058200829[311] = 0;
   out_4294123518058200829[312] = 0;
   out_4294123518058200829[313] = 0;
   out_4294123518058200829[314] = 0;
   out_4294123518058200829[315] = 0;
   out_4294123518058200829[316] = 0;
   out_4294123518058200829[317] = 0;
   out_4294123518058200829[318] = 0;
   out_4294123518058200829[319] = 0;
   out_4294123518058200829[320] = 0;
   out_4294123518058200829[321] = 0;
   out_4294123518058200829[322] = 0;
   out_4294123518058200829[323] = 0;
   out_4294123518058200829[324] = 0;
   out_4294123518058200829[325] = 0;
   out_4294123518058200829[326] = 0;
   out_4294123518058200829[327] = 0;
   out_4294123518058200829[328] = 0;
   out_4294123518058200829[329] = 0;
   out_4294123518058200829[330] = 1;
   out_4294123518058200829[331] = 0;
   out_4294123518058200829[332] = 0;
   out_4294123518058200829[333] = 0;
   out_4294123518058200829[334] = 0;
   out_4294123518058200829[335] = 0;
   out_4294123518058200829[336] = 0;
   out_4294123518058200829[337] = 0;
   out_4294123518058200829[338] = 0;
   out_4294123518058200829[339] = 0;
   out_4294123518058200829[340] = 0;
   out_4294123518058200829[341] = 0;
   out_4294123518058200829[342] = 0;
   out_4294123518058200829[343] = 0;
   out_4294123518058200829[344] = 0;
   out_4294123518058200829[345] = 0;
   out_4294123518058200829[346] = 0;
   out_4294123518058200829[347] = 0;
   out_4294123518058200829[348] = 0;
   out_4294123518058200829[349] = 0;
   out_4294123518058200829[350] = 0;
   out_4294123518058200829[351] = 0;
   out_4294123518058200829[352] = 1;
   out_4294123518058200829[353] = 0;
   out_4294123518058200829[354] = 0;
   out_4294123518058200829[355] = 0;
   out_4294123518058200829[356] = 0;
   out_4294123518058200829[357] = 0;
   out_4294123518058200829[358] = 0;
   out_4294123518058200829[359] = 0;
   out_4294123518058200829[360] = 0;
   out_4294123518058200829[361] = 0;
   out_4294123518058200829[362] = 0;
   out_4294123518058200829[363] = 0;
   out_4294123518058200829[364] = 0;
   out_4294123518058200829[365] = 0;
   out_4294123518058200829[366] = 0;
   out_4294123518058200829[367] = 0;
   out_4294123518058200829[368] = 0;
   out_4294123518058200829[369] = 0;
   out_4294123518058200829[370] = 0;
   out_4294123518058200829[371] = 0;
   out_4294123518058200829[372] = 0;
   out_4294123518058200829[373] = 0;
   out_4294123518058200829[374] = 1;
   out_4294123518058200829[375] = 0;
   out_4294123518058200829[376] = 0;
   out_4294123518058200829[377] = 0;
   out_4294123518058200829[378] = 0;
   out_4294123518058200829[379] = 0;
   out_4294123518058200829[380] = 0;
   out_4294123518058200829[381] = 0;
   out_4294123518058200829[382] = 0;
   out_4294123518058200829[383] = 0;
   out_4294123518058200829[384] = 0;
   out_4294123518058200829[385] = 0;
   out_4294123518058200829[386] = 0;
   out_4294123518058200829[387] = 0;
   out_4294123518058200829[388] = 0;
   out_4294123518058200829[389] = 0;
   out_4294123518058200829[390] = 0;
   out_4294123518058200829[391] = 0;
   out_4294123518058200829[392] = 0;
   out_4294123518058200829[393] = 0;
   out_4294123518058200829[394] = 0;
   out_4294123518058200829[395] = 0;
   out_4294123518058200829[396] = 1;
   out_4294123518058200829[397] = 0;
   out_4294123518058200829[398] = 0;
   out_4294123518058200829[399] = 0;
   out_4294123518058200829[400] = 0;
   out_4294123518058200829[401] = 0;
   out_4294123518058200829[402] = 0;
   out_4294123518058200829[403] = 0;
   out_4294123518058200829[404] = 0;
   out_4294123518058200829[405] = 0;
   out_4294123518058200829[406] = 0;
   out_4294123518058200829[407] = 0;
   out_4294123518058200829[408] = 0;
   out_4294123518058200829[409] = 0;
   out_4294123518058200829[410] = 0;
   out_4294123518058200829[411] = 0;
   out_4294123518058200829[412] = 0;
   out_4294123518058200829[413] = 0;
   out_4294123518058200829[414] = 0;
   out_4294123518058200829[415] = 0;
   out_4294123518058200829[416] = 0;
   out_4294123518058200829[417] = 0;
   out_4294123518058200829[418] = 1;
   out_4294123518058200829[419] = 0;
   out_4294123518058200829[420] = 0;
   out_4294123518058200829[421] = 0;
   out_4294123518058200829[422] = 0;
   out_4294123518058200829[423] = 0;
   out_4294123518058200829[424] = 0;
   out_4294123518058200829[425] = 0;
   out_4294123518058200829[426] = 0;
   out_4294123518058200829[427] = 0;
   out_4294123518058200829[428] = 0;
   out_4294123518058200829[429] = 0;
   out_4294123518058200829[430] = 0;
   out_4294123518058200829[431] = 0;
   out_4294123518058200829[432] = 0;
   out_4294123518058200829[433] = 0;
   out_4294123518058200829[434] = 0;
   out_4294123518058200829[435] = 0;
   out_4294123518058200829[436] = 0;
   out_4294123518058200829[437] = 0;
   out_4294123518058200829[438] = 0;
   out_4294123518058200829[439] = 0;
   out_4294123518058200829[440] = 1;
}
void h_4(double *state, double *unused, double *out_3956943391514422677) {
   out_3956943391514422677[0] = state[10] + state[13];
   out_3956943391514422677[1] = state[11] + state[14];
   out_3956943391514422677[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5322137385568921788) {
   out_5322137385568921788[0] = 0;
   out_5322137385568921788[1] = 0;
   out_5322137385568921788[2] = 0;
   out_5322137385568921788[3] = 0;
   out_5322137385568921788[4] = 0;
   out_5322137385568921788[5] = 0;
   out_5322137385568921788[6] = 0;
   out_5322137385568921788[7] = 0;
   out_5322137385568921788[8] = 0;
   out_5322137385568921788[9] = 0;
   out_5322137385568921788[10] = 1;
   out_5322137385568921788[11] = 0;
   out_5322137385568921788[12] = 0;
   out_5322137385568921788[13] = 1;
   out_5322137385568921788[14] = 0;
   out_5322137385568921788[15] = 0;
   out_5322137385568921788[16] = 0;
   out_5322137385568921788[17] = 0;
   out_5322137385568921788[18] = 0;
   out_5322137385568921788[19] = 0;
   out_5322137385568921788[20] = 0;
   out_5322137385568921788[21] = 0;
   out_5322137385568921788[22] = 0;
   out_5322137385568921788[23] = 0;
   out_5322137385568921788[24] = 0;
   out_5322137385568921788[25] = 0;
   out_5322137385568921788[26] = 0;
   out_5322137385568921788[27] = 0;
   out_5322137385568921788[28] = 0;
   out_5322137385568921788[29] = 0;
   out_5322137385568921788[30] = 0;
   out_5322137385568921788[31] = 0;
   out_5322137385568921788[32] = 0;
   out_5322137385568921788[33] = 1;
   out_5322137385568921788[34] = 0;
   out_5322137385568921788[35] = 0;
   out_5322137385568921788[36] = 1;
   out_5322137385568921788[37] = 0;
   out_5322137385568921788[38] = 0;
   out_5322137385568921788[39] = 0;
   out_5322137385568921788[40] = 0;
   out_5322137385568921788[41] = 0;
   out_5322137385568921788[42] = 0;
   out_5322137385568921788[43] = 0;
   out_5322137385568921788[44] = 0;
   out_5322137385568921788[45] = 0;
   out_5322137385568921788[46] = 0;
   out_5322137385568921788[47] = 0;
   out_5322137385568921788[48] = 0;
   out_5322137385568921788[49] = 0;
   out_5322137385568921788[50] = 0;
   out_5322137385568921788[51] = 0;
   out_5322137385568921788[52] = 0;
   out_5322137385568921788[53] = 0;
   out_5322137385568921788[54] = 0;
   out_5322137385568921788[55] = 0;
   out_5322137385568921788[56] = 1;
   out_5322137385568921788[57] = 0;
   out_5322137385568921788[58] = 0;
   out_5322137385568921788[59] = 1;
   out_5322137385568921788[60] = 0;
   out_5322137385568921788[61] = 0;
   out_5322137385568921788[62] = 0;
   out_5322137385568921788[63] = 0;
   out_5322137385568921788[64] = 0;
   out_5322137385568921788[65] = 0;
}
void h_9(double *state, double *unused, double *out_2913057772910693926) {
   out_2913057772910693926[0] = state[10];
   out_2913057772910693926[1] = state[11];
   out_2913057772910693926[2] = state[12];
}
void H_9(double *state, double *unused, double *out_5837387752876182358) {
   out_5837387752876182358[0] = 0;
   out_5837387752876182358[1] = 0;
   out_5837387752876182358[2] = 0;
   out_5837387752876182358[3] = 0;
   out_5837387752876182358[4] = 0;
   out_5837387752876182358[5] = 0;
   out_5837387752876182358[6] = 0;
   out_5837387752876182358[7] = 0;
   out_5837387752876182358[8] = 0;
   out_5837387752876182358[9] = 0;
   out_5837387752876182358[10] = 1;
   out_5837387752876182358[11] = 0;
   out_5837387752876182358[12] = 0;
   out_5837387752876182358[13] = 0;
   out_5837387752876182358[14] = 0;
   out_5837387752876182358[15] = 0;
   out_5837387752876182358[16] = 0;
   out_5837387752876182358[17] = 0;
   out_5837387752876182358[18] = 0;
   out_5837387752876182358[19] = 0;
   out_5837387752876182358[20] = 0;
   out_5837387752876182358[21] = 0;
   out_5837387752876182358[22] = 0;
   out_5837387752876182358[23] = 0;
   out_5837387752876182358[24] = 0;
   out_5837387752876182358[25] = 0;
   out_5837387752876182358[26] = 0;
   out_5837387752876182358[27] = 0;
   out_5837387752876182358[28] = 0;
   out_5837387752876182358[29] = 0;
   out_5837387752876182358[30] = 0;
   out_5837387752876182358[31] = 0;
   out_5837387752876182358[32] = 0;
   out_5837387752876182358[33] = 1;
   out_5837387752876182358[34] = 0;
   out_5837387752876182358[35] = 0;
   out_5837387752876182358[36] = 0;
   out_5837387752876182358[37] = 0;
   out_5837387752876182358[38] = 0;
   out_5837387752876182358[39] = 0;
   out_5837387752876182358[40] = 0;
   out_5837387752876182358[41] = 0;
   out_5837387752876182358[42] = 0;
   out_5837387752876182358[43] = 0;
   out_5837387752876182358[44] = 0;
   out_5837387752876182358[45] = 0;
   out_5837387752876182358[46] = 0;
   out_5837387752876182358[47] = 0;
   out_5837387752876182358[48] = 0;
   out_5837387752876182358[49] = 0;
   out_5837387752876182358[50] = 0;
   out_5837387752876182358[51] = 0;
   out_5837387752876182358[52] = 0;
   out_5837387752876182358[53] = 0;
   out_5837387752876182358[54] = 0;
   out_5837387752876182358[55] = 0;
   out_5837387752876182358[56] = 1;
   out_5837387752876182358[57] = 0;
   out_5837387752876182358[58] = 0;
   out_5837387752876182358[59] = 0;
   out_5837387752876182358[60] = 0;
   out_5837387752876182358[61] = 0;
   out_5837387752876182358[62] = 0;
   out_5837387752876182358[63] = 0;
   out_5837387752876182358[64] = 0;
   out_5837387752876182358[65] = 0;
}
void h_10(double *state, double *unused, double *out_6941176182098969496) {
   out_6941176182098969496[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_6941176182098969496[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_6941176182098969496[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4385018446927318034) {
   out_4385018446927318034[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4385018446927318034[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4385018446927318034[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4385018446927318034[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4385018446927318034[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4385018446927318034[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4385018446927318034[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4385018446927318034[7] = 0;
   out_4385018446927318034[8] = 0;
   out_4385018446927318034[9] = 0;
   out_4385018446927318034[10] = 0;
   out_4385018446927318034[11] = 0;
   out_4385018446927318034[12] = 0;
   out_4385018446927318034[13] = 0;
   out_4385018446927318034[14] = 0;
   out_4385018446927318034[15] = 0;
   out_4385018446927318034[16] = 1;
   out_4385018446927318034[17] = 0;
   out_4385018446927318034[18] = 0;
   out_4385018446927318034[19] = 1;
   out_4385018446927318034[20] = 0;
   out_4385018446927318034[21] = 0;
   out_4385018446927318034[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4385018446927318034[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4385018446927318034[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4385018446927318034[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4385018446927318034[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4385018446927318034[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4385018446927318034[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4385018446927318034[29] = 0;
   out_4385018446927318034[30] = 0;
   out_4385018446927318034[31] = 0;
   out_4385018446927318034[32] = 0;
   out_4385018446927318034[33] = 0;
   out_4385018446927318034[34] = 0;
   out_4385018446927318034[35] = 0;
   out_4385018446927318034[36] = 0;
   out_4385018446927318034[37] = 0;
   out_4385018446927318034[38] = 0;
   out_4385018446927318034[39] = 1;
   out_4385018446927318034[40] = 0;
   out_4385018446927318034[41] = 0;
   out_4385018446927318034[42] = 1;
   out_4385018446927318034[43] = 0;
   out_4385018446927318034[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4385018446927318034[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4385018446927318034[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4385018446927318034[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4385018446927318034[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4385018446927318034[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4385018446927318034[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4385018446927318034[51] = 0;
   out_4385018446927318034[52] = 0;
   out_4385018446927318034[53] = 0;
   out_4385018446927318034[54] = 0;
   out_4385018446927318034[55] = 0;
   out_4385018446927318034[56] = 0;
   out_4385018446927318034[57] = 0;
   out_4385018446927318034[58] = 0;
   out_4385018446927318034[59] = 0;
   out_4385018446927318034[60] = 0;
   out_4385018446927318034[61] = 0;
   out_4385018446927318034[62] = 1;
   out_4385018446927318034[63] = 0;
   out_4385018446927318034[64] = 0;
   out_4385018446927318034[65] = 1;
}
void h_12(double *state, double *unused, double *out_7295955447707868030) {
   out_7295955447707868030[0] = state[0];
   out_7295955447707868030[1] = state[1];
   out_7295955447707868030[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1059120991473811208) {
   out_1059120991473811208[0] = 1;
   out_1059120991473811208[1] = 0;
   out_1059120991473811208[2] = 0;
   out_1059120991473811208[3] = 0;
   out_1059120991473811208[4] = 0;
   out_1059120991473811208[5] = 0;
   out_1059120991473811208[6] = 0;
   out_1059120991473811208[7] = 0;
   out_1059120991473811208[8] = 0;
   out_1059120991473811208[9] = 0;
   out_1059120991473811208[10] = 0;
   out_1059120991473811208[11] = 0;
   out_1059120991473811208[12] = 0;
   out_1059120991473811208[13] = 0;
   out_1059120991473811208[14] = 0;
   out_1059120991473811208[15] = 0;
   out_1059120991473811208[16] = 0;
   out_1059120991473811208[17] = 0;
   out_1059120991473811208[18] = 0;
   out_1059120991473811208[19] = 0;
   out_1059120991473811208[20] = 0;
   out_1059120991473811208[21] = 0;
   out_1059120991473811208[22] = 0;
   out_1059120991473811208[23] = 1;
   out_1059120991473811208[24] = 0;
   out_1059120991473811208[25] = 0;
   out_1059120991473811208[26] = 0;
   out_1059120991473811208[27] = 0;
   out_1059120991473811208[28] = 0;
   out_1059120991473811208[29] = 0;
   out_1059120991473811208[30] = 0;
   out_1059120991473811208[31] = 0;
   out_1059120991473811208[32] = 0;
   out_1059120991473811208[33] = 0;
   out_1059120991473811208[34] = 0;
   out_1059120991473811208[35] = 0;
   out_1059120991473811208[36] = 0;
   out_1059120991473811208[37] = 0;
   out_1059120991473811208[38] = 0;
   out_1059120991473811208[39] = 0;
   out_1059120991473811208[40] = 0;
   out_1059120991473811208[41] = 0;
   out_1059120991473811208[42] = 0;
   out_1059120991473811208[43] = 0;
   out_1059120991473811208[44] = 0;
   out_1059120991473811208[45] = 0;
   out_1059120991473811208[46] = 1;
   out_1059120991473811208[47] = 0;
   out_1059120991473811208[48] = 0;
   out_1059120991473811208[49] = 0;
   out_1059120991473811208[50] = 0;
   out_1059120991473811208[51] = 0;
   out_1059120991473811208[52] = 0;
   out_1059120991473811208[53] = 0;
   out_1059120991473811208[54] = 0;
   out_1059120991473811208[55] = 0;
   out_1059120991473811208[56] = 0;
   out_1059120991473811208[57] = 0;
   out_1059120991473811208[58] = 0;
   out_1059120991473811208[59] = 0;
   out_1059120991473811208[60] = 0;
   out_1059120991473811208[61] = 0;
   out_1059120991473811208[62] = 0;
   out_1059120991473811208[63] = 0;
   out_1059120991473811208[64] = 0;
   out_1059120991473811208[65] = 0;
}
void h_35(double *state, double *unused, double *out_6084632724891230166) {
   out_6084632724891230166[0] = state[7];
   out_6084632724891230166[1] = state[8];
   out_6084632724891230166[2] = state[9];
}
void H_35(double *state, double *unused, double *out_5359587247783654324) {
   out_5359587247783654324[0] = 0;
   out_5359587247783654324[1] = 0;
   out_5359587247783654324[2] = 0;
   out_5359587247783654324[3] = 0;
   out_5359587247783654324[4] = 0;
   out_5359587247783654324[5] = 0;
   out_5359587247783654324[6] = 0;
   out_5359587247783654324[7] = 1;
   out_5359587247783654324[8] = 0;
   out_5359587247783654324[9] = 0;
   out_5359587247783654324[10] = 0;
   out_5359587247783654324[11] = 0;
   out_5359587247783654324[12] = 0;
   out_5359587247783654324[13] = 0;
   out_5359587247783654324[14] = 0;
   out_5359587247783654324[15] = 0;
   out_5359587247783654324[16] = 0;
   out_5359587247783654324[17] = 0;
   out_5359587247783654324[18] = 0;
   out_5359587247783654324[19] = 0;
   out_5359587247783654324[20] = 0;
   out_5359587247783654324[21] = 0;
   out_5359587247783654324[22] = 0;
   out_5359587247783654324[23] = 0;
   out_5359587247783654324[24] = 0;
   out_5359587247783654324[25] = 0;
   out_5359587247783654324[26] = 0;
   out_5359587247783654324[27] = 0;
   out_5359587247783654324[28] = 0;
   out_5359587247783654324[29] = 0;
   out_5359587247783654324[30] = 1;
   out_5359587247783654324[31] = 0;
   out_5359587247783654324[32] = 0;
   out_5359587247783654324[33] = 0;
   out_5359587247783654324[34] = 0;
   out_5359587247783654324[35] = 0;
   out_5359587247783654324[36] = 0;
   out_5359587247783654324[37] = 0;
   out_5359587247783654324[38] = 0;
   out_5359587247783654324[39] = 0;
   out_5359587247783654324[40] = 0;
   out_5359587247783654324[41] = 0;
   out_5359587247783654324[42] = 0;
   out_5359587247783654324[43] = 0;
   out_5359587247783654324[44] = 0;
   out_5359587247783654324[45] = 0;
   out_5359587247783654324[46] = 0;
   out_5359587247783654324[47] = 0;
   out_5359587247783654324[48] = 0;
   out_5359587247783654324[49] = 0;
   out_5359587247783654324[50] = 0;
   out_5359587247783654324[51] = 0;
   out_5359587247783654324[52] = 0;
   out_5359587247783654324[53] = 1;
   out_5359587247783654324[54] = 0;
   out_5359587247783654324[55] = 0;
   out_5359587247783654324[56] = 0;
   out_5359587247783654324[57] = 0;
   out_5359587247783654324[58] = 0;
   out_5359587247783654324[59] = 0;
   out_5359587247783654324[60] = 0;
   out_5359587247783654324[61] = 0;
   out_5359587247783654324[62] = 0;
   out_5359587247783654324[63] = 0;
   out_5359587247783654324[64] = 0;
   out_5359587247783654324[65] = 0;
}
void h_32(double *state, double *unused, double *out_3706609794204376617) {
   out_3706609794204376617[0] = state[3];
   out_3706609794204376617[1] = state[4];
   out_3706609794204376617[2] = state[5];
   out_3706609794204376617[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4470100205269620094) {
   out_4470100205269620094[0] = 0;
   out_4470100205269620094[1] = 0;
   out_4470100205269620094[2] = 0;
   out_4470100205269620094[3] = 1;
   out_4470100205269620094[4] = 0;
   out_4470100205269620094[5] = 0;
   out_4470100205269620094[6] = 0;
   out_4470100205269620094[7] = 0;
   out_4470100205269620094[8] = 0;
   out_4470100205269620094[9] = 0;
   out_4470100205269620094[10] = 0;
   out_4470100205269620094[11] = 0;
   out_4470100205269620094[12] = 0;
   out_4470100205269620094[13] = 0;
   out_4470100205269620094[14] = 0;
   out_4470100205269620094[15] = 0;
   out_4470100205269620094[16] = 0;
   out_4470100205269620094[17] = 0;
   out_4470100205269620094[18] = 0;
   out_4470100205269620094[19] = 0;
   out_4470100205269620094[20] = 0;
   out_4470100205269620094[21] = 0;
   out_4470100205269620094[22] = 0;
   out_4470100205269620094[23] = 0;
   out_4470100205269620094[24] = 0;
   out_4470100205269620094[25] = 0;
   out_4470100205269620094[26] = 1;
   out_4470100205269620094[27] = 0;
   out_4470100205269620094[28] = 0;
   out_4470100205269620094[29] = 0;
   out_4470100205269620094[30] = 0;
   out_4470100205269620094[31] = 0;
   out_4470100205269620094[32] = 0;
   out_4470100205269620094[33] = 0;
   out_4470100205269620094[34] = 0;
   out_4470100205269620094[35] = 0;
   out_4470100205269620094[36] = 0;
   out_4470100205269620094[37] = 0;
   out_4470100205269620094[38] = 0;
   out_4470100205269620094[39] = 0;
   out_4470100205269620094[40] = 0;
   out_4470100205269620094[41] = 0;
   out_4470100205269620094[42] = 0;
   out_4470100205269620094[43] = 0;
   out_4470100205269620094[44] = 0;
   out_4470100205269620094[45] = 0;
   out_4470100205269620094[46] = 0;
   out_4470100205269620094[47] = 0;
   out_4470100205269620094[48] = 0;
   out_4470100205269620094[49] = 1;
   out_4470100205269620094[50] = 0;
   out_4470100205269620094[51] = 0;
   out_4470100205269620094[52] = 0;
   out_4470100205269620094[53] = 0;
   out_4470100205269620094[54] = 0;
   out_4470100205269620094[55] = 0;
   out_4470100205269620094[56] = 0;
   out_4470100205269620094[57] = 0;
   out_4470100205269620094[58] = 0;
   out_4470100205269620094[59] = 0;
   out_4470100205269620094[60] = 0;
   out_4470100205269620094[61] = 0;
   out_4470100205269620094[62] = 0;
   out_4470100205269620094[63] = 0;
   out_4470100205269620094[64] = 0;
   out_4470100205269620094[65] = 0;
   out_4470100205269620094[66] = 0;
   out_4470100205269620094[67] = 0;
   out_4470100205269620094[68] = 0;
   out_4470100205269620094[69] = 0;
   out_4470100205269620094[70] = 0;
   out_4470100205269620094[71] = 0;
   out_4470100205269620094[72] = 1;
   out_4470100205269620094[73] = 0;
   out_4470100205269620094[74] = 0;
   out_4470100205269620094[75] = 0;
   out_4470100205269620094[76] = 0;
   out_4470100205269620094[77] = 0;
   out_4470100205269620094[78] = 0;
   out_4470100205269620094[79] = 0;
   out_4470100205269620094[80] = 0;
   out_4470100205269620094[81] = 0;
   out_4470100205269620094[82] = 0;
   out_4470100205269620094[83] = 0;
   out_4470100205269620094[84] = 0;
   out_4470100205269620094[85] = 0;
   out_4470100205269620094[86] = 0;
   out_4470100205269620094[87] = 0;
}
void h_13(double *state, double *unused, double *out_6244615459118065187) {
   out_6244615459118065187[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6244615459118065187[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6244615459118065187[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8923790817809263950) {
   out_8923790817809263950[0] = 0;
   out_8923790817809263950[1] = 0;
   out_8923790817809263950[2] = 0;
   out_8923790817809263950[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8923790817809263950[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8923790817809263950[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8923790817809263950[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8923790817809263950[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8923790817809263950[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8923790817809263950[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8923790817809263950[10] = 0;
   out_8923790817809263950[11] = 0;
   out_8923790817809263950[12] = 0;
   out_8923790817809263950[13] = 0;
   out_8923790817809263950[14] = 0;
   out_8923790817809263950[15] = 0;
   out_8923790817809263950[16] = 0;
   out_8923790817809263950[17] = 0;
   out_8923790817809263950[18] = 0;
   out_8923790817809263950[19] = 0;
   out_8923790817809263950[20] = 0;
   out_8923790817809263950[21] = 0;
   out_8923790817809263950[22] = 0;
   out_8923790817809263950[23] = 0;
   out_8923790817809263950[24] = 0;
   out_8923790817809263950[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8923790817809263950[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8923790817809263950[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8923790817809263950[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8923790817809263950[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8923790817809263950[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8923790817809263950[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8923790817809263950[32] = 0;
   out_8923790817809263950[33] = 0;
   out_8923790817809263950[34] = 0;
   out_8923790817809263950[35] = 0;
   out_8923790817809263950[36] = 0;
   out_8923790817809263950[37] = 0;
   out_8923790817809263950[38] = 0;
   out_8923790817809263950[39] = 0;
   out_8923790817809263950[40] = 0;
   out_8923790817809263950[41] = 0;
   out_8923790817809263950[42] = 0;
   out_8923790817809263950[43] = 0;
   out_8923790817809263950[44] = 0;
   out_8923790817809263950[45] = 0;
   out_8923790817809263950[46] = 0;
   out_8923790817809263950[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8923790817809263950[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8923790817809263950[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8923790817809263950[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8923790817809263950[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8923790817809263950[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8923790817809263950[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8923790817809263950[54] = 0;
   out_8923790817809263950[55] = 0;
   out_8923790817809263950[56] = 0;
   out_8923790817809263950[57] = 0;
   out_8923790817809263950[58] = 0;
   out_8923790817809263950[59] = 0;
   out_8923790817809263950[60] = 0;
   out_8923790817809263950[61] = 0;
   out_8923790817809263950[62] = 0;
   out_8923790817809263950[63] = 0;
   out_8923790817809263950[64] = 0;
   out_8923790817809263950[65] = 0;
}
void h_14(double *state, double *unused, double *out_2913057772910693926) {
   out_2913057772910693926[0] = state[10];
   out_2913057772910693926[1] = state[11];
   out_2913057772910693926[2] = state[12];
}
void H_14(double *state, double *unused, double *out_5837387752876182358) {
   out_5837387752876182358[0] = 0;
   out_5837387752876182358[1] = 0;
   out_5837387752876182358[2] = 0;
   out_5837387752876182358[3] = 0;
   out_5837387752876182358[4] = 0;
   out_5837387752876182358[5] = 0;
   out_5837387752876182358[6] = 0;
   out_5837387752876182358[7] = 0;
   out_5837387752876182358[8] = 0;
   out_5837387752876182358[9] = 0;
   out_5837387752876182358[10] = 1;
   out_5837387752876182358[11] = 0;
   out_5837387752876182358[12] = 0;
   out_5837387752876182358[13] = 0;
   out_5837387752876182358[14] = 0;
   out_5837387752876182358[15] = 0;
   out_5837387752876182358[16] = 0;
   out_5837387752876182358[17] = 0;
   out_5837387752876182358[18] = 0;
   out_5837387752876182358[19] = 0;
   out_5837387752876182358[20] = 0;
   out_5837387752876182358[21] = 0;
   out_5837387752876182358[22] = 0;
   out_5837387752876182358[23] = 0;
   out_5837387752876182358[24] = 0;
   out_5837387752876182358[25] = 0;
   out_5837387752876182358[26] = 0;
   out_5837387752876182358[27] = 0;
   out_5837387752876182358[28] = 0;
   out_5837387752876182358[29] = 0;
   out_5837387752876182358[30] = 0;
   out_5837387752876182358[31] = 0;
   out_5837387752876182358[32] = 0;
   out_5837387752876182358[33] = 1;
   out_5837387752876182358[34] = 0;
   out_5837387752876182358[35] = 0;
   out_5837387752876182358[36] = 0;
   out_5837387752876182358[37] = 0;
   out_5837387752876182358[38] = 0;
   out_5837387752876182358[39] = 0;
   out_5837387752876182358[40] = 0;
   out_5837387752876182358[41] = 0;
   out_5837387752876182358[42] = 0;
   out_5837387752876182358[43] = 0;
   out_5837387752876182358[44] = 0;
   out_5837387752876182358[45] = 0;
   out_5837387752876182358[46] = 0;
   out_5837387752876182358[47] = 0;
   out_5837387752876182358[48] = 0;
   out_5837387752876182358[49] = 0;
   out_5837387752876182358[50] = 0;
   out_5837387752876182358[51] = 0;
   out_5837387752876182358[52] = 0;
   out_5837387752876182358[53] = 0;
   out_5837387752876182358[54] = 0;
   out_5837387752876182358[55] = 0;
   out_5837387752876182358[56] = 1;
   out_5837387752876182358[57] = 0;
   out_5837387752876182358[58] = 0;
   out_5837387752876182358[59] = 0;
   out_5837387752876182358[60] = 0;
   out_5837387752876182358[61] = 0;
   out_5837387752876182358[62] = 0;
   out_5837387752876182358[63] = 0;
   out_5837387752876182358[64] = 0;
   out_5837387752876182358[65] = 0;
}
void h_33(double *state, double *unused, double *out_8506287859428763182) {
   out_8506287859428763182[0] = state[16];
   out_8506287859428763182[1] = state[17];
   out_8506287859428763182[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6607387626129164848) {
   out_6607387626129164848[0] = 0;
   out_6607387626129164848[1] = 0;
   out_6607387626129164848[2] = 0;
   out_6607387626129164848[3] = 0;
   out_6607387626129164848[4] = 0;
   out_6607387626129164848[5] = 0;
   out_6607387626129164848[6] = 0;
   out_6607387626129164848[7] = 0;
   out_6607387626129164848[8] = 0;
   out_6607387626129164848[9] = 0;
   out_6607387626129164848[10] = 0;
   out_6607387626129164848[11] = 0;
   out_6607387626129164848[12] = 0;
   out_6607387626129164848[13] = 0;
   out_6607387626129164848[14] = 0;
   out_6607387626129164848[15] = 0;
   out_6607387626129164848[16] = 1;
   out_6607387626129164848[17] = 0;
   out_6607387626129164848[18] = 0;
   out_6607387626129164848[19] = 0;
   out_6607387626129164848[20] = 0;
   out_6607387626129164848[21] = 0;
   out_6607387626129164848[22] = 0;
   out_6607387626129164848[23] = 0;
   out_6607387626129164848[24] = 0;
   out_6607387626129164848[25] = 0;
   out_6607387626129164848[26] = 0;
   out_6607387626129164848[27] = 0;
   out_6607387626129164848[28] = 0;
   out_6607387626129164848[29] = 0;
   out_6607387626129164848[30] = 0;
   out_6607387626129164848[31] = 0;
   out_6607387626129164848[32] = 0;
   out_6607387626129164848[33] = 0;
   out_6607387626129164848[34] = 0;
   out_6607387626129164848[35] = 0;
   out_6607387626129164848[36] = 0;
   out_6607387626129164848[37] = 0;
   out_6607387626129164848[38] = 0;
   out_6607387626129164848[39] = 1;
   out_6607387626129164848[40] = 0;
   out_6607387626129164848[41] = 0;
   out_6607387626129164848[42] = 0;
   out_6607387626129164848[43] = 0;
   out_6607387626129164848[44] = 0;
   out_6607387626129164848[45] = 0;
   out_6607387626129164848[46] = 0;
   out_6607387626129164848[47] = 0;
   out_6607387626129164848[48] = 0;
   out_6607387626129164848[49] = 0;
   out_6607387626129164848[50] = 0;
   out_6607387626129164848[51] = 0;
   out_6607387626129164848[52] = 0;
   out_6607387626129164848[53] = 0;
   out_6607387626129164848[54] = 0;
   out_6607387626129164848[55] = 0;
   out_6607387626129164848[56] = 0;
   out_6607387626129164848[57] = 0;
   out_6607387626129164848[58] = 0;
   out_6607387626129164848[59] = 0;
   out_6607387626129164848[60] = 0;
   out_6607387626129164848[61] = 0;
   out_6607387626129164848[62] = 1;
   out_6607387626129164848[63] = 0;
   out_6607387626129164848[64] = 0;
   out_6607387626129164848[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6455076677763199504) {
  H(in_vec, out_6455076677763199504);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7050545546963144415) {
  err_fun(nom_x, delta_x, out_7050545546963144415);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1121531341084927829) {
  inv_err_fun(nom_x, true_x, out_1121531341084927829);
}
void live_H_mod_fun(double *state, double *out_8544592091623789486) {
  H_mod_fun(state, out_8544592091623789486);
}
void live_f_fun(double *state, double dt, double *out_2494934106159862300) {
  f_fun(state,  dt, out_2494934106159862300);
}
void live_F_fun(double *state, double dt, double *out_4294123518058200829) {
  F_fun(state,  dt, out_4294123518058200829);
}
void live_h_4(double *state, double *unused, double *out_3956943391514422677) {
  h_4(state, unused, out_3956943391514422677);
}
void live_H_4(double *state, double *unused, double *out_5322137385568921788) {
  H_4(state, unused, out_5322137385568921788);
}
void live_h_9(double *state, double *unused, double *out_2913057772910693926) {
  h_9(state, unused, out_2913057772910693926);
}
void live_H_9(double *state, double *unused, double *out_5837387752876182358) {
  H_9(state, unused, out_5837387752876182358);
}
void live_h_10(double *state, double *unused, double *out_6941176182098969496) {
  h_10(state, unused, out_6941176182098969496);
}
void live_H_10(double *state, double *unused, double *out_4385018446927318034) {
  H_10(state, unused, out_4385018446927318034);
}
void live_h_12(double *state, double *unused, double *out_7295955447707868030) {
  h_12(state, unused, out_7295955447707868030);
}
void live_H_12(double *state, double *unused, double *out_1059120991473811208) {
  H_12(state, unused, out_1059120991473811208);
}
void live_h_35(double *state, double *unused, double *out_6084632724891230166) {
  h_35(state, unused, out_6084632724891230166);
}
void live_H_35(double *state, double *unused, double *out_5359587247783654324) {
  H_35(state, unused, out_5359587247783654324);
}
void live_h_32(double *state, double *unused, double *out_3706609794204376617) {
  h_32(state, unused, out_3706609794204376617);
}
void live_H_32(double *state, double *unused, double *out_4470100205269620094) {
  H_32(state, unused, out_4470100205269620094);
}
void live_h_13(double *state, double *unused, double *out_6244615459118065187) {
  h_13(state, unused, out_6244615459118065187);
}
void live_H_13(double *state, double *unused, double *out_8923790817809263950) {
  H_13(state, unused, out_8923790817809263950);
}
void live_h_14(double *state, double *unused, double *out_2913057772910693926) {
  h_14(state, unused, out_2913057772910693926);
}
void live_H_14(double *state, double *unused, double *out_5837387752876182358) {
  H_14(state, unused, out_5837387752876182358);
}
void live_h_33(double *state, double *unused, double *out_8506287859428763182) {
  h_33(state, unused, out_8506287859428763182);
}
void live_H_33(double *state, double *unused, double *out_6607387626129164848) {
  H_33(state, unused, out_6607387626129164848);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
