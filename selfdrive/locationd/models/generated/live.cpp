#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8113807940926516597) {
   out_8113807940926516597[0] = 0;
   out_8113807940926516597[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8113807940926516597[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8113807940926516597[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8113807940926516597[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8113807940926516597[5] = -sin(in_vec[1]);
   out_8113807940926516597[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8113807940926516597[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8113807940926516597[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8113807940926516597[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8113807940926516597[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8113807940926516597[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8113807940926516597[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8113807940926516597[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8113807940926516597[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8113807940926516597[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8113807940926516597[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8113807940926516597[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_2092809685863178055) {
   out_2092809685863178055[0] = delta_x[0] + nom_x[0];
   out_2092809685863178055[1] = delta_x[1] + nom_x[1];
   out_2092809685863178055[2] = delta_x[2] + nom_x[2];
   out_2092809685863178055[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_2092809685863178055[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_2092809685863178055[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_2092809685863178055[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_2092809685863178055[7] = delta_x[6] + nom_x[7];
   out_2092809685863178055[8] = delta_x[7] + nom_x[8];
   out_2092809685863178055[9] = delta_x[8] + nom_x[9];
   out_2092809685863178055[10] = delta_x[9] + nom_x[10];
   out_2092809685863178055[11] = delta_x[10] + nom_x[11];
   out_2092809685863178055[12] = delta_x[11] + nom_x[12];
   out_2092809685863178055[13] = delta_x[12] + nom_x[13];
   out_2092809685863178055[14] = delta_x[13] + nom_x[14];
   out_2092809685863178055[15] = delta_x[14] + nom_x[15];
   out_2092809685863178055[16] = delta_x[15] + nom_x[16];
   out_2092809685863178055[17] = delta_x[16] + nom_x[17];
   out_2092809685863178055[18] = delta_x[17] + nom_x[18];
   out_2092809685863178055[19] = delta_x[18] + nom_x[19];
   out_2092809685863178055[20] = delta_x[19] + nom_x[20];
   out_2092809685863178055[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_3421515454134109807) {
   out_3421515454134109807[0] = -nom_x[0] + true_x[0];
   out_3421515454134109807[1] = -nom_x[1] + true_x[1];
   out_3421515454134109807[2] = -nom_x[2] + true_x[2];
   out_3421515454134109807[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_3421515454134109807[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_3421515454134109807[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_3421515454134109807[6] = -nom_x[7] + true_x[7];
   out_3421515454134109807[7] = -nom_x[8] + true_x[8];
   out_3421515454134109807[8] = -nom_x[9] + true_x[9];
   out_3421515454134109807[9] = -nom_x[10] + true_x[10];
   out_3421515454134109807[10] = -nom_x[11] + true_x[11];
   out_3421515454134109807[11] = -nom_x[12] + true_x[12];
   out_3421515454134109807[12] = -nom_x[13] + true_x[13];
   out_3421515454134109807[13] = -nom_x[14] + true_x[14];
   out_3421515454134109807[14] = -nom_x[15] + true_x[15];
   out_3421515454134109807[15] = -nom_x[16] + true_x[16];
   out_3421515454134109807[16] = -nom_x[17] + true_x[17];
   out_3421515454134109807[17] = -nom_x[18] + true_x[18];
   out_3421515454134109807[18] = -nom_x[19] + true_x[19];
   out_3421515454134109807[19] = -nom_x[20] + true_x[20];
   out_3421515454134109807[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6554889491242616946) {
   out_6554889491242616946[0] = 1.0;
   out_6554889491242616946[1] = 0;
   out_6554889491242616946[2] = 0;
   out_6554889491242616946[3] = 0;
   out_6554889491242616946[4] = 0;
   out_6554889491242616946[5] = 0;
   out_6554889491242616946[6] = 0;
   out_6554889491242616946[7] = 0;
   out_6554889491242616946[8] = 0;
   out_6554889491242616946[9] = 0;
   out_6554889491242616946[10] = 0;
   out_6554889491242616946[11] = 0;
   out_6554889491242616946[12] = 0;
   out_6554889491242616946[13] = 0;
   out_6554889491242616946[14] = 0;
   out_6554889491242616946[15] = 0;
   out_6554889491242616946[16] = 0;
   out_6554889491242616946[17] = 0;
   out_6554889491242616946[18] = 0;
   out_6554889491242616946[19] = 0;
   out_6554889491242616946[20] = 0;
   out_6554889491242616946[21] = 0;
   out_6554889491242616946[22] = 1.0;
   out_6554889491242616946[23] = 0;
   out_6554889491242616946[24] = 0;
   out_6554889491242616946[25] = 0;
   out_6554889491242616946[26] = 0;
   out_6554889491242616946[27] = 0;
   out_6554889491242616946[28] = 0;
   out_6554889491242616946[29] = 0;
   out_6554889491242616946[30] = 0;
   out_6554889491242616946[31] = 0;
   out_6554889491242616946[32] = 0;
   out_6554889491242616946[33] = 0;
   out_6554889491242616946[34] = 0;
   out_6554889491242616946[35] = 0;
   out_6554889491242616946[36] = 0;
   out_6554889491242616946[37] = 0;
   out_6554889491242616946[38] = 0;
   out_6554889491242616946[39] = 0;
   out_6554889491242616946[40] = 0;
   out_6554889491242616946[41] = 0;
   out_6554889491242616946[42] = 0;
   out_6554889491242616946[43] = 0;
   out_6554889491242616946[44] = 1.0;
   out_6554889491242616946[45] = 0;
   out_6554889491242616946[46] = 0;
   out_6554889491242616946[47] = 0;
   out_6554889491242616946[48] = 0;
   out_6554889491242616946[49] = 0;
   out_6554889491242616946[50] = 0;
   out_6554889491242616946[51] = 0;
   out_6554889491242616946[52] = 0;
   out_6554889491242616946[53] = 0;
   out_6554889491242616946[54] = 0;
   out_6554889491242616946[55] = 0;
   out_6554889491242616946[56] = 0;
   out_6554889491242616946[57] = 0;
   out_6554889491242616946[58] = 0;
   out_6554889491242616946[59] = 0;
   out_6554889491242616946[60] = 0;
   out_6554889491242616946[61] = 0;
   out_6554889491242616946[62] = 0;
   out_6554889491242616946[63] = 0;
   out_6554889491242616946[64] = 0;
   out_6554889491242616946[65] = 0;
   out_6554889491242616946[66] = -0.5*state[4];
   out_6554889491242616946[67] = -0.5*state[5];
   out_6554889491242616946[68] = -0.5*state[6];
   out_6554889491242616946[69] = 0;
   out_6554889491242616946[70] = 0;
   out_6554889491242616946[71] = 0;
   out_6554889491242616946[72] = 0;
   out_6554889491242616946[73] = 0;
   out_6554889491242616946[74] = 0;
   out_6554889491242616946[75] = 0;
   out_6554889491242616946[76] = 0;
   out_6554889491242616946[77] = 0;
   out_6554889491242616946[78] = 0;
   out_6554889491242616946[79] = 0;
   out_6554889491242616946[80] = 0;
   out_6554889491242616946[81] = 0;
   out_6554889491242616946[82] = 0;
   out_6554889491242616946[83] = 0;
   out_6554889491242616946[84] = 0;
   out_6554889491242616946[85] = 0;
   out_6554889491242616946[86] = 0;
   out_6554889491242616946[87] = 0.5*state[3];
   out_6554889491242616946[88] = 0.5*state[6];
   out_6554889491242616946[89] = -0.5*state[5];
   out_6554889491242616946[90] = 0;
   out_6554889491242616946[91] = 0;
   out_6554889491242616946[92] = 0;
   out_6554889491242616946[93] = 0;
   out_6554889491242616946[94] = 0;
   out_6554889491242616946[95] = 0;
   out_6554889491242616946[96] = 0;
   out_6554889491242616946[97] = 0;
   out_6554889491242616946[98] = 0;
   out_6554889491242616946[99] = 0;
   out_6554889491242616946[100] = 0;
   out_6554889491242616946[101] = 0;
   out_6554889491242616946[102] = 0;
   out_6554889491242616946[103] = 0;
   out_6554889491242616946[104] = 0;
   out_6554889491242616946[105] = 0;
   out_6554889491242616946[106] = 0;
   out_6554889491242616946[107] = 0;
   out_6554889491242616946[108] = -0.5*state[6];
   out_6554889491242616946[109] = 0.5*state[3];
   out_6554889491242616946[110] = 0.5*state[4];
   out_6554889491242616946[111] = 0;
   out_6554889491242616946[112] = 0;
   out_6554889491242616946[113] = 0;
   out_6554889491242616946[114] = 0;
   out_6554889491242616946[115] = 0;
   out_6554889491242616946[116] = 0;
   out_6554889491242616946[117] = 0;
   out_6554889491242616946[118] = 0;
   out_6554889491242616946[119] = 0;
   out_6554889491242616946[120] = 0;
   out_6554889491242616946[121] = 0;
   out_6554889491242616946[122] = 0;
   out_6554889491242616946[123] = 0;
   out_6554889491242616946[124] = 0;
   out_6554889491242616946[125] = 0;
   out_6554889491242616946[126] = 0;
   out_6554889491242616946[127] = 0;
   out_6554889491242616946[128] = 0;
   out_6554889491242616946[129] = 0.5*state[5];
   out_6554889491242616946[130] = -0.5*state[4];
   out_6554889491242616946[131] = 0.5*state[3];
   out_6554889491242616946[132] = 0;
   out_6554889491242616946[133] = 0;
   out_6554889491242616946[134] = 0;
   out_6554889491242616946[135] = 0;
   out_6554889491242616946[136] = 0;
   out_6554889491242616946[137] = 0;
   out_6554889491242616946[138] = 0;
   out_6554889491242616946[139] = 0;
   out_6554889491242616946[140] = 0;
   out_6554889491242616946[141] = 0;
   out_6554889491242616946[142] = 0;
   out_6554889491242616946[143] = 0;
   out_6554889491242616946[144] = 0;
   out_6554889491242616946[145] = 0;
   out_6554889491242616946[146] = 0;
   out_6554889491242616946[147] = 0;
   out_6554889491242616946[148] = 0;
   out_6554889491242616946[149] = 0;
   out_6554889491242616946[150] = 0;
   out_6554889491242616946[151] = 0;
   out_6554889491242616946[152] = 0;
   out_6554889491242616946[153] = 1.0;
   out_6554889491242616946[154] = 0;
   out_6554889491242616946[155] = 0;
   out_6554889491242616946[156] = 0;
   out_6554889491242616946[157] = 0;
   out_6554889491242616946[158] = 0;
   out_6554889491242616946[159] = 0;
   out_6554889491242616946[160] = 0;
   out_6554889491242616946[161] = 0;
   out_6554889491242616946[162] = 0;
   out_6554889491242616946[163] = 0;
   out_6554889491242616946[164] = 0;
   out_6554889491242616946[165] = 0;
   out_6554889491242616946[166] = 0;
   out_6554889491242616946[167] = 0;
   out_6554889491242616946[168] = 0;
   out_6554889491242616946[169] = 0;
   out_6554889491242616946[170] = 0;
   out_6554889491242616946[171] = 0;
   out_6554889491242616946[172] = 0;
   out_6554889491242616946[173] = 0;
   out_6554889491242616946[174] = 0;
   out_6554889491242616946[175] = 1.0;
   out_6554889491242616946[176] = 0;
   out_6554889491242616946[177] = 0;
   out_6554889491242616946[178] = 0;
   out_6554889491242616946[179] = 0;
   out_6554889491242616946[180] = 0;
   out_6554889491242616946[181] = 0;
   out_6554889491242616946[182] = 0;
   out_6554889491242616946[183] = 0;
   out_6554889491242616946[184] = 0;
   out_6554889491242616946[185] = 0;
   out_6554889491242616946[186] = 0;
   out_6554889491242616946[187] = 0;
   out_6554889491242616946[188] = 0;
   out_6554889491242616946[189] = 0;
   out_6554889491242616946[190] = 0;
   out_6554889491242616946[191] = 0;
   out_6554889491242616946[192] = 0;
   out_6554889491242616946[193] = 0;
   out_6554889491242616946[194] = 0;
   out_6554889491242616946[195] = 0;
   out_6554889491242616946[196] = 0;
   out_6554889491242616946[197] = 1.0;
   out_6554889491242616946[198] = 0;
   out_6554889491242616946[199] = 0;
   out_6554889491242616946[200] = 0;
   out_6554889491242616946[201] = 0;
   out_6554889491242616946[202] = 0;
   out_6554889491242616946[203] = 0;
   out_6554889491242616946[204] = 0;
   out_6554889491242616946[205] = 0;
   out_6554889491242616946[206] = 0;
   out_6554889491242616946[207] = 0;
   out_6554889491242616946[208] = 0;
   out_6554889491242616946[209] = 0;
   out_6554889491242616946[210] = 0;
   out_6554889491242616946[211] = 0;
   out_6554889491242616946[212] = 0;
   out_6554889491242616946[213] = 0;
   out_6554889491242616946[214] = 0;
   out_6554889491242616946[215] = 0;
   out_6554889491242616946[216] = 0;
   out_6554889491242616946[217] = 0;
   out_6554889491242616946[218] = 0;
   out_6554889491242616946[219] = 1.0;
   out_6554889491242616946[220] = 0;
   out_6554889491242616946[221] = 0;
   out_6554889491242616946[222] = 0;
   out_6554889491242616946[223] = 0;
   out_6554889491242616946[224] = 0;
   out_6554889491242616946[225] = 0;
   out_6554889491242616946[226] = 0;
   out_6554889491242616946[227] = 0;
   out_6554889491242616946[228] = 0;
   out_6554889491242616946[229] = 0;
   out_6554889491242616946[230] = 0;
   out_6554889491242616946[231] = 0;
   out_6554889491242616946[232] = 0;
   out_6554889491242616946[233] = 0;
   out_6554889491242616946[234] = 0;
   out_6554889491242616946[235] = 0;
   out_6554889491242616946[236] = 0;
   out_6554889491242616946[237] = 0;
   out_6554889491242616946[238] = 0;
   out_6554889491242616946[239] = 0;
   out_6554889491242616946[240] = 0;
   out_6554889491242616946[241] = 1.0;
   out_6554889491242616946[242] = 0;
   out_6554889491242616946[243] = 0;
   out_6554889491242616946[244] = 0;
   out_6554889491242616946[245] = 0;
   out_6554889491242616946[246] = 0;
   out_6554889491242616946[247] = 0;
   out_6554889491242616946[248] = 0;
   out_6554889491242616946[249] = 0;
   out_6554889491242616946[250] = 0;
   out_6554889491242616946[251] = 0;
   out_6554889491242616946[252] = 0;
   out_6554889491242616946[253] = 0;
   out_6554889491242616946[254] = 0;
   out_6554889491242616946[255] = 0;
   out_6554889491242616946[256] = 0;
   out_6554889491242616946[257] = 0;
   out_6554889491242616946[258] = 0;
   out_6554889491242616946[259] = 0;
   out_6554889491242616946[260] = 0;
   out_6554889491242616946[261] = 0;
   out_6554889491242616946[262] = 0;
   out_6554889491242616946[263] = 1.0;
   out_6554889491242616946[264] = 0;
   out_6554889491242616946[265] = 0;
   out_6554889491242616946[266] = 0;
   out_6554889491242616946[267] = 0;
   out_6554889491242616946[268] = 0;
   out_6554889491242616946[269] = 0;
   out_6554889491242616946[270] = 0;
   out_6554889491242616946[271] = 0;
   out_6554889491242616946[272] = 0;
   out_6554889491242616946[273] = 0;
   out_6554889491242616946[274] = 0;
   out_6554889491242616946[275] = 0;
   out_6554889491242616946[276] = 0;
   out_6554889491242616946[277] = 0;
   out_6554889491242616946[278] = 0;
   out_6554889491242616946[279] = 0;
   out_6554889491242616946[280] = 0;
   out_6554889491242616946[281] = 0;
   out_6554889491242616946[282] = 0;
   out_6554889491242616946[283] = 0;
   out_6554889491242616946[284] = 0;
   out_6554889491242616946[285] = 1.0;
   out_6554889491242616946[286] = 0;
   out_6554889491242616946[287] = 0;
   out_6554889491242616946[288] = 0;
   out_6554889491242616946[289] = 0;
   out_6554889491242616946[290] = 0;
   out_6554889491242616946[291] = 0;
   out_6554889491242616946[292] = 0;
   out_6554889491242616946[293] = 0;
   out_6554889491242616946[294] = 0;
   out_6554889491242616946[295] = 0;
   out_6554889491242616946[296] = 0;
   out_6554889491242616946[297] = 0;
   out_6554889491242616946[298] = 0;
   out_6554889491242616946[299] = 0;
   out_6554889491242616946[300] = 0;
   out_6554889491242616946[301] = 0;
   out_6554889491242616946[302] = 0;
   out_6554889491242616946[303] = 0;
   out_6554889491242616946[304] = 0;
   out_6554889491242616946[305] = 0;
   out_6554889491242616946[306] = 0;
   out_6554889491242616946[307] = 1.0;
   out_6554889491242616946[308] = 0;
   out_6554889491242616946[309] = 0;
   out_6554889491242616946[310] = 0;
   out_6554889491242616946[311] = 0;
   out_6554889491242616946[312] = 0;
   out_6554889491242616946[313] = 0;
   out_6554889491242616946[314] = 0;
   out_6554889491242616946[315] = 0;
   out_6554889491242616946[316] = 0;
   out_6554889491242616946[317] = 0;
   out_6554889491242616946[318] = 0;
   out_6554889491242616946[319] = 0;
   out_6554889491242616946[320] = 0;
   out_6554889491242616946[321] = 0;
   out_6554889491242616946[322] = 0;
   out_6554889491242616946[323] = 0;
   out_6554889491242616946[324] = 0;
   out_6554889491242616946[325] = 0;
   out_6554889491242616946[326] = 0;
   out_6554889491242616946[327] = 0;
   out_6554889491242616946[328] = 0;
   out_6554889491242616946[329] = 1.0;
   out_6554889491242616946[330] = 0;
   out_6554889491242616946[331] = 0;
   out_6554889491242616946[332] = 0;
   out_6554889491242616946[333] = 0;
   out_6554889491242616946[334] = 0;
   out_6554889491242616946[335] = 0;
   out_6554889491242616946[336] = 0;
   out_6554889491242616946[337] = 0;
   out_6554889491242616946[338] = 0;
   out_6554889491242616946[339] = 0;
   out_6554889491242616946[340] = 0;
   out_6554889491242616946[341] = 0;
   out_6554889491242616946[342] = 0;
   out_6554889491242616946[343] = 0;
   out_6554889491242616946[344] = 0;
   out_6554889491242616946[345] = 0;
   out_6554889491242616946[346] = 0;
   out_6554889491242616946[347] = 0;
   out_6554889491242616946[348] = 0;
   out_6554889491242616946[349] = 0;
   out_6554889491242616946[350] = 0;
   out_6554889491242616946[351] = 1.0;
   out_6554889491242616946[352] = 0;
   out_6554889491242616946[353] = 0;
   out_6554889491242616946[354] = 0;
   out_6554889491242616946[355] = 0;
   out_6554889491242616946[356] = 0;
   out_6554889491242616946[357] = 0;
   out_6554889491242616946[358] = 0;
   out_6554889491242616946[359] = 0;
   out_6554889491242616946[360] = 0;
   out_6554889491242616946[361] = 0;
   out_6554889491242616946[362] = 0;
   out_6554889491242616946[363] = 0;
   out_6554889491242616946[364] = 0;
   out_6554889491242616946[365] = 0;
   out_6554889491242616946[366] = 0;
   out_6554889491242616946[367] = 0;
   out_6554889491242616946[368] = 0;
   out_6554889491242616946[369] = 0;
   out_6554889491242616946[370] = 0;
   out_6554889491242616946[371] = 0;
   out_6554889491242616946[372] = 0;
   out_6554889491242616946[373] = 1.0;
   out_6554889491242616946[374] = 0;
   out_6554889491242616946[375] = 0;
   out_6554889491242616946[376] = 0;
   out_6554889491242616946[377] = 0;
   out_6554889491242616946[378] = 0;
   out_6554889491242616946[379] = 0;
   out_6554889491242616946[380] = 0;
   out_6554889491242616946[381] = 0;
   out_6554889491242616946[382] = 0;
   out_6554889491242616946[383] = 0;
   out_6554889491242616946[384] = 0;
   out_6554889491242616946[385] = 0;
   out_6554889491242616946[386] = 0;
   out_6554889491242616946[387] = 0;
   out_6554889491242616946[388] = 0;
   out_6554889491242616946[389] = 0;
   out_6554889491242616946[390] = 0;
   out_6554889491242616946[391] = 0;
   out_6554889491242616946[392] = 0;
   out_6554889491242616946[393] = 0;
   out_6554889491242616946[394] = 0;
   out_6554889491242616946[395] = 1.0;
   out_6554889491242616946[396] = 0;
   out_6554889491242616946[397] = 0;
   out_6554889491242616946[398] = 0;
   out_6554889491242616946[399] = 0;
   out_6554889491242616946[400] = 0;
   out_6554889491242616946[401] = 0;
   out_6554889491242616946[402] = 0;
   out_6554889491242616946[403] = 0;
   out_6554889491242616946[404] = 0;
   out_6554889491242616946[405] = 0;
   out_6554889491242616946[406] = 0;
   out_6554889491242616946[407] = 0;
   out_6554889491242616946[408] = 0;
   out_6554889491242616946[409] = 0;
   out_6554889491242616946[410] = 0;
   out_6554889491242616946[411] = 0;
   out_6554889491242616946[412] = 0;
   out_6554889491242616946[413] = 0;
   out_6554889491242616946[414] = 0;
   out_6554889491242616946[415] = 0;
   out_6554889491242616946[416] = 0;
   out_6554889491242616946[417] = 1.0;
   out_6554889491242616946[418] = 0;
   out_6554889491242616946[419] = 0;
   out_6554889491242616946[420] = 0;
   out_6554889491242616946[421] = 0;
   out_6554889491242616946[422] = 0;
   out_6554889491242616946[423] = 0;
   out_6554889491242616946[424] = 0;
   out_6554889491242616946[425] = 0;
   out_6554889491242616946[426] = 0;
   out_6554889491242616946[427] = 0;
   out_6554889491242616946[428] = 0;
   out_6554889491242616946[429] = 0;
   out_6554889491242616946[430] = 0;
   out_6554889491242616946[431] = 0;
   out_6554889491242616946[432] = 0;
   out_6554889491242616946[433] = 0;
   out_6554889491242616946[434] = 0;
   out_6554889491242616946[435] = 0;
   out_6554889491242616946[436] = 0;
   out_6554889491242616946[437] = 0;
   out_6554889491242616946[438] = 0;
   out_6554889491242616946[439] = 1.0;
   out_6554889491242616946[440] = 0;
   out_6554889491242616946[441] = 0;
   out_6554889491242616946[442] = 0;
   out_6554889491242616946[443] = 0;
   out_6554889491242616946[444] = 0;
   out_6554889491242616946[445] = 0;
   out_6554889491242616946[446] = 0;
   out_6554889491242616946[447] = 0;
   out_6554889491242616946[448] = 0;
   out_6554889491242616946[449] = 0;
   out_6554889491242616946[450] = 0;
   out_6554889491242616946[451] = 0;
   out_6554889491242616946[452] = 0;
   out_6554889491242616946[453] = 0;
   out_6554889491242616946[454] = 0;
   out_6554889491242616946[455] = 0;
   out_6554889491242616946[456] = 0;
   out_6554889491242616946[457] = 0;
   out_6554889491242616946[458] = 0;
   out_6554889491242616946[459] = 0;
   out_6554889491242616946[460] = 0;
   out_6554889491242616946[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_9182012806774954626) {
   out_9182012806774954626[0] = dt*state[7] + state[0];
   out_9182012806774954626[1] = dt*state[8] + state[1];
   out_9182012806774954626[2] = dt*state[9] + state[2];
   out_9182012806774954626[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_9182012806774954626[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_9182012806774954626[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_9182012806774954626[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_9182012806774954626[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_9182012806774954626[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_9182012806774954626[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_9182012806774954626[10] = state[10];
   out_9182012806774954626[11] = state[11];
   out_9182012806774954626[12] = state[12];
   out_9182012806774954626[13] = state[13];
   out_9182012806774954626[14] = state[14];
   out_9182012806774954626[15] = state[15];
   out_9182012806774954626[16] = state[16];
   out_9182012806774954626[17] = state[17];
   out_9182012806774954626[18] = state[18];
   out_9182012806774954626[19] = state[19];
   out_9182012806774954626[20] = state[20];
   out_9182012806774954626[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7401538424910221993) {
   out_7401538424910221993[0] = 1;
   out_7401538424910221993[1] = 0;
   out_7401538424910221993[2] = 0;
   out_7401538424910221993[3] = 0;
   out_7401538424910221993[4] = 0;
   out_7401538424910221993[5] = 0;
   out_7401538424910221993[6] = dt;
   out_7401538424910221993[7] = 0;
   out_7401538424910221993[8] = 0;
   out_7401538424910221993[9] = 0;
   out_7401538424910221993[10] = 0;
   out_7401538424910221993[11] = 0;
   out_7401538424910221993[12] = 0;
   out_7401538424910221993[13] = 0;
   out_7401538424910221993[14] = 0;
   out_7401538424910221993[15] = 0;
   out_7401538424910221993[16] = 0;
   out_7401538424910221993[17] = 0;
   out_7401538424910221993[18] = 0;
   out_7401538424910221993[19] = 0;
   out_7401538424910221993[20] = 0;
   out_7401538424910221993[21] = 0;
   out_7401538424910221993[22] = 1;
   out_7401538424910221993[23] = 0;
   out_7401538424910221993[24] = 0;
   out_7401538424910221993[25] = 0;
   out_7401538424910221993[26] = 0;
   out_7401538424910221993[27] = 0;
   out_7401538424910221993[28] = dt;
   out_7401538424910221993[29] = 0;
   out_7401538424910221993[30] = 0;
   out_7401538424910221993[31] = 0;
   out_7401538424910221993[32] = 0;
   out_7401538424910221993[33] = 0;
   out_7401538424910221993[34] = 0;
   out_7401538424910221993[35] = 0;
   out_7401538424910221993[36] = 0;
   out_7401538424910221993[37] = 0;
   out_7401538424910221993[38] = 0;
   out_7401538424910221993[39] = 0;
   out_7401538424910221993[40] = 0;
   out_7401538424910221993[41] = 0;
   out_7401538424910221993[42] = 0;
   out_7401538424910221993[43] = 0;
   out_7401538424910221993[44] = 1;
   out_7401538424910221993[45] = 0;
   out_7401538424910221993[46] = 0;
   out_7401538424910221993[47] = 0;
   out_7401538424910221993[48] = 0;
   out_7401538424910221993[49] = 0;
   out_7401538424910221993[50] = dt;
   out_7401538424910221993[51] = 0;
   out_7401538424910221993[52] = 0;
   out_7401538424910221993[53] = 0;
   out_7401538424910221993[54] = 0;
   out_7401538424910221993[55] = 0;
   out_7401538424910221993[56] = 0;
   out_7401538424910221993[57] = 0;
   out_7401538424910221993[58] = 0;
   out_7401538424910221993[59] = 0;
   out_7401538424910221993[60] = 0;
   out_7401538424910221993[61] = 0;
   out_7401538424910221993[62] = 0;
   out_7401538424910221993[63] = 0;
   out_7401538424910221993[64] = 0;
   out_7401538424910221993[65] = 0;
   out_7401538424910221993[66] = 1;
   out_7401538424910221993[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7401538424910221993[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7401538424910221993[69] = 0;
   out_7401538424910221993[70] = 0;
   out_7401538424910221993[71] = 0;
   out_7401538424910221993[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7401538424910221993[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7401538424910221993[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7401538424910221993[75] = 0;
   out_7401538424910221993[76] = 0;
   out_7401538424910221993[77] = 0;
   out_7401538424910221993[78] = 0;
   out_7401538424910221993[79] = 0;
   out_7401538424910221993[80] = 0;
   out_7401538424910221993[81] = 0;
   out_7401538424910221993[82] = 0;
   out_7401538424910221993[83] = 0;
   out_7401538424910221993[84] = 0;
   out_7401538424910221993[85] = 0;
   out_7401538424910221993[86] = 0;
   out_7401538424910221993[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7401538424910221993[88] = 1;
   out_7401538424910221993[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7401538424910221993[90] = 0;
   out_7401538424910221993[91] = 0;
   out_7401538424910221993[92] = 0;
   out_7401538424910221993[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7401538424910221993[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7401538424910221993[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7401538424910221993[96] = 0;
   out_7401538424910221993[97] = 0;
   out_7401538424910221993[98] = 0;
   out_7401538424910221993[99] = 0;
   out_7401538424910221993[100] = 0;
   out_7401538424910221993[101] = 0;
   out_7401538424910221993[102] = 0;
   out_7401538424910221993[103] = 0;
   out_7401538424910221993[104] = 0;
   out_7401538424910221993[105] = 0;
   out_7401538424910221993[106] = 0;
   out_7401538424910221993[107] = 0;
   out_7401538424910221993[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7401538424910221993[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7401538424910221993[110] = 1;
   out_7401538424910221993[111] = 0;
   out_7401538424910221993[112] = 0;
   out_7401538424910221993[113] = 0;
   out_7401538424910221993[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7401538424910221993[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7401538424910221993[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7401538424910221993[117] = 0;
   out_7401538424910221993[118] = 0;
   out_7401538424910221993[119] = 0;
   out_7401538424910221993[120] = 0;
   out_7401538424910221993[121] = 0;
   out_7401538424910221993[122] = 0;
   out_7401538424910221993[123] = 0;
   out_7401538424910221993[124] = 0;
   out_7401538424910221993[125] = 0;
   out_7401538424910221993[126] = 0;
   out_7401538424910221993[127] = 0;
   out_7401538424910221993[128] = 0;
   out_7401538424910221993[129] = 0;
   out_7401538424910221993[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7401538424910221993[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7401538424910221993[132] = 1;
   out_7401538424910221993[133] = 0;
   out_7401538424910221993[134] = 0;
   out_7401538424910221993[135] = 0;
   out_7401538424910221993[136] = 0;
   out_7401538424910221993[137] = 0;
   out_7401538424910221993[138] = 0;
   out_7401538424910221993[139] = 0;
   out_7401538424910221993[140] = 0;
   out_7401538424910221993[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7401538424910221993[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7401538424910221993[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7401538424910221993[144] = 0;
   out_7401538424910221993[145] = 0;
   out_7401538424910221993[146] = 0;
   out_7401538424910221993[147] = 0;
   out_7401538424910221993[148] = 0;
   out_7401538424910221993[149] = 0;
   out_7401538424910221993[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7401538424910221993[151] = 0;
   out_7401538424910221993[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7401538424910221993[153] = 0;
   out_7401538424910221993[154] = 1;
   out_7401538424910221993[155] = 0;
   out_7401538424910221993[156] = 0;
   out_7401538424910221993[157] = 0;
   out_7401538424910221993[158] = 0;
   out_7401538424910221993[159] = 0;
   out_7401538424910221993[160] = 0;
   out_7401538424910221993[161] = 0;
   out_7401538424910221993[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7401538424910221993[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7401538424910221993[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7401538424910221993[165] = 0;
   out_7401538424910221993[166] = 0;
   out_7401538424910221993[167] = 0;
   out_7401538424910221993[168] = 0;
   out_7401538424910221993[169] = 0;
   out_7401538424910221993[170] = 0;
   out_7401538424910221993[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7401538424910221993[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7401538424910221993[173] = 0;
   out_7401538424910221993[174] = 0;
   out_7401538424910221993[175] = 0;
   out_7401538424910221993[176] = 1;
   out_7401538424910221993[177] = 0;
   out_7401538424910221993[178] = 0;
   out_7401538424910221993[179] = 0;
   out_7401538424910221993[180] = 0;
   out_7401538424910221993[181] = 0;
   out_7401538424910221993[182] = 0;
   out_7401538424910221993[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7401538424910221993[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7401538424910221993[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7401538424910221993[186] = 0;
   out_7401538424910221993[187] = 0;
   out_7401538424910221993[188] = 0;
   out_7401538424910221993[189] = 0;
   out_7401538424910221993[190] = 0;
   out_7401538424910221993[191] = 0;
   out_7401538424910221993[192] = 0;
   out_7401538424910221993[193] = 0;
   out_7401538424910221993[194] = 0;
   out_7401538424910221993[195] = 0;
   out_7401538424910221993[196] = 0;
   out_7401538424910221993[197] = 0;
   out_7401538424910221993[198] = 1;
   out_7401538424910221993[199] = 0;
   out_7401538424910221993[200] = 0;
   out_7401538424910221993[201] = 0;
   out_7401538424910221993[202] = 0;
   out_7401538424910221993[203] = 0;
   out_7401538424910221993[204] = 0;
   out_7401538424910221993[205] = 0;
   out_7401538424910221993[206] = 0;
   out_7401538424910221993[207] = 0;
   out_7401538424910221993[208] = 0;
   out_7401538424910221993[209] = 0;
   out_7401538424910221993[210] = 0;
   out_7401538424910221993[211] = 0;
   out_7401538424910221993[212] = 0;
   out_7401538424910221993[213] = 0;
   out_7401538424910221993[214] = 0;
   out_7401538424910221993[215] = 0;
   out_7401538424910221993[216] = 0;
   out_7401538424910221993[217] = 0;
   out_7401538424910221993[218] = 0;
   out_7401538424910221993[219] = 0;
   out_7401538424910221993[220] = 1;
   out_7401538424910221993[221] = 0;
   out_7401538424910221993[222] = 0;
   out_7401538424910221993[223] = 0;
   out_7401538424910221993[224] = 0;
   out_7401538424910221993[225] = 0;
   out_7401538424910221993[226] = 0;
   out_7401538424910221993[227] = 0;
   out_7401538424910221993[228] = 0;
   out_7401538424910221993[229] = 0;
   out_7401538424910221993[230] = 0;
   out_7401538424910221993[231] = 0;
   out_7401538424910221993[232] = 0;
   out_7401538424910221993[233] = 0;
   out_7401538424910221993[234] = 0;
   out_7401538424910221993[235] = 0;
   out_7401538424910221993[236] = 0;
   out_7401538424910221993[237] = 0;
   out_7401538424910221993[238] = 0;
   out_7401538424910221993[239] = 0;
   out_7401538424910221993[240] = 0;
   out_7401538424910221993[241] = 0;
   out_7401538424910221993[242] = 1;
   out_7401538424910221993[243] = 0;
   out_7401538424910221993[244] = 0;
   out_7401538424910221993[245] = 0;
   out_7401538424910221993[246] = 0;
   out_7401538424910221993[247] = 0;
   out_7401538424910221993[248] = 0;
   out_7401538424910221993[249] = 0;
   out_7401538424910221993[250] = 0;
   out_7401538424910221993[251] = 0;
   out_7401538424910221993[252] = 0;
   out_7401538424910221993[253] = 0;
   out_7401538424910221993[254] = 0;
   out_7401538424910221993[255] = 0;
   out_7401538424910221993[256] = 0;
   out_7401538424910221993[257] = 0;
   out_7401538424910221993[258] = 0;
   out_7401538424910221993[259] = 0;
   out_7401538424910221993[260] = 0;
   out_7401538424910221993[261] = 0;
   out_7401538424910221993[262] = 0;
   out_7401538424910221993[263] = 0;
   out_7401538424910221993[264] = 1;
   out_7401538424910221993[265] = 0;
   out_7401538424910221993[266] = 0;
   out_7401538424910221993[267] = 0;
   out_7401538424910221993[268] = 0;
   out_7401538424910221993[269] = 0;
   out_7401538424910221993[270] = 0;
   out_7401538424910221993[271] = 0;
   out_7401538424910221993[272] = 0;
   out_7401538424910221993[273] = 0;
   out_7401538424910221993[274] = 0;
   out_7401538424910221993[275] = 0;
   out_7401538424910221993[276] = 0;
   out_7401538424910221993[277] = 0;
   out_7401538424910221993[278] = 0;
   out_7401538424910221993[279] = 0;
   out_7401538424910221993[280] = 0;
   out_7401538424910221993[281] = 0;
   out_7401538424910221993[282] = 0;
   out_7401538424910221993[283] = 0;
   out_7401538424910221993[284] = 0;
   out_7401538424910221993[285] = 0;
   out_7401538424910221993[286] = 1;
   out_7401538424910221993[287] = 0;
   out_7401538424910221993[288] = 0;
   out_7401538424910221993[289] = 0;
   out_7401538424910221993[290] = 0;
   out_7401538424910221993[291] = 0;
   out_7401538424910221993[292] = 0;
   out_7401538424910221993[293] = 0;
   out_7401538424910221993[294] = 0;
   out_7401538424910221993[295] = 0;
   out_7401538424910221993[296] = 0;
   out_7401538424910221993[297] = 0;
   out_7401538424910221993[298] = 0;
   out_7401538424910221993[299] = 0;
   out_7401538424910221993[300] = 0;
   out_7401538424910221993[301] = 0;
   out_7401538424910221993[302] = 0;
   out_7401538424910221993[303] = 0;
   out_7401538424910221993[304] = 0;
   out_7401538424910221993[305] = 0;
   out_7401538424910221993[306] = 0;
   out_7401538424910221993[307] = 0;
   out_7401538424910221993[308] = 1;
   out_7401538424910221993[309] = 0;
   out_7401538424910221993[310] = 0;
   out_7401538424910221993[311] = 0;
   out_7401538424910221993[312] = 0;
   out_7401538424910221993[313] = 0;
   out_7401538424910221993[314] = 0;
   out_7401538424910221993[315] = 0;
   out_7401538424910221993[316] = 0;
   out_7401538424910221993[317] = 0;
   out_7401538424910221993[318] = 0;
   out_7401538424910221993[319] = 0;
   out_7401538424910221993[320] = 0;
   out_7401538424910221993[321] = 0;
   out_7401538424910221993[322] = 0;
   out_7401538424910221993[323] = 0;
   out_7401538424910221993[324] = 0;
   out_7401538424910221993[325] = 0;
   out_7401538424910221993[326] = 0;
   out_7401538424910221993[327] = 0;
   out_7401538424910221993[328] = 0;
   out_7401538424910221993[329] = 0;
   out_7401538424910221993[330] = 1;
   out_7401538424910221993[331] = 0;
   out_7401538424910221993[332] = 0;
   out_7401538424910221993[333] = 0;
   out_7401538424910221993[334] = 0;
   out_7401538424910221993[335] = 0;
   out_7401538424910221993[336] = 0;
   out_7401538424910221993[337] = 0;
   out_7401538424910221993[338] = 0;
   out_7401538424910221993[339] = 0;
   out_7401538424910221993[340] = 0;
   out_7401538424910221993[341] = 0;
   out_7401538424910221993[342] = 0;
   out_7401538424910221993[343] = 0;
   out_7401538424910221993[344] = 0;
   out_7401538424910221993[345] = 0;
   out_7401538424910221993[346] = 0;
   out_7401538424910221993[347] = 0;
   out_7401538424910221993[348] = 0;
   out_7401538424910221993[349] = 0;
   out_7401538424910221993[350] = 0;
   out_7401538424910221993[351] = 0;
   out_7401538424910221993[352] = 1;
   out_7401538424910221993[353] = 0;
   out_7401538424910221993[354] = 0;
   out_7401538424910221993[355] = 0;
   out_7401538424910221993[356] = 0;
   out_7401538424910221993[357] = 0;
   out_7401538424910221993[358] = 0;
   out_7401538424910221993[359] = 0;
   out_7401538424910221993[360] = 0;
   out_7401538424910221993[361] = 0;
   out_7401538424910221993[362] = 0;
   out_7401538424910221993[363] = 0;
   out_7401538424910221993[364] = 0;
   out_7401538424910221993[365] = 0;
   out_7401538424910221993[366] = 0;
   out_7401538424910221993[367] = 0;
   out_7401538424910221993[368] = 0;
   out_7401538424910221993[369] = 0;
   out_7401538424910221993[370] = 0;
   out_7401538424910221993[371] = 0;
   out_7401538424910221993[372] = 0;
   out_7401538424910221993[373] = 0;
   out_7401538424910221993[374] = 1;
   out_7401538424910221993[375] = 0;
   out_7401538424910221993[376] = 0;
   out_7401538424910221993[377] = 0;
   out_7401538424910221993[378] = 0;
   out_7401538424910221993[379] = 0;
   out_7401538424910221993[380] = 0;
   out_7401538424910221993[381] = 0;
   out_7401538424910221993[382] = 0;
   out_7401538424910221993[383] = 0;
   out_7401538424910221993[384] = 0;
   out_7401538424910221993[385] = 0;
   out_7401538424910221993[386] = 0;
   out_7401538424910221993[387] = 0;
   out_7401538424910221993[388] = 0;
   out_7401538424910221993[389] = 0;
   out_7401538424910221993[390] = 0;
   out_7401538424910221993[391] = 0;
   out_7401538424910221993[392] = 0;
   out_7401538424910221993[393] = 0;
   out_7401538424910221993[394] = 0;
   out_7401538424910221993[395] = 0;
   out_7401538424910221993[396] = 1;
   out_7401538424910221993[397] = 0;
   out_7401538424910221993[398] = 0;
   out_7401538424910221993[399] = 0;
   out_7401538424910221993[400] = 0;
   out_7401538424910221993[401] = 0;
   out_7401538424910221993[402] = 0;
   out_7401538424910221993[403] = 0;
   out_7401538424910221993[404] = 0;
   out_7401538424910221993[405] = 0;
   out_7401538424910221993[406] = 0;
   out_7401538424910221993[407] = 0;
   out_7401538424910221993[408] = 0;
   out_7401538424910221993[409] = 0;
   out_7401538424910221993[410] = 0;
   out_7401538424910221993[411] = 0;
   out_7401538424910221993[412] = 0;
   out_7401538424910221993[413] = 0;
   out_7401538424910221993[414] = 0;
   out_7401538424910221993[415] = 0;
   out_7401538424910221993[416] = 0;
   out_7401538424910221993[417] = 0;
   out_7401538424910221993[418] = 1;
   out_7401538424910221993[419] = 0;
   out_7401538424910221993[420] = 0;
   out_7401538424910221993[421] = 0;
   out_7401538424910221993[422] = 0;
   out_7401538424910221993[423] = 0;
   out_7401538424910221993[424] = 0;
   out_7401538424910221993[425] = 0;
   out_7401538424910221993[426] = 0;
   out_7401538424910221993[427] = 0;
   out_7401538424910221993[428] = 0;
   out_7401538424910221993[429] = 0;
   out_7401538424910221993[430] = 0;
   out_7401538424910221993[431] = 0;
   out_7401538424910221993[432] = 0;
   out_7401538424910221993[433] = 0;
   out_7401538424910221993[434] = 0;
   out_7401538424910221993[435] = 0;
   out_7401538424910221993[436] = 0;
   out_7401538424910221993[437] = 0;
   out_7401538424910221993[438] = 0;
   out_7401538424910221993[439] = 0;
   out_7401538424910221993[440] = 1;
}
void h_4(double *state, double *unused, double *out_8754747726339912654) {
   out_8754747726339912654[0] = state[10] + state[13];
   out_8754747726339912654[1] = state[11] + state[14];
   out_8754747726339912654[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7041705278655450133) {
   out_7041705278655450133[0] = 0;
   out_7041705278655450133[1] = 0;
   out_7041705278655450133[2] = 0;
   out_7041705278655450133[3] = 0;
   out_7041705278655450133[4] = 0;
   out_7041705278655450133[5] = 0;
   out_7041705278655450133[6] = 0;
   out_7041705278655450133[7] = 0;
   out_7041705278655450133[8] = 0;
   out_7041705278655450133[9] = 0;
   out_7041705278655450133[10] = 1;
   out_7041705278655450133[11] = 0;
   out_7041705278655450133[12] = 0;
   out_7041705278655450133[13] = 1;
   out_7041705278655450133[14] = 0;
   out_7041705278655450133[15] = 0;
   out_7041705278655450133[16] = 0;
   out_7041705278655450133[17] = 0;
   out_7041705278655450133[18] = 0;
   out_7041705278655450133[19] = 0;
   out_7041705278655450133[20] = 0;
   out_7041705278655450133[21] = 0;
   out_7041705278655450133[22] = 0;
   out_7041705278655450133[23] = 0;
   out_7041705278655450133[24] = 0;
   out_7041705278655450133[25] = 0;
   out_7041705278655450133[26] = 0;
   out_7041705278655450133[27] = 0;
   out_7041705278655450133[28] = 0;
   out_7041705278655450133[29] = 0;
   out_7041705278655450133[30] = 0;
   out_7041705278655450133[31] = 0;
   out_7041705278655450133[32] = 0;
   out_7041705278655450133[33] = 1;
   out_7041705278655450133[34] = 0;
   out_7041705278655450133[35] = 0;
   out_7041705278655450133[36] = 1;
   out_7041705278655450133[37] = 0;
   out_7041705278655450133[38] = 0;
   out_7041705278655450133[39] = 0;
   out_7041705278655450133[40] = 0;
   out_7041705278655450133[41] = 0;
   out_7041705278655450133[42] = 0;
   out_7041705278655450133[43] = 0;
   out_7041705278655450133[44] = 0;
   out_7041705278655450133[45] = 0;
   out_7041705278655450133[46] = 0;
   out_7041705278655450133[47] = 0;
   out_7041705278655450133[48] = 0;
   out_7041705278655450133[49] = 0;
   out_7041705278655450133[50] = 0;
   out_7041705278655450133[51] = 0;
   out_7041705278655450133[52] = 0;
   out_7041705278655450133[53] = 0;
   out_7041705278655450133[54] = 0;
   out_7041705278655450133[55] = 0;
   out_7041705278655450133[56] = 1;
   out_7041705278655450133[57] = 0;
   out_7041705278655450133[58] = 0;
   out_7041705278655450133[59] = 1;
   out_7041705278655450133[60] = 0;
   out_7041705278655450133[61] = 0;
   out_7041705278655450133[62] = 0;
   out_7041705278655450133[63] = 0;
   out_7041705278655450133[64] = 0;
   out_7041705278655450133[65] = 0;
}
void h_9(double *state, double *unused, double *out_5011073053647797133) {
   out_5011073053647797133[0] = state[10];
   out_5011073053647797133[1] = state[11];
   out_5011073053647797133[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7282894925285040778) {
   out_7282894925285040778[0] = 0;
   out_7282894925285040778[1] = 0;
   out_7282894925285040778[2] = 0;
   out_7282894925285040778[3] = 0;
   out_7282894925285040778[4] = 0;
   out_7282894925285040778[5] = 0;
   out_7282894925285040778[6] = 0;
   out_7282894925285040778[7] = 0;
   out_7282894925285040778[8] = 0;
   out_7282894925285040778[9] = 0;
   out_7282894925285040778[10] = 1;
   out_7282894925285040778[11] = 0;
   out_7282894925285040778[12] = 0;
   out_7282894925285040778[13] = 0;
   out_7282894925285040778[14] = 0;
   out_7282894925285040778[15] = 0;
   out_7282894925285040778[16] = 0;
   out_7282894925285040778[17] = 0;
   out_7282894925285040778[18] = 0;
   out_7282894925285040778[19] = 0;
   out_7282894925285040778[20] = 0;
   out_7282894925285040778[21] = 0;
   out_7282894925285040778[22] = 0;
   out_7282894925285040778[23] = 0;
   out_7282894925285040778[24] = 0;
   out_7282894925285040778[25] = 0;
   out_7282894925285040778[26] = 0;
   out_7282894925285040778[27] = 0;
   out_7282894925285040778[28] = 0;
   out_7282894925285040778[29] = 0;
   out_7282894925285040778[30] = 0;
   out_7282894925285040778[31] = 0;
   out_7282894925285040778[32] = 0;
   out_7282894925285040778[33] = 1;
   out_7282894925285040778[34] = 0;
   out_7282894925285040778[35] = 0;
   out_7282894925285040778[36] = 0;
   out_7282894925285040778[37] = 0;
   out_7282894925285040778[38] = 0;
   out_7282894925285040778[39] = 0;
   out_7282894925285040778[40] = 0;
   out_7282894925285040778[41] = 0;
   out_7282894925285040778[42] = 0;
   out_7282894925285040778[43] = 0;
   out_7282894925285040778[44] = 0;
   out_7282894925285040778[45] = 0;
   out_7282894925285040778[46] = 0;
   out_7282894925285040778[47] = 0;
   out_7282894925285040778[48] = 0;
   out_7282894925285040778[49] = 0;
   out_7282894925285040778[50] = 0;
   out_7282894925285040778[51] = 0;
   out_7282894925285040778[52] = 0;
   out_7282894925285040778[53] = 0;
   out_7282894925285040778[54] = 0;
   out_7282894925285040778[55] = 0;
   out_7282894925285040778[56] = 1;
   out_7282894925285040778[57] = 0;
   out_7282894925285040778[58] = 0;
   out_7282894925285040778[59] = 0;
   out_7282894925285040778[60] = 0;
   out_7282894925285040778[61] = 0;
   out_7282894925285040778[62] = 0;
   out_7282894925285040778[63] = 0;
   out_7282894925285040778[64] = 0;
   out_7282894925285040778[65] = 0;
}
void h_10(double *state, double *unused, double *out_4243429423726629818) {
   out_4243429423726629818[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4243429423726629818[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4243429423726629818[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_942872869499217494) {
   out_942872869499217494[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_942872869499217494[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_942872869499217494[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_942872869499217494[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_942872869499217494[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_942872869499217494[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_942872869499217494[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_942872869499217494[7] = 0;
   out_942872869499217494[8] = 0;
   out_942872869499217494[9] = 0;
   out_942872869499217494[10] = 0;
   out_942872869499217494[11] = 0;
   out_942872869499217494[12] = 0;
   out_942872869499217494[13] = 0;
   out_942872869499217494[14] = 0;
   out_942872869499217494[15] = 0;
   out_942872869499217494[16] = 1;
   out_942872869499217494[17] = 0;
   out_942872869499217494[18] = 0;
   out_942872869499217494[19] = 1;
   out_942872869499217494[20] = 0;
   out_942872869499217494[21] = 0;
   out_942872869499217494[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_942872869499217494[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_942872869499217494[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_942872869499217494[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_942872869499217494[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_942872869499217494[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_942872869499217494[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_942872869499217494[29] = 0;
   out_942872869499217494[30] = 0;
   out_942872869499217494[31] = 0;
   out_942872869499217494[32] = 0;
   out_942872869499217494[33] = 0;
   out_942872869499217494[34] = 0;
   out_942872869499217494[35] = 0;
   out_942872869499217494[36] = 0;
   out_942872869499217494[37] = 0;
   out_942872869499217494[38] = 0;
   out_942872869499217494[39] = 1;
   out_942872869499217494[40] = 0;
   out_942872869499217494[41] = 0;
   out_942872869499217494[42] = 1;
   out_942872869499217494[43] = 0;
   out_942872869499217494[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_942872869499217494[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_942872869499217494[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_942872869499217494[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_942872869499217494[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_942872869499217494[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_942872869499217494[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_942872869499217494[51] = 0;
   out_942872869499217494[52] = 0;
   out_942872869499217494[53] = 0;
   out_942872869499217494[54] = 0;
   out_942872869499217494[55] = 0;
   out_942872869499217494[56] = 0;
   out_942872869499217494[57] = 0;
   out_942872869499217494[58] = 0;
   out_942872869499217494[59] = 0;
   out_942872869499217494[60] = 0;
   out_942872869499217494[61] = 0;
   out_942872869499217494[62] = 1;
   out_942872869499217494[63] = 0;
   out_942872869499217494[64] = 0;
   out_942872869499217494[65] = 1;
}
void h_12(double *state, double *unused, double *out_5998376949331212348) {
   out_5998376949331212348[0] = state[0];
   out_5998376949331212348[1] = state[1];
   out_5998376949331212348[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6385582387022139688) {
   out_6385582387022139688[0] = 1;
   out_6385582387022139688[1] = 0;
   out_6385582387022139688[2] = 0;
   out_6385582387022139688[3] = 0;
   out_6385582387022139688[4] = 0;
   out_6385582387022139688[5] = 0;
   out_6385582387022139688[6] = 0;
   out_6385582387022139688[7] = 0;
   out_6385582387022139688[8] = 0;
   out_6385582387022139688[9] = 0;
   out_6385582387022139688[10] = 0;
   out_6385582387022139688[11] = 0;
   out_6385582387022139688[12] = 0;
   out_6385582387022139688[13] = 0;
   out_6385582387022139688[14] = 0;
   out_6385582387022139688[15] = 0;
   out_6385582387022139688[16] = 0;
   out_6385582387022139688[17] = 0;
   out_6385582387022139688[18] = 0;
   out_6385582387022139688[19] = 0;
   out_6385582387022139688[20] = 0;
   out_6385582387022139688[21] = 0;
   out_6385582387022139688[22] = 0;
   out_6385582387022139688[23] = 1;
   out_6385582387022139688[24] = 0;
   out_6385582387022139688[25] = 0;
   out_6385582387022139688[26] = 0;
   out_6385582387022139688[27] = 0;
   out_6385582387022139688[28] = 0;
   out_6385582387022139688[29] = 0;
   out_6385582387022139688[30] = 0;
   out_6385582387022139688[31] = 0;
   out_6385582387022139688[32] = 0;
   out_6385582387022139688[33] = 0;
   out_6385582387022139688[34] = 0;
   out_6385582387022139688[35] = 0;
   out_6385582387022139688[36] = 0;
   out_6385582387022139688[37] = 0;
   out_6385582387022139688[38] = 0;
   out_6385582387022139688[39] = 0;
   out_6385582387022139688[40] = 0;
   out_6385582387022139688[41] = 0;
   out_6385582387022139688[42] = 0;
   out_6385582387022139688[43] = 0;
   out_6385582387022139688[44] = 0;
   out_6385582387022139688[45] = 0;
   out_6385582387022139688[46] = 1;
   out_6385582387022139688[47] = 0;
   out_6385582387022139688[48] = 0;
   out_6385582387022139688[49] = 0;
   out_6385582387022139688[50] = 0;
   out_6385582387022139688[51] = 0;
   out_6385582387022139688[52] = 0;
   out_6385582387022139688[53] = 0;
   out_6385582387022139688[54] = 0;
   out_6385582387022139688[55] = 0;
   out_6385582387022139688[56] = 0;
   out_6385582387022139688[57] = 0;
   out_6385582387022139688[58] = 0;
   out_6385582387022139688[59] = 0;
   out_6385582387022139688[60] = 0;
   out_6385582387022139688[61] = 0;
   out_6385582387022139688[62] = 0;
   out_6385582387022139688[63] = 0;
   out_6385582387022139688[64] = 0;
   out_6385582387022139688[65] = 0;
}
void h_35(double *state, double *unused, double *out_1766895848976826124) {
   out_1766895848976826124[0] = state[7];
   out_1766895848976826124[1] = state[8];
   out_1766895848976826124[2] = state[9];
}
void H_35(double *state, double *unused, double *out_3640019354697125979) {
   out_3640019354697125979[0] = 0;
   out_3640019354697125979[1] = 0;
   out_3640019354697125979[2] = 0;
   out_3640019354697125979[3] = 0;
   out_3640019354697125979[4] = 0;
   out_3640019354697125979[5] = 0;
   out_3640019354697125979[6] = 0;
   out_3640019354697125979[7] = 1;
   out_3640019354697125979[8] = 0;
   out_3640019354697125979[9] = 0;
   out_3640019354697125979[10] = 0;
   out_3640019354697125979[11] = 0;
   out_3640019354697125979[12] = 0;
   out_3640019354697125979[13] = 0;
   out_3640019354697125979[14] = 0;
   out_3640019354697125979[15] = 0;
   out_3640019354697125979[16] = 0;
   out_3640019354697125979[17] = 0;
   out_3640019354697125979[18] = 0;
   out_3640019354697125979[19] = 0;
   out_3640019354697125979[20] = 0;
   out_3640019354697125979[21] = 0;
   out_3640019354697125979[22] = 0;
   out_3640019354697125979[23] = 0;
   out_3640019354697125979[24] = 0;
   out_3640019354697125979[25] = 0;
   out_3640019354697125979[26] = 0;
   out_3640019354697125979[27] = 0;
   out_3640019354697125979[28] = 0;
   out_3640019354697125979[29] = 0;
   out_3640019354697125979[30] = 1;
   out_3640019354697125979[31] = 0;
   out_3640019354697125979[32] = 0;
   out_3640019354697125979[33] = 0;
   out_3640019354697125979[34] = 0;
   out_3640019354697125979[35] = 0;
   out_3640019354697125979[36] = 0;
   out_3640019354697125979[37] = 0;
   out_3640019354697125979[38] = 0;
   out_3640019354697125979[39] = 0;
   out_3640019354697125979[40] = 0;
   out_3640019354697125979[41] = 0;
   out_3640019354697125979[42] = 0;
   out_3640019354697125979[43] = 0;
   out_3640019354697125979[44] = 0;
   out_3640019354697125979[45] = 0;
   out_3640019354697125979[46] = 0;
   out_3640019354697125979[47] = 0;
   out_3640019354697125979[48] = 0;
   out_3640019354697125979[49] = 0;
   out_3640019354697125979[50] = 0;
   out_3640019354697125979[51] = 0;
   out_3640019354697125979[52] = 0;
   out_3640019354697125979[53] = 1;
   out_3640019354697125979[54] = 0;
   out_3640019354697125979[55] = 0;
   out_3640019354697125979[56] = 0;
   out_3640019354697125979[57] = 0;
   out_3640019354697125979[58] = 0;
   out_3640019354697125979[59] = 0;
   out_3640019354697125979[60] = 0;
   out_3640019354697125979[61] = 0;
   out_3640019354697125979[62] = 0;
   out_3640019354697125979[63] = 0;
   out_3640019354697125979[64] = 0;
   out_3640019354697125979[65] = 0;
}
void h_32(double *state, double *unused, double *out_4213948107983593284) {
   out_4213948107983593284[0] = state[3];
   out_4213948107983593284[1] = state[4];
   out_4213948107983593284[2] = state[5];
   out_4213948107983593284[3] = state[6];
}
void H_32(double *state, double *unused, double *out_6189668098356148439) {
   out_6189668098356148439[0] = 0;
   out_6189668098356148439[1] = 0;
   out_6189668098356148439[2] = 0;
   out_6189668098356148439[3] = 1;
   out_6189668098356148439[4] = 0;
   out_6189668098356148439[5] = 0;
   out_6189668098356148439[6] = 0;
   out_6189668098356148439[7] = 0;
   out_6189668098356148439[8] = 0;
   out_6189668098356148439[9] = 0;
   out_6189668098356148439[10] = 0;
   out_6189668098356148439[11] = 0;
   out_6189668098356148439[12] = 0;
   out_6189668098356148439[13] = 0;
   out_6189668098356148439[14] = 0;
   out_6189668098356148439[15] = 0;
   out_6189668098356148439[16] = 0;
   out_6189668098356148439[17] = 0;
   out_6189668098356148439[18] = 0;
   out_6189668098356148439[19] = 0;
   out_6189668098356148439[20] = 0;
   out_6189668098356148439[21] = 0;
   out_6189668098356148439[22] = 0;
   out_6189668098356148439[23] = 0;
   out_6189668098356148439[24] = 0;
   out_6189668098356148439[25] = 0;
   out_6189668098356148439[26] = 1;
   out_6189668098356148439[27] = 0;
   out_6189668098356148439[28] = 0;
   out_6189668098356148439[29] = 0;
   out_6189668098356148439[30] = 0;
   out_6189668098356148439[31] = 0;
   out_6189668098356148439[32] = 0;
   out_6189668098356148439[33] = 0;
   out_6189668098356148439[34] = 0;
   out_6189668098356148439[35] = 0;
   out_6189668098356148439[36] = 0;
   out_6189668098356148439[37] = 0;
   out_6189668098356148439[38] = 0;
   out_6189668098356148439[39] = 0;
   out_6189668098356148439[40] = 0;
   out_6189668098356148439[41] = 0;
   out_6189668098356148439[42] = 0;
   out_6189668098356148439[43] = 0;
   out_6189668098356148439[44] = 0;
   out_6189668098356148439[45] = 0;
   out_6189668098356148439[46] = 0;
   out_6189668098356148439[47] = 0;
   out_6189668098356148439[48] = 0;
   out_6189668098356148439[49] = 1;
   out_6189668098356148439[50] = 0;
   out_6189668098356148439[51] = 0;
   out_6189668098356148439[52] = 0;
   out_6189668098356148439[53] = 0;
   out_6189668098356148439[54] = 0;
   out_6189668098356148439[55] = 0;
   out_6189668098356148439[56] = 0;
   out_6189668098356148439[57] = 0;
   out_6189668098356148439[58] = 0;
   out_6189668098356148439[59] = 0;
   out_6189668098356148439[60] = 0;
   out_6189668098356148439[61] = 0;
   out_6189668098356148439[62] = 0;
   out_6189668098356148439[63] = 0;
   out_6189668098356148439[64] = 0;
   out_6189668098356148439[65] = 0;
   out_6189668098356148439[66] = 0;
   out_6189668098356148439[67] = 0;
   out_6189668098356148439[68] = 0;
   out_6189668098356148439[69] = 0;
   out_6189668098356148439[70] = 0;
   out_6189668098356148439[71] = 0;
   out_6189668098356148439[72] = 1;
   out_6189668098356148439[73] = 0;
   out_6189668098356148439[74] = 0;
   out_6189668098356148439[75] = 0;
   out_6189668098356148439[76] = 0;
   out_6189668098356148439[77] = 0;
   out_6189668098356148439[78] = 0;
   out_6189668098356148439[79] = 0;
   out_6189668098356148439[80] = 0;
   out_6189668098356148439[81] = 0;
   out_6189668098356148439[82] = 0;
   out_6189668098356148439[83] = 0;
   out_6189668098356148439[84] = 0;
   out_6189668098356148439[85] = 0;
   out_6189668098356148439[86] = 0;
   out_6189668098356148439[87] = 0;
}
void h_13(double *state, double *unused, double *out_6455669129529788023) {
   out_6455669129529788023[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6455669129529788023[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6455669129529788023[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4686926174906085286) {
   out_4686926174906085286[0] = 0;
   out_4686926174906085286[1] = 0;
   out_4686926174906085286[2] = 0;
   out_4686926174906085286[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4686926174906085286[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4686926174906085286[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4686926174906085286[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4686926174906085286[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4686926174906085286[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4686926174906085286[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4686926174906085286[10] = 0;
   out_4686926174906085286[11] = 0;
   out_4686926174906085286[12] = 0;
   out_4686926174906085286[13] = 0;
   out_4686926174906085286[14] = 0;
   out_4686926174906085286[15] = 0;
   out_4686926174906085286[16] = 0;
   out_4686926174906085286[17] = 0;
   out_4686926174906085286[18] = 0;
   out_4686926174906085286[19] = 0;
   out_4686926174906085286[20] = 0;
   out_4686926174906085286[21] = 0;
   out_4686926174906085286[22] = 0;
   out_4686926174906085286[23] = 0;
   out_4686926174906085286[24] = 0;
   out_4686926174906085286[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4686926174906085286[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4686926174906085286[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4686926174906085286[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4686926174906085286[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4686926174906085286[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4686926174906085286[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4686926174906085286[32] = 0;
   out_4686926174906085286[33] = 0;
   out_4686926174906085286[34] = 0;
   out_4686926174906085286[35] = 0;
   out_4686926174906085286[36] = 0;
   out_4686926174906085286[37] = 0;
   out_4686926174906085286[38] = 0;
   out_4686926174906085286[39] = 0;
   out_4686926174906085286[40] = 0;
   out_4686926174906085286[41] = 0;
   out_4686926174906085286[42] = 0;
   out_4686926174906085286[43] = 0;
   out_4686926174906085286[44] = 0;
   out_4686926174906085286[45] = 0;
   out_4686926174906085286[46] = 0;
   out_4686926174906085286[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4686926174906085286[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4686926174906085286[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4686926174906085286[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4686926174906085286[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4686926174906085286[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4686926174906085286[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4686926174906085286[54] = 0;
   out_4686926174906085286[55] = 0;
   out_4686926174906085286[56] = 0;
   out_4686926174906085286[57] = 0;
   out_4686926174906085286[58] = 0;
   out_4686926174906085286[59] = 0;
   out_4686926174906085286[60] = 0;
   out_4686926174906085286[61] = 0;
   out_4686926174906085286[62] = 0;
   out_4686926174906085286[63] = 0;
   out_4686926174906085286[64] = 0;
   out_4686926174906085286[65] = 0;
}
void h_14(double *state, double *unused, double *out_5011073053647797133) {
   out_5011073053647797133[0] = state[10];
   out_5011073053647797133[1] = state[11];
   out_5011073053647797133[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7282894925285040778) {
   out_7282894925285040778[0] = 0;
   out_7282894925285040778[1] = 0;
   out_7282894925285040778[2] = 0;
   out_7282894925285040778[3] = 0;
   out_7282894925285040778[4] = 0;
   out_7282894925285040778[5] = 0;
   out_7282894925285040778[6] = 0;
   out_7282894925285040778[7] = 0;
   out_7282894925285040778[8] = 0;
   out_7282894925285040778[9] = 0;
   out_7282894925285040778[10] = 1;
   out_7282894925285040778[11] = 0;
   out_7282894925285040778[12] = 0;
   out_7282894925285040778[13] = 0;
   out_7282894925285040778[14] = 0;
   out_7282894925285040778[15] = 0;
   out_7282894925285040778[16] = 0;
   out_7282894925285040778[17] = 0;
   out_7282894925285040778[18] = 0;
   out_7282894925285040778[19] = 0;
   out_7282894925285040778[20] = 0;
   out_7282894925285040778[21] = 0;
   out_7282894925285040778[22] = 0;
   out_7282894925285040778[23] = 0;
   out_7282894925285040778[24] = 0;
   out_7282894925285040778[25] = 0;
   out_7282894925285040778[26] = 0;
   out_7282894925285040778[27] = 0;
   out_7282894925285040778[28] = 0;
   out_7282894925285040778[29] = 0;
   out_7282894925285040778[30] = 0;
   out_7282894925285040778[31] = 0;
   out_7282894925285040778[32] = 0;
   out_7282894925285040778[33] = 1;
   out_7282894925285040778[34] = 0;
   out_7282894925285040778[35] = 0;
   out_7282894925285040778[36] = 0;
   out_7282894925285040778[37] = 0;
   out_7282894925285040778[38] = 0;
   out_7282894925285040778[39] = 0;
   out_7282894925285040778[40] = 0;
   out_7282894925285040778[41] = 0;
   out_7282894925285040778[42] = 0;
   out_7282894925285040778[43] = 0;
   out_7282894925285040778[44] = 0;
   out_7282894925285040778[45] = 0;
   out_7282894925285040778[46] = 0;
   out_7282894925285040778[47] = 0;
   out_7282894925285040778[48] = 0;
   out_7282894925285040778[49] = 0;
   out_7282894925285040778[50] = 0;
   out_7282894925285040778[51] = 0;
   out_7282894925285040778[52] = 0;
   out_7282894925285040778[53] = 0;
   out_7282894925285040778[54] = 0;
   out_7282894925285040778[55] = 0;
   out_7282894925285040778[56] = 1;
   out_7282894925285040778[57] = 0;
   out_7282894925285040778[58] = 0;
   out_7282894925285040778[59] = 0;
   out_7282894925285040778[60] = 0;
   out_7282894925285040778[61] = 0;
   out_7282894925285040778[62] = 0;
   out_7282894925285040778[63] = 0;
   out_7282894925285040778[64] = 0;
   out_7282894925285040778[65] = 0;
}
void h_33(double *state, double *unused, double *out_7157700613631361688) {
   out_7157700613631361688[0] = state[16];
   out_7157700613631361688[1] = state[17];
   out_7157700613631361688[2] = state[18];
}
void H_33(double *state, double *unused, double *out_489462350058268375) {
   out_489462350058268375[0] = 0;
   out_489462350058268375[1] = 0;
   out_489462350058268375[2] = 0;
   out_489462350058268375[3] = 0;
   out_489462350058268375[4] = 0;
   out_489462350058268375[5] = 0;
   out_489462350058268375[6] = 0;
   out_489462350058268375[7] = 0;
   out_489462350058268375[8] = 0;
   out_489462350058268375[9] = 0;
   out_489462350058268375[10] = 0;
   out_489462350058268375[11] = 0;
   out_489462350058268375[12] = 0;
   out_489462350058268375[13] = 0;
   out_489462350058268375[14] = 0;
   out_489462350058268375[15] = 0;
   out_489462350058268375[16] = 1;
   out_489462350058268375[17] = 0;
   out_489462350058268375[18] = 0;
   out_489462350058268375[19] = 0;
   out_489462350058268375[20] = 0;
   out_489462350058268375[21] = 0;
   out_489462350058268375[22] = 0;
   out_489462350058268375[23] = 0;
   out_489462350058268375[24] = 0;
   out_489462350058268375[25] = 0;
   out_489462350058268375[26] = 0;
   out_489462350058268375[27] = 0;
   out_489462350058268375[28] = 0;
   out_489462350058268375[29] = 0;
   out_489462350058268375[30] = 0;
   out_489462350058268375[31] = 0;
   out_489462350058268375[32] = 0;
   out_489462350058268375[33] = 0;
   out_489462350058268375[34] = 0;
   out_489462350058268375[35] = 0;
   out_489462350058268375[36] = 0;
   out_489462350058268375[37] = 0;
   out_489462350058268375[38] = 0;
   out_489462350058268375[39] = 1;
   out_489462350058268375[40] = 0;
   out_489462350058268375[41] = 0;
   out_489462350058268375[42] = 0;
   out_489462350058268375[43] = 0;
   out_489462350058268375[44] = 0;
   out_489462350058268375[45] = 0;
   out_489462350058268375[46] = 0;
   out_489462350058268375[47] = 0;
   out_489462350058268375[48] = 0;
   out_489462350058268375[49] = 0;
   out_489462350058268375[50] = 0;
   out_489462350058268375[51] = 0;
   out_489462350058268375[52] = 0;
   out_489462350058268375[53] = 0;
   out_489462350058268375[54] = 0;
   out_489462350058268375[55] = 0;
   out_489462350058268375[56] = 0;
   out_489462350058268375[57] = 0;
   out_489462350058268375[58] = 0;
   out_489462350058268375[59] = 0;
   out_489462350058268375[60] = 0;
   out_489462350058268375[61] = 0;
   out_489462350058268375[62] = 1;
   out_489462350058268375[63] = 0;
   out_489462350058268375[64] = 0;
   out_489462350058268375[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8113807940926516597) {
  H(in_vec, out_8113807940926516597);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_2092809685863178055) {
  err_fun(nom_x, delta_x, out_2092809685863178055);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_3421515454134109807) {
  inv_err_fun(nom_x, true_x, out_3421515454134109807);
}
void live_H_mod_fun(double *state, double *out_6554889491242616946) {
  H_mod_fun(state, out_6554889491242616946);
}
void live_f_fun(double *state, double dt, double *out_9182012806774954626) {
  f_fun(state,  dt, out_9182012806774954626);
}
void live_F_fun(double *state, double dt, double *out_7401538424910221993) {
  F_fun(state,  dt, out_7401538424910221993);
}
void live_h_4(double *state, double *unused, double *out_8754747726339912654) {
  h_4(state, unused, out_8754747726339912654);
}
void live_H_4(double *state, double *unused, double *out_7041705278655450133) {
  H_4(state, unused, out_7041705278655450133);
}
void live_h_9(double *state, double *unused, double *out_5011073053647797133) {
  h_9(state, unused, out_5011073053647797133);
}
void live_H_9(double *state, double *unused, double *out_7282894925285040778) {
  H_9(state, unused, out_7282894925285040778);
}
void live_h_10(double *state, double *unused, double *out_4243429423726629818) {
  h_10(state, unused, out_4243429423726629818);
}
void live_H_10(double *state, double *unused, double *out_942872869499217494) {
  H_10(state, unused, out_942872869499217494);
}
void live_h_12(double *state, double *unused, double *out_5998376949331212348) {
  h_12(state, unused, out_5998376949331212348);
}
void live_H_12(double *state, double *unused, double *out_6385582387022139688) {
  H_12(state, unused, out_6385582387022139688);
}
void live_h_35(double *state, double *unused, double *out_1766895848976826124) {
  h_35(state, unused, out_1766895848976826124);
}
void live_H_35(double *state, double *unused, double *out_3640019354697125979) {
  H_35(state, unused, out_3640019354697125979);
}
void live_h_32(double *state, double *unused, double *out_4213948107983593284) {
  h_32(state, unused, out_4213948107983593284);
}
void live_H_32(double *state, double *unused, double *out_6189668098356148439) {
  H_32(state, unused, out_6189668098356148439);
}
void live_h_13(double *state, double *unused, double *out_6455669129529788023) {
  h_13(state, unused, out_6455669129529788023);
}
void live_H_13(double *state, double *unused, double *out_4686926174906085286) {
  H_13(state, unused, out_4686926174906085286);
}
void live_h_14(double *state, double *unused, double *out_5011073053647797133) {
  h_14(state, unused, out_5011073053647797133);
}
void live_H_14(double *state, double *unused, double *out_7282894925285040778) {
  H_14(state, unused, out_7282894925285040778);
}
void live_h_33(double *state, double *unused, double *out_7157700613631361688) {
  h_33(state, unused, out_7157700613631361688);
}
void live_H_33(double *state, double *unused, double *out_489462350058268375) {
  H_33(state, unused, out_489462350058268375);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
