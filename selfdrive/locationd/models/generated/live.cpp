#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_6390981214311888307) {
   out_6390981214311888307[0] = 0;
   out_6390981214311888307[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_6390981214311888307[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_6390981214311888307[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_6390981214311888307[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_6390981214311888307[5] = -sin(in_vec[1]);
   out_6390981214311888307[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6390981214311888307[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6390981214311888307[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_6390981214311888307[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_6390981214311888307[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_6390981214311888307[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_6390981214311888307[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_6390981214311888307[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_6390981214311888307[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_6390981214311888307[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_6390981214311888307[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_6390981214311888307[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_882957614718628947) {
   out_882957614718628947[0] = delta_x[0] + nom_x[0];
   out_882957614718628947[1] = delta_x[1] + nom_x[1];
   out_882957614718628947[2] = delta_x[2] + nom_x[2];
   out_882957614718628947[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_882957614718628947[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_882957614718628947[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_882957614718628947[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_882957614718628947[7] = delta_x[6] + nom_x[7];
   out_882957614718628947[8] = delta_x[7] + nom_x[8];
   out_882957614718628947[9] = delta_x[8] + nom_x[9];
   out_882957614718628947[10] = delta_x[9] + nom_x[10];
   out_882957614718628947[11] = delta_x[10] + nom_x[11];
   out_882957614718628947[12] = delta_x[11] + nom_x[12];
   out_882957614718628947[13] = delta_x[12] + nom_x[13];
   out_882957614718628947[14] = delta_x[13] + nom_x[14];
   out_882957614718628947[15] = delta_x[14] + nom_x[15];
   out_882957614718628947[16] = delta_x[15] + nom_x[16];
   out_882957614718628947[17] = delta_x[16] + nom_x[17];
   out_882957614718628947[18] = delta_x[17] + nom_x[18];
   out_882957614718628947[19] = delta_x[18] + nom_x[19];
   out_882957614718628947[20] = delta_x[19] + nom_x[20];
   out_882957614718628947[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5466271201173463961) {
   out_5466271201173463961[0] = -nom_x[0] + true_x[0];
   out_5466271201173463961[1] = -nom_x[1] + true_x[1];
   out_5466271201173463961[2] = -nom_x[2] + true_x[2];
   out_5466271201173463961[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5466271201173463961[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5466271201173463961[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5466271201173463961[6] = -nom_x[7] + true_x[7];
   out_5466271201173463961[7] = -nom_x[8] + true_x[8];
   out_5466271201173463961[8] = -nom_x[9] + true_x[9];
   out_5466271201173463961[9] = -nom_x[10] + true_x[10];
   out_5466271201173463961[10] = -nom_x[11] + true_x[11];
   out_5466271201173463961[11] = -nom_x[12] + true_x[12];
   out_5466271201173463961[12] = -nom_x[13] + true_x[13];
   out_5466271201173463961[13] = -nom_x[14] + true_x[14];
   out_5466271201173463961[14] = -nom_x[15] + true_x[15];
   out_5466271201173463961[15] = -nom_x[16] + true_x[16];
   out_5466271201173463961[16] = -nom_x[17] + true_x[17];
   out_5466271201173463961[17] = -nom_x[18] + true_x[18];
   out_5466271201173463961[18] = -nom_x[19] + true_x[19];
   out_5466271201173463961[19] = -nom_x[20] + true_x[20];
   out_5466271201173463961[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4420921285576756995) {
   out_4420921285576756995[0] = 1.0;
   out_4420921285576756995[1] = 0;
   out_4420921285576756995[2] = 0;
   out_4420921285576756995[3] = 0;
   out_4420921285576756995[4] = 0;
   out_4420921285576756995[5] = 0;
   out_4420921285576756995[6] = 0;
   out_4420921285576756995[7] = 0;
   out_4420921285576756995[8] = 0;
   out_4420921285576756995[9] = 0;
   out_4420921285576756995[10] = 0;
   out_4420921285576756995[11] = 0;
   out_4420921285576756995[12] = 0;
   out_4420921285576756995[13] = 0;
   out_4420921285576756995[14] = 0;
   out_4420921285576756995[15] = 0;
   out_4420921285576756995[16] = 0;
   out_4420921285576756995[17] = 0;
   out_4420921285576756995[18] = 0;
   out_4420921285576756995[19] = 0;
   out_4420921285576756995[20] = 0;
   out_4420921285576756995[21] = 0;
   out_4420921285576756995[22] = 1.0;
   out_4420921285576756995[23] = 0;
   out_4420921285576756995[24] = 0;
   out_4420921285576756995[25] = 0;
   out_4420921285576756995[26] = 0;
   out_4420921285576756995[27] = 0;
   out_4420921285576756995[28] = 0;
   out_4420921285576756995[29] = 0;
   out_4420921285576756995[30] = 0;
   out_4420921285576756995[31] = 0;
   out_4420921285576756995[32] = 0;
   out_4420921285576756995[33] = 0;
   out_4420921285576756995[34] = 0;
   out_4420921285576756995[35] = 0;
   out_4420921285576756995[36] = 0;
   out_4420921285576756995[37] = 0;
   out_4420921285576756995[38] = 0;
   out_4420921285576756995[39] = 0;
   out_4420921285576756995[40] = 0;
   out_4420921285576756995[41] = 0;
   out_4420921285576756995[42] = 0;
   out_4420921285576756995[43] = 0;
   out_4420921285576756995[44] = 1.0;
   out_4420921285576756995[45] = 0;
   out_4420921285576756995[46] = 0;
   out_4420921285576756995[47] = 0;
   out_4420921285576756995[48] = 0;
   out_4420921285576756995[49] = 0;
   out_4420921285576756995[50] = 0;
   out_4420921285576756995[51] = 0;
   out_4420921285576756995[52] = 0;
   out_4420921285576756995[53] = 0;
   out_4420921285576756995[54] = 0;
   out_4420921285576756995[55] = 0;
   out_4420921285576756995[56] = 0;
   out_4420921285576756995[57] = 0;
   out_4420921285576756995[58] = 0;
   out_4420921285576756995[59] = 0;
   out_4420921285576756995[60] = 0;
   out_4420921285576756995[61] = 0;
   out_4420921285576756995[62] = 0;
   out_4420921285576756995[63] = 0;
   out_4420921285576756995[64] = 0;
   out_4420921285576756995[65] = 0;
   out_4420921285576756995[66] = -0.5*state[4];
   out_4420921285576756995[67] = -0.5*state[5];
   out_4420921285576756995[68] = -0.5*state[6];
   out_4420921285576756995[69] = 0;
   out_4420921285576756995[70] = 0;
   out_4420921285576756995[71] = 0;
   out_4420921285576756995[72] = 0;
   out_4420921285576756995[73] = 0;
   out_4420921285576756995[74] = 0;
   out_4420921285576756995[75] = 0;
   out_4420921285576756995[76] = 0;
   out_4420921285576756995[77] = 0;
   out_4420921285576756995[78] = 0;
   out_4420921285576756995[79] = 0;
   out_4420921285576756995[80] = 0;
   out_4420921285576756995[81] = 0;
   out_4420921285576756995[82] = 0;
   out_4420921285576756995[83] = 0;
   out_4420921285576756995[84] = 0;
   out_4420921285576756995[85] = 0;
   out_4420921285576756995[86] = 0;
   out_4420921285576756995[87] = 0.5*state[3];
   out_4420921285576756995[88] = 0.5*state[6];
   out_4420921285576756995[89] = -0.5*state[5];
   out_4420921285576756995[90] = 0;
   out_4420921285576756995[91] = 0;
   out_4420921285576756995[92] = 0;
   out_4420921285576756995[93] = 0;
   out_4420921285576756995[94] = 0;
   out_4420921285576756995[95] = 0;
   out_4420921285576756995[96] = 0;
   out_4420921285576756995[97] = 0;
   out_4420921285576756995[98] = 0;
   out_4420921285576756995[99] = 0;
   out_4420921285576756995[100] = 0;
   out_4420921285576756995[101] = 0;
   out_4420921285576756995[102] = 0;
   out_4420921285576756995[103] = 0;
   out_4420921285576756995[104] = 0;
   out_4420921285576756995[105] = 0;
   out_4420921285576756995[106] = 0;
   out_4420921285576756995[107] = 0;
   out_4420921285576756995[108] = -0.5*state[6];
   out_4420921285576756995[109] = 0.5*state[3];
   out_4420921285576756995[110] = 0.5*state[4];
   out_4420921285576756995[111] = 0;
   out_4420921285576756995[112] = 0;
   out_4420921285576756995[113] = 0;
   out_4420921285576756995[114] = 0;
   out_4420921285576756995[115] = 0;
   out_4420921285576756995[116] = 0;
   out_4420921285576756995[117] = 0;
   out_4420921285576756995[118] = 0;
   out_4420921285576756995[119] = 0;
   out_4420921285576756995[120] = 0;
   out_4420921285576756995[121] = 0;
   out_4420921285576756995[122] = 0;
   out_4420921285576756995[123] = 0;
   out_4420921285576756995[124] = 0;
   out_4420921285576756995[125] = 0;
   out_4420921285576756995[126] = 0;
   out_4420921285576756995[127] = 0;
   out_4420921285576756995[128] = 0;
   out_4420921285576756995[129] = 0.5*state[5];
   out_4420921285576756995[130] = -0.5*state[4];
   out_4420921285576756995[131] = 0.5*state[3];
   out_4420921285576756995[132] = 0;
   out_4420921285576756995[133] = 0;
   out_4420921285576756995[134] = 0;
   out_4420921285576756995[135] = 0;
   out_4420921285576756995[136] = 0;
   out_4420921285576756995[137] = 0;
   out_4420921285576756995[138] = 0;
   out_4420921285576756995[139] = 0;
   out_4420921285576756995[140] = 0;
   out_4420921285576756995[141] = 0;
   out_4420921285576756995[142] = 0;
   out_4420921285576756995[143] = 0;
   out_4420921285576756995[144] = 0;
   out_4420921285576756995[145] = 0;
   out_4420921285576756995[146] = 0;
   out_4420921285576756995[147] = 0;
   out_4420921285576756995[148] = 0;
   out_4420921285576756995[149] = 0;
   out_4420921285576756995[150] = 0;
   out_4420921285576756995[151] = 0;
   out_4420921285576756995[152] = 0;
   out_4420921285576756995[153] = 1.0;
   out_4420921285576756995[154] = 0;
   out_4420921285576756995[155] = 0;
   out_4420921285576756995[156] = 0;
   out_4420921285576756995[157] = 0;
   out_4420921285576756995[158] = 0;
   out_4420921285576756995[159] = 0;
   out_4420921285576756995[160] = 0;
   out_4420921285576756995[161] = 0;
   out_4420921285576756995[162] = 0;
   out_4420921285576756995[163] = 0;
   out_4420921285576756995[164] = 0;
   out_4420921285576756995[165] = 0;
   out_4420921285576756995[166] = 0;
   out_4420921285576756995[167] = 0;
   out_4420921285576756995[168] = 0;
   out_4420921285576756995[169] = 0;
   out_4420921285576756995[170] = 0;
   out_4420921285576756995[171] = 0;
   out_4420921285576756995[172] = 0;
   out_4420921285576756995[173] = 0;
   out_4420921285576756995[174] = 0;
   out_4420921285576756995[175] = 1.0;
   out_4420921285576756995[176] = 0;
   out_4420921285576756995[177] = 0;
   out_4420921285576756995[178] = 0;
   out_4420921285576756995[179] = 0;
   out_4420921285576756995[180] = 0;
   out_4420921285576756995[181] = 0;
   out_4420921285576756995[182] = 0;
   out_4420921285576756995[183] = 0;
   out_4420921285576756995[184] = 0;
   out_4420921285576756995[185] = 0;
   out_4420921285576756995[186] = 0;
   out_4420921285576756995[187] = 0;
   out_4420921285576756995[188] = 0;
   out_4420921285576756995[189] = 0;
   out_4420921285576756995[190] = 0;
   out_4420921285576756995[191] = 0;
   out_4420921285576756995[192] = 0;
   out_4420921285576756995[193] = 0;
   out_4420921285576756995[194] = 0;
   out_4420921285576756995[195] = 0;
   out_4420921285576756995[196] = 0;
   out_4420921285576756995[197] = 1.0;
   out_4420921285576756995[198] = 0;
   out_4420921285576756995[199] = 0;
   out_4420921285576756995[200] = 0;
   out_4420921285576756995[201] = 0;
   out_4420921285576756995[202] = 0;
   out_4420921285576756995[203] = 0;
   out_4420921285576756995[204] = 0;
   out_4420921285576756995[205] = 0;
   out_4420921285576756995[206] = 0;
   out_4420921285576756995[207] = 0;
   out_4420921285576756995[208] = 0;
   out_4420921285576756995[209] = 0;
   out_4420921285576756995[210] = 0;
   out_4420921285576756995[211] = 0;
   out_4420921285576756995[212] = 0;
   out_4420921285576756995[213] = 0;
   out_4420921285576756995[214] = 0;
   out_4420921285576756995[215] = 0;
   out_4420921285576756995[216] = 0;
   out_4420921285576756995[217] = 0;
   out_4420921285576756995[218] = 0;
   out_4420921285576756995[219] = 1.0;
   out_4420921285576756995[220] = 0;
   out_4420921285576756995[221] = 0;
   out_4420921285576756995[222] = 0;
   out_4420921285576756995[223] = 0;
   out_4420921285576756995[224] = 0;
   out_4420921285576756995[225] = 0;
   out_4420921285576756995[226] = 0;
   out_4420921285576756995[227] = 0;
   out_4420921285576756995[228] = 0;
   out_4420921285576756995[229] = 0;
   out_4420921285576756995[230] = 0;
   out_4420921285576756995[231] = 0;
   out_4420921285576756995[232] = 0;
   out_4420921285576756995[233] = 0;
   out_4420921285576756995[234] = 0;
   out_4420921285576756995[235] = 0;
   out_4420921285576756995[236] = 0;
   out_4420921285576756995[237] = 0;
   out_4420921285576756995[238] = 0;
   out_4420921285576756995[239] = 0;
   out_4420921285576756995[240] = 0;
   out_4420921285576756995[241] = 1.0;
   out_4420921285576756995[242] = 0;
   out_4420921285576756995[243] = 0;
   out_4420921285576756995[244] = 0;
   out_4420921285576756995[245] = 0;
   out_4420921285576756995[246] = 0;
   out_4420921285576756995[247] = 0;
   out_4420921285576756995[248] = 0;
   out_4420921285576756995[249] = 0;
   out_4420921285576756995[250] = 0;
   out_4420921285576756995[251] = 0;
   out_4420921285576756995[252] = 0;
   out_4420921285576756995[253] = 0;
   out_4420921285576756995[254] = 0;
   out_4420921285576756995[255] = 0;
   out_4420921285576756995[256] = 0;
   out_4420921285576756995[257] = 0;
   out_4420921285576756995[258] = 0;
   out_4420921285576756995[259] = 0;
   out_4420921285576756995[260] = 0;
   out_4420921285576756995[261] = 0;
   out_4420921285576756995[262] = 0;
   out_4420921285576756995[263] = 1.0;
   out_4420921285576756995[264] = 0;
   out_4420921285576756995[265] = 0;
   out_4420921285576756995[266] = 0;
   out_4420921285576756995[267] = 0;
   out_4420921285576756995[268] = 0;
   out_4420921285576756995[269] = 0;
   out_4420921285576756995[270] = 0;
   out_4420921285576756995[271] = 0;
   out_4420921285576756995[272] = 0;
   out_4420921285576756995[273] = 0;
   out_4420921285576756995[274] = 0;
   out_4420921285576756995[275] = 0;
   out_4420921285576756995[276] = 0;
   out_4420921285576756995[277] = 0;
   out_4420921285576756995[278] = 0;
   out_4420921285576756995[279] = 0;
   out_4420921285576756995[280] = 0;
   out_4420921285576756995[281] = 0;
   out_4420921285576756995[282] = 0;
   out_4420921285576756995[283] = 0;
   out_4420921285576756995[284] = 0;
   out_4420921285576756995[285] = 1.0;
   out_4420921285576756995[286] = 0;
   out_4420921285576756995[287] = 0;
   out_4420921285576756995[288] = 0;
   out_4420921285576756995[289] = 0;
   out_4420921285576756995[290] = 0;
   out_4420921285576756995[291] = 0;
   out_4420921285576756995[292] = 0;
   out_4420921285576756995[293] = 0;
   out_4420921285576756995[294] = 0;
   out_4420921285576756995[295] = 0;
   out_4420921285576756995[296] = 0;
   out_4420921285576756995[297] = 0;
   out_4420921285576756995[298] = 0;
   out_4420921285576756995[299] = 0;
   out_4420921285576756995[300] = 0;
   out_4420921285576756995[301] = 0;
   out_4420921285576756995[302] = 0;
   out_4420921285576756995[303] = 0;
   out_4420921285576756995[304] = 0;
   out_4420921285576756995[305] = 0;
   out_4420921285576756995[306] = 0;
   out_4420921285576756995[307] = 1.0;
   out_4420921285576756995[308] = 0;
   out_4420921285576756995[309] = 0;
   out_4420921285576756995[310] = 0;
   out_4420921285576756995[311] = 0;
   out_4420921285576756995[312] = 0;
   out_4420921285576756995[313] = 0;
   out_4420921285576756995[314] = 0;
   out_4420921285576756995[315] = 0;
   out_4420921285576756995[316] = 0;
   out_4420921285576756995[317] = 0;
   out_4420921285576756995[318] = 0;
   out_4420921285576756995[319] = 0;
   out_4420921285576756995[320] = 0;
   out_4420921285576756995[321] = 0;
   out_4420921285576756995[322] = 0;
   out_4420921285576756995[323] = 0;
   out_4420921285576756995[324] = 0;
   out_4420921285576756995[325] = 0;
   out_4420921285576756995[326] = 0;
   out_4420921285576756995[327] = 0;
   out_4420921285576756995[328] = 0;
   out_4420921285576756995[329] = 1.0;
   out_4420921285576756995[330] = 0;
   out_4420921285576756995[331] = 0;
   out_4420921285576756995[332] = 0;
   out_4420921285576756995[333] = 0;
   out_4420921285576756995[334] = 0;
   out_4420921285576756995[335] = 0;
   out_4420921285576756995[336] = 0;
   out_4420921285576756995[337] = 0;
   out_4420921285576756995[338] = 0;
   out_4420921285576756995[339] = 0;
   out_4420921285576756995[340] = 0;
   out_4420921285576756995[341] = 0;
   out_4420921285576756995[342] = 0;
   out_4420921285576756995[343] = 0;
   out_4420921285576756995[344] = 0;
   out_4420921285576756995[345] = 0;
   out_4420921285576756995[346] = 0;
   out_4420921285576756995[347] = 0;
   out_4420921285576756995[348] = 0;
   out_4420921285576756995[349] = 0;
   out_4420921285576756995[350] = 0;
   out_4420921285576756995[351] = 1.0;
   out_4420921285576756995[352] = 0;
   out_4420921285576756995[353] = 0;
   out_4420921285576756995[354] = 0;
   out_4420921285576756995[355] = 0;
   out_4420921285576756995[356] = 0;
   out_4420921285576756995[357] = 0;
   out_4420921285576756995[358] = 0;
   out_4420921285576756995[359] = 0;
   out_4420921285576756995[360] = 0;
   out_4420921285576756995[361] = 0;
   out_4420921285576756995[362] = 0;
   out_4420921285576756995[363] = 0;
   out_4420921285576756995[364] = 0;
   out_4420921285576756995[365] = 0;
   out_4420921285576756995[366] = 0;
   out_4420921285576756995[367] = 0;
   out_4420921285576756995[368] = 0;
   out_4420921285576756995[369] = 0;
   out_4420921285576756995[370] = 0;
   out_4420921285576756995[371] = 0;
   out_4420921285576756995[372] = 0;
   out_4420921285576756995[373] = 1.0;
   out_4420921285576756995[374] = 0;
   out_4420921285576756995[375] = 0;
   out_4420921285576756995[376] = 0;
   out_4420921285576756995[377] = 0;
   out_4420921285576756995[378] = 0;
   out_4420921285576756995[379] = 0;
   out_4420921285576756995[380] = 0;
   out_4420921285576756995[381] = 0;
   out_4420921285576756995[382] = 0;
   out_4420921285576756995[383] = 0;
   out_4420921285576756995[384] = 0;
   out_4420921285576756995[385] = 0;
   out_4420921285576756995[386] = 0;
   out_4420921285576756995[387] = 0;
   out_4420921285576756995[388] = 0;
   out_4420921285576756995[389] = 0;
   out_4420921285576756995[390] = 0;
   out_4420921285576756995[391] = 0;
   out_4420921285576756995[392] = 0;
   out_4420921285576756995[393] = 0;
   out_4420921285576756995[394] = 0;
   out_4420921285576756995[395] = 1.0;
   out_4420921285576756995[396] = 0;
   out_4420921285576756995[397] = 0;
   out_4420921285576756995[398] = 0;
   out_4420921285576756995[399] = 0;
   out_4420921285576756995[400] = 0;
   out_4420921285576756995[401] = 0;
   out_4420921285576756995[402] = 0;
   out_4420921285576756995[403] = 0;
   out_4420921285576756995[404] = 0;
   out_4420921285576756995[405] = 0;
   out_4420921285576756995[406] = 0;
   out_4420921285576756995[407] = 0;
   out_4420921285576756995[408] = 0;
   out_4420921285576756995[409] = 0;
   out_4420921285576756995[410] = 0;
   out_4420921285576756995[411] = 0;
   out_4420921285576756995[412] = 0;
   out_4420921285576756995[413] = 0;
   out_4420921285576756995[414] = 0;
   out_4420921285576756995[415] = 0;
   out_4420921285576756995[416] = 0;
   out_4420921285576756995[417] = 1.0;
   out_4420921285576756995[418] = 0;
   out_4420921285576756995[419] = 0;
   out_4420921285576756995[420] = 0;
   out_4420921285576756995[421] = 0;
   out_4420921285576756995[422] = 0;
   out_4420921285576756995[423] = 0;
   out_4420921285576756995[424] = 0;
   out_4420921285576756995[425] = 0;
   out_4420921285576756995[426] = 0;
   out_4420921285576756995[427] = 0;
   out_4420921285576756995[428] = 0;
   out_4420921285576756995[429] = 0;
   out_4420921285576756995[430] = 0;
   out_4420921285576756995[431] = 0;
   out_4420921285576756995[432] = 0;
   out_4420921285576756995[433] = 0;
   out_4420921285576756995[434] = 0;
   out_4420921285576756995[435] = 0;
   out_4420921285576756995[436] = 0;
   out_4420921285576756995[437] = 0;
   out_4420921285576756995[438] = 0;
   out_4420921285576756995[439] = 1.0;
   out_4420921285576756995[440] = 0;
   out_4420921285576756995[441] = 0;
   out_4420921285576756995[442] = 0;
   out_4420921285576756995[443] = 0;
   out_4420921285576756995[444] = 0;
   out_4420921285576756995[445] = 0;
   out_4420921285576756995[446] = 0;
   out_4420921285576756995[447] = 0;
   out_4420921285576756995[448] = 0;
   out_4420921285576756995[449] = 0;
   out_4420921285576756995[450] = 0;
   out_4420921285576756995[451] = 0;
   out_4420921285576756995[452] = 0;
   out_4420921285576756995[453] = 0;
   out_4420921285576756995[454] = 0;
   out_4420921285576756995[455] = 0;
   out_4420921285576756995[456] = 0;
   out_4420921285576756995[457] = 0;
   out_4420921285576756995[458] = 0;
   out_4420921285576756995[459] = 0;
   out_4420921285576756995[460] = 0;
   out_4420921285576756995[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6928608778572202362) {
   out_6928608778572202362[0] = dt*state[7] + state[0];
   out_6928608778572202362[1] = dt*state[8] + state[1];
   out_6928608778572202362[2] = dt*state[9] + state[2];
   out_6928608778572202362[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6928608778572202362[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6928608778572202362[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6928608778572202362[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6928608778572202362[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6928608778572202362[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6928608778572202362[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6928608778572202362[10] = state[10];
   out_6928608778572202362[11] = state[11];
   out_6928608778572202362[12] = state[12];
   out_6928608778572202362[13] = state[13];
   out_6928608778572202362[14] = state[14];
   out_6928608778572202362[15] = state[15];
   out_6928608778572202362[16] = state[16];
   out_6928608778572202362[17] = state[17];
   out_6928608778572202362[18] = state[18];
   out_6928608778572202362[19] = state[19];
   out_6928608778572202362[20] = state[20];
   out_6928608778572202362[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2207546296181202222) {
   out_2207546296181202222[0] = 1;
   out_2207546296181202222[1] = 0;
   out_2207546296181202222[2] = 0;
   out_2207546296181202222[3] = 0;
   out_2207546296181202222[4] = 0;
   out_2207546296181202222[5] = 0;
   out_2207546296181202222[6] = dt;
   out_2207546296181202222[7] = 0;
   out_2207546296181202222[8] = 0;
   out_2207546296181202222[9] = 0;
   out_2207546296181202222[10] = 0;
   out_2207546296181202222[11] = 0;
   out_2207546296181202222[12] = 0;
   out_2207546296181202222[13] = 0;
   out_2207546296181202222[14] = 0;
   out_2207546296181202222[15] = 0;
   out_2207546296181202222[16] = 0;
   out_2207546296181202222[17] = 0;
   out_2207546296181202222[18] = 0;
   out_2207546296181202222[19] = 0;
   out_2207546296181202222[20] = 0;
   out_2207546296181202222[21] = 0;
   out_2207546296181202222[22] = 1;
   out_2207546296181202222[23] = 0;
   out_2207546296181202222[24] = 0;
   out_2207546296181202222[25] = 0;
   out_2207546296181202222[26] = 0;
   out_2207546296181202222[27] = 0;
   out_2207546296181202222[28] = dt;
   out_2207546296181202222[29] = 0;
   out_2207546296181202222[30] = 0;
   out_2207546296181202222[31] = 0;
   out_2207546296181202222[32] = 0;
   out_2207546296181202222[33] = 0;
   out_2207546296181202222[34] = 0;
   out_2207546296181202222[35] = 0;
   out_2207546296181202222[36] = 0;
   out_2207546296181202222[37] = 0;
   out_2207546296181202222[38] = 0;
   out_2207546296181202222[39] = 0;
   out_2207546296181202222[40] = 0;
   out_2207546296181202222[41] = 0;
   out_2207546296181202222[42] = 0;
   out_2207546296181202222[43] = 0;
   out_2207546296181202222[44] = 1;
   out_2207546296181202222[45] = 0;
   out_2207546296181202222[46] = 0;
   out_2207546296181202222[47] = 0;
   out_2207546296181202222[48] = 0;
   out_2207546296181202222[49] = 0;
   out_2207546296181202222[50] = dt;
   out_2207546296181202222[51] = 0;
   out_2207546296181202222[52] = 0;
   out_2207546296181202222[53] = 0;
   out_2207546296181202222[54] = 0;
   out_2207546296181202222[55] = 0;
   out_2207546296181202222[56] = 0;
   out_2207546296181202222[57] = 0;
   out_2207546296181202222[58] = 0;
   out_2207546296181202222[59] = 0;
   out_2207546296181202222[60] = 0;
   out_2207546296181202222[61] = 0;
   out_2207546296181202222[62] = 0;
   out_2207546296181202222[63] = 0;
   out_2207546296181202222[64] = 0;
   out_2207546296181202222[65] = 0;
   out_2207546296181202222[66] = 1;
   out_2207546296181202222[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2207546296181202222[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2207546296181202222[69] = 0;
   out_2207546296181202222[70] = 0;
   out_2207546296181202222[71] = 0;
   out_2207546296181202222[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2207546296181202222[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2207546296181202222[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2207546296181202222[75] = 0;
   out_2207546296181202222[76] = 0;
   out_2207546296181202222[77] = 0;
   out_2207546296181202222[78] = 0;
   out_2207546296181202222[79] = 0;
   out_2207546296181202222[80] = 0;
   out_2207546296181202222[81] = 0;
   out_2207546296181202222[82] = 0;
   out_2207546296181202222[83] = 0;
   out_2207546296181202222[84] = 0;
   out_2207546296181202222[85] = 0;
   out_2207546296181202222[86] = 0;
   out_2207546296181202222[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2207546296181202222[88] = 1;
   out_2207546296181202222[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2207546296181202222[90] = 0;
   out_2207546296181202222[91] = 0;
   out_2207546296181202222[92] = 0;
   out_2207546296181202222[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2207546296181202222[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2207546296181202222[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2207546296181202222[96] = 0;
   out_2207546296181202222[97] = 0;
   out_2207546296181202222[98] = 0;
   out_2207546296181202222[99] = 0;
   out_2207546296181202222[100] = 0;
   out_2207546296181202222[101] = 0;
   out_2207546296181202222[102] = 0;
   out_2207546296181202222[103] = 0;
   out_2207546296181202222[104] = 0;
   out_2207546296181202222[105] = 0;
   out_2207546296181202222[106] = 0;
   out_2207546296181202222[107] = 0;
   out_2207546296181202222[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2207546296181202222[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2207546296181202222[110] = 1;
   out_2207546296181202222[111] = 0;
   out_2207546296181202222[112] = 0;
   out_2207546296181202222[113] = 0;
   out_2207546296181202222[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2207546296181202222[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2207546296181202222[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2207546296181202222[117] = 0;
   out_2207546296181202222[118] = 0;
   out_2207546296181202222[119] = 0;
   out_2207546296181202222[120] = 0;
   out_2207546296181202222[121] = 0;
   out_2207546296181202222[122] = 0;
   out_2207546296181202222[123] = 0;
   out_2207546296181202222[124] = 0;
   out_2207546296181202222[125] = 0;
   out_2207546296181202222[126] = 0;
   out_2207546296181202222[127] = 0;
   out_2207546296181202222[128] = 0;
   out_2207546296181202222[129] = 0;
   out_2207546296181202222[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2207546296181202222[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2207546296181202222[132] = 1;
   out_2207546296181202222[133] = 0;
   out_2207546296181202222[134] = 0;
   out_2207546296181202222[135] = 0;
   out_2207546296181202222[136] = 0;
   out_2207546296181202222[137] = 0;
   out_2207546296181202222[138] = 0;
   out_2207546296181202222[139] = 0;
   out_2207546296181202222[140] = 0;
   out_2207546296181202222[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2207546296181202222[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2207546296181202222[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2207546296181202222[144] = 0;
   out_2207546296181202222[145] = 0;
   out_2207546296181202222[146] = 0;
   out_2207546296181202222[147] = 0;
   out_2207546296181202222[148] = 0;
   out_2207546296181202222[149] = 0;
   out_2207546296181202222[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2207546296181202222[151] = 0;
   out_2207546296181202222[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2207546296181202222[153] = 0;
   out_2207546296181202222[154] = 1;
   out_2207546296181202222[155] = 0;
   out_2207546296181202222[156] = 0;
   out_2207546296181202222[157] = 0;
   out_2207546296181202222[158] = 0;
   out_2207546296181202222[159] = 0;
   out_2207546296181202222[160] = 0;
   out_2207546296181202222[161] = 0;
   out_2207546296181202222[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2207546296181202222[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2207546296181202222[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2207546296181202222[165] = 0;
   out_2207546296181202222[166] = 0;
   out_2207546296181202222[167] = 0;
   out_2207546296181202222[168] = 0;
   out_2207546296181202222[169] = 0;
   out_2207546296181202222[170] = 0;
   out_2207546296181202222[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2207546296181202222[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2207546296181202222[173] = 0;
   out_2207546296181202222[174] = 0;
   out_2207546296181202222[175] = 0;
   out_2207546296181202222[176] = 1;
   out_2207546296181202222[177] = 0;
   out_2207546296181202222[178] = 0;
   out_2207546296181202222[179] = 0;
   out_2207546296181202222[180] = 0;
   out_2207546296181202222[181] = 0;
   out_2207546296181202222[182] = 0;
   out_2207546296181202222[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2207546296181202222[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2207546296181202222[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2207546296181202222[186] = 0;
   out_2207546296181202222[187] = 0;
   out_2207546296181202222[188] = 0;
   out_2207546296181202222[189] = 0;
   out_2207546296181202222[190] = 0;
   out_2207546296181202222[191] = 0;
   out_2207546296181202222[192] = 0;
   out_2207546296181202222[193] = 0;
   out_2207546296181202222[194] = 0;
   out_2207546296181202222[195] = 0;
   out_2207546296181202222[196] = 0;
   out_2207546296181202222[197] = 0;
   out_2207546296181202222[198] = 1;
   out_2207546296181202222[199] = 0;
   out_2207546296181202222[200] = 0;
   out_2207546296181202222[201] = 0;
   out_2207546296181202222[202] = 0;
   out_2207546296181202222[203] = 0;
   out_2207546296181202222[204] = 0;
   out_2207546296181202222[205] = 0;
   out_2207546296181202222[206] = 0;
   out_2207546296181202222[207] = 0;
   out_2207546296181202222[208] = 0;
   out_2207546296181202222[209] = 0;
   out_2207546296181202222[210] = 0;
   out_2207546296181202222[211] = 0;
   out_2207546296181202222[212] = 0;
   out_2207546296181202222[213] = 0;
   out_2207546296181202222[214] = 0;
   out_2207546296181202222[215] = 0;
   out_2207546296181202222[216] = 0;
   out_2207546296181202222[217] = 0;
   out_2207546296181202222[218] = 0;
   out_2207546296181202222[219] = 0;
   out_2207546296181202222[220] = 1;
   out_2207546296181202222[221] = 0;
   out_2207546296181202222[222] = 0;
   out_2207546296181202222[223] = 0;
   out_2207546296181202222[224] = 0;
   out_2207546296181202222[225] = 0;
   out_2207546296181202222[226] = 0;
   out_2207546296181202222[227] = 0;
   out_2207546296181202222[228] = 0;
   out_2207546296181202222[229] = 0;
   out_2207546296181202222[230] = 0;
   out_2207546296181202222[231] = 0;
   out_2207546296181202222[232] = 0;
   out_2207546296181202222[233] = 0;
   out_2207546296181202222[234] = 0;
   out_2207546296181202222[235] = 0;
   out_2207546296181202222[236] = 0;
   out_2207546296181202222[237] = 0;
   out_2207546296181202222[238] = 0;
   out_2207546296181202222[239] = 0;
   out_2207546296181202222[240] = 0;
   out_2207546296181202222[241] = 0;
   out_2207546296181202222[242] = 1;
   out_2207546296181202222[243] = 0;
   out_2207546296181202222[244] = 0;
   out_2207546296181202222[245] = 0;
   out_2207546296181202222[246] = 0;
   out_2207546296181202222[247] = 0;
   out_2207546296181202222[248] = 0;
   out_2207546296181202222[249] = 0;
   out_2207546296181202222[250] = 0;
   out_2207546296181202222[251] = 0;
   out_2207546296181202222[252] = 0;
   out_2207546296181202222[253] = 0;
   out_2207546296181202222[254] = 0;
   out_2207546296181202222[255] = 0;
   out_2207546296181202222[256] = 0;
   out_2207546296181202222[257] = 0;
   out_2207546296181202222[258] = 0;
   out_2207546296181202222[259] = 0;
   out_2207546296181202222[260] = 0;
   out_2207546296181202222[261] = 0;
   out_2207546296181202222[262] = 0;
   out_2207546296181202222[263] = 0;
   out_2207546296181202222[264] = 1;
   out_2207546296181202222[265] = 0;
   out_2207546296181202222[266] = 0;
   out_2207546296181202222[267] = 0;
   out_2207546296181202222[268] = 0;
   out_2207546296181202222[269] = 0;
   out_2207546296181202222[270] = 0;
   out_2207546296181202222[271] = 0;
   out_2207546296181202222[272] = 0;
   out_2207546296181202222[273] = 0;
   out_2207546296181202222[274] = 0;
   out_2207546296181202222[275] = 0;
   out_2207546296181202222[276] = 0;
   out_2207546296181202222[277] = 0;
   out_2207546296181202222[278] = 0;
   out_2207546296181202222[279] = 0;
   out_2207546296181202222[280] = 0;
   out_2207546296181202222[281] = 0;
   out_2207546296181202222[282] = 0;
   out_2207546296181202222[283] = 0;
   out_2207546296181202222[284] = 0;
   out_2207546296181202222[285] = 0;
   out_2207546296181202222[286] = 1;
   out_2207546296181202222[287] = 0;
   out_2207546296181202222[288] = 0;
   out_2207546296181202222[289] = 0;
   out_2207546296181202222[290] = 0;
   out_2207546296181202222[291] = 0;
   out_2207546296181202222[292] = 0;
   out_2207546296181202222[293] = 0;
   out_2207546296181202222[294] = 0;
   out_2207546296181202222[295] = 0;
   out_2207546296181202222[296] = 0;
   out_2207546296181202222[297] = 0;
   out_2207546296181202222[298] = 0;
   out_2207546296181202222[299] = 0;
   out_2207546296181202222[300] = 0;
   out_2207546296181202222[301] = 0;
   out_2207546296181202222[302] = 0;
   out_2207546296181202222[303] = 0;
   out_2207546296181202222[304] = 0;
   out_2207546296181202222[305] = 0;
   out_2207546296181202222[306] = 0;
   out_2207546296181202222[307] = 0;
   out_2207546296181202222[308] = 1;
   out_2207546296181202222[309] = 0;
   out_2207546296181202222[310] = 0;
   out_2207546296181202222[311] = 0;
   out_2207546296181202222[312] = 0;
   out_2207546296181202222[313] = 0;
   out_2207546296181202222[314] = 0;
   out_2207546296181202222[315] = 0;
   out_2207546296181202222[316] = 0;
   out_2207546296181202222[317] = 0;
   out_2207546296181202222[318] = 0;
   out_2207546296181202222[319] = 0;
   out_2207546296181202222[320] = 0;
   out_2207546296181202222[321] = 0;
   out_2207546296181202222[322] = 0;
   out_2207546296181202222[323] = 0;
   out_2207546296181202222[324] = 0;
   out_2207546296181202222[325] = 0;
   out_2207546296181202222[326] = 0;
   out_2207546296181202222[327] = 0;
   out_2207546296181202222[328] = 0;
   out_2207546296181202222[329] = 0;
   out_2207546296181202222[330] = 1;
   out_2207546296181202222[331] = 0;
   out_2207546296181202222[332] = 0;
   out_2207546296181202222[333] = 0;
   out_2207546296181202222[334] = 0;
   out_2207546296181202222[335] = 0;
   out_2207546296181202222[336] = 0;
   out_2207546296181202222[337] = 0;
   out_2207546296181202222[338] = 0;
   out_2207546296181202222[339] = 0;
   out_2207546296181202222[340] = 0;
   out_2207546296181202222[341] = 0;
   out_2207546296181202222[342] = 0;
   out_2207546296181202222[343] = 0;
   out_2207546296181202222[344] = 0;
   out_2207546296181202222[345] = 0;
   out_2207546296181202222[346] = 0;
   out_2207546296181202222[347] = 0;
   out_2207546296181202222[348] = 0;
   out_2207546296181202222[349] = 0;
   out_2207546296181202222[350] = 0;
   out_2207546296181202222[351] = 0;
   out_2207546296181202222[352] = 1;
   out_2207546296181202222[353] = 0;
   out_2207546296181202222[354] = 0;
   out_2207546296181202222[355] = 0;
   out_2207546296181202222[356] = 0;
   out_2207546296181202222[357] = 0;
   out_2207546296181202222[358] = 0;
   out_2207546296181202222[359] = 0;
   out_2207546296181202222[360] = 0;
   out_2207546296181202222[361] = 0;
   out_2207546296181202222[362] = 0;
   out_2207546296181202222[363] = 0;
   out_2207546296181202222[364] = 0;
   out_2207546296181202222[365] = 0;
   out_2207546296181202222[366] = 0;
   out_2207546296181202222[367] = 0;
   out_2207546296181202222[368] = 0;
   out_2207546296181202222[369] = 0;
   out_2207546296181202222[370] = 0;
   out_2207546296181202222[371] = 0;
   out_2207546296181202222[372] = 0;
   out_2207546296181202222[373] = 0;
   out_2207546296181202222[374] = 1;
   out_2207546296181202222[375] = 0;
   out_2207546296181202222[376] = 0;
   out_2207546296181202222[377] = 0;
   out_2207546296181202222[378] = 0;
   out_2207546296181202222[379] = 0;
   out_2207546296181202222[380] = 0;
   out_2207546296181202222[381] = 0;
   out_2207546296181202222[382] = 0;
   out_2207546296181202222[383] = 0;
   out_2207546296181202222[384] = 0;
   out_2207546296181202222[385] = 0;
   out_2207546296181202222[386] = 0;
   out_2207546296181202222[387] = 0;
   out_2207546296181202222[388] = 0;
   out_2207546296181202222[389] = 0;
   out_2207546296181202222[390] = 0;
   out_2207546296181202222[391] = 0;
   out_2207546296181202222[392] = 0;
   out_2207546296181202222[393] = 0;
   out_2207546296181202222[394] = 0;
   out_2207546296181202222[395] = 0;
   out_2207546296181202222[396] = 1;
   out_2207546296181202222[397] = 0;
   out_2207546296181202222[398] = 0;
   out_2207546296181202222[399] = 0;
   out_2207546296181202222[400] = 0;
   out_2207546296181202222[401] = 0;
   out_2207546296181202222[402] = 0;
   out_2207546296181202222[403] = 0;
   out_2207546296181202222[404] = 0;
   out_2207546296181202222[405] = 0;
   out_2207546296181202222[406] = 0;
   out_2207546296181202222[407] = 0;
   out_2207546296181202222[408] = 0;
   out_2207546296181202222[409] = 0;
   out_2207546296181202222[410] = 0;
   out_2207546296181202222[411] = 0;
   out_2207546296181202222[412] = 0;
   out_2207546296181202222[413] = 0;
   out_2207546296181202222[414] = 0;
   out_2207546296181202222[415] = 0;
   out_2207546296181202222[416] = 0;
   out_2207546296181202222[417] = 0;
   out_2207546296181202222[418] = 1;
   out_2207546296181202222[419] = 0;
   out_2207546296181202222[420] = 0;
   out_2207546296181202222[421] = 0;
   out_2207546296181202222[422] = 0;
   out_2207546296181202222[423] = 0;
   out_2207546296181202222[424] = 0;
   out_2207546296181202222[425] = 0;
   out_2207546296181202222[426] = 0;
   out_2207546296181202222[427] = 0;
   out_2207546296181202222[428] = 0;
   out_2207546296181202222[429] = 0;
   out_2207546296181202222[430] = 0;
   out_2207546296181202222[431] = 0;
   out_2207546296181202222[432] = 0;
   out_2207546296181202222[433] = 0;
   out_2207546296181202222[434] = 0;
   out_2207546296181202222[435] = 0;
   out_2207546296181202222[436] = 0;
   out_2207546296181202222[437] = 0;
   out_2207546296181202222[438] = 0;
   out_2207546296181202222[439] = 0;
   out_2207546296181202222[440] = 1;
}
void h_4(double *state, double *unused, double *out_3859305731646109149) {
   out_3859305731646109149[0] = state[10] + state[13];
   out_3859305731646109149[1] = state[11] + state[14];
   out_3859305731646109149[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1758653816773236193) {
   out_1758653816773236193[0] = 0;
   out_1758653816773236193[1] = 0;
   out_1758653816773236193[2] = 0;
   out_1758653816773236193[3] = 0;
   out_1758653816773236193[4] = 0;
   out_1758653816773236193[5] = 0;
   out_1758653816773236193[6] = 0;
   out_1758653816773236193[7] = 0;
   out_1758653816773236193[8] = 0;
   out_1758653816773236193[9] = 0;
   out_1758653816773236193[10] = 1;
   out_1758653816773236193[11] = 0;
   out_1758653816773236193[12] = 0;
   out_1758653816773236193[13] = 1;
   out_1758653816773236193[14] = 0;
   out_1758653816773236193[15] = 0;
   out_1758653816773236193[16] = 0;
   out_1758653816773236193[17] = 0;
   out_1758653816773236193[18] = 0;
   out_1758653816773236193[19] = 0;
   out_1758653816773236193[20] = 0;
   out_1758653816773236193[21] = 0;
   out_1758653816773236193[22] = 0;
   out_1758653816773236193[23] = 0;
   out_1758653816773236193[24] = 0;
   out_1758653816773236193[25] = 0;
   out_1758653816773236193[26] = 0;
   out_1758653816773236193[27] = 0;
   out_1758653816773236193[28] = 0;
   out_1758653816773236193[29] = 0;
   out_1758653816773236193[30] = 0;
   out_1758653816773236193[31] = 0;
   out_1758653816773236193[32] = 0;
   out_1758653816773236193[33] = 1;
   out_1758653816773236193[34] = 0;
   out_1758653816773236193[35] = 0;
   out_1758653816773236193[36] = 1;
   out_1758653816773236193[37] = 0;
   out_1758653816773236193[38] = 0;
   out_1758653816773236193[39] = 0;
   out_1758653816773236193[40] = 0;
   out_1758653816773236193[41] = 0;
   out_1758653816773236193[42] = 0;
   out_1758653816773236193[43] = 0;
   out_1758653816773236193[44] = 0;
   out_1758653816773236193[45] = 0;
   out_1758653816773236193[46] = 0;
   out_1758653816773236193[47] = 0;
   out_1758653816773236193[48] = 0;
   out_1758653816773236193[49] = 0;
   out_1758653816773236193[50] = 0;
   out_1758653816773236193[51] = 0;
   out_1758653816773236193[52] = 0;
   out_1758653816773236193[53] = 0;
   out_1758653816773236193[54] = 0;
   out_1758653816773236193[55] = 0;
   out_1758653816773236193[56] = 1;
   out_1758653816773236193[57] = 0;
   out_1758653816773236193[58] = 0;
   out_1758653816773236193[59] = 1;
   out_1758653816773236193[60] = 0;
   out_1758653816773236193[61] = 0;
   out_1758653816773236193[62] = 0;
   out_1758653816773236193[63] = 0;
   out_1758653816773236193[64] = 0;
   out_1758653816773236193[65] = 0;
}
void h_9(double *state, double *unused, double *out_2955208736137635517) {
   out_2955208736137635517[0] = state[10];
   out_2955208736137635517[1] = state[11];
   out_2955208736137635517[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1130207735506843149) {
   out_1130207735506843149[0] = 0;
   out_1130207735506843149[1] = 0;
   out_1130207735506843149[2] = 0;
   out_1130207735506843149[3] = 0;
   out_1130207735506843149[4] = 0;
   out_1130207735506843149[5] = 0;
   out_1130207735506843149[6] = 0;
   out_1130207735506843149[7] = 0;
   out_1130207735506843149[8] = 0;
   out_1130207735506843149[9] = 0;
   out_1130207735506843149[10] = 1;
   out_1130207735506843149[11] = 0;
   out_1130207735506843149[12] = 0;
   out_1130207735506843149[13] = 0;
   out_1130207735506843149[14] = 0;
   out_1130207735506843149[15] = 0;
   out_1130207735506843149[16] = 0;
   out_1130207735506843149[17] = 0;
   out_1130207735506843149[18] = 0;
   out_1130207735506843149[19] = 0;
   out_1130207735506843149[20] = 0;
   out_1130207735506843149[21] = 0;
   out_1130207735506843149[22] = 0;
   out_1130207735506843149[23] = 0;
   out_1130207735506843149[24] = 0;
   out_1130207735506843149[25] = 0;
   out_1130207735506843149[26] = 0;
   out_1130207735506843149[27] = 0;
   out_1130207735506843149[28] = 0;
   out_1130207735506843149[29] = 0;
   out_1130207735506843149[30] = 0;
   out_1130207735506843149[31] = 0;
   out_1130207735506843149[32] = 0;
   out_1130207735506843149[33] = 1;
   out_1130207735506843149[34] = 0;
   out_1130207735506843149[35] = 0;
   out_1130207735506843149[36] = 0;
   out_1130207735506843149[37] = 0;
   out_1130207735506843149[38] = 0;
   out_1130207735506843149[39] = 0;
   out_1130207735506843149[40] = 0;
   out_1130207735506843149[41] = 0;
   out_1130207735506843149[42] = 0;
   out_1130207735506843149[43] = 0;
   out_1130207735506843149[44] = 0;
   out_1130207735506843149[45] = 0;
   out_1130207735506843149[46] = 0;
   out_1130207735506843149[47] = 0;
   out_1130207735506843149[48] = 0;
   out_1130207735506843149[49] = 0;
   out_1130207735506843149[50] = 0;
   out_1130207735506843149[51] = 0;
   out_1130207735506843149[52] = 0;
   out_1130207735506843149[53] = 0;
   out_1130207735506843149[54] = 0;
   out_1130207735506843149[55] = 0;
   out_1130207735506843149[56] = 1;
   out_1130207735506843149[57] = 0;
   out_1130207735506843149[58] = 0;
   out_1130207735506843149[59] = 0;
   out_1130207735506843149[60] = 0;
   out_1130207735506843149[61] = 0;
   out_1130207735506843149[62] = 0;
   out_1130207735506843149[63] = 0;
   out_1130207735506843149[64] = 0;
   out_1130207735506843149[65] = 0;
}
void h_10(double *state, double *unused, double *out_7142197523647592280) {
   out_7142197523647592280[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7142197523647592280[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7142197523647592280[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8305598203435123438) {
   out_8305598203435123438[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8305598203435123438[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8305598203435123438[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8305598203435123438[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8305598203435123438[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8305598203435123438[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8305598203435123438[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8305598203435123438[7] = 0;
   out_8305598203435123438[8] = 0;
   out_8305598203435123438[9] = 0;
   out_8305598203435123438[10] = 0;
   out_8305598203435123438[11] = 0;
   out_8305598203435123438[12] = 0;
   out_8305598203435123438[13] = 0;
   out_8305598203435123438[14] = 0;
   out_8305598203435123438[15] = 0;
   out_8305598203435123438[16] = 1;
   out_8305598203435123438[17] = 0;
   out_8305598203435123438[18] = 0;
   out_8305598203435123438[19] = 1;
   out_8305598203435123438[20] = 0;
   out_8305598203435123438[21] = 0;
   out_8305598203435123438[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8305598203435123438[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8305598203435123438[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8305598203435123438[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8305598203435123438[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8305598203435123438[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8305598203435123438[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8305598203435123438[29] = 0;
   out_8305598203435123438[30] = 0;
   out_8305598203435123438[31] = 0;
   out_8305598203435123438[32] = 0;
   out_8305598203435123438[33] = 0;
   out_8305598203435123438[34] = 0;
   out_8305598203435123438[35] = 0;
   out_8305598203435123438[36] = 0;
   out_8305598203435123438[37] = 0;
   out_8305598203435123438[38] = 0;
   out_8305598203435123438[39] = 1;
   out_8305598203435123438[40] = 0;
   out_8305598203435123438[41] = 0;
   out_8305598203435123438[42] = 1;
   out_8305598203435123438[43] = 0;
   out_8305598203435123438[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8305598203435123438[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8305598203435123438[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8305598203435123438[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8305598203435123438[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8305598203435123438[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8305598203435123438[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8305598203435123438[51] = 0;
   out_8305598203435123438[52] = 0;
   out_8305598203435123438[53] = 0;
   out_8305598203435123438[54] = 0;
   out_8305598203435123438[55] = 0;
   out_8305598203435123438[56] = 0;
   out_8305598203435123438[57] = 0;
   out_8305598203435123438[58] = 0;
   out_8305598203435123438[59] = 0;
   out_8305598203435123438[60] = 0;
   out_8305598203435123438[61] = 0;
   out_8305598203435123438[62] = 1;
   out_8305598203435123438[63] = 0;
   out_8305598203435123438[64] = 0;
   out_8305598203435123438[65] = 1;
}
void h_12(double *state, double *unused, double *out_6841929592873691561) {
   out_6841929592873691561[0] = state[0];
   out_6841929592873691561[1] = state[1];
   out_6841929592873691561[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1137554791725642526) {
   out_1137554791725642526[0] = 1;
   out_1137554791725642526[1] = 0;
   out_1137554791725642526[2] = 0;
   out_1137554791725642526[3] = 0;
   out_1137554791725642526[4] = 0;
   out_1137554791725642526[5] = 0;
   out_1137554791725642526[6] = 0;
   out_1137554791725642526[7] = 0;
   out_1137554791725642526[8] = 0;
   out_1137554791725642526[9] = 0;
   out_1137554791725642526[10] = 0;
   out_1137554791725642526[11] = 0;
   out_1137554791725642526[12] = 0;
   out_1137554791725642526[13] = 0;
   out_1137554791725642526[14] = 0;
   out_1137554791725642526[15] = 0;
   out_1137554791725642526[16] = 0;
   out_1137554791725642526[17] = 0;
   out_1137554791725642526[18] = 0;
   out_1137554791725642526[19] = 0;
   out_1137554791725642526[20] = 0;
   out_1137554791725642526[21] = 0;
   out_1137554791725642526[22] = 0;
   out_1137554791725642526[23] = 1;
   out_1137554791725642526[24] = 0;
   out_1137554791725642526[25] = 0;
   out_1137554791725642526[26] = 0;
   out_1137554791725642526[27] = 0;
   out_1137554791725642526[28] = 0;
   out_1137554791725642526[29] = 0;
   out_1137554791725642526[30] = 0;
   out_1137554791725642526[31] = 0;
   out_1137554791725642526[32] = 0;
   out_1137554791725642526[33] = 0;
   out_1137554791725642526[34] = 0;
   out_1137554791725642526[35] = 0;
   out_1137554791725642526[36] = 0;
   out_1137554791725642526[37] = 0;
   out_1137554791725642526[38] = 0;
   out_1137554791725642526[39] = 0;
   out_1137554791725642526[40] = 0;
   out_1137554791725642526[41] = 0;
   out_1137554791725642526[42] = 0;
   out_1137554791725642526[43] = 0;
   out_1137554791725642526[44] = 0;
   out_1137554791725642526[45] = 0;
   out_1137554791725642526[46] = 1;
   out_1137554791725642526[47] = 0;
   out_1137554791725642526[48] = 0;
   out_1137554791725642526[49] = 0;
   out_1137554791725642526[50] = 0;
   out_1137554791725642526[51] = 0;
   out_1137554791725642526[52] = 0;
   out_1137554791725642526[53] = 0;
   out_1137554791725642526[54] = 0;
   out_1137554791725642526[55] = 0;
   out_1137554791725642526[56] = 0;
   out_1137554791725642526[57] = 0;
   out_1137554791725642526[58] = 0;
   out_1137554791725642526[59] = 0;
   out_1137554791725642526[60] = 0;
   out_1137554791725642526[61] = 0;
   out_1137554791725642526[62] = 0;
   out_1137554791725642526[63] = 0;
   out_1137554791725642526[64] = 0;
   out_1137554791725642526[65] = 0;
}
void h_35(double *state, double *unused, double *out_6344011789569815067) {
   out_6344011789569815067[0] = state[7];
   out_6344011789569815067[1] = state[8];
   out_6344011789569815067[2] = state[9];
}
void H_35(double *state, double *unused, double *out_1608008240599371183) {
   out_1608008240599371183[0] = 0;
   out_1608008240599371183[1] = 0;
   out_1608008240599371183[2] = 0;
   out_1608008240599371183[3] = 0;
   out_1608008240599371183[4] = 0;
   out_1608008240599371183[5] = 0;
   out_1608008240599371183[6] = 0;
   out_1608008240599371183[7] = 1;
   out_1608008240599371183[8] = 0;
   out_1608008240599371183[9] = 0;
   out_1608008240599371183[10] = 0;
   out_1608008240599371183[11] = 0;
   out_1608008240599371183[12] = 0;
   out_1608008240599371183[13] = 0;
   out_1608008240599371183[14] = 0;
   out_1608008240599371183[15] = 0;
   out_1608008240599371183[16] = 0;
   out_1608008240599371183[17] = 0;
   out_1608008240599371183[18] = 0;
   out_1608008240599371183[19] = 0;
   out_1608008240599371183[20] = 0;
   out_1608008240599371183[21] = 0;
   out_1608008240599371183[22] = 0;
   out_1608008240599371183[23] = 0;
   out_1608008240599371183[24] = 0;
   out_1608008240599371183[25] = 0;
   out_1608008240599371183[26] = 0;
   out_1608008240599371183[27] = 0;
   out_1608008240599371183[28] = 0;
   out_1608008240599371183[29] = 0;
   out_1608008240599371183[30] = 1;
   out_1608008240599371183[31] = 0;
   out_1608008240599371183[32] = 0;
   out_1608008240599371183[33] = 0;
   out_1608008240599371183[34] = 0;
   out_1608008240599371183[35] = 0;
   out_1608008240599371183[36] = 0;
   out_1608008240599371183[37] = 0;
   out_1608008240599371183[38] = 0;
   out_1608008240599371183[39] = 0;
   out_1608008240599371183[40] = 0;
   out_1608008240599371183[41] = 0;
   out_1608008240599371183[42] = 0;
   out_1608008240599371183[43] = 0;
   out_1608008240599371183[44] = 0;
   out_1608008240599371183[45] = 0;
   out_1608008240599371183[46] = 0;
   out_1608008240599371183[47] = 0;
   out_1608008240599371183[48] = 0;
   out_1608008240599371183[49] = 0;
   out_1608008240599371183[50] = 0;
   out_1608008240599371183[51] = 0;
   out_1608008240599371183[52] = 0;
   out_1608008240599371183[53] = 1;
   out_1608008240599371183[54] = 0;
   out_1608008240599371183[55] = 0;
   out_1608008240599371183[56] = 0;
   out_1608008240599371183[57] = 0;
   out_1608008240599371183[58] = 0;
   out_1608008240599371183[59] = 0;
   out_1608008240599371183[60] = 0;
   out_1608008240599371183[61] = 0;
   out_1608008240599371183[62] = 0;
   out_1608008240599371183[63] = 0;
   out_1608008240599371183[64] = 0;
   out_1608008240599371183[65] = 0;
}
void h_32(double *state, double *unused, double *out_4268237920426699577) {
   out_4268237920426699577[0] = state[3];
   out_4268237920426699577[1] = state[4];
   out_4268237920426699577[2] = state[5];
   out_4268237920426699577[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7009048380056906015) {
   out_7009048380056906015[0] = 0;
   out_7009048380056906015[1] = 0;
   out_7009048380056906015[2] = 0;
   out_7009048380056906015[3] = 1;
   out_7009048380056906015[4] = 0;
   out_7009048380056906015[5] = 0;
   out_7009048380056906015[6] = 0;
   out_7009048380056906015[7] = 0;
   out_7009048380056906015[8] = 0;
   out_7009048380056906015[9] = 0;
   out_7009048380056906015[10] = 0;
   out_7009048380056906015[11] = 0;
   out_7009048380056906015[12] = 0;
   out_7009048380056906015[13] = 0;
   out_7009048380056906015[14] = 0;
   out_7009048380056906015[15] = 0;
   out_7009048380056906015[16] = 0;
   out_7009048380056906015[17] = 0;
   out_7009048380056906015[18] = 0;
   out_7009048380056906015[19] = 0;
   out_7009048380056906015[20] = 0;
   out_7009048380056906015[21] = 0;
   out_7009048380056906015[22] = 0;
   out_7009048380056906015[23] = 0;
   out_7009048380056906015[24] = 0;
   out_7009048380056906015[25] = 0;
   out_7009048380056906015[26] = 1;
   out_7009048380056906015[27] = 0;
   out_7009048380056906015[28] = 0;
   out_7009048380056906015[29] = 0;
   out_7009048380056906015[30] = 0;
   out_7009048380056906015[31] = 0;
   out_7009048380056906015[32] = 0;
   out_7009048380056906015[33] = 0;
   out_7009048380056906015[34] = 0;
   out_7009048380056906015[35] = 0;
   out_7009048380056906015[36] = 0;
   out_7009048380056906015[37] = 0;
   out_7009048380056906015[38] = 0;
   out_7009048380056906015[39] = 0;
   out_7009048380056906015[40] = 0;
   out_7009048380056906015[41] = 0;
   out_7009048380056906015[42] = 0;
   out_7009048380056906015[43] = 0;
   out_7009048380056906015[44] = 0;
   out_7009048380056906015[45] = 0;
   out_7009048380056906015[46] = 0;
   out_7009048380056906015[47] = 0;
   out_7009048380056906015[48] = 0;
   out_7009048380056906015[49] = 1;
   out_7009048380056906015[50] = 0;
   out_7009048380056906015[51] = 0;
   out_7009048380056906015[52] = 0;
   out_7009048380056906015[53] = 0;
   out_7009048380056906015[54] = 0;
   out_7009048380056906015[55] = 0;
   out_7009048380056906015[56] = 0;
   out_7009048380056906015[57] = 0;
   out_7009048380056906015[58] = 0;
   out_7009048380056906015[59] = 0;
   out_7009048380056906015[60] = 0;
   out_7009048380056906015[61] = 0;
   out_7009048380056906015[62] = 0;
   out_7009048380056906015[63] = 0;
   out_7009048380056906015[64] = 0;
   out_7009048380056906015[65] = 0;
   out_7009048380056906015[66] = 0;
   out_7009048380056906015[67] = 0;
   out_7009048380056906015[68] = 0;
   out_7009048380056906015[69] = 0;
   out_7009048380056906015[70] = 0;
   out_7009048380056906015[71] = 0;
   out_7009048380056906015[72] = 1;
   out_7009048380056906015[73] = 0;
   out_7009048380056906015[74] = 0;
   out_7009048380056906015[75] = 0;
   out_7009048380056906015[76] = 0;
   out_7009048380056906015[77] = 0;
   out_7009048380056906015[78] = 0;
   out_7009048380056906015[79] = 0;
   out_7009048380056906015[80] = 0;
   out_7009048380056906015[81] = 0;
   out_7009048380056906015[82] = 0;
   out_7009048380056906015[83] = 0;
   out_7009048380056906015[84] = 0;
   out_7009048380056906015[85] = 0;
   out_7009048380056906015[86] = 0;
   out_7009048380056906015[87] = 0;
}
void h_13(double *state, double *unused, double *out_2906052473650150648) {
   out_2906052473650150648[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2906052473650150648[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2906052473650150648[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2855570214306064975) {
   out_2855570214306064975[0] = 0;
   out_2855570214306064975[1] = 0;
   out_2855570214306064975[2] = 0;
   out_2855570214306064975[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2855570214306064975[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2855570214306064975[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2855570214306064975[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2855570214306064975[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2855570214306064975[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2855570214306064975[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2855570214306064975[10] = 0;
   out_2855570214306064975[11] = 0;
   out_2855570214306064975[12] = 0;
   out_2855570214306064975[13] = 0;
   out_2855570214306064975[14] = 0;
   out_2855570214306064975[15] = 0;
   out_2855570214306064975[16] = 0;
   out_2855570214306064975[17] = 0;
   out_2855570214306064975[18] = 0;
   out_2855570214306064975[19] = 0;
   out_2855570214306064975[20] = 0;
   out_2855570214306064975[21] = 0;
   out_2855570214306064975[22] = 0;
   out_2855570214306064975[23] = 0;
   out_2855570214306064975[24] = 0;
   out_2855570214306064975[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2855570214306064975[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2855570214306064975[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2855570214306064975[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2855570214306064975[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2855570214306064975[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2855570214306064975[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2855570214306064975[32] = 0;
   out_2855570214306064975[33] = 0;
   out_2855570214306064975[34] = 0;
   out_2855570214306064975[35] = 0;
   out_2855570214306064975[36] = 0;
   out_2855570214306064975[37] = 0;
   out_2855570214306064975[38] = 0;
   out_2855570214306064975[39] = 0;
   out_2855570214306064975[40] = 0;
   out_2855570214306064975[41] = 0;
   out_2855570214306064975[42] = 0;
   out_2855570214306064975[43] = 0;
   out_2855570214306064975[44] = 0;
   out_2855570214306064975[45] = 0;
   out_2855570214306064975[46] = 0;
   out_2855570214306064975[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2855570214306064975[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2855570214306064975[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2855570214306064975[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2855570214306064975[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2855570214306064975[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2855570214306064975[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2855570214306064975[54] = 0;
   out_2855570214306064975[55] = 0;
   out_2855570214306064975[56] = 0;
   out_2855570214306064975[57] = 0;
   out_2855570214306064975[58] = 0;
   out_2855570214306064975[59] = 0;
   out_2855570214306064975[60] = 0;
   out_2855570214306064975[61] = 0;
   out_2855570214306064975[62] = 0;
   out_2855570214306064975[63] = 0;
   out_2855570214306064975[64] = 0;
   out_2855570214306064975[65] = 0;
}
void h_14(double *state, double *unused, double *out_2955208736137635517) {
   out_2955208736137635517[0] = state[10];
   out_2955208736137635517[1] = state[11];
   out_2955208736137635517[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1130207735506843149) {
   out_1130207735506843149[0] = 0;
   out_1130207735506843149[1] = 0;
   out_1130207735506843149[2] = 0;
   out_1130207735506843149[3] = 0;
   out_1130207735506843149[4] = 0;
   out_1130207735506843149[5] = 0;
   out_1130207735506843149[6] = 0;
   out_1130207735506843149[7] = 0;
   out_1130207735506843149[8] = 0;
   out_1130207735506843149[9] = 0;
   out_1130207735506843149[10] = 1;
   out_1130207735506843149[11] = 0;
   out_1130207735506843149[12] = 0;
   out_1130207735506843149[13] = 0;
   out_1130207735506843149[14] = 0;
   out_1130207735506843149[15] = 0;
   out_1130207735506843149[16] = 0;
   out_1130207735506843149[17] = 0;
   out_1130207735506843149[18] = 0;
   out_1130207735506843149[19] = 0;
   out_1130207735506843149[20] = 0;
   out_1130207735506843149[21] = 0;
   out_1130207735506843149[22] = 0;
   out_1130207735506843149[23] = 0;
   out_1130207735506843149[24] = 0;
   out_1130207735506843149[25] = 0;
   out_1130207735506843149[26] = 0;
   out_1130207735506843149[27] = 0;
   out_1130207735506843149[28] = 0;
   out_1130207735506843149[29] = 0;
   out_1130207735506843149[30] = 0;
   out_1130207735506843149[31] = 0;
   out_1130207735506843149[32] = 0;
   out_1130207735506843149[33] = 1;
   out_1130207735506843149[34] = 0;
   out_1130207735506843149[35] = 0;
   out_1130207735506843149[36] = 0;
   out_1130207735506843149[37] = 0;
   out_1130207735506843149[38] = 0;
   out_1130207735506843149[39] = 0;
   out_1130207735506843149[40] = 0;
   out_1130207735506843149[41] = 0;
   out_1130207735506843149[42] = 0;
   out_1130207735506843149[43] = 0;
   out_1130207735506843149[44] = 0;
   out_1130207735506843149[45] = 0;
   out_1130207735506843149[46] = 0;
   out_1130207735506843149[47] = 0;
   out_1130207735506843149[48] = 0;
   out_1130207735506843149[49] = 0;
   out_1130207735506843149[50] = 0;
   out_1130207735506843149[51] = 0;
   out_1130207735506843149[52] = 0;
   out_1130207735506843149[53] = 0;
   out_1130207735506843149[54] = 0;
   out_1130207735506843149[55] = 0;
   out_1130207735506843149[56] = 1;
   out_1130207735506843149[57] = 0;
   out_1130207735506843149[58] = 0;
   out_1130207735506843149[59] = 0;
   out_1130207735506843149[60] = 0;
   out_1130207735506843149[61] = 0;
   out_1130207735506843149[62] = 0;
   out_1130207735506843149[63] = 0;
   out_1130207735506843149[64] = 0;
   out_1130207735506843149[65] = 0;
}
void h_33(double *state, double *unused, double *out_877830188470606841) {
   out_877830188470606841[0] = state[16];
   out_877830188470606841[1] = state[17];
   out_877830188470606841[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4758565245238228787) {
   out_4758565245238228787[0] = 0;
   out_4758565245238228787[1] = 0;
   out_4758565245238228787[2] = 0;
   out_4758565245238228787[3] = 0;
   out_4758565245238228787[4] = 0;
   out_4758565245238228787[5] = 0;
   out_4758565245238228787[6] = 0;
   out_4758565245238228787[7] = 0;
   out_4758565245238228787[8] = 0;
   out_4758565245238228787[9] = 0;
   out_4758565245238228787[10] = 0;
   out_4758565245238228787[11] = 0;
   out_4758565245238228787[12] = 0;
   out_4758565245238228787[13] = 0;
   out_4758565245238228787[14] = 0;
   out_4758565245238228787[15] = 0;
   out_4758565245238228787[16] = 1;
   out_4758565245238228787[17] = 0;
   out_4758565245238228787[18] = 0;
   out_4758565245238228787[19] = 0;
   out_4758565245238228787[20] = 0;
   out_4758565245238228787[21] = 0;
   out_4758565245238228787[22] = 0;
   out_4758565245238228787[23] = 0;
   out_4758565245238228787[24] = 0;
   out_4758565245238228787[25] = 0;
   out_4758565245238228787[26] = 0;
   out_4758565245238228787[27] = 0;
   out_4758565245238228787[28] = 0;
   out_4758565245238228787[29] = 0;
   out_4758565245238228787[30] = 0;
   out_4758565245238228787[31] = 0;
   out_4758565245238228787[32] = 0;
   out_4758565245238228787[33] = 0;
   out_4758565245238228787[34] = 0;
   out_4758565245238228787[35] = 0;
   out_4758565245238228787[36] = 0;
   out_4758565245238228787[37] = 0;
   out_4758565245238228787[38] = 0;
   out_4758565245238228787[39] = 1;
   out_4758565245238228787[40] = 0;
   out_4758565245238228787[41] = 0;
   out_4758565245238228787[42] = 0;
   out_4758565245238228787[43] = 0;
   out_4758565245238228787[44] = 0;
   out_4758565245238228787[45] = 0;
   out_4758565245238228787[46] = 0;
   out_4758565245238228787[47] = 0;
   out_4758565245238228787[48] = 0;
   out_4758565245238228787[49] = 0;
   out_4758565245238228787[50] = 0;
   out_4758565245238228787[51] = 0;
   out_4758565245238228787[52] = 0;
   out_4758565245238228787[53] = 0;
   out_4758565245238228787[54] = 0;
   out_4758565245238228787[55] = 0;
   out_4758565245238228787[56] = 0;
   out_4758565245238228787[57] = 0;
   out_4758565245238228787[58] = 0;
   out_4758565245238228787[59] = 0;
   out_4758565245238228787[60] = 0;
   out_4758565245238228787[61] = 0;
   out_4758565245238228787[62] = 1;
   out_4758565245238228787[63] = 0;
   out_4758565245238228787[64] = 0;
   out_4758565245238228787[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_6390981214311888307) {
  H(in_vec, out_6390981214311888307);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_882957614718628947) {
  err_fun(nom_x, delta_x, out_882957614718628947);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5466271201173463961) {
  inv_err_fun(nom_x, true_x, out_5466271201173463961);
}
void live_H_mod_fun(double *state, double *out_4420921285576756995) {
  H_mod_fun(state, out_4420921285576756995);
}
void live_f_fun(double *state, double dt, double *out_6928608778572202362) {
  f_fun(state,  dt, out_6928608778572202362);
}
void live_F_fun(double *state, double dt, double *out_2207546296181202222) {
  F_fun(state,  dt, out_2207546296181202222);
}
void live_h_4(double *state, double *unused, double *out_3859305731646109149) {
  h_4(state, unused, out_3859305731646109149);
}
void live_H_4(double *state, double *unused, double *out_1758653816773236193) {
  H_4(state, unused, out_1758653816773236193);
}
void live_h_9(double *state, double *unused, double *out_2955208736137635517) {
  h_9(state, unused, out_2955208736137635517);
}
void live_H_9(double *state, double *unused, double *out_1130207735506843149) {
  H_9(state, unused, out_1130207735506843149);
}
void live_h_10(double *state, double *unused, double *out_7142197523647592280) {
  h_10(state, unused, out_7142197523647592280);
}
void live_H_10(double *state, double *unused, double *out_8305598203435123438) {
  H_10(state, unused, out_8305598203435123438);
}
void live_h_12(double *state, double *unused, double *out_6841929592873691561) {
  h_12(state, unused, out_6841929592873691561);
}
void live_H_12(double *state, double *unused, double *out_1137554791725642526) {
  H_12(state, unused, out_1137554791725642526);
}
void live_h_35(double *state, double *unused, double *out_6344011789569815067) {
  h_35(state, unused, out_6344011789569815067);
}
void live_H_35(double *state, double *unused, double *out_1608008240599371183) {
  H_35(state, unused, out_1608008240599371183);
}
void live_h_32(double *state, double *unused, double *out_4268237920426699577) {
  h_32(state, unused, out_4268237920426699577);
}
void live_H_32(double *state, double *unused, double *out_7009048380056906015) {
  H_32(state, unused, out_7009048380056906015);
}
void live_h_13(double *state, double *unused, double *out_2906052473650150648) {
  h_13(state, unused, out_2906052473650150648);
}
void live_H_13(double *state, double *unused, double *out_2855570214306064975) {
  H_13(state, unused, out_2855570214306064975);
}
void live_h_14(double *state, double *unused, double *out_2955208736137635517) {
  h_14(state, unused, out_2955208736137635517);
}
void live_H_14(double *state, double *unused, double *out_1130207735506843149) {
  H_14(state, unused, out_1130207735506843149);
}
void live_h_33(double *state, double *unused, double *out_877830188470606841) {
  h_33(state, unused, out_877830188470606841);
}
void live_H_33(double *state, double *unused, double *out_4758565245238228787) {
  H_33(state, unused, out_4758565245238228787);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
