#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3997180882274073765) {
   out_3997180882274073765[0] = 0;
   out_3997180882274073765[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3997180882274073765[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3997180882274073765[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3997180882274073765[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3997180882274073765[5] = -sin(in_vec[1]);
   out_3997180882274073765[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3997180882274073765[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3997180882274073765[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3997180882274073765[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3997180882274073765[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3997180882274073765[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3997180882274073765[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3997180882274073765[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3997180882274073765[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3997180882274073765[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3997180882274073765[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3997180882274073765[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4133446465328801589) {
   out_4133446465328801589[0] = delta_x[0] + nom_x[0];
   out_4133446465328801589[1] = delta_x[1] + nom_x[1];
   out_4133446465328801589[2] = delta_x[2] + nom_x[2];
   out_4133446465328801589[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4133446465328801589[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4133446465328801589[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4133446465328801589[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4133446465328801589[7] = delta_x[6] + nom_x[7];
   out_4133446465328801589[8] = delta_x[7] + nom_x[8];
   out_4133446465328801589[9] = delta_x[8] + nom_x[9];
   out_4133446465328801589[10] = delta_x[9] + nom_x[10];
   out_4133446465328801589[11] = delta_x[10] + nom_x[11];
   out_4133446465328801589[12] = delta_x[11] + nom_x[12];
   out_4133446465328801589[13] = delta_x[12] + nom_x[13];
   out_4133446465328801589[14] = delta_x[13] + nom_x[14];
   out_4133446465328801589[15] = delta_x[14] + nom_x[15];
   out_4133446465328801589[16] = delta_x[15] + nom_x[16];
   out_4133446465328801589[17] = delta_x[16] + nom_x[17];
   out_4133446465328801589[18] = delta_x[17] + nom_x[18];
   out_4133446465328801589[19] = delta_x[18] + nom_x[19];
   out_4133446465328801589[20] = delta_x[19] + nom_x[20];
   out_4133446465328801589[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4527266877824918187) {
   out_4527266877824918187[0] = -nom_x[0] + true_x[0];
   out_4527266877824918187[1] = -nom_x[1] + true_x[1];
   out_4527266877824918187[2] = -nom_x[2] + true_x[2];
   out_4527266877824918187[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4527266877824918187[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4527266877824918187[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4527266877824918187[6] = -nom_x[7] + true_x[7];
   out_4527266877824918187[7] = -nom_x[8] + true_x[8];
   out_4527266877824918187[8] = -nom_x[9] + true_x[9];
   out_4527266877824918187[9] = -nom_x[10] + true_x[10];
   out_4527266877824918187[10] = -nom_x[11] + true_x[11];
   out_4527266877824918187[11] = -nom_x[12] + true_x[12];
   out_4527266877824918187[12] = -nom_x[13] + true_x[13];
   out_4527266877824918187[13] = -nom_x[14] + true_x[14];
   out_4527266877824918187[14] = -nom_x[15] + true_x[15];
   out_4527266877824918187[15] = -nom_x[16] + true_x[16];
   out_4527266877824918187[16] = -nom_x[17] + true_x[17];
   out_4527266877824918187[17] = -nom_x[18] + true_x[18];
   out_4527266877824918187[18] = -nom_x[19] + true_x[19];
   out_4527266877824918187[19] = -nom_x[20] + true_x[20];
   out_4527266877824918187[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7553144520472306387) {
   out_7553144520472306387[0] = 1.0;
   out_7553144520472306387[1] = 0;
   out_7553144520472306387[2] = 0;
   out_7553144520472306387[3] = 0;
   out_7553144520472306387[4] = 0;
   out_7553144520472306387[5] = 0;
   out_7553144520472306387[6] = 0;
   out_7553144520472306387[7] = 0;
   out_7553144520472306387[8] = 0;
   out_7553144520472306387[9] = 0;
   out_7553144520472306387[10] = 0;
   out_7553144520472306387[11] = 0;
   out_7553144520472306387[12] = 0;
   out_7553144520472306387[13] = 0;
   out_7553144520472306387[14] = 0;
   out_7553144520472306387[15] = 0;
   out_7553144520472306387[16] = 0;
   out_7553144520472306387[17] = 0;
   out_7553144520472306387[18] = 0;
   out_7553144520472306387[19] = 0;
   out_7553144520472306387[20] = 0;
   out_7553144520472306387[21] = 0;
   out_7553144520472306387[22] = 1.0;
   out_7553144520472306387[23] = 0;
   out_7553144520472306387[24] = 0;
   out_7553144520472306387[25] = 0;
   out_7553144520472306387[26] = 0;
   out_7553144520472306387[27] = 0;
   out_7553144520472306387[28] = 0;
   out_7553144520472306387[29] = 0;
   out_7553144520472306387[30] = 0;
   out_7553144520472306387[31] = 0;
   out_7553144520472306387[32] = 0;
   out_7553144520472306387[33] = 0;
   out_7553144520472306387[34] = 0;
   out_7553144520472306387[35] = 0;
   out_7553144520472306387[36] = 0;
   out_7553144520472306387[37] = 0;
   out_7553144520472306387[38] = 0;
   out_7553144520472306387[39] = 0;
   out_7553144520472306387[40] = 0;
   out_7553144520472306387[41] = 0;
   out_7553144520472306387[42] = 0;
   out_7553144520472306387[43] = 0;
   out_7553144520472306387[44] = 1.0;
   out_7553144520472306387[45] = 0;
   out_7553144520472306387[46] = 0;
   out_7553144520472306387[47] = 0;
   out_7553144520472306387[48] = 0;
   out_7553144520472306387[49] = 0;
   out_7553144520472306387[50] = 0;
   out_7553144520472306387[51] = 0;
   out_7553144520472306387[52] = 0;
   out_7553144520472306387[53] = 0;
   out_7553144520472306387[54] = 0;
   out_7553144520472306387[55] = 0;
   out_7553144520472306387[56] = 0;
   out_7553144520472306387[57] = 0;
   out_7553144520472306387[58] = 0;
   out_7553144520472306387[59] = 0;
   out_7553144520472306387[60] = 0;
   out_7553144520472306387[61] = 0;
   out_7553144520472306387[62] = 0;
   out_7553144520472306387[63] = 0;
   out_7553144520472306387[64] = 0;
   out_7553144520472306387[65] = 0;
   out_7553144520472306387[66] = -0.5*state[4];
   out_7553144520472306387[67] = -0.5*state[5];
   out_7553144520472306387[68] = -0.5*state[6];
   out_7553144520472306387[69] = 0;
   out_7553144520472306387[70] = 0;
   out_7553144520472306387[71] = 0;
   out_7553144520472306387[72] = 0;
   out_7553144520472306387[73] = 0;
   out_7553144520472306387[74] = 0;
   out_7553144520472306387[75] = 0;
   out_7553144520472306387[76] = 0;
   out_7553144520472306387[77] = 0;
   out_7553144520472306387[78] = 0;
   out_7553144520472306387[79] = 0;
   out_7553144520472306387[80] = 0;
   out_7553144520472306387[81] = 0;
   out_7553144520472306387[82] = 0;
   out_7553144520472306387[83] = 0;
   out_7553144520472306387[84] = 0;
   out_7553144520472306387[85] = 0;
   out_7553144520472306387[86] = 0;
   out_7553144520472306387[87] = 0.5*state[3];
   out_7553144520472306387[88] = 0.5*state[6];
   out_7553144520472306387[89] = -0.5*state[5];
   out_7553144520472306387[90] = 0;
   out_7553144520472306387[91] = 0;
   out_7553144520472306387[92] = 0;
   out_7553144520472306387[93] = 0;
   out_7553144520472306387[94] = 0;
   out_7553144520472306387[95] = 0;
   out_7553144520472306387[96] = 0;
   out_7553144520472306387[97] = 0;
   out_7553144520472306387[98] = 0;
   out_7553144520472306387[99] = 0;
   out_7553144520472306387[100] = 0;
   out_7553144520472306387[101] = 0;
   out_7553144520472306387[102] = 0;
   out_7553144520472306387[103] = 0;
   out_7553144520472306387[104] = 0;
   out_7553144520472306387[105] = 0;
   out_7553144520472306387[106] = 0;
   out_7553144520472306387[107] = 0;
   out_7553144520472306387[108] = -0.5*state[6];
   out_7553144520472306387[109] = 0.5*state[3];
   out_7553144520472306387[110] = 0.5*state[4];
   out_7553144520472306387[111] = 0;
   out_7553144520472306387[112] = 0;
   out_7553144520472306387[113] = 0;
   out_7553144520472306387[114] = 0;
   out_7553144520472306387[115] = 0;
   out_7553144520472306387[116] = 0;
   out_7553144520472306387[117] = 0;
   out_7553144520472306387[118] = 0;
   out_7553144520472306387[119] = 0;
   out_7553144520472306387[120] = 0;
   out_7553144520472306387[121] = 0;
   out_7553144520472306387[122] = 0;
   out_7553144520472306387[123] = 0;
   out_7553144520472306387[124] = 0;
   out_7553144520472306387[125] = 0;
   out_7553144520472306387[126] = 0;
   out_7553144520472306387[127] = 0;
   out_7553144520472306387[128] = 0;
   out_7553144520472306387[129] = 0.5*state[5];
   out_7553144520472306387[130] = -0.5*state[4];
   out_7553144520472306387[131] = 0.5*state[3];
   out_7553144520472306387[132] = 0;
   out_7553144520472306387[133] = 0;
   out_7553144520472306387[134] = 0;
   out_7553144520472306387[135] = 0;
   out_7553144520472306387[136] = 0;
   out_7553144520472306387[137] = 0;
   out_7553144520472306387[138] = 0;
   out_7553144520472306387[139] = 0;
   out_7553144520472306387[140] = 0;
   out_7553144520472306387[141] = 0;
   out_7553144520472306387[142] = 0;
   out_7553144520472306387[143] = 0;
   out_7553144520472306387[144] = 0;
   out_7553144520472306387[145] = 0;
   out_7553144520472306387[146] = 0;
   out_7553144520472306387[147] = 0;
   out_7553144520472306387[148] = 0;
   out_7553144520472306387[149] = 0;
   out_7553144520472306387[150] = 0;
   out_7553144520472306387[151] = 0;
   out_7553144520472306387[152] = 0;
   out_7553144520472306387[153] = 1.0;
   out_7553144520472306387[154] = 0;
   out_7553144520472306387[155] = 0;
   out_7553144520472306387[156] = 0;
   out_7553144520472306387[157] = 0;
   out_7553144520472306387[158] = 0;
   out_7553144520472306387[159] = 0;
   out_7553144520472306387[160] = 0;
   out_7553144520472306387[161] = 0;
   out_7553144520472306387[162] = 0;
   out_7553144520472306387[163] = 0;
   out_7553144520472306387[164] = 0;
   out_7553144520472306387[165] = 0;
   out_7553144520472306387[166] = 0;
   out_7553144520472306387[167] = 0;
   out_7553144520472306387[168] = 0;
   out_7553144520472306387[169] = 0;
   out_7553144520472306387[170] = 0;
   out_7553144520472306387[171] = 0;
   out_7553144520472306387[172] = 0;
   out_7553144520472306387[173] = 0;
   out_7553144520472306387[174] = 0;
   out_7553144520472306387[175] = 1.0;
   out_7553144520472306387[176] = 0;
   out_7553144520472306387[177] = 0;
   out_7553144520472306387[178] = 0;
   out_7553144520472306387[179] = 0;
   out_7553144520472306387[180] = 0;
   out_7553144520472306387[181] = 0;
   out_7553144520472306387[182] = 0;
   out_7553144520472306387[183] = 0;
   out_7553144520472306387[184] = 0;
   out_7553144520472306387[185] = 0;
   out_7553144520472306387[186] = 0;
   out_7553144520472306387[187] = 0;
   out_7553144520472306387[188] = 0;
   out_7553144520472306387[189] = 0;
   out_7553144520472306387[190] = 0;
   out_7553144520472306387[191] = 0;
   out_7553144520472306387[192] = 0;
   out_7553144520472306387[193] = 0;
   out_7553144520472306387[194] = 0;
   out_7553144520472306387[195] = 0;
   out_7553144520472306387[196] = 0;
   out_7553144520472306387[197] = 1.0;
   out_7553144520472306387[198] = 0;
   out_7553144520472306387[199] = 0;
   out_7553144520472306387[200] = 0;
   out_7553144520472306387[201] = 0;
   out_7553144520472306387[202] = 0;
   out_7553144520472306387[203] = 0;
   out_7553144520472306387[204] = 0;
   out_7553144520472306387[205] = 0;
   out_7553144520472306387[206] = 0;
   out_7553144520472306387[207] = 0;
   out_7553144520472306387[208] = 0;
   out_7553144520472306387[209] = 0;
   out_7553144520472306387[210] = 0;
   out_7553144520472306387[211] = 0;
   out_7553144520472306387[212] = 0;
   out_7553144520472306387[213] = 0;
   out_7553144520472306387[214] = 0;
   out_7553144520472306387[215] = 0;
   out_7553144520472306387[216] = 0;
   out_7553144520472306387[217] = 0;
   out_7553144520472306387[218] = 0;
   out_7553144520472306387[219] = 1.0;
   out_7553144520472306387[220] = 0;
   out_7553144520472306387[221] = 0;
   out_7553144520472306387[222] = 0;
   out_7553144520472306387[223] = 0;
   out_7553144520472306387[224] = 0;
   out_7553144520472306387[225] = 0;
   out_7553144520472306387[226] = 0;
   out_7553144520472306387[227] = 0;
   out_7553144520472306387[228] = 0;
   out_7553144520472306387[229] = 0;
   out_7553144520472306387[230] = 0;
   out_7553144520472306387[231] = 0;
   out_7553144520472306387[232] = 0;
   out_7553144520472306387[233] = 0;
   out_7553144520472306387[234] = 0;
   out_7553144520472306387[235] = 0;
   out_7553144520472306387[236] = 0;
   out_7553144520472306387[237] = 0;
   out_7553144520472306387[238] = 0;
   out_7553144520472306387[239] = 0;
   out_7553144520472306387[240] = 0;
   out_7553144520472306387[241] = 1.0;
   out_7553144520472306387[242] = 0;
   out_7553144520472306387[243] = 0;
   out_7553144520472306387[244] = 0;
   out_7553144520472306387[245] = 0;
   out_7553144520472306387[246] = 0;
   out_7553144520472306387[247] = 0;
   out_7553144520472306387[248] = 0;
   out_7553144520472306387[249] = 0;
   out_7553144520472306387[250] = 0;
   out_7553144520472306387[251] = 0;
   out_7553144520472306387[252] = 0;
   out_7553144520472306387[253] = 0;
   out_7553144520472306387[254] = 0;
   out_7553144520472306387[255] = 0;
   out_7553144520472306387[256] = 0;
   out_7553144520472306387[257] = 0;
   out_7553144520472306387[258] = 0;
   out_7553144520472306387[259] = 0;
   out_7553144520472306387[260] = 0;
   out_7553144520472306387[261] = 0;
   out_7553144520472306387[262] = 0;
   out_7553144520472306387[263] = 1.0;
   out_7553144520472306387[264] = 0;
   out_7553144520472306387[265] = 0;
   out_7553144520472306387[266] = 0;
   out_7553144520472306387[267] = 0;
   out_7553144520472306387[268] = 0;
   out_7553144520472306387[269] = 0;
   out_7553144520472306387[270] = 0;
   out_7553144520472306387[271] = 0;
   out_7553144520472306387[272] = 0;
   out_7553144520472306387[273] = 0;
   out_7553144520472306387[274] = 0;
   out_7553144520472306387[275] = 0;
   out_7553144520472306387[276] = 0;
   out_7553144520472306387[277] = 0;
   out_7553144520472306387[278] = 0;
   out_7553144520472306387[279] = 0;
   out_7553144520472306387[280] = 0;
   out_7553144520472306387[281] = 0;
   out_7553144520472306387[282] = 0;
   out_7553144520472306387[283] = 0;
   out_7553144520472306387[284] = 0;
   out_7553144520472306387[285] = 1.0;
   out_7553144520472306387[286] = 0;
   out_7553144520472306387[287] = 0;
   out_7553144520472306387[288] = 0;
   out_7553144520472306387[289] = 0;
   out_7553144520472306387[290] = 0;
   out_7553144520472306387[291] = 0;
   out_7553144520472306387[292] = 0;
   out_7553144520472306387[293] = 0;
   out_7553144520472306387[294] = 0;
   out_7553144520472306387[295] = 0;
   out_7553144520472306387[296] = 0;
   out_7553144520472306387[297] = 0;
   out_7553144520472306387[298] = 0;
   out_7553144520472306387[299] = 0;
   out_7553144520472306387[300] = 0;
   out_7553144520472306387[301] = 0;
   out_7553144520472306387[302] = 0;
   out_7553144520472306387[303] = 0;
   out_7553144520472306387[304] = 0;
   out_7553144520472306387[305] = 0;
   out_7553144520472306387[306] = 0;
   out_7553144520472306387[307] = 1.0;
   out_7553144520472306387[308] = 0;
   out_7553144520472306387[309] = 0;
   out_7553144520472306387[310] = 0;
   out_7553144520472306387[311] = 0;
   out_7553144520472306387[312] = 0;
   out_7553144520472306387[313] = 0;
   out_7553144520472306387[314] = 0;
   out_7553144520472306387[315] = 0;
   out_7553144520472306387[316] = 0;
   out_7553144520472306387[317] = 0;
   out_7553144520472306387[318] = 0;
   out_7553144520472306387[319] = 0;
   out_7553144520472306387[320] = 0;
   out_7553144520472306387[321] = 0;
   out_7553144520472306387[322] = 0;
   out_7553144520472306387[323] = 0;
   out_7553144520472306387[324] = 0;
   out_7553144520472306387[325] = 0;
   out_7553144520472306387[326] = 0;
   out_7553144520472306387[327] = 0;
   out_7553144520472306387[328] = 0;
   out_7553144520472306387[329] = 1.0;
   out_7553144520472306387[330] = 0;
   out_7553144520472306387[331] = 0;
   out_7553144520472306387[332] = 0;
   out_7553144520472306387[333] = 0;
   out_7553144520472306387[334] = 0;
   out_7553144520472306387[335] = 0;
   out_7553144520472306387[336] = 0;
   out_7553144520472306387[337] = 0;
   out_7553144520472306387[338] = 0;
   out_7553144520472306387[339] = 0;
   out_7553144520472306387[340] = 0;
   out_7553144520472306387[341] = 0;
   out_7553144520472306387[342] = 0;
   out_7553144520472306387[343] = 0;
   out_7553144520472306387[344] = 0;
   out_7553144520472306387[345] = 0;
   out_7553144520472306387[346] = 0;
   out_7553144520472306387[347] = 0;
   out_7553144520472306387[348] = 0;
   out_7553144520472306387[349] = 0;
   out_7553144520472306387[350] = 0;
   out_7553144520472306387[351] = 1.0;
   out_7553144520472306387[352] = 0;
   out_7553144520472306387[353] = 0;
   out_7553144520472306387[354] = 0;
   out_7553144520472306387[355] = 0;
   out_7553144520472306387[356] = 0;
   out_7553144520472306387[357] = 0;
   out_7553144520472306387[358] = 0;
   out_7553144520472306387[359] = 0;
   out_7553144520472306387[360] = 0;
   out_7553144520472306387[361] = 0;
   out_7553144520472306387[362] = 0;
   out_7553144520472306387[363] = 0;
   out_7553144520472306387[364] = 0;
   out_7553144520472306387[365] = 0;
   out_7553144520472306387[366] = 0;
   out_7553144520472306387[367] = 0;
   out_7553144520472306387[368] = 0;
   out_7553144520472306387[369] = 0;
   out_7553144520472306387[370] = 0;
   out_7553144520472306387[371] = 0;
   out_7553144520472306387[372] = 0;
   out_7553144520472306387[373] = 1.0;
   out_7553144520472306387[374] = 0;
   out_7553144520472306387[375] = 0;
   out_7553144520472306387[376] = 0;
   out_7553144520472306387[377] = 0;
   out_7553144520472306387[378] = 0;
   out_7553144520472306387[379] = 0;
   out_7553144520472306387[380] = 0;
   out_7553144520472306387[381] = 0;
   out_7553144520472306387[382] = 0;
   out_7553144520472306387[383] = 0;
   out_7553144520472306387[384] = 0;
   out_7553144520472306387[385] = 0;
   out_7553144520472306387[386] = 0;
   out_7553144520472306387[387] = 0;
   out_7553144520472306387[388] = 0;
   out_7553144520472306387[389] = 0;
   out_7553144520472306387[390] = 0;
   out_7553144520472306387[391] = 0;
   out_7553144520472306387[392] = 0;
   out_7553144520472306387[393] = 0;
   out_7553144520472306387[394] = 0;
   out_7553144520472306387[395] = 1.0;
   out_7553144520472306387[396] = 0;
   out_7553144520472306387[397] = 0;
   out_7553144520472306387[398] = 0;
   out_7553144520472306387[399] = 0;
   out_7553144520472306387[400] = 0;
   out_7553144520472306387[401] = 0;
   out_7553144520472306387[402] = 0;
   out_7553144520472306387[403] = 0;
   out_7553144520472306387[404] = 0;
   out_7553144520472306387[405] = 0;
   out_7553144520472306387[406] = 0;
   out_7553144520472306387[407] = 0;
   out_7553144520472306387[408] = 0;
   out_7553144520472306387[409] = 0;
   out_7553144520472306387[410] = 0;
   out_7553144520472306387[411] = 0;
   out_7553144520472306387[412] = 0;
   out_7553144520472306387[413] = 0;
   out_7553144520472306387[414] = 0;
   out_7553144520472306387[415] = 0;
   out_7553144520472306387[416] = 0;
   out_7553144520472306387[417] = 1.0;
   out_7553144520472306387[418] = 0;
   out_7553144520472306387[419] = 0;
   out_7553144520472306387[420] = 0;
   out_7553144520472306387[421] = 0;
   out_7553144520472306387[422] = 0;
   out_7553144520472306387[423] = 0;
   out_7553144520472306387[424] = 0;
   out_7553144520472306387[425] = 0;
   out_7553144520472306387[426] = 0;
   out_7553144520472306387[427] = 0;
   out_7553144520472306387[428] = 0;
   out_7553144520472306387[429] = 0;
   out_7553144520472306387[430] = 0;
   out_7553144520472306387[431] = 0;
   out_7553144520472306387[432] = 0;
   out_7553144520472306387[433] = 0;
   out_7553144520472306387[434] = 0;
   out_7553144520472306387[435] = 0;
   out_7553144520472306387[436] = 0;
   out_7553144520472306387[437] = 0;
   out_7553144520472306387[438] = 0;
   out_7553144520472306387[439] = 1.0;
   out_7553144520472306387[440] = 0;
   out_7553144520472306387[441] = 0;
   out_7553144520472306387[442] = 0;
   out_7553144520472306387[443] = 0;
   out_7553144520472306387[444] = 0;
   out_7553144520472306387[445] = 0;
   out_7553144520472306387[446] = 0;
   out_7553144520472306387[447] = 0;
   out_7553144520472306387[448] = 0;
   out_7553144520472306387[449] = 0;
   out_7553144520472306387[450] = 0;
   out_7553144520472306387[451] = 0;
   out_7553144520472306387[452] = 0;
   out_7553144520472306387[453] = 0;
   out_7553144520472306387[454] = 0;
   out_7553144520472306387[455] = 0;
   out_7553144520472306387[456] = 0;
   out_7553144520472306387[457] = 0;
   out_7553144520472306387[458] = 0;
   out_7553144520472306387[459] = 0;
   out_7553144520472306387[460] = 0;
   out_7553144520472306387[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1249989427456554093) {
   out_1249989427456554093[0] = dt*state[7] + state[0];
   out_1249989427456554093[1] = dt*state[8] + state[1];
   out_1249989427456554093[2] = dt*state[9] + state[2];
   out_1249989427456554093[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1249989427456554093[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1249989427456554093[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1249989427456554093[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1249989427456554093[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1249989427456554093[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1249989427456554093[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1249989427456554093[10] = state[10];
   out_1249989427456554093[11] = state[11];
   out_1249989427456554093[12] = state[12];
   out_1249989427456554093[13] = state[13];
   out_1249989427456554093[14] = state[14];
   out_1249989427456554093[15] = state[15];
   out_1249989427456554093[16] = state[16];
   out_1249989427456554093[17] = state[17];
   out_1249989427456554093[18] = state[18];
   out_1249989427456554093[19] = state[19];
   out_1249989427456554093[20] = state[20];
   out_1249989427456554093[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4517932898832120927) {
   out_4517932898832120927[0] = 1;
   out_4517932898832120927[1] = 0;
   out_4517932898832120927[2] = 0;
   out_4517932898832120927[3] = 0;
   out_4517932898832120927[4] = 0;
   out_4517932898832120927[5] = 0;
   out_4517932898832120927[6] = dt;
   out_4517932898832120927[7] = 0;
   out_4517932898832120927[8] = 0;
   out_4517932898832120927[9] = 0;
   out_4517932898832120927[10] = 0;
   out_4517932898832120927[11] = 0;
   out_4517932898832120927[12] = 0;
   out_4517932898832120927[13] = 0;
   out_4517932898832120927[14] = 0;
   out_4517932898832120927[15] = 0;
   out_4517932898832120927[16] = 0;
   out_4517932898832120927[17] = 0;
   out_4517932898832120927[18] = 0;
   out_4517932898832120927[19] = 0;
   out_4517932898832120927[20] = 0;
   out_4517932898832120927[21] = 0;
   out_4517932898832120927[22] = 1;
   out_4517932898832120927[23] = 0;
   out_4517932898832120927[24] = 0;
   out_4517932898832120927[25] = 0;
   out_4517932898832120927[26] = 0;
   out_4517932898832120927[27] = 0;
   out_4517932898832120927[28] = dt;
   out_4517932898832120927[29] = 0;
   out_4517932898832120927[30] = 0;
   out_4517932898832120927[31] = 0;
   out_4517932898832120927[32] = 0;
   out_4517932898832120927[33] = 0;
   out_4517932898832120927[34] = 0;
   out_4517932898832120927[35] = 0;
   out_4517932898832120927[36] = 0;
   out_4517932898832120927[37] = 0;
   out_4517932898832120927[38] = 0;
   out_4517932898832120927[39] = 0;
   out_4517932898832120927[40] = 0;
   out_4517932898832120927[41] = 0;
   out_4517932898832120927[42] = 0;
   out_4517932898832120927[43] = 0;
   out_4517932898832120927[44] = 1;
   out_4517932898832120927[45] = 0;
   out_4517932898832120927[46] = 0;
   out_4517932898832120927[47] = 0;
   out_4517932898832120927[48] = 0;
   out_4517932898832120927[49] = 0;
   out_4517932898832120927[50] = dt;
   out_4517932898832120927[51] = 0;
   out_4517932898832120927[52] = 0;
   out_4517932898832120927[53] = 0;
   out_4517932898832120927[54] = 0;
   out_4517932898832120927[55] = 0;
   out_4517932898832120927[56] = 0;
   out_4517932898832120927[57] = 0;
   out_4517932898832120927[58] = 0;
   out_4517932898832120927[59] = 0;
   out_4517932898832120927[60] = 0;
   out_4517932898832120927[61] = 0;
   out_4517932898832120927[62] = 0;
   out_4517932898832120927[63] = 0;
   out_4517932898832120927[64] = 0;
   out_4517932898832120927[65] = 0;
   out_4517932898832120927[66] = 1;
   out_4517932898832120927[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4517932898832120927[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4517932898832120927[69] = 0;
   out_4517932898832120927[70] = 0;
   out_4517932898832120927[71] = 0;
   out_4517932898832120927[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4517932898832120927[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4517932898832120927[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4517932898832120927[75] = 0;
   out_4517932898832120927[76] = 0;
   out_4517932898832120927[77] = 0;
   out_4517932898832120927[78] = 0;
   out_4517932898832120927[79] = 0;
   out_4517932898832120927[80] = 0;
   out_4517932898832120927[81] = 0;
   out_4517932898832120927[82] = 0;
   out_4517932898832120927[83] = 0;
   out_4517932898832120927[84] = 0;
   out_4517932898832120927[85] = 0;
   out_4517932898832120927[86] = 0;
   out_4517932898832120927[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4517932898832120927[88] = 1;
   out_4517932898832120927[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4517932898832120927[90] = 0;
   out_4517932898832120927[91] = 0;
   out_4517932898832120927[92] = 0;
   out_4517932898832120927[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4517932898832120927[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4517932898832120927[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4517932898832120927[96] = 0;
   out_4517932898832120927[97] = 0;
   out_4517932898832120927[98] = 0;
   out_4517932898832120927[99] = 0;
   out_4517932898832120927[100] = 0;
   out_4517932898832120927[101] = 0;
   out_4517932898832120927[102] = 0;
   out_4517932898832120927[103] = 0;
   out_4517932898832120927[104] = 0;
   out_4517932898832120927[105] = 0;
   out_4517932898832120927[106] = 0;
   out_4517932898832120927[107] = 0;
   out_4517932898832120927[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4517932898832120927[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4517932898832120927[110] = 1;
   out_4517932898832120927[111] = 0;
   out_4517932898832120927[112] = 0;
   out_4517932898832120927[113] = 0;
   out_4517932898832120927[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4517932898832120927[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4517932898832120927[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4517932898832120927[117] = 0;
   out_4517932898832120927[118] = 0;
   out_4517932898832120927[119] = 0;
   out_4517932898832120927[120] = 0;
   out_4517932898832120927[121] = 0;
   out_4517932898832120927[122] = 0;
   out_4517932898832120927[123] = 0;
   out_4517932898832120927[124] = 0;
   out_4517932898832120927[125] = 0;
   out_4517932898832120927[126] = 0;
   out_4517932898832120927[127] = 0;
   out_4517932898832120927[128] = 0;
   out_4517932898832120927[129] = 0;
   out_4517932898832120927[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4517932898832120927[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4517932898832120927[132] = 1;
   out_4517932898832120927[133] = 0;
   out_4517932898832120927[134] = 0;
   out_4517932898832120927[135] = 0;
   out_4517932898832120927[136] = 0;
   out_4517932898832120927[137] = 0;
   out_4517932898832120927[138] = 0;
   out_4517932898832120927[139] = 0;
   out_4517932898832120927[140] = 0;
   out_4517932898832120927[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4517932898832120927[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4517932898832120927[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4517932898832120927[144] = 0;
   out_4517932898832120927[145] = 0;
   out_4517932898832120927[146] = 0;
   out_4517932898832120927[147] = 0;
   out_4517932898832120927[148] = 0;
   out_4517932898832120927[149] = 0;
   out_4517932898832120927[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4517932898832120927[151] = 0;
   out_4517932898832120927[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4517932898832120927[153] = 0;
   out_4517932898832120927[154] = 1;
   out_4517932898832120927[155] = 0;
   out_4517932898832120927[156] = 0;
   out_4517932898832120927[157] = 0;
   out_4517932898832120927[158] = 0;
   out_4517932898832120927[159] = 0;
   out_4517932898832120927[160] = 0;
   out_4517932898832120927[161] = 0;
   out_4517932898832120927[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4517932898832120927[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4517932898832120927[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4517932898832120927[165] = 0;
   out_4517932898832120927[166] = 0;
   out_4517932898832120927[167] = 0;
   out_4517932898832120927[168] = 0;
   out_4517932898832120927[169] = 0;
   out_4517932898832120927[170] = 0;
   out_4517932898832120927[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4517932898832120927[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4517932898832120927[173] = 0;
   out_4517932898832120927[174] = 0;
   out_4517932898832120927[175] = 0;
   out_4517932898832120927[176] = 1;
   out_4517932898832120927[177] = 0;
   out_4517932898832120927[178] = 0;
   out_4517932898832120927[179] = 0;
   out_4517932898832120927[180] = 0;
   out_4517932898832120927[181] = 0;
   out_4517932898832120927[182] = 0;
   out_4517932898832120927[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4517932898832120927[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4517932898832120927[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4517932898832120927[186] = 0;
   out_4517932898832120927[187] = 0;
   out_4517932898832120927[188] = 0;
   out_4517932898832120927[189] = 0;
   out_4517932898832120927[190] = 0;
   out_4517932898832120927[191] = 0;
   out_4517932898832120927[192] = 0;
   out_4517932898832120927[193] = 0;
   out_4517932898832120927[194] = 0;
   out_4517932898832120927[195] = 0;
   out_4517932898832120927[196] = 0;
   out_4517932898832120927[197] = 0;
   out_4517932898832120927[198] = 1;
   out_4517932898832120927[199] = 0;
   out_4517932898832120927[200] = 0;
   out_4517932898832120927[201] = 0;
   out_4517932898832120927[202] = 0;
   out_4517932898832120927[203] = 0;
   out_4517932898832120927[204] = 0;
   out_4517932898832120927[205] = 0;
   out_4517932898832120927[206] = 0;
   out_4517932898832120927[207] = 0;
   out_4517932898832120927[208] = 0;
   out_4517932898832120927[209] = 0;
   out_4517932898832120927[210] = 0;
   out_4517932898832120927[211] = 0;
   out_4517932898832120927[212] = 0;
   out_4517932898832120927[213] = 0;
   out_4517932898832120927[214] = 0;
   out_4517932898832120927[215] = 0;
   out_4517932898832120927[216] = 0;
   out_4517932898832120927[217] = 0;
   out_4517932898832120927[218] = 0;
   out_4517932898832120927[219] = 0;
   out_4517932898832120927[220] = 1;
   out_4517932898832120927[221] = 0;
   out_4517932898832120927[222] = 0;
   out_4517932898832120927[223] = 0;
   out_4517932898832120927[224] = 0;
   out_4517932898832120927[225] = 0;
   out_4517932898832120927[226] = 0;
   out_4517932898832120927[227] = 0;
   out_4517932898832120927[228] = 0;
   out_4517932898832120927[229] = 0;
   out_4517932898832120927[230] = 0;
   out_4517932898832120927[231] = 0;
   out_4517932898832120927[232] = 0;
   out_4517932898832120927[233] = 0;
   out_4517932898832120927[234] = 0;
   out_4517932898832120927[235] = 0;
   out_4517932898832120927[236] = 0;
   out_4517932898832120927[237] = 0;
   out_4517932898832120927[238] = 0;
   out_4517932898832120927[239] = 0;
   out_4517932898832120927[240] = 0;
   out_4517932898832120927[241] = 0;
   out_4517932898832120927[242] = 1;
   out_4517932898832120927[243] = 0;
   out_4517932898832120927[244] = 0;
   out_4517932898832120927[245] = 0;
   out_4517932898832120927[246] = 0;
   out_4517932898832120927[247] = 0;
   out_4517932898832120927[248] = 0;
   out_4517932898832120927[249] = 0;
   out_4517932898832120927[250] = 0;
   out_4517932898832120927[251] = 0;
   out_4517932898832120927[252] = 0;
   out_4517932898832120927[253] = 0;
   out_4517932898832120927[254] = 0;
   out_4517932898832120927[255] = 0;
   out_4517932898832120927[256] = 0;
   out_4517932898832120927[257] = 0;
   out_4517932898832120927[258] = 0;
   out_4517932898832120927[259] = 0;
   out_4517932898832120927[260] = 0;
   out_4517932898832120927[261] = 0;
   out_4517932898832120927[262] = 0;
   out_4517932898832120927[263] = 0;
   out_4517932898832120927[264] = 1;
   out_4517932898832120927[265] = 0;
   out_4517932898832120927[266] = 0;
   out_4517932898832120927[267] = 0;
   out_4517932898832120927[268] = 0;
   out_4517932898832120927[269] = 0;
   out_4517932898832120927[270] = 0;
   out_4517932898832120927[271] = 0;
   out_4517932898832120927[272] = 0;
   out_4517932898832120927[273] = 0;
   out_4517932898832120927[274] = 0;
   out_4517932898832120927[275] = 0;
   out_4517932898832120927[276] = 0;
   out_4517932898832120927[277] = 0;
   out_4517932898832120927[278] = 0;
   out_4517932898832120927[279] = 0;
   out_4517932898832120927[280] = 0;
   out_4517932898832120927[281] = 0;
   out_4517932898832120927[282] = 0;
   out_4517932898832120927[283] = 0;
   out_4517932898832120927[284] = 0;
   out_4517932898832120927[285] = 0;
   out_4517932898832120927[286] = 1;
   out_4517932898832120927[287] = 0;
   out_4517932898832120927[288] = 0;
   out_4517932898832120927[289] = 0;
   out_4517932898832120927[290] = 0;
   out_4517932898832120927[291] = 0;
   out_4517932898832120927[292] = 0;
   out_4517932898832120927[293] = 0;
   out_4517932898832120927[294] = 0;
   out_4517932898832120927[295] = 0;
   out_4517932898832120927[296] = 0;
   out_4517932898832120927[297] = 0;
   out_4517932898832120927[298] = 0;
   out_4517932898832120927[299] = 0;
   out_4517932898832120927[300] = 0;
   out_4517932898832120927[301] = 0;
   out_4517932898832120927[302] = 0;
   out_4517932898832120927[303] = 0;
   out_4517932898832120927[304] = 0;
   out_4517932898832120927[305] = 0;
   out_4517932898832120927[306] = 0;
   out_4517932898832120927[307] = 0;
   out_4517932898832120927[308] = 1;
   out_4517932898832120927[309] = 0;
   out_4517932898832120927[310] = 0;
   out_4517932898832120927[311] = 0;
   out_4517932898832120927[312] = 0;
   out_4517932898832120927[313] = 0;
   out_4517932898832120927[314] = 0;
   out_4517932898832120927[315] = 0;
   out_4517932898832120927[316] = 0;
   out_4517932898832120927[317] = 0;
   out_4517932898832120927[318] = 0;
   out_4517932898832120927[319] = 0;
   out_4517932898832120927[320] = 0;
   out_4517932898832120927[321] = 0;
   out_4517932898832120927[322] = 0;
   out_4517932898832120927[323] = 0;
   out_4517932898832120927[324] = 0;
   out_4517932898832120927[325] = 0;
   out_4517932898832120927[326] = 0;
   out_4517932898832120927[327] = 0;
   out_4517932898832120927[328] = 0;
   out_4517932898832120927[329] = 0;
   out_4517932898832120927[330] = 1;
   out_4517932898832120927[331] = 0;
   out_4517932898832120927[332] = 0;
   out_4517932898832120927[333] = 0;
   out_4517932898832120927[334] = 0;
   out_4517932898832120927[335] = 0;
   out_4517932898832120927[336] = 0;
   out_4517932898832120927[337] = 0;
   out_4517932898832120927[338] = 0;
   out_4517932898832120927[339] = 0;
   out_4517932898832120927[340] = 0;
   out_4517932898832120927[341] = 0;
   out_4517932898832120927[342] = 0;
   out_4517932898832120927[343] = 0;
   out_4517932898832120927[344] = 0;
   out_4517932898832120927[345] = 0;
   out_4517932898832120927[346] = 0;
   out_4517932898832120927[347] = 0;
   out_4517932898832120927[348] = 0;
   out_4517932898832120927[349] = 0;
   out_4517932898832120927[350] = 0;
   out_4517932898832120927[351] = 0;
   out_4517932898832120927[352] = 1;
   out_4517932898832120927[353] = 0;
   out_4517932898832120927[354] = 0;
   out_4517932898832120927[355] = 0;
   out_4517932898832120927[356] = 0;
   out_4517932898832120927[357] = 0;
   out_4517932898832120927[358] = 0;
   out_4517932898832120927[359] = 0;
   out_4517932898832120927[360] = 0;
   out_4517932898832120927[361] = 0;
   out_4517932898832120927[362] = 0;
   out_4517932898832120927[363] = 0;
   out_4517932898832120927[364] = 0;
   out_4517932898832120927[365] = 0;
   out_4517932898832120927[366] = 0;
   out_4517932898832120927[367] = 0;
   out_4517932898832120927[368] = 0;
   out_4517932898832120927[369] = 0;
   out_4517932898832120927[370] = 0;
   out_4517932898832120927[371] = 0;
   out_4517932898832120927[372] = 0;
   out_4517932898832120927[373] = 0;
   out_4517932898832120927[374] = 1;
   out_4517932898832120927[375] = 0;
   out_4517932898832120927[376] = 0;
   out_4517932898832120927[377] = 0;
   out_4517932898832120927[378] = 0;
   out_4517932898832120927[379] = 0;
   out_4517932898832120927[380] = 0;
   out_4517932898832120927[381] = 0;
   out_4517932898832120927[382] = 0;
   out_4517932898832120927[383] = 0;
   out_4517932898832120927[384] = 0;
   out_4517932898832120927[385] = 0;
   out_4517932898832120927[386] = 0;
   out_4517932898832120927[387] = 0;
   out_4517932898832120927[388] = 0;
   out_4517932898832120927[389] = 0;
   out_4517932898832120927[390] = 0;
   out_4517932898832120927[391] = 0;
   out_4517932898832120927[392] = 0;
   out_4517932898832120927[393] = 0;
   out_4517932898832120927[394] = 0;
   out_4517932898832120927[395] = 0;
   out_4517932898832120927[396] = 1;
   out_4517932898832120927[397] = 0;
   out_4517932898832120927[398] = 0;
   out_4517932898832120927[399] = 0;
   out_4517932898832120927[400] = 0;
   out_4517932898832120927[401] = 0;
   out_4517932898832120927[402] = 0;
   out_4517932898832120927[403] = 0;
   out_4517932898832120927[404] = 0;
   out_4517932898832120927[405] = 0;
   out_4517932898832120927[406] = 0;
   out_4517932898832120927[407] = 0;
   out_4517932898832120927[408] = 0;
   out_4517932898832120927[409] = 0;
   out_4517932898832120927[410] = 0;
   out_4517932898832120927[411] = 0;
   out_4517932898832120927[412] = 0;
   out_4517932898832120927[413] = 0;
   out_4517932898832120927[414] = 0;
   out_4517932898832120927[415] = 0;
   out_4517932898832120927[416] = 0;
   out_4517932898832120927[417] = 0;
   out_4517932898832120927[418] = 1;
   out_4517932898832120927[419] = 0;
   out_4517932898832120927[420] = 0;
   out_4517932898832120927[421] = 0;
   out_4517932898832120927[422] = 0;
   out_4517932898832120927[423] = 0;
   out_4517932898832120927[424] = 0;
   out_4517932898832120927[425] = 0;
   out_4517932898832120927[426] = 0;
   out_4517932898832120927[427] = 0;
   out_4517932898832120927[428] = 0;
   out_4517932898832120927[429] = 0;
   out_4517932898832120927[430] = 0;
   out_4517932898832120927[431] = 0;
   out_4517932898832120927[432] = 0;
   out_4517932898832120927[433] = 0;
   out_4517932898832120927[434] = 0;
   out_4517932898832120927[435] = 0;
   out_4517932898832120927[436] = 0;
   out_4517932898832120927[437] = 0;
   out_4517932898832120927[438] = 0;
   out_4517932898832120927[439] = 0;
   out_4517932898832120927[440] = 1;
}
void h_4(double *state, double *unused, double *out_299808686246803461) {
   out_299808686246803461[0] = state[10] + state[13];
   out_299808686246803461[1] = state[11] + state[14];
   out_299808686246803461[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2887029320487719672) {
   out_2887029320487719672[0] = 0;
   out_2887029320487719672[1] = 0;
   out_2887029320487719672[2] = 0;
   out_2887029320487719672[3] = 0;
   out_2887029320487719672[4] = 0;
   out_2887029320487719672[5] = 0;
   out_2887029320487719672[6] = 0;
   out_2887029320487719672[7] = 0;
   out_2887029320487719672[8] = 0;
   out_2887029320487719672[9] = 0;
   out_2887029320487719672[10] = 1;
   out_2887029320487719672[11] = 0;
   out_2887029320487719672[12] = 0;
   out_2887029320487719672[13] = 1;
   out_2887029320487719672[14] = 0;
   out_2887029320487719672[15] = 0;
   out_2887029320487719672[16] = 0;
   out_2887029320487719672[17] = 0;
   out_2887029320487719672[18] = 0;
   out_2887029320487719672[19] = 0;
   out_2887029320487719672[20] = 0;
   out_2887029320487719672[21] = 0;
   out_2887029320487719672[22] = 0;
   out_2887029320487719672[23] = 0;
   out_2887029320487719672[24] = 0;
   out_2887029320487719672[25] = 0;
   out_2887029320487719672[26] = 0;
   out_2887029320487719672[27] = 0;
   out_2887029320487719672[28] = 0;
   out_2887029320487719672[29] = 0;
   out_2887029320487719672[30] = 0;
   out_2887029320487719672[31] = 0;
   out_2887029320487719672[32] = 0;
   out_2887029320487719672[33] = 1;
   out_2887029320487719672[34] = 0;
   out_2887029320487719672[35] = 0;
   out_2887029320487719672[36] = 1;
   out_2887029320487719672[37] = 0;
   out_2887029320487719672[38] = 0;
   out_2887029320487719672[39] = 0;
   out_2887029320487719672[40] = 0;
   out_2887029320487719672[41] = 0;
   out_2887029320487719672[42] = 0;
   out_2887029320487719672[43] = 0;
   out_2887029320487719672[44] = 0;
   out_2887029320487719672[45] = 0;
   out_2887029320487719672[46] = 0;
   out_2887029320487719672[47] = 0;
   out_2887029320487719672[48] = 0;
   out_2887029320487719672[49] = 0;
   out_2887029320487719672[50] = 0;
   out_2887029320487719672[51] = 0;
   out_2887029320487719672[52] = 0;
   out_2887029320487719672[53] = 0;
   out_2887029320487719672[54] = 0;
   out_2887029320487719672[55] = 0;
   out_2887029320487719672[56] = 1;
   out_2887029320487719672[57] = 0;
   out_2887029320487719672[58] = 0;
   out_2887029320487719672[59] = 1;
   out_2887029320487719672[60] = 0;
   out_2887029320487719672[61] = 0;
   out_2887029320487719672[62] = 0;
   out_2887029320487719672[63] = 0;
   out_2887029320487719672[64] = 0;
   out_2887029320487719672[65] = 0;
}
void h_9(double *state, double *unused, double *out_8411220295409478831) {
   out_8411220295409478831[0] = state[10];
   out_8411220295409478831[1] = state[11];
   out_8411220295409478831[2] = state[12];
}
void H_9(double *state, double *unused, double *out_5775890872767799014) {
   out_5775890872767799014[0] = 0;
   out_5775890872767799014[1] = 0;
   out_5775890872767799014[2] = 0;
   out_5775890872767799014[3] = 0;
   out_5775890872767799014[4] = 0;
   out_5775890872767799014[5] = 0;
   out_5775890872767799014[6] = 0;
   out_5775890872767799014[7] = 0;
   out_5775890872767799014[8] = 0;
   out_5775890872767799014[9] = 0;
   out_5775890872767799014[10] = 1;
   out_5775890872767799014[11] = 0;
   out_5775890872767799014[12] = 0;
   out_5775890872767799014[13] = 0;
   out_5775890872767799014[14] = 0;
   out_5775890872767799014[15] = 0;
   out_5775890872767799014[16] = 0;
   out_5775890872767799014[17] = 0;
   out_5775890872767799014[18] = 0;
   out_5775890872767799014[19] = 0;
   out_5775890872767799014[20] = 0;
   out_5775890872767799014[21] = 0;
   out_5775890872767799014[22] = 0;
   out_5775890872767799014[23] = 0;
   out_5775890872767799014[24] = 0;
   out_5775890872767799014[25] = 0;
   out_5775890872767799014[26] = 0;
   out_5775890872767799014[27] = 0;
   out_5775890872767799014[28] = 0;
   out_5775890872767799014[29] = 0;
   out_5775890872767799014[30] = 0;
   out_5775890872767799014[31] = 0;
   out_5775890872767799014[32] = 0;
   out_5775890872767799014[33] = 1;
   out_5775890872767799014[34] = 0;
   out_5775890872767799014[35] = 0;
   out_5775890872767799014[36] = 0;
   out_5775890872767799014[37] = 0;
   out_5775890872767799014[38] = 0;
   out_5775890872767799014[39] = 0;
   out_5775890872767799014[40] = 0;
   out_5775890872767799014[41] = 0;
   out_5775890872767799014[42] = 0;
   out_5775890872767799014[43] = 0;
   out_5775890872767799014[44] = 0;
   out_5775890872767799014[45] = 0;
   out_5775890872767799014[46] = 0;
   out_5775890872767799014[47] = 0;
   out_5775890872767799014[48] = 0;
   out_5775890872767799014[49] = 0;
   out_5775890872767799014[50] = 0;
   out_5775890872767799014[51] = 0;
   out_5775890872767799014[52] = 0;
   out_5775890872767799014[53] = 0;
   out_5775890872767799014[54] = 0;
   out_5775890872767799014[55] = 0;
   out_5775890872767799014[56] = 1;
   out_5775890872767799014[57] = 0;
   out_5775890872767799014[58] = 0;
   out_5775890872767799014[59] = 0;
   out_5775890872767799014[60] = 0;
   out_5775890872767799014[61] = 0;
   out_5775890872767799014[62] = 0;
   out_5775890872767799014[63] = 0;
   out_5775890872767799014[64] = 0;
   out_5775890872767799014[65] = 0;
}
void h_10(double *state, double *unused, double *out_3488606604807533903) {
   out_3488606604807533903[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3488606604807533903[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3488606604807533903[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4028844214644418531) {
   out_4028844214644418531[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4028844214644418531[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4028844214644418531[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4028844214644418531[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4028844214644418531[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4028844214644418531[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4028844214644418531[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4028844214644418531[7] = 0;
   out_4028844214644418531[8] = 0;
   out_4028844214644418531[9] = 0;
   out_4028844214644418531[10] = 0;
   out_4028844214644418531[11] = 0;
   out_4028844214644418531[12] = 0;
   out_4028844214644418531[13] = 0;
   out_4028844214644418531[14] = 0;
   out_4028844214644418531[15] = 0;
   out_4028844214644418531[16] = 1;
   out_4028844214644418531[17] = 0;
   out_4028844214644418531[18] = 0;
   out_4028844214644418531[19] = 1;
   out_4028844214644418531[20] = 0;
   out_4028844214644418531[21] = 0;
   out_4028844214644418531[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4028844214644418531[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4028844214644418531[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4028844214644418531[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4028844214644418531[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4028844214644418531[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4028844214644418531[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4028844214644418531[29] = 0;
   out_4028844214644418531[30] = 0;
   out_4028844214644418531[31] = 0;
   out_4028844214644418531[32] = 0;
   out_4028844214644418531[33] = 0;
   out_4028844214644418531[34] = 0;
   out_4028844214644418531[35] = 0;
   out_4028844214644418531[36] = 0;
   out_4028844214644418531[37] = 0;
   out_4028844214644418531[38] = 0;
   out_4028844214644418531[39] = 1;
   out_4028844214644418531[40] = 0;
   out_4028844214644418531[41] = 0;
   out_4028844214644418531[42] = 1;
   out_4028844214644418531[43] = 0;
   out_4028844214644418531[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4028844214644418531[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4028844214644418531[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4028844214644418531[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4028844214644418531[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4028844214644418531[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4028844214644418531[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4028844214644418531[51] = 0;
   out_4028844214644418531[52] = 0;
   out_4028844214644418531[53] = 0;
   out_4028844214644418531[54] = 0;
   out_4028844214644418531[55] = 0;
   out_4028844214644418531[56] = 0;
   out_4028844214644418531[57] = 0;
   out_4028844214644418531[58] = 0;
   out_4028844214644418531[59] = 0;
   out_4028844214644418531[60] = 0;
   out_4028844214644418531[61] = 0;
   out_4028844214644418531[62] = 1;
   out_4028844214644418531[63] = 0;
   out_4028844214644418531[64] = 0;
   out_4028844214644418531[65] = 1;
}
void h_12(double *state, double *unused, double *out_9069944086782364292) {
   out_9069944086782364292[0] = state[0];
   out_9069944086782364292[1] = state[1];
   out_9069944086782364292[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7892586439539381452) {
   out_7892586439539381452[0] = 1;
   out_7892586439539381452[1] = 0;
   out_7892586439539381452[2] = 0;
   out_7892586439539381452[3] = 0;
   out_7892586439539381452[4] = 0;
   out_7892586439539381452[5] = 0;
   out_7892586439539381452[6] = 0;
   out_7892586439539381452[7] = 0;
   out_7892586439539381452[8] = 0;
   out_7892586439539381452[9] = 0;
   out_7892586439539381452[10] = 0;
   out_7892586439539381452[11] = 0;
   out_7892586439539381452[12] = 0;
   out_7892586439539381452[13] = 0;
   out_7892586439539381452[14] = 0;
   out_7892586439539381452[15] = 0;
   out_7892586439539381452[16] = 0;
   out_7892586439539381452[17] = 0;
   out_7892586439539381452[18] = 0;
   out_7892586439539381452[19] = 0;
   out_7892586439539381452[20] = 0;
   out_7892586439539381452[21] = 0;
   out_7892586439539381452[22] = 0;
   out_7892586439539381452[23] = 1;
   out_7892586439539381452[24] = 0;
   out_7892586439539381452[25] = 0;
   out_7892586439539381452[26] = 0;
   out_7892586439539381452[27] = 0;
   out_7892586439539381452[28] = 0;
   out_7892586439539381452[29] = 0;
   out_7892586439539381452[30] = 0;
   out_7892586439539381452[31] = 0;
   out_7892586439539381452[32] = 0;
   out_7892586439539381452[33] = 0;
   out_7892586439539381452[34] = 0;
   out_7892586439539381452[35] = 0;
   out_7892586439539381452[36] = 0;
   out_7892586439539381452[37] = 0;
   out_7892586439539381452[38] = 0;
   out_7892586439539381452[39] = 0;
   out_7892586439539381452[40] = 0;
   out_7892586439539381452[41] = 0;
   out_7892586439539381452[42] = 0;
   out_7892586439539381452[43] = 0;
   out_7892586439539381452[44] = 0;
   out_7892586439539381452[45] = 0;
   out_7892586439539381452[46] = 1;
   out_7892586439539381452[47] = 0;
   out_7892586439539381452[48] = 0;
   out_7892586439539381452[49] = 0;
   out_7892586439539381452[50] = 0;
   out_7892586439539381452[51] = 0;
   out_7892586439539381452[52] = 0;
   out_7892586439539381452[53] = 0;
   out_7892586439539381452[54] = 0;
   out_7892586439539381452[55] = 0;
   out_7892586439539381452[56] = 0;
   out_7892586439539381452[57] = 0;
   out_7892586439539381452[58] = 0;
   out_7892586439539381452[59] = 0;
   out_7892586439539381452[60] = 0;
   out_7892586439539381452[61] = 0;
   out_7892586439539381452[62] = 0;
   out_7892586439539381452[63] = 0;
   out_7892586439539381452[64] = 0;
   out_7892586439539381452[65] = 0;
}
void h_35(double *state, double *unused, double *out_8841826526691580459) {
   out_8841826526691580459[0] = state[7];
   out_8841826526691580459[1] = state[8];
   out_8841826526691580459[2] = state[9];
}
void H_35(double *state, double *unused, double *out_6253691377860327048) {
   out_6253691377860327048[0] = 0;
   out_6253691377860327048[1] = 0;
   out_6253691377860327048[2] = 0;
   out_6253691377860327048[3] = 0;
   out_6253691377860327048[4] = 0;
   out_6253691377860327048[5] = 0;
   out_6253691377860327048[6] = 0;
   out_6253691377860327048[7] = 1;
   out_6253691377860327048[8] = 0;
   out_6253691377860327048[9] = 0;
   out_6253691377860327048[10] = 0;
   out_6253691377860327048[11] = 0;
   out_6253691377860327048[12] = 0;
   out_6253691377860327048[13] = 0;
   out_6253691377860327048[14] = 0;
   out_6253691377860327048[15] = 0;
   out_6253691377860327048[16] = 0;
   out_6253691377860327048[17] = 0;
   out_6253691377860327048[18] = 0;
   out_6253691377860327048[19] = 0;
   out_6253691377860327048[20] = 0;
   out_6253691377860327048[21] = 0;
   out_6253691377860327048[22] = 0;
   out_6253691377860327048[23] = 0;
   out_6253691377860327048[24] = 0;
   out_6253691377860327048[25] = 0;
   out_6253691377860327048[26] = 0;
   out_6253691377860327048[27] = 0;
   out_6253691377860327048[28] = 0;
   out_6253691377860327048[29] = 0;
   out_6253691377860327048[30] = 1;
   out_6253691377860327048[31] = 0;
   out_6253691377860327048[32] = 0;
   out_6253691377860327048[33] = 0;
   out_6253691377860327048[34] = 0;
   out_6253691377860327048[35] = 0;
   out_6253691377860327048[36] = 0;
   out_6253691377860327048[37] = 0;
   out_6253691377860327048[38] = 0;
   out_6253691377860327048[39] = 0;
   out_6253691377860327048[40] = 0;
   out_6253691377860327048[41] = 0;
   out_6253691377860327048[42] = 0;
   out_6253691377860327048[43] = 0;
   out_6253691377860327048[44] = 0;
   out_6253691377860327048[45] = 0;
   out_6253691377860327048[46] = 0;
   out_6253691377860327048[47] = 0;
   out_6253691377860327048[48] = 0;
   out_6253691377860327048[49] = 0;
   out_6253691377860327048[50] = 0;
   out_6253691377860327048[51] = 0;
   out_6253691377860327048[52] = 0;
   out_6253691377860327048[53] = 1;
   out_6253691377860327048[54] = 0;
   out_6253691377860327048[55] = 0;
   out_6253691377860327048[56] = 0;
   out_6253691377860327048[57] = 0;
   out_6253691377860327048[58] = 0;
   out_6253691377860327048[59] = 0;
   out_6253691377860327048[60] = 0;
   out_6253691377860327048[61] = 0;
   out_6253691377860327048[62] = 0;
   out_6253691377860327048[63] = 0;
   out_6253691377860327048[64] = 0;
   out_6253691377860327048[65] = 0;
}
void h_32(double *state, double *unused, double *out_6188076859686935642) {
   out_6188076859686935642[0] = state[3];
   out_6188076859686935642[1] = state[4];
   out_6188076859686935642[2] = state[5];
   out_6188076859686935642[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2363365242795950150) {
   out_2363365242795950150[0] = 0;
   out_2363365242795950150[1] = 0;
   out_2363365242795950150[2] = 0;
   out_2363365242795950150[3] = 1;
   out_2363365242795950150[4] = 0;
   out_2363365242795950150[5] = 0;
   out_2363365242795950150[6] = 0;
   out_2363365242795950150[7] = 0;
   out_2363365242795950150[8] = 0;
   out_2363365242795950150[9] = 0;
   out_2363365242795950150[10] = 0;
   out_2363365242795950150[11] = 0;
   out_2363365242795950150[12] = 0;
   out_2363365242795950150[13] = 0;
   out_2363365242795950150[14] = 0;
   out_2363365242795950150[15] = 0;
   out_2363365242795950150[16] = 0;
   out_2363365242795950150[17] = 0;
   out_2363365242795950150[18] = 0;
   out_2363365242795950150[19] = 0;
   out_2363365242795950150[20] = 0;
   out_2363365242795950150[21] = 0;
   out_2363365242795950150[22] = 0;
   out_2363365242795950150[23] = 0;
   out_2363365242795950150[24] = 0;
   out_2363365242795950150[25] = 0;
   out_2363365242795950150[26] = 1;
   out_2363365242795950150[27] = 0;
   out_2363365242795950150[28] = 0;
   out_2363365242795950150[29] = 0;
   out_2363365242795950150[30] = 0;
   out_2363365242795950150[31] = 0;
   out_2363365242795950150[32] = 0;
   out_2363365242795950150[33] = 0;
   out_2363365242795950150[34] = 0;
   out_2363365242795950150[35] = 0;
   out_2363365242795950150[36] = 0;
   out_2363365242795950150[37] = 0;
   out_2363365242795950150[38] = 0;
   out_2363365242795950150[39] = 0;
   out_2363365242795950150[40] = 0;
   out_2363365242795950150[41] = 0;
   out_2363365242795950150[42] = 0;
   out_2363365242795950150[43] = 0;
   out_2363365242795950150[44] = 0;
   out_2363365242795950150[45] = 0;
   out_2363365242795950150[46] = 0;
   out_2363365242795950150[47] = 0;
   out_2363365242795950150[48] = 0;
   out_2363365242795950150[49] = 1;
   out_2363365242795950150[50] = 0;
   out_2363365242795950150[51] = 0;
   out_2363365242795950150[52] = 0;
   out_2363365242795950150[53] = 0;
   out_2363365242795950150[54] = 0;
   out_2363365242795950150[55] = 0;
   out_2363365242795950150[56] = 0;
   out_2363365242795950150[57] = 0;
   out_2363365242795950150[58] = 0;
   out_2363365242795950150[59] = 0;
   out_2363365242795950150[60] = 0;
   out_2363365242795950150[61] = 0;
   out_2363365242795950150[62] = 0;
   out_2363365242795950150[63] = 0;
   out_2363365242795950150[64] = 0;
   out_2363365242795950150[65] = 0;
   out_2363365242795950150[66] = 0;
   out_2363365242795950150[67] = 0;
   out_2363365242795950150[68] = 0;
   out_2363365242795950150[69] = 0;
   out_2363365242795950150[70] = 0;
   out_2363365242795950150[71] = 0;
   out_2363365242795950150[72] = 1;
   out_2363365242795950150[73] = 0;
   out_2363365242795950150[74] = 0;
   out_2363365242795950150[75] = 0;
   out_2363365242795950150[76] = 0;
   out_2363365242795950150[77] = 0;
   out_2363365242795950150[78] = 0;
   out_2363365242795950150[79] = 0;
   out_2363365242795950150[80] = 0;
   out_2363365242795950150[81] = 0;
   out_2363365242795950150[82] = 0;
   out_2363365242795950150[83] = 0;
   out_2363365242795950150[84] = 0;
   out_2363365242795950150[85] = 0;
   out_2363365242795950150[86] = 0;
   out_2363365242795950150[87] = 0;
}
void h_13(double *state, double *unused, double *out_92948713088175494) {
   out_92948713088175494[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_92948713088175494[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_92948713088175494[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8890490212231086480) {
   out_8890490212231086480[0] = 0;
   out_8890490212231086480[1] = 0;
   out_8890490212231086480[2] = 0;
   out_8890490212231086480[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8890490212231086480[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8890490212231086480[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8890490212231086480[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8890490212231086480[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8890490212231086480[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8890490212231086480[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8890490212231086480[10] = 0;
   out_8890490212231086480[11] = 0;
   out_8890490212231086480[12] = 0;
   out_8890490212231086480[13] = 0;
   out_8890490212231086480[14] = 0;
   out_8890490212231086480[15] = 0;
   out_8890490212231086480[16] = 0;
   out_8890490212231086480[17] = 0;
   out_8890490212231086480[18] = 0;
   out_8890490212231086480[19] = 0;
   out_8890490212231086480[20] = 0;
   out_8890490212231086480[21] = 0;
   out_8890490212231086480[22] = 0;
   out_8890490212231086480[23] = 0;
   out_8890490212231086480[24] = 0;
   out_8890490212231086480[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8890490212231086480[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8890490212231086480[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8890490212231086480[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8890490212231086480[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8890490212231086480[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8890490212231086480[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8890490212231086480[32] = 0;
   out_8890490212231086480[33] = 0;
   out_8890490212231086480[34] = 0;
   out_8890490212231086480[35] = 0;
   out_8890490212231086480[36] = 0;
   out_8890490212231086480[37] = 0;
   out_8890490212231086480[38] = 0;
   out_8890490212231086480[39] = 0;
   out_8890490212231086480[40] = 0;
   out_8890490212231086480[41] = 0;
   out_8890490212231086480[42] = 0;
   out_8890490212231086480[43] = 0;
   out_8890490212231086480[44] = 0;
   out_8890490212231086480[45] = 0;
   out_8890490212231086480[46] = 0;
   out_8890490212231086480[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8890490212231086480[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8890490212231086480[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8890490212231086480[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8890490212231086480[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8890490212231086480[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8890490212231086480[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8890490212231086480[54] = 0;
   out_8890490212231086480[55] = 0;
   out_8890490212231086480[56] = 0;
   out_8890490212231086480[57] = 0;
   out_8890490212231086480[58] = 0;
   out_8890490212231086480[59] = 0;
   out_8890490212231086480[60] = 0;
   out_8890490212231086480[61] = 0;
   out_8890490212231086480[62] = 0;
   out_8890490212231086480[63] = 0;
   out_8890490212231086480[64] = 0;
   out_8890490212231086480[65] = 0;
}
void h_14(double *state, double *unused, double *out_8411220295409478831) {
   out_8411220295409478831[0] = state[10];
   out_8411220295409478831[1] = state[11];
   out_8411220295409478831[2] = state[12];
}
void H_14(double *state, double *unused, double *out_5775890872767799014) {
   out_5775890872767799014[0] = 0;
   out_5775890872767799014[1] = 0;
   out_5775890872767799014[2] = 0;
   out_5775890872767799014[3] = 0;
   out_5775890872767799014[4] = 0;
   out_5775890872767799014[5] = 0;
   out_5775890872767799014[6] = 0;
   out_5775890872767799014[7] = 0;
   out_5775890872767799014[8] = 0;
   out_5775890872767799014[9] = 0;
   out_5775890872767799014[10] = 1;
   out_5775890872767799014[11] = 0;
   out_5775890872767799014[12] = 0;
   out_5775890872767799014[13] = 0;
   out_5775890872767799014[14] = 0;
   out_5775890872767799014[15] = 0;
   out_5775890872767799014[16] = 0;
   out_5775890872767799014[17] = 0;
   out_5775890872767799014[18] = 0;
   out_5775890872767799014[19] = 0;
   out_5775890872767799014[20] = 0;
   out_5775890872767799014[21] = 0;
   out_5775890872767799014[22] = 0;
   out_5775890872767799014[23] = 0;
   out_5775890872767799014[24] = 0;
   out_5775890872767799014[25] = 0;
   out_5775890872767799014[26] = 0;
   out_5775890872767799014[27] = 0;
   out_5775890872767799014[28] = 0;
   out_5775890872767799014[29] = 0;
   out_5775890872767799014[30] = 0;
   out_5775890872767799014[31] = 0;
   out_5775890872767799014[32] = 0;
   out_5775890872767799014[33] = 1;
   out_5775890872767799014[34] = 0;
   out_5775890872767799014[35] = 0;
   out_5775890872767799014[36] = 0;
   out_5775890872767799014[37] = 0;
   out_5775890872767799014[38] = 0;
   out_5775890872767799014[39] = 0;
   out_5775890872767799014[40] = 0;
   out_5775890872767799014[41] = 0;
   out_5775890872767799014[42] = 0;
   out_5775890872767799014[43] = 0;
   out_5775890872767799014[44] = 0;
   out_5775890872767799014[45] = 0;
   out_5775890872767799014[46] = 0;
   out_5775890872767799014[47] = 0;
   out_5775890872767799014[48] = 0;
   out_5775890872767799014[49] = 0;
   out_5775890872767799014[50] = 0;
   out_5775890872767799014[51] = 0;
   out_5775890872767799014[52] = 0;
   out_5775890872767799014[53] = 0;
   out_5775890872767799014[54] = 0;
   out_5775890872767799014[55] = 0;
   out_5775890872767799014[56] = 1;
   out_5775890872767799014[57] = 0;
   out_5775890872767799014[58] = 0;
   out_5775890872767799014[59] = 0;
   out_5775890872767799014[60] = 0;
   out_5775890872767799014[61] = 0;
   out_5775890872767799014[62] = 0;
   out_5775890872767799014[63] = 0;
   out_5775890872767799014[64] = 0;
   out_5775890872767799014[65] = 0;
}
void h_33(double *state, double *unused, double *out_5241343983299052222) {
   out_5241343983299052222[0] = state[16];
   out_5241343983299052222[1] = state[17];
   out_5241343983299052222[2] = state[18];
}
void H_33(double *state, double *unused, double *out_9042495691210366964) {
   out_9042495691210366964[0] = 0;
   out_9042495691210366964[1] = 0;
   out_9042495691210366964[2] = 0;
   out_9042495691210366964[3] = 0;
   out_9042495691210366964[4] = 0;
   out_9042495691210366964[5] = 0;
   out_9042495691210366964[6] = 0;
   out_9042495691210366964[7] = 0;
   out_9042495691210366964[8] = 0;
   out_9042495691210366964[9] = 0;
   out_9042495691210366964[10] = 0;
   out_9042495691210366964[11] = 0;
   out_9042495691210366964[12] = 0;
   out_9042495691210366964[13] = 0;
   out_9042495691210366964[14] = 0;
   out_9042495691210366964[15] = 0;
   out_9042495691210366964[16] = 1;
   out_9042495691210366964[17] = 0;
   out_9042495691210366964[18] = 0;
   out_9042495691210366964[19] = 0;
   out_9042495691210366964[20] = 0;
   out_9042495691210366964[21] = 0;
   out_9042495691210366964[22] = 0;
   out_9042495691210366964[23] = 0;
   out_9042495691210366964[24] = 0;
   out_9042495691210366964[25] = 0;
   out_9042495691210366964[26] = 0;
   out_9042495691210366964[27] = 0;
   out_9042495691210366964[28] = 0;
   out_9042495691210366964[29] = 0;
   out_9042495691210366964[30] = 0;
   out_9042495691210366964[31] = 0;
   out_9042495691210366964[32] = 0;
   out_9042495691210366964[33] = 0;
   out_9042495691210366964[34] = 0;
   out_9042495691210366964[35] = 0;
   out_9042495691210366964[36] = 0;
   out_9042495691210366964[37] = 0;
   out_9042495691210366964[38] = 0;
   out_9042495691210366964[39] = 1;
   out_9042495691210366964[40] = 0;
   out_9042495691210366964[41] = 0;
   out_9042495691210366964[42] = 0;
   out_9042495691210366964[43] = 0;
   out_9042495691210366964[44] = 0;
   out_9042495691210366964[45] = 0;
   out_9042495691210366964[46] = 0;
   out_9042495691210366964[47] = 0;
   out_9042495691210366964[48] = 0;
   out_9042495691210366964[49] = 0;
   out_9042495691210366964[50] = 0;
   out_9042495691210366964[51] = 0;
   out_9042495691210366964[52] = 0;
   out_9042495691210366964[53] = 0;
   out_9042495691210366964[54] = 0;
   out_9042495691210366964[55] = 0;
   out_9042495691210366964[56] = 0;
   out_9042495691210366964[57] = 0;
   out_9042495691210366964[58] = 0;
   out_9042495691210366964[59] = 0;
   out_9042495691210366964[60] = 0;
   out_9042495691210366964[61] = 0;
   out_9042495691210366964[62] = 1;
   out_9042495691210366964[63] = 0;
   out_9042495691210366964[64] = 0;
   out_9042495691210366964[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3997180882274073765) {
  H(in_vec, out_3997180882274073765);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4133446465328801589) {
  err_fun(nom_x, delta_x, out_4133446465328801589);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4527266877824918187) {
  inv_err_fun(nom_x, true_x, out_4527266877824918187);
}
void live_H_mod_fun(double *state, double *out_7553144520472306387) {
  H_mod_fun(state, out_7553144520472306387);
}
void live_f_fun(double *state, double dt, double *out_1249989427456554093) {
  f_fun(state,  dt, out_1249989427456554093);
}
void live_F_fun(double *state, double dt, double *out_4517932898832120927) {
  F_fun(state,  dt, out_4517932898832120927);
}
void live_h_4(double *state, double *unused, double *out_299808686246803461) {
  h_4(state, unused, out_299808686246803461);
}
void live_H_4(double *state, double *unused, double *out_2887029320487719672) {
  H_4(state, unused, out_2887029320487719672);
}
void live_h_9(double *state, double *unused, double *out_8411220295409478831) {
  h_9(state, unused, out_8411220295409478831);
}
void live_H_9(double *state, double *unused, double *out_5775890872767799014) {
  H_9(state, unused, out_5775890872767799014);
}
void live_h_10(double *state, double *unused, double *out_3488606604807533903) {
  h_10(state, unused, out_3488606604807533903);
}
void live_H_10(double *state, double *unused, double *out_4028844214644418531) {
  H_10(state, unused, out_4028844214644418531);
}
void live_h_12(double *state, double *unused, double *out_9069944086782364292) {
  h_12(state, unused, out_9069944086782364292);
}
void live_H_12(double *state, double *unused, double *out_7892586439539381452) {
  H_12(state, unused, out_7892586439539381452);
}
void live_h_35(double *state, double *unused, double *out_8841826526691580459) {
  h_35(state, unused, out_8841826526691580459);
}
void live_H_35(double *state, double *unused, double *out_6253691377860327048) {
  H_35(state, unused, out_6253691377860327048);
}
void live_h_32(double *state, double *unused, double *out_6188076859686935642) {
  h_32(state, unused, out_6188076859686935642);
}
void live_H_32(double *state, double *unused, double *out_2363365242795950150) {
  H_32(state, unused, out_2363365242795950150);
}
void live_h_13(double *state, double *unused, double *out_92948713088175494) {
  h_13(state, unused, out_92948713088175494);
}
void live_H_13(double *state, double *unused, double *out_8890490212231086480) {
  H_13(state, unused, out_8890490212231086480);
}
void live_h_14(double *state, double *unused, double *out_8411220295409478831) {
  h_14(state, unused, out_8411220295409478831);
}
void live_H_14(double *state, double *unused, double *out_5775890872767799014) {
  H_14(state, unused, out_5775890872767799014);
}
void live_h_33(double *state, double *unused, double *out_5241343983299052222) {
  h_33(state, unused, out_5241343983299052222);
}
void live_H_33(double *state, double *unused, double *out_9042495691210366964) {
  H_33(state, unused, out_9042495691210366964);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
