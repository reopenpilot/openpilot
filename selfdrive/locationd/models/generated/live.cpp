#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7905178246848263555) {
   out_7905178246848263555[0] = 0;
   out_7905178246848263555[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7905178246848263555[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7905178246848263555[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7905178246848263555[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7905178246848263555[5] = -sin(in_vec[1]);
   out_7905178246848263555[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7905178246848263555[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7905178246848263555[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7905178246848263555[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7905178246848263555[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7905178246848263555[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7905178246848263555[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7905178246848263555[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7905178246848263555[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7905178246848263555[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7905178246848263555[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7905178246848263555[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4425427414863107296) {
   out_4425427414863107296[0] = delta_x[0] + nom_x[0];
   out_4425427414863107296[1] = delta_x[1] + nom_x[1];
   out_4425427414863107296[2] = delta_x[2] + nom_x[2];
   out_4425427414863107296[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4425427414863107296[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4425427414863107296[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4425427414863107296[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4425427414863107296[7] = delta_x[6] + nom_x[7];
   out_4425427414863107296[8] = delta_x[7] + nom_x[8];
   out_4425427414863107296[9] = delta_x[8] + nom_x[9];
   out_4425427414863107296[10] = delta_x[9] + nom_x[10];
   out_4425427414863107296[11] = delta_x[10] + nom_x[11];
   out_4425427414863107296[12] = delta_x[11] + nom_x[12];
   out_4425427414863107296[13] = delta_x[12] + nom_x[13];
   out_4425427414863107296[14] = delta_x[13] + nom_x[14];
   out_4425427414863107296[15] = delta_x[14] + nom_x[15];
   out_4425427414863107296[16] = delta_x[15] + nom_x[16];
   out_4425427414863107296[17] = delta_x[16] + nom_x[17];
   out_4425427414863107296[18] = delta_x[17] + nom_x[18];
   out_4425427414863107296[19] = delta_x[18] + nom_x[19];
   out_4425427414863107296[20] = delta_x[19] + nom_x[20];
   out_4425427414863107296[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5328019979359077297) {
   out_5328019979359077297[0] = -nom_x[0] + true_x[0];
   out_5328019979359077297[1] = -nom_x[1] + true_x[1];
   out_5328019979359077297[2] = -nom_x[2] + true_x[2];
   out_5328019979359077297[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5328019979359077297[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5328019979359077297[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5328019979359077297[6] = -nom_x[7] + true_x[7];
   out_5328019979359077297[7] = -nom_x[8] + true_x[8];
   out_5328019979359077297[8] = -nom_x[9] + true_x[9];
   out_5328019979359077297[9] = -nom_x[10] + true_x[10];
   out_5328019979359077297[10] = -nom_x[11] + true_x[11];
   out_5328019979359077297[11] = -nom_x[12] + true_x[12];
   out_5328019979359077297[12] = -nom_x[13] + true_x[13];
   out_5328019979359077297[13] = -nom_x[14] + true_x[14];
   out_5328019979359077297[14] = -nom_x[15] + true_x[15];
   out_5328019979359077297[15] = -nom_x[16] + true_x[16];
   out_5328019979359077297[16] = -nom_x[17] + true_x[17];
   out_5328019979359077297[17] = -nom_x[18] + true_x[18];
   out_5328019979359077297[18] = -nom_x[19] + true_x[19];
   out_5328019979359077297[19] = -nom_x[20] + true_x[20];
   out_5328019979359077297[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1294790038504557916) {
   out_1294790038504557916[0] = 1.0;
   out_1294790038504557916[1] = 0;
   out_1294790038504557916[2] = 0;
   out_1294790038504557916[3] = 0;
   out_1294790038504557916[4] = 0;
   out_1294790038504557916[5] = 0;
   out_1294790038504557916[6] = 0;
   out_1294790038504557916[7] = 0;
   out_1294790038504557916[8] = 0;
   out_1294790038504557916[9] = 0;
   out_1294790038504557916[10] = 0;
   out_1294790038504557916[11] = 0;
   out_1294790038504557916[12] = 0;
   out_1294790038504557916[13] = 0;
   out_1294790038504557916[14] = 0;
   out_1294790038504557916[15] = 0;
   out_1294790038504557916[16] = 0;
   out_1294790038504557916[17] = 0;
   out_1294790038504557916[18] = 0;
   out_1294790038504557916[19] = 0;
   out_1294790038504557916[20] = 0;
   out_1294790038504557916[21] = 0;
   out_1294790038504557916[22] = 1.0;
   out_1294790038504557916[23] = 0;
   out_1294790038504557916[24] = 0;
   out_1294790038504557916[25] = 0;
   out_1294790038504557916[26] = 0;
   out_1294790038504557916[27] = 0;
   out_1294790038504557916[28] = 0;
   out_1294790038504557916[29] = 0;
   out_1294790038504557916[30] = 0;
   out_1294790038504557916[31] = 0;
   out_1294790038504557916[32] = 0;
   out_1294790038504557916[33] = 0;
   out_1294790038504557916[34] = 0;
   out_1294790038504557916[35] = 0;
   out_1294790038504557916[36] = 0;
   out_1294790038504557916[37] = 0;
   out_1294790038504557916[38] = 0;
   out_1294790038504557916[39] = 0;
   out_1294790038504557916[40] = 0;
   out_1294790038504557916[41] = 0;
   out_1294790038504557916[42] = 0;
   out_1294790038504557916[43] = 0;
   out_1294790038504557916[44] = 1.0;
   out_1294790038504557916[45] = 0;
   out_1294790038504557916[46] = 0;
   out_1294790038504557916[47] = 0;
   out_1294790038504557916[48] = 0;
   out_1294790038504557916[49] = 0;
   out_1294790038504557916[50] = 0;
   out_1294790038504557916[51] = 0;
   out_1294790038504557916[52] = 0;
   out_1294790038504557916[53] = 0;
   out_1294790038504557916[54] = 0;
   out_1294790038504557916[55] = 0;
   out_1294790038504557916[56] = 0;
   out_1294790038504557916[57] = 0;
   out_1294790038504557916[58] = 0;
   out_1294790038504557916[59] = 0;
   out_1294790038504557916[60] = 0;
   out_1294790038504557916[61] = 0;
   out_1294790038504557916[62] = 0;
   out_1294790038504557916[63] = 0;
   out_1294790038504557916[64] = 0;
   out_1294790038504557916[65] = 0;
   out_1294790038504557916[66] = -0.5*state[4];
   out_1294790038504557916[67] = -0.5*state[5];
   out_1294790038504557916[68] = -0.5*state[6];
   out_1294790038504557916[69] = 0;
   out_1294790038504557916[70] = 0;
   out_1294790038504557916[71] = 0;
   out_1294790038504557916[72] = 0;
   out_1294790038504557916[73] = 0;
   out_1294790038504557916[74] = 0;
   out_1294790038504557916[75] = 0;
   out_1294790038504557916[76] = 0;
   out_1294790038504557916[77] = 0;
   out_1294790038504557916[78] = 0;
   out_1294790038504557916[79] = 0;
   out_1294790038504557916[80] = 0;
   out_1294790038504557916[81] = 0;
   out_1294790038504557916[82] = 0;
   out_1294790038504557916[83] = 0;
   out_1294790038504557916[84] = 0;
   out_1294790038504557916[85] = 0;
   out_1294790038504557916[86] = 0;
   out_1294790038504557916[87] = 0.5*state[3];
   out_1294790038504557916[88] = 0.5*state[6];
   out_1294790038504557916[89] = -0.5*state[5];
   out_1294790038504557916[90] = 0;
   out_1294790038504557916[91] = 0;
   out_1294790038504557916[92] = 0;
   out_1294790038504557916[93] = 0;
   out_1294790038504557916[94] = 0;
   out_1294790038504557916[95] = 0;
   out_1294790038504557916[96] = 0;
   out_1294790038504557916[97] = 0;
   out_1294790038504557916[98] = 0;
   out_1294790038504557916[99] = 0;
   out_1294790038504557916[100] = 0;
   out_1294790038504557916[101] = 0;
   out_1294790038504557916[102] = 0;
   out_1294790038504557916[103] = 0;
   out_1294790038504557916[104] = 0;
   out_1294790038504557916[105] = 0;
   out_1294790038504557916[106] = 0;
   out_1294790038504557916[107] = 0;
   out_1294790038504557916[108] = -0.5*state[6];
   out_1294790038504557916[109] = 0.5*state[3];
   out_1294790038504557916[110] = 0.5*state[4];
   out_1294790038504557916[111] = 0;
   out_1294790038504557916[112] = 0;
   out_1294790038504557916[113] = 0;
   out_1294790038504557916[114] = 0;
   out_1294790038504557916[115] = 0;
   out_1294790038504557916[116] = 0;
   out_1294790038504557916[117] = 0;
   out_1294790038504557916[118] = 0;
   out_1294790038504557916[119] = 0;
   out_1294790038504557916[120] = 0;
   out_1294790038504557916[121] = 0;
   out_1294790038504557916[122] = 0;
   out_1294790038504557916[123] = 0;
   out_1294790038504557916[124] = 0;
   out_1294790038504557916[125] = 0;
   out_1294790038504557916[126] = 0;
   out_1294790038504557916[127] = 0;
   out_1294790038504557916[128] = 0;
   out_1294790038504557916[129] = 0.5*state[5];
   out_1294790038504557916[130] = -0.5*state[4];
   out_1294790038504557916[131] = 0.5*state[3];
   out_1294790038504557916[132] = 0;
   out_1294790038504557916[133] = 0;
   out_1294790038504557916[134] = 0;
   out_1294790038504557916[135] = 0;
   out_1294790038504557916[136] = 0;
   out_1294790038504557916[137] = 0;
   out_1294790038504557916[138] = 0;
   out_1294790038504557916[139] = 0;
   out_1294790038504557916[140] = 0;
   out_1294790038504557916[141] = 0;
   out_1294790038504557916[142] = 0;
   out_1294790038504557916[143] = 0;
   out_1294790038504557916[144] = 0;
   out_1294790038504557916[145] = 0;
   out_1294790038504557916[146] = 0;
   out_1294790038504557916[147] = 0;
   out_1294790038504557916[148] = 0;
   out_1294790038504557916[149] = 0;
   out_1294790038504557916[150] = 0;
   out_1294790038504557916[151] = 0;
   out_1294790038504557916[152] = 0;
   out_1294790038504557916[153] = 1.0;
   out_1294790038504557916[154] = 0;
   out_1294790038504557916[155] = 0;
   out_1294790038504557916[156] = 0;
   out_1294790038504557916[157] = 0;
   out_1294790038504557916[158] = 0;
   out_1294790038504557916[159] = 0;
   out_1294790038504557916[160] = 0;
   out_1294790038504557916[161] = 0;
   out_1294790038504557916[162] = 0;
   out_1294790038504557916[163] = 0;
   out_1294790038504557916[164] = 0;
   out_1294790038504557916[165] = 0;
   out_1294790038504557916[166] = 0;
   out_1294790038504557916[167] = 0;
   out_1294790038504557916[168] = 0;
   out_1294790038504557916[169] = 0;
   out_1294790038504557916[170] = 0;
   out_1294790038504557916[171] = 0;
   out_1294790038504557916[172] = 0;
   out_1294790038504557916[173] = 0;
   out_1294790038504557916[174] = 0;
   out_1294790038504557916[175] = 1.0;
   out_1294790038504557916[176] = 0;
   out_1294790038504557916[177] = 0;
   out_1294790038504557916[178] = 0;
   out_1294790038504557916[179] = 0;
   out_1294790038504557916[180] = 0;
   out_1294790038504557916[181] = 0;
   out_1294790038504557916[182] = 0;
   out_1294790038504557916[183] = 0;
   out_1294790038504557916[184] = 0;
   out_1294790038504557916[185] = 0;
   out_1294790038504557916[186] = 0;
   out_1294790038504557916[187] = 0;
   out_1294790038504557916[188] = 0;
   out_1294790038504557916[189] = 0;
   out_1294790038504557916[190] = 0;
   out_1294790038504557916[191] = 0;
   out_1294790038504557916[192] = 0;
   out_1294790038504557916[193] = 0;
   out_1294790038504557916[194] = 0;
   out_1294790038504557916[195] = 0;
   out_1294790038504557916[196] = 0;
   out_1294790038504557916[197] = 1.0;
   out_1294790038504557916[198] = 0;
   out_1294790038504557916[199] = 0;
   out_1294790038504557916[200] = 0;
   out_1294790038504557916[201] = 0;
   out_1294790038504557916[202] = 0;
   out_1294790038504557916[203] = 0;
   out_1294790038504557916[204] = 0;
   out_1294790038504557916[205] = 0;
   out_1294790038504557916[206] = 0;
   out_1294790038504557916[207] = 0;
   out_1294790038504557916[208] = 0;
   out_1294790038504557916[209] = 0;
   out_1294790038504557916[210] = 0;
   out_1294790038504557916[211] = 0;
   out_1294790038504557916[212] = 0;
   out_1294790038504557916[213] = 0;
   out_1294790038504557916[214] = 0;
   out_1294790038504557916[215] = 0;
   out_1294790038504557916[216] = 0;
   out_1294790038504557916[217] = 0;
   out_1294790038504557916[218] = 0;
   out_1294790038504557916[219] = 1.0;
   out_1294790038504557916[220] = 0;
   out_1294790038504557916[221] = 0;
   out_1294790038504557916[222] = 0;
   out_1294790038504557916[223] = 0;
   out_1294790038504557916[224] = 0;
   out_1294790038504557916[225] = 0;
   out_1294790038504557916[226] = 0;
   out_1294790038504557916[227] = 0;
   out_1294790038504557916[228] = 0;
   out_1294790038504557916[229] = 0;
   out_1294790038504557916[230] = 0;
   out_1294790038504557916[231] = 0;
   out_1294790038504557916[232] = 0;
   out_1294790038504557916[233] = 0;
   out_1294790038504557916[234] = 0;
   out_1294790038504557916[235] = 0;
   out_1294790038504557916[236] = 0;
   out_1294790038504557916[237] = 0;
   out_1294790038504557916[238] = 0;
   out_1294790038504557916[239] = 0;
   out_1294790038504557916[240] = 0;
   out_1294790038504557916[241] = 1.0;
   out_1294790038504557916[242] = 0;
   out_1294790038504557916[243] = 0;
   out_1294790038504557916[244] = 0;
   out_1294790038504557916[245] = 0;
   out_1294790038504557916[246] = 0;
   out_1294790038504557916[247] = 0;
   out_1294790038504557916[248] = 0;
   out_1294790038504557916[249] = 0;
   out_1294790038504557916[250] = 0;
   out_1294790038504557916[251] = 0;
   out_1294790038504557916[252] = 0;
   out_1294790038504557916[253] = 0;
   out_1294790038504557916[254] = 0;
   out_1294790038504557916[255] = 0;
   out_1294790038504557916[256] = 0;
   out_1294790038504557916[257] = 0;
   out_1294790038504557916[258] = 0;
   out_1294790038504557916[259] = 0;
   out_1294790038504557916[260] = 0;
   out_1294790038504557916[261] = 0;
   out_1294790038504557916[262] = 0;
   out_1294790038504557916[263] = 1.0;
   out_1294790038504557916[264] = 0;
   out_1294790038504557916[265] = 0;
   out_1294790038504557916[266] = 0;
   out_1294790038504557916[267] = 0;
   out_1294790038504557916[268] = 0;
   out_1294790038504557916[269] = 0;
   out_1294790038504557916[270] = 0;
   out_1294790038504557916[271] = 0;
   out_1294790038504557916[272] = 0;
   out_1294790038504557916[273] = 0;
   out_1294790038504557916[274] = 0;
   out_1294790038504557916[275] = 0;
   out_1294790038504557916[276] = 0;
   out_1294790038504557916[277] = 0;
   out_1294790038504557916[278] = 0;
   out_1294790038504557916[279] = 0;
   out_1294790038504557916[280] = 0;
   out_1294790038504557916[281] = 0;
   out_1294790038504557916[282] = 0;
   out_1294790038504557916[283] = 0;
   out_1294790038504557916[284] = 0;
   out_1294790038504557916[285] = 1.0;
   out_1294790038504557916[286] = 0;
   out_1294790038504557916[287] = 0;
   out_1294790038504557916[288] = 0;
   out_1294790038504557916[289] = 0;
   out_1294790038504557916[290] = 0;
   out_1294790038504557916[291] = 0;
   out_1294790038504557916[292] = 0;
   out_1294790038504557916[293] = 0;
   out_1294790038504557916[294] = 0;
   out_1294790038504557916[295] = 0;
   out_1294790038504557916[296] = 0;
   out_1294790038504557916[297] = 0;
   out_1294790038504557916[298] = 0;
   out_1294790038504557916[299] = 0;
   out_1294790038504557916[300] = 0;
   out_1294790038504557916[301] = 0;
   out_1294790038504557916[302] = 0;
   out_1294790038504557916[303] = 0;
   out_1294790038504557916[304] = 0;
   out_1294790038504557916[305] = 0;
   out_1294790038504557916[306] = 0;
   out_1294790038504557916[307] = 1.0;
   out_1294790038504557916[308] = 0;
   out_1294790038504557916[309] = 0;
   out_1294790038504557916[310] = 0;
   out_1294790038504557916[311] = 0;
   out_1294790038504557916[312] = 0;
   out_1294790038504557916[313] = 0;
   out_1294790038504557916[314] = 0;
   out_1294790038504557916[315] = 0;
   out_1294790038504557916[316] = 0;
   out_1294790038504557916[317] = 0;
   out_1294790038504557916[318] = 0;
   out_1294790038504557916[319] = 0;
   out_1294790038504557916[320] = 0;
   out_1294790038504557916[321] = 0;
   out_1294790038504557916[322] = 0;
   out_1294790038504557916[323] = 0;
   out_1294790038504557916[324] = 0;
   out_1294790038504557916[325] = 0;
   out_1294790038504557916[326] = 0;
   out_1294790038504557916[327] = 0;
   out_1294790038504557916[328] = 0;
   out_1294790038504557916[329] = 1.0;
   out_1294790038504557916[330] = 0;
   out_1294790038504557916[331] = 0;
   out_1294790038504557916[332] = 0;
   out_1294790038504557916[333] = 0;
   out_1294790038504557916[334] = 0;
   out_1294790038504557916[335] = 0;
   out_1294790038504557916[336] = 0;
   out_1294790038504557916[337] = 0;
   out_1294790038504557916[338] = 0;
   out_1294790038504557916[339] = 0;
   out_1294790038504557916[340] = 0;
   out_1294790038504557916[341] = 0;
   out_1294790038504557916[342] = 0;
   out_1294790038504557916[343] = 0;
   out_1294790038504557916[344] = 0;
   out_1294790038504557916[345] = 0;
   out_1294790038504557916[346] = 0;
   out_1294790038504557916[347] = 0;
   out_1294790038504557916[348] = 0;
   out_1294790038504557916[349] = 0;
   out_1294790038504557916[350] = 0;
   out_1294790038504557916[351] = 1.0;
   out_1294790038504557916[352] = 0;
   out_1294790038504557916[353] = 0;
   out_1294790038504557916[354] = 0;
   out_1294790038504557916[355] = 0;
   out_1294790038504557916[356] = 0;
   out_1294790038504557916[357] = 0;
   out_1294790038504557916[358] = 0;
   out_1294790038504557916[359] = 0;
   out_1294790038504557916[360] = 0;
   out_1294790038504557916[361] = 0;
   out_1294790038504557916[362] = 0;
   out_1294790038504557916[363] = 0;
   out_1294790038504557916[364] = 0;
   out_1294790038504557916[365] = 0;
   out_1294790038504557916[366] = 0;
   out_1294790038504557916[367] = 0;
   out_1294790038504557916[368] = 0;
   out_1294790038504557916[369] = 0;
   out_1294790038504557916[370] = 0;
   out_1294790038504557916[371] = 0;
   out_1294790038504557916[372] = 0;
   out_1294790038504557916[373] = 1.0;
   out_1294790038504557916[374] = 0;
   out_1294790038504557916[375] = 0;
   out_1294790038504557916[376] = 0;
   out_1294790038504557916[377] = 0;
   out_1294790038504557916[378] = 0;
   out_1294790038504557916[379] = 0;
   out_1294790038504557916[380] = 0;
   out_1294790038504557916[381] = 0;
   out_1294790038504557916[382] = 0;
   out_1294790038504557916[383] = 0;
   out_1294790038504557916[384] = 0;
   out_1294790038504557916[385] = 0;
   out_1294790038504557916[386] = 0;
   out_1294790038504557916[387] = 0;
   out_1294790038504557916[388] = 0;
   out_1294790038504557916[389] = 0;
   out_1294790038504557916[390] = 0;
   out_1294790038504557916[391] = 0;
   out_1294790038504557916[392] = 0;
   out_1294790038504557916[393] = 0;
   out_1294790038504557916[394] = 0;
   out_1294790038504557916[395] = 1.0;
   out_1294790038504557916[396] = 0;
   out_1294790038504557916[397] = 0;
   out_1294790038504557916[398] = 0;
   out_1294790038504557916[399] = 0;
   out_1294790038504557916[400] = 0;
   out_1294790038504557916[401] = 0;
   out_1294790038504557916[402] = 0;
   out_1294790038504557916[403] = 0;
   out_1294790038504557916[404] = 0;
   out_1294790038504557916[405] = 0;
   out_1294790038504557916[406] = 0;
   out_1294790038504557916[407] = 0;
   out_1294790038504557916[408] = 0;
   out_1294790038504557916[409] = 0;
   out_1294790038504557916[410] = 0;
   out_1294790038504557916[411] = 0;
   out_1294790038504557916[412] = 0;
   out_1294790038504557916[413] = 0;
   out_1294790038504557916[414] = 0;
   out_1294790038504557916[415] = 0;
   out_1294790038504557916[416] = 0;
   out_1294790038504557916[417] = 1.0;
   out_1294790038504557916[418] = 0;
   out_1294790038504557916[419] = 0;
   out_1294790038504557916[420] = 0;
   out_1294790038504557916[421] = 0;
   out_1294790038504557916[422] = 0;
   out_1294790038504557916[423] = 0;
   out_1294790038504557916[424] = 0;
   out_1294790038504557916[425] = 0;
   out_1294790038504557916[426] = 0;
   out_1294790038504557916[427] = 0;
   out_1294790038504557916[428] = 0;
   out_1294790038504557916[429] = 0;
   out_1294790038504557916[430] = 0;
   out_1294790038504557916[431] = 0;
   out_1294790038504557916[432] = 0;
   out_1294790038504557916[433] = 0;
   out_1294790038504557916[434] = 0;
   out_1294790038504557916[435] = 0;
   out_1294790038504557916[436] = 0;
   out_1294790038504557916[437] = 0;
   out_1294790038504557916[438] = 0;
   out_1294790038504557916[439] = 1.0;
   out_1294790038504557916[440] = 0;
   out_1294790038504557916[441] = 0;
   out_1294790038504557916[442] = 0;
   out_1294790038504557916[443] = 0;
   out_1294790038504557916[444] = 0;
   out_1294790038504557916[445] = 0;
   out_1294790038504557916[446] = 0;
   out_1294790038504557916[447] = 0;
   out_1294790038504557916[448] = 0;
   out_1294790038504557916[449] = 0;
   out_1294790038504557916[450] = 0;
   out_1294790038504557916[451] = 0;
   out_1294790038504557916[452] = 0;
   out_1294790038504557916[453] = 0;
   out_1294790038504557916[454] = 0;
   out_1294790038504557916[455] = 0;
   out_1294790038504557916[456] = 0;
   out_1294790038504557916[457] = 0;
   out_1294790038504557916[458] = 0;
   out_1294790038504557916[459] = 0;
   out_1294790038504557916[460] = 0;
   out_1294790038504557916[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7736669759622028631) {
   out_7736669759622028631[0] = dt*state[7] + state[0];
   out_7736669759622028631[1] = dt*state[8] + state[1];
   out_7736669759622028631[2] = dt*state[9] + state[2];
   out_7736669759622028631[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7736669759622028631[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7736669759622028631[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7736669759622028631[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7736669759622028631[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7736669759622028631[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7736669759622028631[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7736669759622028631[10] = state[10];
   out_7736669759622028631[11] = state[11];
   out_7736669759622028631[12] = state[12];
   out_7736669759622028631[13] = state[13];
   out_7736669759622028631[14] = state[14];
   out_7736669759622028631[15] = state[15];
   out_7736669759622028631[16] = state[16];
   out_7736669759622028631[17] = state[17];
   out_7736669759622028631[18] = state[18];
   out_7736669759622028631[19] = state[19];
   out_7736669759622028631[20] = state[20];
   out_7736669759622028631[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8813297363633285712) {
   out_8813297363633285712[0] = 1;
   out_8813297363633285712[1] = 0;
   out_8813297363633285712[2] = 0;
   out_8813297363633285712[3] = 0;
   out_8813297363633285712[4] = 0;
   out_8813297363633285712[5] = 0;
   out_8813297363633285712[6] = dt;
   out_8813297363633285712[7] = 0;
   out_8813297363633285712[8] = 0;
   out_8813297363633285712[9] = 0;
   out_8813297363633285712[10] = 0;
   out_8813297363633285712[11] = 0;
   out_8813297363633285712[12] = 0;
   out_8813297363633285712[13] = 0;
   out_8813297363633285712[14] = 0;
   out_8813297363633285712[15] = 0;
   out_8813297363633285712[16] = 0;
   out_8813297363633285712[17] = 0;
   out_8813297363633285712[18] = 0;
   out_8813297363633285712[19] = 0;
   out_8813297363633285712[20] = 0;
   out_8813297363633285712[21] = 0;
   out_8813297363633285712[22] = 1;
   out_8813297363633285712[23] = 0;
   out_8813297363633285712[24] = 0;
   out_8813297363633285712[25] = 0;
   out_8813297363633285712[26] = 0;
   out_8813297363633285712[27] = 0;
   out_8813297363633285712[28] = dt;
   out_8813297363633285712[29] = 0;
   out_8813297363633285712[30] = 0;
   out_8813297363633285712[31] = 0;
   out_8813297363633285712[32] = 0;
   out_8813297363633285712[33] = 0;
   out_8813297363633285712[34] = 0;
   out_8813297363633285712[35] = 0;
   out_8813297363633285712[36] = 0;
   out_8813297363633285712[37] = 0;
   out_8813297363633285712[38] = 0;
   out_8813297363633285712[39] = 0;
   out_8813297363633285712[40] = 0;
   out_8813297363633285712[41] = 0;
   out_8813297363633285712[42] = 0;
   out_8813297363633285712[43] = 0;
   out_8813297363633285712[44] = 1;
   out_8813297363633285712[45] = 0;
   out_8813297363633285712[46] = 0;
   out_8813297363633285712[47] = 0;
   out_8813297363633285712[48] = 0;
   out_8813297363633285712[49] = 0;
   out_8813297363633285712[50] = dt;
   out_8813297363633285712[51] = 0;
   out_8813297363633285712[52] = 0;
   out_8813297363633285712[53] = 0;
   out_8813297363633285712[54] = 0;
   out_8813297363633285712[55] = 0;
   out_8813297363633285712[56] = 0;
   out_8813297363633285712[57] = 0;
   out_8813297363633285712[58] = 0;
   out_8813297363633285712[59] = 0;
   out_8813297363633285712[60] = 0;
   out_8813297363633285712[61] = 0;
   out_8813297363633285712[62] = 0;
   out_8813297363633285712[63] = 0;
   out_8813297363633285712[64] = 0;
   out_8813297363633285712[65] = 0;
   out_8813297363633285712[66] = 1;
   out_8813297363633285712[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8813297363633285712[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8813297363633285712[69] = 0;
   out_8813297363633285712[70] = 0;
   out_8813297363633285712[71] = 0;
   out_8813297363633285712[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8813297363633285712[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8813297363633285712[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8813297363633285712[75] = 0;
   out_8813297363633285712[76] = 0;
   out_8813297363633285712[77] = 0;
   out_8813297363633285712[78] = 0;
   out_8813297363633285712[79] = 0;
   out_8813297363633285712[80] = 0;
   out_8813297363633285712[81] = 0;
   out_8813297363633285712[82] = 0;
   out_8813297363633285712[83] = 0;
   out_8813297363633285712[84] = 0;
   out_8813297363633285712[85] = 0;
   out_8813297363633285712[86] = 0;
   out_8813297363633285712[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8813297363633285712[88] = 1;
   out_8813297363633285712[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8813297363633285712[90] = 0;
   out_8813297363633285712[91] = 0;
   out_8813297363633285712[92] = 0;
   out_8813297363633285712[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8813297363633285712[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8813297363633285712[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8813297363633285712[96] = 0;
   out_8813297363633285712[97] = 0;
   out_8813297363633285712[98] = 0;
   out_8813297363633285712[99] = 0;
   out_8813297363633285712[100] = 0;
   out_8813297363633285712[101] = 0;
   out_8813297363633285712[102] = 0;
   out_8813297363633285712[103] = 0;
   out_8813297363633285712[104] = 0;
   out_8813297363633285712[105] = 0;
   out_8813297363633285712[106] = 0;
   out_8813297363633285712[107] = 0;
   out_8813297363633285712[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8813297363633285712[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8813297363633285712[110] = 1;
   out_8813297363633285712[111] = 0;
   out_8813297363633285712[112] = 0;
   out_8813297363633285712[113] = 0;
   out_8813297363633285712[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8813297363633285712[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8813297363633285712[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8813297363633285712[117] = 0;
   out_8813297363633285712[118] = 0;
   out_8813297363633285712[119] = 0;
   out_8813297363633285712[120] = 0;
   out_8813297363633285712[121] = 0;
   out_8813297363633285712[122] = 0;
   out_8813297363633285712[123] = 0;
   out_8813297363633285712[124] = 0;
   out_8813297363633285712[125] = 0;
   out_8813297363633285712[126] = 0;
   out_8813297363633285712[127] = 0;
   out_8813297363633285712[128] = 0;
   out_8813297363633285712[129] = 0;
   out_8813297363633285712[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8813297363633285712[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8813297363633285712[132] = 1;
   out_8813297363633285712[133] = 0;
   out_8813297363633285712[134] = 0;
   out_8813297363633285712[135] = 0;
   out_8813297363633285712[136] = 0;
   out_8813297363633285712[137] = 0;
   out_8813297363633285712[138] = 0;
   out_8813297363633285712[139] = 0;
   out_8813297363633285712[140] = 0;
   out_8813297363633285712[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8813297363633285712[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8813297363633285712[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8813297363633285712[144] = 0;
   out_8813297363633285712[145] = 0;
   out_8813297363633285712[146] = 0;
   out_8813297363633285712[147] = 0;
   out_8813297363633285712[148] = 0;
   out_8813297363633285712[149] = 0;
   out_8813297363633285712[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8813297363633285712[151] = 0;
   out_8813297363633285712[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8813297363633285712[153] = 0;
   out_8813297363633285712[154] = 1;
   out_8813297363633285712[155] = 0;
   out_8813297363633285712[156] = 0;
   out_8813297363633285712[157] = 0;
   out_8813297363633285712[158] = 0;
   out_8813297363633285712[159] = 0;
   out_8813297363633285712[160] = 0;
   out_8813297363633285712[161] = 0;
   out_8813297363633285712[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8813297363633285712[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8813297363633285712[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8813297363633285712[165] = 0;
   out_8813297363633285712[166] = 0;
   out_8813297363633285712[167] = 0;
   out_8813297363633285712[168] = 0;
   out_8813297363633285712[169] = 0;
   out_8813297363633285712[170] = 0;
   out_8813297363633285712[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8813297363633285712[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8813297363633285712[173] = 0;
   out_8813297363633285712[174] = 0;
   out_8813297363633285712[175] = 0;
   out_8813297363633285712[176] = 1;
   out_8813297363633285712[177] = 0;
   out_8813297363633285712[178] = 0;
   out_8813297363633285712[179] = 0;
   out_8813297363633285712[180] = 0;
   out_8813297363633285712[181] = 0;
   out_8813297363633285712[182] = 0;
   out_8813297363633285712[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8813297363633285712[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8813297363633285712[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8813297363633285712[186] = 0;
   out_8813297363633285712[187] = 0;
   out_8813297363633285712[188] = 0;
   out_8813297363633285712[189] = 0;
   out_8813297363633285712[190] = 0;
   out_8813297363633285712[191] = 0;
   out_8813297363633285712[192] = 0;
   out_8813297363633285712[193] = 0;
   out_8813297363633285712[194] = 0;
   out_8813297363633285712[195] = 0;
   out_8813297363633285712[196] = 0;
   out_8813297363633285712[197] = 0;
   out_8813297363633285712[198] = 1;
   out_8813297363633285712[199] = 0;
   out_8813297363633285712[200] = 0;
   out_8813297363633285712[201] = 0;
   out_8813297363633285712[202] = 0;
   out_8813297363633285712[203] = 0;
   out_8813297363633285712[204] = 0;
   out_8813297363633285712[205] = 0;
   out_8813297363633285712[206] = 0;
   out_8813297363633285712[207] = 0;
   out_8813297363633285712[208] = 0;
   out_8813297363633285712[209] = 0;
   out_8813297363633285712[210] = 0;
   out_8813297363633285712[211] = 0;
   out_8813297363633285712[212] = 0;
   out_8813297363633285712[213] = 0;
   out_8813297363633285712[214] = 0;
   out_8813297363633285712[215] = 0;
   out_8813297363633285712[216] = 0;
   out_8813297363633285712[217] = 0;
   out_8813297363633285712[218] = 0;
   out_8813297363633285712[219] = 0;
   out_8813297363633285712[220] = 1;
   out_8813297363633285712[221] = 0;
   out_8813297363633285712[222] = 0;
   out_8813297363633285712[223] = 0;
   out_8813297363633285712[224] = 0;
   out_8813297363633285712[225] = 0;
   out_8813297363633285712[226] = 0;
   out_8813297363633285712[227] = 0;
   out_8813297363633285712[228] = 0;
   out_8813297363633285712[229] = 0;
   out_8813297363633285712[230] = 0;
   out_8813297363633285712[231] = 0;
   out_8813297363633285712[232] = 0;
   out_8813297363633285712[233] = 0;
   out_8813297363633285712[234] = 0;
   out_8813297363633285712[235] = 0;
   out_8813297363633285712[236] = 0;
   out_8813297363633285712[237] = 0;
   out_8813297363633285712[238] = 0;
   out_8813297363633285712[239] = 0;
   out_8813297363633285712[240] = 0;
   out_8813297363633285712[241] = 0;
   out_8813297363633285712[242] = 1;
   out_8813297363633285712[243] = 0;
   out_8813297363633285712[244] = 0;
   out_8813297363633285712[245] = 0;
   out_8813297363633285712[246] = 0;
   out_8813297363633285712[247] = 0;
   out_8813297363633285712[248] = 0;
   out_8813297363633285712[249] = 0;
   out_8813297363633285712[250] = 0;
   out_8813297363633285712[251] = 0;
   out_8813297363633285712[252] = 0;
   out_8813297363633285712[253] = 0;
   out_8813297363633285712[254] = 0;
   out_8813297363633285712[255] = 0;
   out_8813297363633285712[256] = 0;
   out_8813297363633285712[257] = 0;
   out_8813297363633285712[258] = 0;
   out_8813297363633285712[259] = 0;
   out_8813297363633285712[260] = 0;
   out_8813297363633285712[261] = 0;
   out_8813297363633285712[262] = 0;
   out_8813297363633285712[263] = 0;
   out_8813297363633285712[264] = 1;
   out_8813297363633285712[265] = 0;
   out_8813297363633285712[266] = 0;
   out_8813297363633285712[267] = 0;
   out_8813297363633285712[268] = 0;
   out_8813297363633285712[269] = 0;
   out_8813297363633285712[270] = 0;
   out_8813297363633285712[271] = 0;
   out_8813297363633285712[272] = 0;
   out_8813297363633285712[273] = 0;
   out_8813297363633285712[274] = 0;
   out_8813297363633285712[275] = 0;
   out_8813297363633285712[276] = 0;
   out_8813297363633285712[277] = 0;
   out_8813297363633285712[278] = 0;
   out_8813297363633285712[279] = 0;
   out_8813297363633285712[280] = 0;
   out_8813297363633285712[281] = 0;
   out_8813297363633285712[282] = 0;
   out_8813297363633285712[283] = 0;
   out_8813297363633285712[284] = 0;
   out_8813297363633285712[285] = 0;
   out_8813297363633285712[286] = 1;
   out_8813297363633285712[287] = 0;
   out_8813297363633285712[288] = 0;
   out_8813297363633285712[289] = 0;
   out_8813297363633285712[290] = 0;
   out_8813297363633285712[291] = 0;
   out_8813297363633285712[292] = 0;
   out_8813297363633285712[293] = 0;
   out_8813297363633285712[294] = 0;
   out_8813297363633285712[295] = 0;
   out_8813297363633285712[296] = 0;
   out_8813297363633285712[297] = 0;
   out_8813297363633285712[298] = 0;
   out_8813297363633285712[299] = 0;
   out_8813297363633285712[300] = 0;
   out_8813297363633285712[301] = 0;
   out_8813297363633285712[302] = 0;
   out_8813297363633285712[303] = 0;
   out_8813297363633285712[304] = 0;
   out_8813297363633285712[305] = 0;
   out_8813297363633285712[306] = 0;
   out_8813297363633285712[307] = 0;
   out_8813297363633285712[308] = 1;
   out_8813297363633285712[309] = 0;
   out_8813297363633285712[310] = 0;
   out_8813297363633285712[311] = 0;
   out_8813297363633285712[312] = 0;
   out_8813297363633285712[313] = 0;
   out_8813297363633285712[314] = 0;
   out_8813297363633285712[315] = 0;
   out_8813297363633285712[316] = 0;
   out_8813297363633285712[317] = 0;
   out_8813297363633285712[318] = 0;
   out_8813297363633285712[319] = 0;
   out_8813297363633285712[320] = 0;
   out_8813297363633285712[321] = 0;
   out_8813297363633285712[322] = 0;
   out_8813297363633285712[323] = 0;
   out_8813297363633285712[324] = 0;
   out_8813297363633285712[325] = 0;
   out_8813297363633285712[326] = 0;
   out_8813297363633285712[327] = 0;
   out_8813297363633285712[328] = 0;
   out_8813297363633285712[329] = 0;
   out_8813297363633285712[330] = 1;
   out_8813297363633285712[331] = 0;
   out_8813297363633285712[332] = 0;
   out_8813297363633285712[333] = 0;
   out_8813297363633285712[334] = 0;
   out_8813297363633285712[335] = 0;
   out_8813297363633285712[336] = 0;
   out_8813297363633285712[337] = 0;
   out_8813297363633285712[338] = 0;
   out_8813297363633285712[339] = 0;
   out_8813297363633285712[340] = 0;
   out_8813297363633285712[341] = 0;
   out_8813297363633285712[342] = 0;
   out_8813297363633285712[343] = 0;
   out_8813297363633285712[344] = 0;
   out_8813297363633285712[345] = 0;
   out_8813297363633285712[346] = 0;
   out_8813297363633285712[347] = 0;
   out_8813297363633285712[348] = 0;
   out_8813297363633285712[349] = 0;
   out_8813297363633285712[350] = 0;
   out_8813297363633285712[351] = 0;
   out_8813297363633285712[352] = 1;
   out_8813297363633285712[353] = 0;
   out_8813297363633285712[354] = 0;
   out_8813297363633285712[355] = 0;
   out_8813297363633285712[356] = 0;
   out_8813297363633285712[357] = 0;
   out_8813297363633285712[358] = 0;
   out_8813297363633285712[359] = 0;
   out_8813297363633285712[360] = 0;
   out_8813297363633285712[361] = 0;
   out_8813297363633285712[362] = 0;
   out_8813297363633285712[363] = 0;
   out_8813297363633285712[364] = 0;
   out_8813297363633285712[365] = 0;
   out_8813297363633285712[366] = 0;
   out_8813297363633285712[367] = 0;
   out_8813297363633285712[368] = 0;
   out_8813297363633285712[369] = 0;
   out_8813297363633285712[370] = 0;
   out_8813297363633285712[371] = 0;
   out_8813297363633285712[372] = 0;
   out_8813297363633285712[373] = 0;
   out_8813297363633285712[374] = 1;
   out_8813297363633285712[375] = 0;
   out_8813297363633285712[376] = 0;
   out_8813297363633285712[377] = 0;
   out_8813297363633285712[378] = 0;
   out_8813297363633285712[379] = 0;
   out_8813297363633285712[380] = 0;
   out_8813297363633285712[381] = 0;
   out_8813297363633285712[382] = 0;
   out_8813297363633285712[383] = 0;
   out_8813297363633285712[384] = 0;
   out_8813297363633285712[385] = 0;
   out_8813297363633285712[386] = 0;
   out_8813297363633285712[387] = 0;
   out_8813297363633285712[388] = 0;
   out_8813297363633285712[389] = 0;
   out_8813297363633285712[390] = 0;
   out_8813297363633285712[391] = 0;
   out_8813297363633285712[392] = 0;
   out_8813297363633285712[393] = 0;
   out_8813297363633285712[394] = 0;
   out_8813297363633285712[395] = 0;
   out_8813297363633285712[396] = 1;
   out_8813297363633285712[397] = 0;
   out_8813297363633285712[398] = 0;
   out_8813297363633285712[399] = 0;
   out_8813297363633285712[400] = 0;
   out_8813297363633285712[401] = 0;
   out_8813297363633285712[402] = 0;
   out_8813297363633285712[403] = 0;
   out_8813297363633285712[404] = 0;
   out_8813297363633285712[405] = 0;
   out_8813297363633285712[406] = 0;
   out_8813297363633285712[407] = 0;
   out_8813297363633285712[408] = 0;
   out_8813297363633285712[409] = 0;
   out_8813297363633285712[410] = 0;
   out_8813297363633285712[411] = 0;
   out_8813297363633285712[412] = 0;
   out_8813297363633285712[413] = 0;
   out_8813297363633285712[414] = 0;
   out_8813297363633285712[415] = 0;
   out_8813297363633285712[416] = 0;
   out_8813297363633285712[417] = 0;
   out_8813297363633285712[418] = 1;
   out_8813297363633285712[419] = 0;
   out_8813297363633285712[420] = 0;
   out_8813297363633285712[421] = 0;
   out_8813297363633285712[422] = 0;
   out_8813297363633285712[423] = 0;
   out_8813297363633285712[424] = 0;
   out_8813297363633285712[425] = 0;
   out_8813297363633285712[426] = 0;
   out_8813297363633285712[427] = 0;
   out_8813297363633285712[428] = 0;
   out_8813297363633285712[429] = 0;
   out_8813297363633285712[430] = 0;
   out_8813297363633285712[431] = 0;
   out_8813297363633285712[432] = 0;
   out_8813297363633285712[433] = 0;
   out_8813297363633285712[434] = 0;
   out_8813297363633285712[435] = 0;
   out_8813297363633285712[436] = 0;
   out_8813297363633285712[437] = 0;
   out_8813297363633285712[438] = 0;
   out_8813297363633285712[439] = 0;
   out_8813297363633285712[440] = 1;
}
void h_4(double *state, double *unused, double *out_940185469469327188) {
   out_940185469469327188[0] = state[10] + state[13];
   out_940185469469327188[1] = state[11] + state[14];
   out_940185469469327188[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_868357251157541547) {
   out_868357251157541547[0] = 0;
   out_868357251157541547[1] = 0;
   out_868357251157541547[2] = 0;
   out_868357251157541547[3] = 0;
   out_868357251157541547[4] = 0;
   out_868357251157541547[5] = 0;
   out_868357251157541547[6] = 0;
   out_868357251157541547[7] = 0;
   out_868357251157541547[8] = 0;
   out_868357251157541547[9] = 0;
   out_868357251157541547[10] = 1;
   out_868357251157541547[11] = 0;
   out_868357251157541547[12] = 0;
   out_868357251157541547[13] = 1;
   out_868357251157541547[14] = 0;
   out_868357251157541547[15] = 0;
   out_868357251157541547[16] = 0;
   out_868357251157541547[17] = 0;
   out_868357251157541547[18] = 0;
   out_868357251157541547[19] = 0;
   out_868357251157541547[20] = 0;
   out_868357251157541547[21] = 0;
   out_868357251157541547[22] = 0;
   out_868357251157541547[23] = 0;
   out_868357251157541547[24] = 0;
   out_868357251157541547[25] = 0;
   out_868357251157541547[26] = 0;
   out_868357251157541547[27] = 0;
   out_868357251157541547[28] = 0;
   out_868357251157541547[29] = 0;
   out_868357251157541547[30] = 0;
   out_868357251157541547[31] = 0;
   out_868357251157541547[32] = 0;
   out_868357251157541547[33] = 1;
   out_868357251157541547[34] = 0;
   out_868357251157541547[35] = 0;
   out_868357251157541547[36] = 1;
   out_868357251157541547[37] = 0;
   out_868357251157541547[38] = 0;
   out_868357251157541547[39] = 0;
   out_868357251157541547[40] = 0;
   out_868357251157541547[41] = 0;
   out_868357251157541547[42] = 0;
   out_868357251157541547[43] = 0;
   out_868357251157541547[44] = 0;
   out_868357251157541547[45] = 0;
   out_868357251157541547[46] = 0;
   out_868357251157541547[47] = 0;
   out_868357251157541547[48] = 0;
   out_868357251157541547[49] = 0;
   out_868357251157541547[50] = 0;
   out_868357251157541547[51] = 0;
   out_868357251157541547[52] = 0;
   out_868357251157541547[53] = 0;
   out_868357251157541547[54] = 0;
   out_868357251157541547[55] = 0;
   out_868357251157541547[56] = 1;
   out_868357251157541547[57] = 0;
   out_868357251157541547[58] = 0;
   out_868357251157541547[59] = 1;
   out_868357251157541547[60] = 0;
   out_868357251157541547[61] = 0;
   out_868357251157541547[62] = 0;
   out_868357251157541547[63] = 0;
   out_868357251157541547[64] = 0;
   out_868357251157541547[65] = 0;
}
void h_9(double *state, double *unused, double *out_7065676273963177107) {
   out_7065676273963177107[0] = state[10];
   out_7065676273963177107[1] = state[11];
   out_7065676273963177107[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6418861684106905923) {
   out_6418861684106905923[0] = 0;
   out_6418861684106905923[1] = 0;
   out_6418861684106905923[2] = 0;
   out_6418861684106905923[3] = 0;
   out_6418861684106905923[4] = 0;
   out_6418861684106905923[5] = 0;
   out_6418861684106905923[6] = 0;
   out_6418861684106905923[7] = 0;
   out_6418861684106905923[8] = 0;
   out_6418861684106905923[9] = 0;
   out_6418861684106905923[10] = 1;
   out_6418861684106905923[11] = 0;
   out_6418861684106905923[12] = 0;
   out_6418861684106905923[13] = 0;
   out_6418861684106905923[14] = 0;
   out_6418861684106905923[15] = 0;
   out_6418861684106905923[16] = 0;
   out_6418861684106905923[17] = 0;
   out_6418861684106905923[18] = 0;
   out_6418861684106905923[19] = 0;
   out_6418861684106905923[20] = 0;
   out_6418861684106905923[21] = 0;
   out_6418861684106905923[22] = 0;
   out_6418861684106905923[23] = 0;
   out_6418861684106905923[24] = 0;
   out_6418861684106905923[25] = 0;
   out_6418861684106905923[26] = 0;
   out_6418861684106905923[27] = 0;
   out_6418861684106905923[28] = 0;
   out_6418861684106905923[29] = 0;
   out_6418861684106905923[30] = 0;
   out_6418861684106905923[31] = 0;
   out_6418861684106905923[32] = 0;
   out_6418861684106905923[33] = 1;
   out_6418861684106905923[34] = 0;
   out_6418861684106905923[35] = 0;
   out_6418861684106905923[36] = 0;
   out_6418861684106905923[37] = 0;
   out_6418861684106905923[38] = 0;
   out_6418861684106905923[39] = 0;
   out_6418861684106905923[40] = 0;
   out_6418861684106905923[41] = 0;
   out_6418861684106905923[42] = 0;
   out_6418861684106905923[43] = 0;
   out_6418861684106905923[44] = 0;
   out_6418861684106905923[45] = 0;
   out_6418861684106905923[46] = 0;
   out_6418861684106905923[47] = 0;
   out_6418861684106905923[48] = 0;
   out_6418861684106905923[49] = 0;
   out_6418861684106905923[50] = 0;
   out_6418861684106905923[51] = 0;
   out_6418861684106905923[52] = 0;
   out_6418861684106905923[53] = 0;
   out_6418861684106905923[54] = 0;
   out_6418861684106905923[55] = 0;
   out_6418861684106905923[56] = 1;
   out_6418861684106905923[57] = 0;
   out_6418861684106905923[58] = 0;
   out_6418861684106905923[59] = 0;
   out_6418861684106905923[60] = 0;
   out_6418861684106905923[61] = 0;
   out_6418861684106905923[62] = 0;
   out_6418861684106905923[63] = 0;
   out_6418861684106905923[64] = 0;
   out_6418861684106905923[65] = 0;
}
void h_10(double *state, double *unused, double *out_4599990847002563557) {
   out_4599990847002563557[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4599990847002563557[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4599990847002563557[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6535221462177575285) {
   out_6535221462177575285[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6535221462177575285[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6535221462177575285[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6535221462177575285[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6535221462177575285[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6535221462177575285[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6535221462177575285[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6535221462177575285[7] = 0;
   out_6535221462177575285[8] = 0;
   out_6535221462177575285[9] = 0;
   out_6535221462177575285[10] = 0;
   out_6535221462177575285[11] = 0;
   out_6535221462177575285[12] = 0;
   out_6535221462177575285[13] = 0;
   out_6535221462177575285[14] = 0;
   out_6535221462177575285[15] = 0;
   out_6535221462177575285[16] = 1;
   out_6535221462177575285[17] = 0;
   out_6535221462177575285[18] = 0;
   out_6535221462177575285[19] = 1;
   out_6535221462177575285[20] = 0;
   out_6535221462177575285[21] = 0;
   out_6535221462177575285[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6535221462177575285[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6535221462177575285[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6535221462177575285[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6535221462177575285[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6535221462177575285[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6535221462177575285[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6535221462177575285[29] = 0;
   out_6535221462177575285[30] = 0;
   out_6535221462177575285[31] = 0;
   out_6535221462177575285[32] = 0;
   out_6535221462177575285[33] = 0;
   out_6535221462177575285[34] = 0;
   out_6535221462177575285[35] = 0;
   out_6535221462177575285[36] = 0;
   out_6535221462177575285[37] = 0;
   out_6535221462177575285[38] = 0;
   out_6535221462177575285[39] = 1;
   out_6535221462177575285[40] = 0;
   out_6535221462177575285[41] = 0;
   out_6535221462177575285[42] = 1;
   out_6535221462177575285[43] = 0;
   out_6535221462177575285[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6535221462177575285[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6535221462177575285[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6535221462177575285[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6535221462177575285[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6535221462177575285[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6535221462177575285[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6535221462177575285[51] = 0;
   out_6535221462177575285[52] = 0;
   out_6535221462177575285[53] = 0;
   out_6535221462177575285[54] = 0;
   out_6535221462177575285[55] = 0;
   out_6535221462177575285[56] = 0;
   out_6535221462177575285[57] = 0;
   out_6535221462177575285[58] = 0;
   out_6535221462177575285[59] = 0;
   out_6535221462177575285[60] = 0;
   out_6535221462177575285[61] = 0;
   out_6535221462177575285[62] = 1;
   out_6535221462177575285[63] = 0;
   out_6535221462177575285[64] = 0;
   out_6535221462177575285[65] = 1;
}
void h_12(double *state, double *unused, double *out_6622294237519177852) {
   out_6622294237519177852[0] = state[0];
   out_6622294237519177852[1] = state[1];
   out_6622294237519177852[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7249615628200274543) {
   out_7249615628200274543[0] = 1;
   out_7249615628200274543[1] = 0;
   out_7249615628200274543[2] = 0;
   out_7249615628200274543[3] = 0;
   out_7249615628200274543[4] = 0;
   out_7249615628200274543[5] = 0;
   out_7249615628200274543[6] = 0;
   out_7249615628200274543[7] = 0;
   out_7249615628200274543[8] = 0;
   out_7249615628200274543[9] = 0;
   out_7249615628200274543[10] = 0;
   out_7249615628200274543[11] = 0;
   out_7249615628200274543[12] = 0;
   out_7249615628200274543[13] = 0;
   out_7249615628200274543[14] = 0;
   out_7249615628200274543[15] = 0;
   out_7249615628200274543[16] = 0;
   out_7249615628200274543[17] = 0;
   out_7249615628200274543[18] = 0;
   out_7249615628200274543[19] = 0;
   out_7249615628200274543[20] = 0;
   out_7249615628200274543[21] = 0;
   out_7249615628200274543[22] = 0;
   out_7249615628200274543[23] = 1;
   out_7249615628200274543[24] = 0;
   out_7249615628200274543[25] = 0;
   out_7249615628200274543[26] = 0;
   out_7249615628200274543[27] = 0;
   out_7249615628200274543[28] = 0;
   out_7249615628200274543[29] = 0;
   out_7249615628200274543[30] = 0;
   out_7249615628200274543[31] = 0;
   out_7249615628200274543[32] = 0;
   out_7249615628200274543[33] = 0;
   out_7249615628200274543[34] = 0;
   out_7249615628200274543[35] = 0;
   out_7249615628200274543[36] = 0;
   out_7249615628200274543[37] = 0;
   out_7249615628200274543[38] = 0;
   out_7249615628200274543[39] = 0;
   out_7249615628200274543[40] = 0;
   out_7249615628200274543[41] = 0;
   out_7249615628200274543[42] = 0;
   out_7249615628200274543[43] = 0;
   out_7249615628200274543[44] = 0;
   out_7249615628200274543[45] = 0;
   out_7249615628200274543[46] = 1;
   out_7249615628200274543[47] = 0;
   out_7249615628200274543[48] = 0;
   out_7249615628200274543[49] = 0;
   out_7249615628200274543[50] = 0;
   out_7249615628200274543[51] = 0;
   out_7249615628200274543[52] = 0;
   out_7249615628200274543[53] = 0;
   out_7249615628200274543[54] = 0;
   out_7249615628200274543[55] = 0;
   out_7249615628200274543[56] = 0;
   out_7249615628200274543[57] = 0;
   out_7249615628200274543[58] = 0;
   out_7249615628200274543[59] = 0;
   out_7249615628200274543[60] = 0;
   out_7249615628200274543[61] = 0;
   out_7249615628200274543[62] = 0;
   out_7249615628200274543[63] = 0;
   out_7249615628200274543[64] = 0;
   out_7249615628200274543[65] = 0;
}
void h_35(double *state, double *unused, double *out_2809159579449572618) {
   out_2809159579449572618[0] = state[7];
   out_2809159579449572618[1] = state[8];
   out_2809159579449572618[2] = state[9];
}
void H_35(double *state, double *unused, double *out_8902409978859628962) {
   out_8902409978859628962[0] = 0;
   out_8902409978859628962[1] = 0;
   out_8902409978859628962[2] = 0;
   out_8902409978859628962[3] = 0;
   out_8902409978859628962[4] = 0;
   out_8902409978859628962[5] = 0;
   out_8902409978859628962[6] = 0;
   out_8902409978859628962[7] = 1;
   out_8902409978859628962[8] = 0;
   out_8902409978859628962[9] = 0;
   out_8902409978859628962[10] = 0;
   out_8902409978859628962[11] = 0;
   out_8902409978859628962[12] = 0;
   out_8902409978859628962[13] = 0;
   out_8902409978859628962[14] = 0;
   out_8902409978859628962[15] = 0;
   out_8902409978859628962[16] = 0;
   out_8902409978859628962[17] = 0;
   out_8902409978859628962[18] = 0;
   out_8902409978859628962[19] = 0;
   out_8902409978859628962[20] = 0;
   out_8902409978859628962[21] = 0;
   out_8902409978859628962[22] = 0;
   out_8902409978859628962[23] = 0;
   out_8902409978859628962[24] = 0;
   out_8902409978859628962[25] = 0;
   out_8902409978859628962[26] = 0;
   out_8902409978859628962[27] = 0;
   out_8902409978859628962[28] = 0;
   out_8902409978859628962[29] = 0;
   out_8902409978859628962[30] = 1;
   out_8902409978859628962[31] = 0;
   out_8902409978859628962[32] = 0;
   out_8902409978859628962[33] = 0;
   out_8902409978859628962[34] = 0;
   out_8902409978859628962[35] = 0;
   out_8902409978859628962[36] = 0;
   out_8902409978859628962[37] = 0;
   out_8902409978859628962[38] = 0;
   out_8902409978859628962[39] = 0;
   out_8902409978859628962[40] = 0;
   out_8902409978859628962[41] = 0;
   out_8902409978859628962[42] = 0;
   out_8902409978859628962[43] = 0;
   out_8902409978859628962[44] = 0;
   out_8902409978859628962[45] = 0;
   out_8902409978859628962[46] = 0;
   out_8902409978859628962[47] = 0;
   out_8902409978859628962[48] = 0;
   out_8902409978859628962[49] = 0;
   out_8902409978859628962[50] = 0;
   out_8902409978859628962[51] = 0;
   out_8902409978859628962[52] = 0;
   out_8902409978859628962[53] = 1;
   out_8902409978859628962[54] = 0;
   out_8902409978859628962[55] = 0;
   out_8902409978859628962[56] = 0;
   out_8902409978859628962[57] = 0;
   out_8902409978859628962[58] = 0;
   out_8902409978859628962[59] = 0;
   out_8902409978859628962[60] = 0;
   out_8902409978859628962[61] = 0;
   out_8902409978859628962[62] = 0;
   out_8902409978859628962[63] = 0;
   out_8902409978859628962[64] = 0;
   out_8902409978859628962[65] = 0;
}
void h_32(double *state, double *unused, double *out_3981960287070848881) {
   out_3981960287070848881[0] = state[3];
   out_3981960287070848881[1] = state[4];
   out_3981960287070848881[2] = state[5];
   out_3981960287070848881[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4816674290762705862) {
   out_4816674290762705862[0] = 0;
   out_4816674290762705862[1] = 0;
   out_4816674290762705862[2] = 0;
   out_4816674290762705862[3] = 1;
   out_4816674290762705862[4] = 0;
   out_4816674290762705862[5] = 0;
   out_4816674290762705862[6] = 0;
   out_4816674290762705862[7] = 0;
   out_4816674290762705862[8] = 0;
   out_4816674290762705862[9] = 0;
   out_4816674290762705862[10] = 0;
   out_4816674290762705862[11] = 0;
   out_4816674290762705862[12] = 0;
   out_4816674290762705862[13] = 0;
   out_4816674290762705862[14] = 0;
   out_4816674290762705862[15] = 0;
   out_4816674290762705862[16] = 0;
   out_4816674290762705862[17] = 0;
   out_4816674290762705862[18] = 0;
   out_4816674290762705862[19] = 0;
   out_4816674290762705862[20] = 0;
   out_4816674290762705862[21] = 0;
   out_4816674290762705862[22] = 0;
   out_4816674290762705862[23] = 0;
   out_4816674290762705862[24] = 0;
   out_4816674290762705862[25] = 0;
   out_4816674290762705862[26] = 1;
   out_4816674290762705862[27] = 0;
   out_4816674290762705862[28] = 0;
   out_4816674290762705862[29] = 0;
   out_4816674290762705862[30] = 0;
   out_4816674290762705862[31] = 0;
   out_4816674290762705862[32] = 0;
   out_4816674290762705862[33] = 0;
   out_4816674290762705862[34] = 0;
   out_4816674290762705862[35] = 0;
   out_4816674290762705862[36] = 0;
   out_4816674290762705862[37] = 0;
   out_4816674290762705862[38] = 0;
   out_4816674290762705862[39] = 0;
   out_4816674290762705862[40] = 0;
   out_4816674290762705862[41] = 0;
   out_4816674290762705862[42] = 0;
   out_4816674290762705862[43] = 0;
   out_4816674290762705862[44] = 0;
   out_4816674290762705862[45] = 0;
   out_4816674290762705862[46] = 0;
   out_4816674290762705862[47] = 0;
   out_4816674290762705862[48] = 0;
   out_4816674290762705862[49] = 1;
   out_4816674290762705862[50] = 0;
   out_4816674290762705862[51] = 0;
   out_4816674290762705862[52] = 0;
   out_4816674290762705862[53] = 0;
   out_4816674290762705862[54] = 0;
   out_4816674290762705862[55] = 0;
   out_4816674290762705862[56] = 0;
   out_4816674290762705862[57] = 0;
   out_4816674290762705862[58] = 0;
   out_4816674290762705862[59] = 0;
   out_4816674290762705862[60] = 0;
   out_4816674290762705862[61] = 0;
   out_4816674290762705862[62] = 0;
   out_4816674290762705862[63] = 0;
   out_4816674290762705862[64] = 0;
   out_4816674290762705862[65] = 0;
   out_4816674290762705862[66] = 0;
   out_4816674290762705862[67] = 0;
   out_4816674290762705862[68] = 0;
   out_4816674290762705862[69] = 0;
   out_4816674290762705862[70] = 0;
   out_4816674290762705862[71] = 0;
   out_4816674290762705862[72] = 1;
   out_4816674290762705862[73] = 0;
   out_4816674290762705862[74] = 0;
   out_4816674290762705862[75] = 0;
   out_4816674290762705862[76] = 0;
   out_4816674290762705862[77] = 0;
   out_4816674290762705862[78] = 0;
   out_4816674290762705862[79] = 0;
   out_4816674290762705862[80] = 0;
   out_4816674290762705862[81] = 0;
   out_4816674290762705862[82] = 0;
   out_4816674290762705862[83] = 0;
   out_4816674290762705862[84] = 0;
   out_4816674290762705862[85] = 0;
   out_4816674290762705862[86] = 0;
   out_4816674290762705862[87] = 0;
}
void h_13(double *state, double *unused, double *out_7039216106621663041) {
   out_7039216106621663041[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7039216106621663041[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7039216106621663041[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4805595555089270271) {
   out_4805595555089270271[0] = 0;
   out_4805595555089270271[1] = 0;
   out_4805595555089270271[2] = 0;
   out_4805595555089270271[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4805595555089270271[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4805595555089270271[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4805595555089270271[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4805595555089270271[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4805595555089270271[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4805595555089270271[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4805595555089270271[10] = 0;
   out_4805595555089270271[11] = 0;
   out_4805595555089270271[12] = 0;
   out_4805595555089270271[13] = 0;
   out_4805595555089270271[14] = 0;
   out_4805595555089270271[15] = 0;
   out_4805595555089270271[16] = 0;
   out_4805595555089270271[17] = 0;
   out_4805595555089270271[18] = 0;
   out_4805595555089270271[19] = 0;
   out_4805595555089270271[20] = 0;
   out_4805595555089270271[21] = 0;
   out_4805595555089270271[22] = 0;
   out_4805595555089270271[23] = 0;
   out_4805595555089270271[24] = 0;
   out_4805595555089270271[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4805595555089270271[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4805595555089270271[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4805595555089270271[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4805595555089270271[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4805595555089270271[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4805595555089270271[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4805595555089270271[32] = 0;
   out_4805595555089270271[33] = 0;
   out_4805595555089270271[34] = 0;
   out_4805595555089270271[35] = 0;
   out_4805595555089270271[36] = 0;
   out_4805595555089270271[37] = 0;
   out_4805595555089270271[38] = 0;
   out_4805595555089270271[39] = 0;
   out_4805595555089270271[40] = 0;
   out_4805595555089270271[41] = 0;
   out_4805595555089270271[42] = 0;
   out_4805595555089270271[43] = 0;
   out_4805595555089270271[44] = 0;
   out_4805595555089270271[45] = 0;
   out_4805595555089270271[46] = 0;
   out_4805595555089270271[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4805595555089270271[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4805595555089270271[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4805595555089270271[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4805595555089270271[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4805595555089270271[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4805595555089270271[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4805595555089270271[54] = 0;
   out_4805595555089270271[55] = 0;
   out_4805595555089270271[56] = 0;
   out_4805595555089270271[57] = 0;
   out_4805595555089270271[58] = 0;
   out_4805595555089270271[59] = 0;
   out_4805595555089270271[60] = 0;
   out_4805595555089270271[61] = 0;
   out_4805595555089270271[62] = 0;
   out_4805595555089270271[63] = 0;
   out_4805595555089270271[64] = 0;
   out_4805595555089270271[65] = 0;
}
void h_14(double *state, double *unused, double *out_7065676273963177107) {
   out_7065676273963177107[0] = state[10];
   out_7065676273963177107[1] = state[11];
   out_7065676273963177107[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6418861684106905923) {
   out_6418861684106905923[0] = 0;
   out_6418861684106905923[1] = 0;
   out_6418861684106905923[2] = 0;
   out_6418861684106905923[3] = 0;
   out_6418861684106905923[4] = 0;
   out_6418861684106905923[5] = 0;
   out_6418861684106905923[6] = 0;
   out_6418861684106905923[7] = 0;
   out_6418861684106905923[8] = 0;
   out_6418861684106905923[9] = 0;
   out_6418861684106905923[10] = 1;
   out_6418861684106905923[11] = 0;
   out_6418861684106905923[12] = 0;
   out_6418861684106905923[13] = 0;
   out_6418861684106905923[14] = 0;
   out_6418861684106905923[15] = 0;
   out_6418861684106905923[16] = 0;
   out_6418861684106905923[17] = 0;
   out_6418861684106905923[18] = 0;
   out_6418861684106905923[19] = 0;
   out_6418861684106905923[20] = 0;
   out_6418861684106905923[21] = 0;
   out_6418861684106905923[22] = 0;
   out_6418861684106905923[23] = 0;
   out_6418861684106905923[24] = 0;
   out_6418861684106905923[25] = 0;
   out_6418861684106905923[26] = 0;
   out_6418861684106905923[27] = 0;
   out_6418861684106905923[28] = 0;
   out_6418861684106905923[29] = 0;
   out_6418861684106905923[30] = 0;
   out_6418861684106905923[31] = 0;
   out_6418861684106905923[32] = 0;
   out_6418861684106905923[33] = 1;
   out_6418861684106905923[34] = 0;
   out_6418861684106905923[35] = 0;
   out_6418861684106905923[36] = 0;
   out_6418861684106905923[37] = 0;
   out_6418861684106905923[38] = 0;
   out_6418861684106905923[39] = 0;
   out_6418861684106905923[40] = 0;
   out_6418861684106905923[41] = 0;
   out_6418861684106905923[42] = 0;
   out_6418861684106905923[43] = 0;
   out_6418861684106905923[44] = 0;
   out_6418861684106905923[45] = 0;
   out_6418861684106905923[46] = 0;
   out_6418861684106905923[47] = 0;
   out_6418861684106905923[48] = 0;
   out_6418861684106905923[49] = 0;
   out_6418861684106905923[50] = 0;
   out_6418861684106905923[51] = 0;
   out_6418861684106905923[52] = 0;
   out_6418861684106905923[53] = 0;
   out_6418861684106905923[54] = 0;
   out_6418861684106905923[55] = 0;
   out_6418861684106905923[56] = 1;
   out_6418861684106905923[57] = 0;
   out_6418861684106905923[58] = 0;
   out_6418861684106905923[59] = 0;
   out_6418861684106905923[60] = 0;
   out_6418861684106905923[61] = 0;
   out_6418861684106905923[62] = 0;
   out_6418861684106905923[63] = 0;
   out_6418861684106905923[64] = 0;
   out_6418861684106905923[65] = 0;
}
void h_33(double *state, double *unused, double *out_5581697198536760998) {
   out_5581697198536760998[0] = state[16];
   out_5581697198536760998[1] = state[17];
   out_5581697198536760998[2] = state[18];
}
void H_33(double *state, double *unused, double *out_5751852974220771358) {
   out_5751852974220771358[0] = 0;
   out_5751852974220771358[1] = 0;
   out_5751852974220771358[2] = 0;
   out_5751852974220771358[3] = 0;
   out_5751852974220771358[4] = 0;
   out_5751852974220771358[5] = 0;
   out_5751852974220771358[6] = 0;
   out_5751852974220771358[7] = 0;
   out_5751852974220771358[8] = 0;
   out_5751852974220771358[9] = 0;
   out_5751852974220771358[10] = 0;
   out_5751852974220771358[11] = 0;
   out_5751852974220771358[12] = 0;
   out_5751852974220771358[13] = 0;
   out_5751852974220771358[14] = 0;
   out_5751852974220771358[15] = 0;
   out_5751852974220771358[16] = 1;
   out_5751852974220771358[17] = 0;
   out_5751852974220771358[18] = 0;
   out_5751852974220771358[19] = 0;
   out_5751852974220771358[20] = 0;
   out_5751852974220771358[21] = 0;
   out_5751852974220771358[22] = 0;
   out_5751852974220771358[23] = 0;
   out_5751852974220771358[24] = 0;
   out_5751852974220771358[25] = 0;
   out_5751852974220771358[26] = 0;
   out_5751852974220771358[27] = 0;
   out_5751852974220771358[28] = 0;
   out_5751852974220771358[29] = 0;
   out_5751852974220771358[30] = 0;
   out_5751852974220771358[31] = 0;
   out_5751852974220771358[32] = 0;
   out_5751852974220771358[33] = 0;
   out_5751852974220771358[34] = 0;
   out_5751852974220771358[35] = 0;
   out_5751852974220771358[36] = 0;
   out_5751852974220771358[37] = 0;
   out_5751852974220771358[38] = 0;
   out_5751852974220771358[39] = 1;
   out_5751852974220771358[40] = 0;
   out_5751852974220771358[41] = 0;
   out_5751852974220771358[42] = 0;
   out_5751852974220771358[43] = 0;
   out_5751852974220771358[44] = 0;
   out_5751852974220771358[45] = 0;
   out_5751852974220771358[46] = 0;
   out_5751852974220771358[47] = 0;
   out_5751852974220771358[48] = 0;
   out_5751852974220771358[49] = 0;
   out_5751852974220771358[50] = 0;
   out_5751852974220771358[51] = 0;
   out_5751852974220771358[52] = 0;
   out_5751852974220771358[53] = 0;
   out_5751852974220771358[54] = 0;
   out_5751852974220771358[55] = 0;
   out_5751852974220771358[56] = 0;
   out_5751852974220771358[57] = 0;
   out_5751852974220771358[58] = 0;
   out_5751852974220771358[59] = 0;
   out_5751852974220771358[60] = 0;
   out_5751852974220771358[61] = 0;
   out_5751852974220771358[62] = 1;
   out_5751852974220771358[63] = 0;
   out_5751852974220771358[64] = 0;
   out_5751852974220771358[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7905178246848263555) {
  H(in_vec, out_7905178246848263555);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4425427414863107296) {
  err_fun(nom_x, delta_x, out_4425427414863107296);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5328019979359077297) {
  inv_err_fun(nom_x, true_x, out_5328019979359077297);
}
void live_H_mod_fun(double *state, double *out_1294790038504557916) {
  H_mod_fun(state, out_1294790038504557916);
}
void live_f_fun(double *state, double dt, double *out_7736669759622028631) {
  f_fun(state,  dt, out_7736669759622028631);
}
void live_F_fun(double *state, double dt, double *out_8813297363633285712) {
  F_fun(state,  dt, out_8813297363633285712);
}
void live_h_4(double *state, double *unused, double *out_940185469469327188) {
  h_4(state, unused, out_940185469469327188);
}
void live_H_4(double *state, double *unused, double *out_868357251157541547) {
  H_4(state, unused, out_868357251157541547);
}
void live_h_9(double *state, double *unused, double *out_7065676273963177107) {
  h_9(state, unused, out_7065676273963177107);
}
void live_H_9(double *state, double *unused, double *out_6418861684106905923) {
  H_9(state, unused, out_6418861684106905923);
}
void live_h_10(double *state, double *unused, double *out_4599990847002563557) {
  h_10(state, unused, out_4599990847002563557);
}
void live_H_10(double *state, double *unused, double *out_6535221462177575285) {
  H_10(state, unused, out_6535221462177575285);
}
void live_h_12(double *state, double *unused, double *out_6622294237519177852) {
  h_12(state, unused, out_6622294237519177852);
}
void live_H_12(double *state, double *unused, double *out_7249615628200274543) {
  H_12(state, unused, out_7249615628200274543);
}
void live_h_35(double *state, double *unused, double *out_2809159579449572618) {
  h_35(state, unused, out_2809159579449572618);
}
void live_H_35(double *state, double *unused, double *out_8902409978859628962) {
  H_35(state, unused, out_8902409978859628962);
}
void live_h_32(double *state, double *unused, double *out_3981960287070848881) {
  h_32(state, unused, out_3981960287070848881);
}
void live_H_32(double *state, double *unused, double *out_4816674290762705862) {
  H_32(state, unused, out_4816674290762705862);
}
void live_h_13(double *state, double *unused, double *out_7039216106621663041) {
  h_13(state, unused, out_7039216106621663041);
}
void live_H_13(double *state, double *unused, double *out_4805595555089270271) {
  H_13(state, unused, out_4805595555089270271);
}
void live_h_14(double *state, double *unused, double *out_7065676273963177107) {
  h_14(state, unused, out_7065676273963177107);
}
void live_H_14(double *state, double *unused, double *out_6418861684106905923) {
  H_14(state, unused, out_6418861684106905923);
}
void live_h_33(double *state, double *unused, double *out_5581697198536760998) {
  h_33(state, unused, out_5581697198536760998);
}
void live_H_33(double *state, double *unused, double *out_5751852974220771358) {
  H_33(state, unused, out_5751852974220771358);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
