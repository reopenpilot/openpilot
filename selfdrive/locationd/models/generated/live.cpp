#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3774328600697724702) {
   out_3774328600697724702[0] = 0;
   out_3774328600697724702[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3774328600697724702[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3774328600697724702[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3774328600697724702[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3774328600697724702[5] = -sin(in_vec[1]);
   out_3774328600697724702[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3774328600697724702[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3774328600697724702[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3774328600697724702[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3774328600697724702[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3774328600697724702[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3774328600697724702[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3774328600697724702[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3774328600697724702[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3774328600697724702[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3774328600697724702[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3774328600697724702[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7836871875743155711) {
   out_7836871875743155711[0] = delta_x[0] + nom_x[0];
   out_7836871875743155711[1] = delta_x[1] + nom_x[1];
   out_7836871875743155711[2] = delta_x[2] + nom_x[2];
   out_7836871875743155711[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7836871875743155711[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7836871875743155711[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7836871875743155711[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7836871875743155711[7] = delta_x[6] + nom_x[7];
   out_7836871875743155711[8] = delta_x[7] + nom_x[8];
   out_7836871875743155711[9] = delta_x[8] + nom_x[9];
   out_7836871875743155711[10] = delta_x[9] + nom_x[10];
   out_7836871875743155711[11] = delta_x[10] + nom_x[11];
   out_7836871875743155711[12] = delta_x[11] + nom_x[12];
   out_7836871875743155711[13] = delta_x[12] + nom_x[13];
   out_7836871875743155711[14] = delta_x[13] + nom_x[14];
   out_7836871875743155711[15] = delta_x[14] + nom_x[15];
   out_7836871875743155711[16] = delta_x[15] + nom_x[16];
   out_7836871875743155711[17] = delta_x[16] + nom_x[17];
   out_7836871875743155711[18] = delta_x[17] + nom_x[18];
   out_7836871875743155711[19] = delta_x[18] + nom_x[19];
   out_7836871875743155711[20] = delta_x[19] + nom_x[20];
   out_7836871875743155711[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6630162193384917047) {
   out_6630162193384917047[0] = -nom_x[0] + true_x[0];
   out_6630162193384917047[1] = -nom_x[1] + true_x[1];
   out_6630162193384917047[2] = -nom_x[2] + true_x[2];
   out_6630162193384917047[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6630162193384917047[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6630162193384917047[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6630162193384917047[6] = -nom_x[7] + true_x[7];
   out_6630162193384917047[7] = -nom_x[8] + true_x[8];
   out_6630162193384917047[8] = -nom_x[9] + true_x[9];
   out_6630162193384917047[9] = -nom_x[10] + true_x[10];
   out_6630162193384917047[10] = -nom_x[11] + true_x[11];
   out_6630162193384917047[11] = -nom_x[12] + true_x[12];
   out_6630162193384917047[12] = -nom_x[13] + true_x[13];
   out_6630162193384917047[13] = -nom_x[14] + true_x[14];
   out_6630162193384917047[14] = -nom_x[15] + true_x[15];
   out_6630162193384917047[15] = -nom_x[16] + true_x[16];
   out_6630162193384917047[16] = -nom_x[17] + true_x[17];
   out_6630162193384917047[17] = -nom_x[18] + true_x[18];
   out_6630162193384917047[18] = -nom_x[19] + true_x[19];
   out_6630162193384917047[19] = -nom_x[20] + true_x[20];
   out_6630162193384917047[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8048759451165961396) {
   out_8048759451165961396[0] = 1.0;
   out_8048759451165961396[1] = 0;
   out_8048759451165961396[2] = 0;
   out_8048759451165961396[3] = 0;
   out_8048759451165961396[4] = 0;
   out_8048759451165961396[5] = 0;
   out_8048759451165961396[6] = 0;
   out_8048759451165961396[7] = 0;
   out_8048759451165961396[8] = 0;
   out_8048759451165961396[9] = 0;
   out_8048759451165961396[10] = 0;
   out_8048759451165961396[11] = 0;
   out_8048759451165961396[12] = 0;
   out_8048759451165961396[13] = 0;
   out_8048759451165961396[14] = 0;
   out_8048759451165961396[15] = 0;
   out_8048759451165961396[16] = 0;
   out_8048759451165961396[17] = 0;
   out_8048759451165961396[18] = 0;
   out_8048759451165961396[19] = 0;
   out_8048759451165961396[20] = 0;
   out_8048759451165961396[21] = 0;
   out_8048759451165961396[22] = 1.0;
   out_8048759451165961396[23] = 0;
   out_8048759451165961396[24] = 0;
   out_8048759451165961396[25] = 0;
   out_8048759451165961396[26] = 0;
   out_8048759451165961396[27] = 0;
   out_8048759451165961396[28] = 0;
   out_8048759451165961396[29] = 0;
   out_8048759451165961396[30] = 0;
   out_8048759451165961396[31] = 0;
   out_8048759451165961396[32] = 0;
   out_8048759451165961396[33] = 0;
   out_8048759451165961396[34] = 0;
   out_8048759451165961396[35] = 0;
   out_8048759451165961396[36] = 0;
   out_8048759451165961396[37] = 0;
   out_8048759451165961396[38] = 0;
   out_8048759451165961396[39] = 0;
   out_8048759451165961396[40] = 0;
   out_8048759451165961396[41] = 0;
   out_8048759451165961396[42] = 0;
   out_8048759451165961396[43] = 0;
   out_8048759451165961396[44] = 1.0;
   out_8048759451165961396[45] = 0;
   out_8048759451165961396[46] = 0;
   out_8048759451165961396[47] = 0;
   out_8048759451165961396[48] = 0;
   out_8048759451165961396[49] = 0;
   out_8048759451165961396[50] = 0;
   out_8048759451165961396[51] = 0;
   out_8048759451165961396[52] = 0;
   out_8048759451165961396[53] = 0;
   out_8048759451165961396[54] = 0;
   out_8048759451165961396[55] = 0;
   out_8048759451165961396[56] = 0;
   out_8048759451165961396[57] = 0;
   out_8048759451165961396[58] = 0;
   out_8048759451165961396[59] = 0;
   out_8048759451165961396[60] = 0;
   out_8048759451165961396[61] = 0;
   out_8048759451165961396[62] = 0;
   out_8048759451165961396[63] = 0;
   out_8048759451165961396[64] = 0;
   out_8048759451165961396[65] = 0;
   out_8048759451165961396[66] = -0.5*state[4];
   out_8048759451165961396[67] = -0.5*state[5];
   out_8048759451165961396[68] = -0.5*state[6];
   out_8048759451165961396[69] = 0;
   out_8048759451165961396[70] = 0;
   out_8048759451165961396[71] = 0;
   out_8048759451165961396[72] = 0;
   out_8048759451165961396[73] = 0;
   out_8048759451165961396[74] = 0;
   out_8048759451165961396[75] = 0;
   out_8048759451165961396[76] = 0;
   out_8048759451165961396[77] = 0;
   out_8048759451165961396[78] = 0;
   out_8048759451165961396[79] = 0;
   out_8048759451165961396[80] = 0;
   out_8048759451165961396[81] = 0;
   out_8048759451165961396[82] = 0;
   out_8048759451165961396[83] = 0;
   out_8048759451165961396[84] = 0;
   out_8048759451165961396[85] = 0;
   out_8048759451165961396[86] = 0;
   out_8048759451165961396[87] = 0.5*state[3];
   out_8048759451165961396[88] = 0.5*state[6];
   out_8048759451165961396[89] = -0.5*state[5];
   out_8048759451165961396[90] = 0;
   out_8048759451165961396[91] = 0;
   out_8048759451165961396[92] = 0;
   out_8048759451165961396[93] = 0;
   out_8048759451165961396[94] = 0;
   out_8048759451165961396[95] = 0;
   out_8048759451165961396[96] = 0;
   out_8048759451165961396[97] = 0;
   out_8048759451165961396[98] = 0;
   out_8048759451165961396[99] = 0;
   out_8048759451165961396[100] = 0;
   out_8048759451165961396[101] = 0;
   out_8048759451165961396[102] = 0;
   out_8048759451165961396[103] = 0;
   out_8048759451165961396[104] = 0;
   out_8048759451165961396[105] = 0;
   out_8048759451165961396[106] = 0;
   out_8048759451165961396[107] = 0;
   out_8048759451165961396[108] = -0.5*state[6];
   out_8048759451165961396[109] = 0.5*state[3];
   out_8048759451165961396[110] = 0.5*state[4];
   out_8048759451165961396[111] = 0;
   out_8048759451165961396[112] = 0;
   out_8048759451165961396[113] = 0;
   out_8048759451165961396[114] = 0;
   out_8048759451165961396[115] = 0;
   out_8048759451165961396[116] = 0;
   out_8048759451165961396[117] = 0;
   out_8048759451165961396[118] = 0;
   out_8048759451165961396[119] = 0;
   out_8048759451165961396[120] = 0;
   out_8048759451165961396[121] = 0;
   out_8048759451165961396[122] = 0;
   out_8048759451165961396[123] = 0;
   out_8048759451165961396[124] = 0;
   out_8048759451165961396[125] = 0;
   out_8048759451165961396[126] = 0;
   out_8048759451165961396[127] = 0;
   out_8048759451165961396[128] = 0;
   out_8048759451165961396[129] = 0.5*state[5];
   out_8048759451165961396[130] = -0.5*state[4];
   out_8048759451165961396[131] = 0.5*state[3];
   out_8048759451165961396[132] = 0;
   out_8048759451165961396[133] = 0;
   out_8048759451165961396[134] = 0;
   out_8048759451165961396[135] = 0;
   out_8048759451165961396[136] = 0;
   out_8048759451165961396[137] = 0;
   out_8048759451165961396[138] = 0;
   out_8048759451165961396[139] = 0;
   out_8048759451165961396[140] = 0;
   out_8048759451165961396[141] = 0;
   out_8048759451165961396[142] = 0;
   out_8048759451165961396[143] = 0;
   out_8048759451165961396[144] = 0;
   out_8048759451165961396[145] = 0;
   out_8048759451165961396[146] = 0;
   out_8048759451165961396[147] = 0;
   out_8048759451165961396[148] = 0;
   out_8048759451165961396[149] = 0;
   out_8048759451165961396[150] = 0;
   out_8048759451165961396[151] = 0;
   out_8048759451165961396[152] = 0;
   out_8048759451165961396[153] = 1.0;
   out_8048759451165961396[154] = 0;
   out_8048759451165961396[155] = 0;
   out_8048759451165961396[156] = 0;
   out_8048759451165961396[157] = 0;
   out_8048759451165961396[158] = 0;
   out_8048759451165961396[159] = 0;
   out_8048759451165961396[160] = 0;
   out_8048759451165961396[161] = 0;
   out_8048759451165961396[162] = 0;
   out_8048759451165961396[163] = 0;
   out_8048759451165961396[164] = 0;
   out_8048759451165961396[165] = 0;
   out_8048759451165961396[166] = 0;
   out_8048759451165961396[167] = 0;
   out_8048759451165961396[168] = 0;
   out_8048759451165961396[169] = 0;
   out_8048759451165961396[170] = 0;
   out_8048759451165961396[171] = 0;
   out_8048759451165961396[172] = 0;
   out_8048759451165961396[173] = 0;
   out_8048759451165961396[174] = 0;
   out_8048759451165961396[175] = 1.0;
   out_8048759451165961396[176] = 0;
   out_8048759451165961396[177] = 0;
   out_8048759451165961396[178] = 0;
   out_8048759451165961396[179] = 0;
   out_8048759451165961396[180] = 0;
   out_8048759451165961396[181] = 0;
   out_8048759451165961396[182] = 0;
   out_8048759451165961396[183] = 0;
   out_8048759451165961396[184] = 0;
   out_8048759451165961396[185] = 0;
   out_8048759451165961396[186] = 0;
   out_8048759451165961396[187] = 0;
   out_8048759451165961396[188] = 0;
   out_8048759451165961396[189] = 0;
   out_8048759451165961396[190] = 0;
   out_8048759451165961396[191] = 0;
   out_8048759451165961396[192] = 0;
   out_8048759451165961396[193] = 0;
   out_8048759451165961396[194] = 0;
   out_8048759451165961396[195] = 0;
   out_8048759451165961396[196] = 0;
   out_8048759451165961396[197] = 1.0;
   out_8048759451165961396[198] = 0;
   out_8048759451165961396[199] = 0;
   out_8048759451165961396[200] = 0;
   out_8048759451165961396[201] = 0;
   out_8048759451165961396[202] = 0;
   out_8048759451165961396[203] = 0;
   out_8048759451165961396[204] = 0;
   out_8048759451165961396[205] = 0;
   out_8048759451165961396[206] = 0;
   out_8048759451165961396[207] = 0;
   out_8048759451165961396[208] = 0;
   out_8048759451165961396[209] = 0;
   out_8048759451165961396[210] = 0;
   out_8048759451165961396[211] = 0;
   out_8048759451165961396[212] = 0;
   out_8048759451165961396[213] = 0;
   out_8048759451165961396[214] = 0;
   out_8048759451165961396[215] = 0;
   out_8048759451165961396[216] = 0;
   out_8048759451165961396[217] = 0;
   out_8048759451165961396[218] = 0;
   out_8048759451165961396[219] = 1.0;
   out_8048759451165961396[220] = 0;
   out_8048759451165961396[221] = 0;
   out_8048759451165961396[222] = 0;
   out_8048759451165961396[223] = 0;
   out_8048759451165961396[224] = 0;
   out_8048759451165961396[225] = 0;
   out_8048759451165961396[226] = 0;
   out_8048759451165961396[227] = 0;
   out_8048759451165961396[228] = 0;
   out_8048759451165961396[229] = 0;
   out_8048759451165961396[230] = 0;
   out_8048759451165961396[231] = 0;
   out_8048759451165961396[232] = 0;
   out_8048759451165961396[233] = 0;
   out_8048759451165961396[234] = 0;
   out_8048759451165961396[235] = 0;
   out_8048759451165961396[236] = 0;
   out_8048759451165961396[237] = 0;
   out_8048759451165961396[238] = 0;
   out_8048759451165961396[239] = 0;
   out_8048759451165961396[240] = 0;
   out_8048759451165961396[241] = 1.0;
   out_8048759451165961396[242] = 0;
   out_8048759451165961396[243] = 0;
   out_8048759451165961396[244] = 0;
   out_8048759451165961396[245] = 0;
   out_8048759451165961396[246] = 0;
   out_8048759451165961396[247] = 0;
   out_8048759451165961396[248] = 0;
   out_8048759451165961396[249] = 0;
   out_8048759451165961396[250] = 0;
   out_8048759451165961396[251] = 0;
   out_8048759451165961396[252] = 0;
   out_8048759451165961396[253] = 0;
   out_8048759451165961396[254] = 0;
   out_8048759451165961396[255] = 0;
   out_8048759451165961396[256] = 0;
   out_8048759451165961396[257] = 0;
   out_8048759451165961396[258] = 0;
   out_8048759451165961396[259] = 0;
   out_8048759451165961396[260] = 0;
   out_8048759451165961396[261] = 0;
   out_8048759451165961396[262] = 0;
   out_8048759451165961396[263] = 1.0;
   out_8048759451165961396[264] = 0;
   out_8048759451165961396[265] = 0;
   out_8048759451165961396[266] = 0;
   out_8048759451165961396[267] = 0;
   out_8048759451165961396[268] = 0;
   out_8048759451165961396[269] = 0;
   out_8048759451165961396[270] = 0;
   out_8048759451165961396[271] = 0;
   out_8048759451165961396[272] = 0;
   out_8048759451165961396[273] = 0;
   out_8048759451165961396[274] = 0;
   out_8048759451165961396[275] = 0;
   out_8048759451165961396[276] = 0;
   out_8048759451165961396[277] = 0;
   out_8048759451165961396[278] = 0;
   out_8048759451165961396[279] = 0;
   out_8048759451165961396[280] = 0;
   out_8048759451165961396[281] = 0;
   out_8048759451165961396[282] = 0;
   out_8048759451165961396[283] = 0;
   out_8048759451165961396[284] = 0;
   out_8048759451165961396[285] = 1.0;
   out_8048759451165961396[286] = 0;
   out_8048759451165961396[287] = 0;
   out_8048759451165961396[288] = 0;
   out_8048759451165961396[289] = 0;
   out_8048759451165961396[290] = 0;
   out_8048759451165961396[291] = 0;
   out_8048759451165961396[292] = 0;
   out_8048759451165961396[293] = 0;
   out_8048759451165961396[294] = 0;
   out_8048759451165961396[295] = 0;
   out_8048759451165961396[296] = 0;
   out_8048759451165961396[297] = 0;
   out_8048759451165961396[298] = 0;
   out_8048759451165961396[299] = 0;
   out_8048759451165961396[300] = 0;
   out_8048759451165961396[301] = 0;
   out_8048759451165961396[302] = 0;
   out_8048759451165961396[303] = 0;
   out_8048759451165961396[304] = 0;
   out_8048759451165961396[305] = 0;
   out_8048759451165961396[306] = 0;
   out_8048759451165961396[307] = 1.0;
   out_8048759451165961396[308] = 0;
   out_8048759451165961396[309] = 0;
   out_8048759451165961396[310] = 0;
   out_8048759451165961396[311] = 0;
   out_8048759451165961396[312] = 0;
   out_8048759451165961396[313] = 0;
   out_8048759451165961396[314] = 0;
   out_8048759451165961396[315] = 0;
   out_8048759451165961396[316] = 0;
   out_8048759451165961396[317] = 0;
   out_8048759451165961396[318] = 0;
   out_8048759451165961396[319] = 0;
   out_8048759451165961396[320] = 0;
   out_8048759451165961396[321] = 0;
   out_8048759451165961396[322] = 0;
   out_8048759451165961396[323] = 0;
   out_8048759451165961396[324] = 0;
   out_8048759451165961396[325] = 0;
   out_8048759451165961396[326] = 0;
   out_8048759451165961396[327] = 0;
   out_8048759451165961396[328] = 0;
   out_8048759451165961396[329] = 1.0;
   out_8048759451165961396[330] = 0;
   out_8048759451165961396[331] = 0;
   out_8048759451165961396[332] = 0;
   out_8048759451165961396[333] = 0;
   out_8048759451165961396[334] = 0;
   out_8048759451165961396[335] = 0;
   out_8048759451165961396[336] = 0;
   out_8048759451165961396[337] = 0;
   out_8048759451165961396[338] = 0;
   out_8048759451165961396[339] = 0;
   out_8048759451165961396[340] = 0;
   out_8048759451165961396[341] = 0;
   out_8048759451165961396[342] = 0;
   out_8048759451165961396[343] = 0;
   out_8048759451165961396[344] = 0;
   out_8048759451165961396[345] = 0;
   out_8048759451165961396[346] = 0;
   out_8048759451165961396[347] = 0;
   out_8048759451165961396[348] = 0;
   out_8048759451165961396[349] = 0;
   out_8048759451165961396[350] = 0;
   out_8048759451165961396[351] = 1.0;
   out_8048759451165961396[352] = 0;
   out_8048759451165961396[353] = 0;
   out_8048759451165961396[354] = 0;
   out_8048759451165961396[355] = 0;
   out_8048759451165961396[356] = 0;
   out_8048759451165961396[357] = 0;
   out_8048759451165961396[358] = 0;
   out_8048759451165961396[359] = 0;
   out_8048759451165961396[360] = 0;
   out_8048759451165961396[361] = 0;
   out_8048759451165961396[362] = 0;
   out_8048759451165961396[363] = 0;
   out_8048759451165961396[364] = 0;
   out_8048759451165961396[365] = 0;
   out_8048759451165961396[366] = 0;
   out_8048759451165961396[367] = 0;
   out_8048759451165961396[368] = 0;
   out_8048759451165961396[369] = 0;
   out_8048759451165961396[370] = 0;
   out_8048759451165961396[371] = 0;
   out_8048759451165961396[372] = 0;
   out_8048759451165961396[373] = 1.0;
   out_8048759451165961396[374] = 0;
   out_8048759451165961396[375] = 0;
   out_8048759451165961396[376] = 0;
   out_8048759451165961396[377] = 0;
   out_8048759451165961396[378] = 0;
   out_8048759451165961396[379] = 0;
   out_8048759451165961396[380] = 0;
   out_8048759451165961396[381] = 0;
   out_8048759451165961396[382] = 0;
   out_8048759451165961396[383] = 0;
   out_8048759451165961396[384] = 0;
   out_8048759451165961396[385] = 0;
   out_8048759451165961396[386] = 0;
   out_8048759451165961396[387] = 0;
   out_8048759451165961396[388] = 0;
   out_8048759451165961396[389] = 0;
   out_8048759451165961396[390] = 0;
   out_8048759451165961396[391] = 0;
   out_8048759451165961396[392] = 0;
   out_8048759451165961396[393] = 0;
   out_8048759451165961396[394] = 0;
   out_8048759451165961396[395] = 1.0;
   out_8048759451165961396[396] = 0;
   out_8048759451165961396[397] = 0;
   out_8048759451165961396[398] = 0;
   out_8048759451165961396[399] = 0;
   out_8048759451165961396[400] = 0;
   out_8048759451165961396[401] = 0;
   out_8048759451165961396[402] = 0;
   out_8048759451165961396[403] = 0;
   out_8048759451165961396[404] = 0;
   out_8048759451165961396[405] = 0;
   out_8048759451165961396[406] = 0;
   out_8048759451165961396[407] = 0;
   out_8048759451165961396[408] = 0;
   out_8048759451165961396[409] = 0;
   out_8048759451165961396[410] = 0;
   out_8048759451165961396[411] = 0;
   out_8048759451165961396[412] = 0;
   out_8048759451165961396[413] = 0;
   out_8048759451165961396[414] = 0;
   out_8048759451165961396[415] = 0;
   out_8048759451165961396[416] = 0;
   out_8048759451165961396[417] = 1.0;
   out_8048759451165961396[418] = 0;
   out_8048759451165961396[419] = 0;
   out_8048759451165961396[420] = 0;
   out_8048759451165961396[421] = 0;
   out_8048759451165961396[422] = 0;
   out_8048759451165961396[423] = 0;
   out_8048759451165961396[424] = 0;
   out_8048759451165961396[425] = 0;
   out_8048759451165961396[426] = 0;
   out_8048759451165961396[427] = 0;
   out_8048759451165961396[428] = 0;
   out_8048759451165961396[429] = 0;
   out_8048759451165961396[430] = 0;
   out_8048759451165961396[431] = 0;
   out_8048759451165961396[432] = 0;
   out_8048759451165961396[433] = 0;
   out_8048759451165961396[434] = 0;
   out_8048759451165961396[435] = 0;
   out_8048759451165961396[436] = 0;
   out_8048759451165961396[437] = 0;
   out_8048759451165961396[438] = 0;
   out_8048759451165961396[439] = 1.0;
   out_8048759451165961396[440] = 0;
   out_8048759451165961396[441] = 0;
   out_8048759451165961396[442] = 0;
   out_8048759451165961396[443] = 0;
   out_8048759451165961396[444] = 0;
   out_8048759451165961396[445] = 0;
   out_8048759451165961396[446] = 0;
   out_8048759451165961396[447] = 0;
   out_8048759451165961396[448] = 0;
   out_8048759451165961396[449] = 0;
   out_8048759451165961396[450] = 0;
   out_8048759451165961396[451] = 0;
   out_8048759451165961396[452] = 0;
   out_8048759451165961396[453] = 0;
   out_8048759451165961396[454] = 0;
   out_8048759451165961396[455] = 0;
   out_8048759451165961396[456] = 0;
   out_8048759451165961396[457] = 0;
   out_8048759451165961396[458] = 0;
   out_8048759451165961396[459] = 0;
   out_8048759451165961396[460] = 0;
   out_8048759451165961396[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_7921013289385952844) {
   out_7921013289385952844[0] = dt*state[7] + state[0];
   out_7921013289385952844[1] = dt*state[8] + state[1];
   out_7921013289385952844[2] = dt*state[9] + state[2];
   out_7921013289385952844[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_7921013289385952844[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_7921013289385952844[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_7921013289385952844[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_7921013289385952844[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_7921013289385952844[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_7921013289385952844[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_7921013289385952844[10] = state[10];
   out_7921013289385952844[11] = state[11];
   out_7921013289385952844[12] = state[12];
   out_7921013289385952844[13] = state[13];
   out_7921013289385952844[14] = state[14];
   out_7921013289385952844[15] = state[15];
   out_7921013289385952844[16] = state[16];
   out_7921013289385952844[17] = state[17];
   out_7921013289385952844[18] = state[18];
   out_7921013289385952844[19] = state[19];
   out_7921013289385952844[20] = state[20];
   out_7921013289385952844[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4662442160671292604) {
   out_4662442160671292604[0] = 1;
   out_4662442160671292604[1] = 0;
   out_4662442160671292604[2] = 0;
   out_4662442160671292604[3] = 0;
   out_4662442160671292604[4] = 0;
   out_4662442160671292604[5] = 0;
   out_4662442160671292604[6] = dt;
   out_4662442160671292604[7] = 0;
   out_4662442160671292604[8] = 0;
   out_4662442160671292604[9] = 0;
   out_4662442160671292604[10] = 0;
   out_4662442160671292604[11] = 0;
   out_4662442160671292604[12] = 0;
   out_4662442160671292604[13] = 0;
   out_4662442160671292604[14] = 0;
   out_4662442160671292604[15] = 0;
   out_4662442160671292604[16] = 0;
   out_4662442160671292604[17] = 0;
   out_4662442160671292604[18] = 0;
   out_4662442160671292604[19] = 0;
   out_4662442160671292604[20] = 0;
   out_4662442160671292604[21] = 0;
   out_4662442160671292604[22] = 1;
   out_4662442160671292604[23] = 0;
   out_4662442160671292604[24] = 0;
   out_4662442160671292604[25] = 0;
   out_4662442160671292604[26] = 0;
   out_4662442160671292604[27] = 0;
   out_4662442160671292604[28] = dt;
   out_4662442160671292604[29] = 0;
   out_4662442160671292604[30] = 0;
   out_4662442160671292604[31] = 0;
   out_4662442160671292604[32] = 0;
   out_4662442160671292604[33] = 0;
   out_4662442160671292604[34] = 0;
   out_4662442160671292604[35] = 0;
   out_4662442160671292604[36] = 0;
   out_4662442160671292604[37] = 0;
   out_4662442160671292604[38] = 0;
   out_4662442160671292604[39] = 0;
   out_4662442160671292604[40] = 0;
   out_4662442160671292604[41] = 0;
   out_4662442160671292604[42] = 0;
   out_4662442160671292604[43] = 0;
   out_4662442160671292604[44] = 1;
   out_4662442160671292604[45] = 0;
   out_4662442160671292604[46] = 0;
   out_4662442160671292604[47] = 0;
   out_4662442160671292604[48] = 0;
   out_4662442160671292604[49] = 0;
   out_4662442160671292604[50] = dt;
   out_4662442160671292604[51] = 0;
   out_4662442160671292604[52] = 0;
   out_4662442160671292604[53] = 0;
   out_4662442160671292604[54] = 0;
   out_4662442160671292604[55] = 0;
   out_4662442160671292604[56] = 0;
   out_4662442160671292604[57] = 0;
   out_4662442160671292604[58] = 0;
   out_4662442160671292604[59] = 0;
   out_4662442160671292604[60] = 0;
   out_4662442160671292604[61] = 0;
   out_4662442160671292604[62] = 0;
   out_4662442160671292604[63] = 0;
   out_4662442160671292604[64] = 0;
   out_4662442160671292604[65] = 0;
   out_4662442160671292604[66] = 1;
   out_4662442160671292604[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4662442160671292604[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4662442160671292604[69] = 0;
   out_4662442160671292604[70] = 0;
   out_4662442160671292604[71] = 0;
   out_4662442160671292604[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4662442160671292604[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4662442160671292604[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4662442160671292604[75] = 0;
   out_4662442160671292604[76] = 0;
   out_4662442160671292604[77] = 0;
   out_4662442160671292604[78] = 0;
   out_4662442160671292604[79] = 0;
   out_4662442160671292604[80] = 0;
   out_4662442160671292604[81] = 0;
   out_4662442160671292604[82] = 0;
   out_4662442160671292604[83] = 0;
   out_4662442160671292604[84] = 0;
   out_4662442160671292604[85] = 0;
   out_4662442160671292604[86] = 0;
   out_4662442160671292604[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4662442160671292604[88] = 1;
   out_4662442160671292604[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4662442160671292604[90] = 0;
   out_4662442160671292604[91] = 0;
   out_4662442160671292604[92] = 0;
   out_4662442160671292604[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4662442160671292604[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4662442160671292604[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4662442160671292604[96] = 0;
   out_4662442160671292604[97] = 0;
   out_4662442160671292604[98] = 0;
   out_4662442160671292604[99] = 0;
   out_4662442160671292604[100] = 0;
   out_4662442160671292604[101] = 0;
   out_4662442160671292604[102] = 0;
   out_4662442160671292604[103] = 0;
   out_4662442160671292604[104] = 0;
   out_4662442160671292604[105] = 0;
   out_4662442160671292604[106] = 0;
   out_4662442160671292604[107] = 0;
   out_4662442160671292604[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4662442160671292604[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4662442160671292604[110] = 1;
   out_4662442160671292604[111] = 0;
   out_4662442160671292604[112] = 0;
   out_4662442160671292604[113] = 0;
   out_4662442160671292604[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4662442160671292604[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4662442160671292604[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4662442160671292604[117] = 0;
   out_4662442160671292604[118] = 0;
   out_4662442160671292604[119] = 0;
   out_4662442160671292604[120] = 0;
   out_4662442160671292604[121] = 0;
   out_4662442160671292604[122] = 0;
   out_4662442160671292604[123] = 0;
   out_4662442160671292604[124] = 0;
   out_4662442160671292604[125] = 0;
   out_4662442160671292604[126] = 0;
   out_4662442160671292604[127] = 0;
   out_4662442160671292604[128] = 0;
   out_4662442160671292604[129] = 0;
   out_4662442160671292604[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4662442160671292604[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4662442160671292604[132] = 1;
   out_4662442160671292604[133] = 0;
   out_4662442160671292604[134] = 0;
   out_4662442160671292604[135] = 0;
   out_4662442160671292604[136] = 0;
   out_4662442160671292604[137] = 0;
   out_4662442160671292604[138] = 0;
   out_4662442160671292604[139] = 0;
   out_4662442160671292604[140] = 0;
   out_4662442160671292604[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4662442160671292604[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4662442160671292604[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4662442160671292604[144] = 0;
   out_4662442160671292604[145] = 0;
   out_4662442160671292604[146] = 0;
   out_4662442160671292604[147] = 0;
   out_4662442160671292604[148] = 0;
   out_4662442160671292604[149] = 0;
   out_4662442160671292604[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4662442160671292604[151] = 0;
   out_4662442160671292604[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4662442160671292604[153] = 0;
   out_4662442160671292604[154] = 1;
   out_4662442160671292604[155] = 0;
   out_4662442160671292604[156] = 0;
   out_4662442160671292604[157] = 0;
   out_4662442160671292604[158] = 0;
   out_4662442160671292604[159] = 0;
   out_4662442160671292604[160] = 0;
   out_4662442160671292604[161] = 0;
   out_4662442160671292604[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4662442160671292604[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4662442160671292604[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4662442160671292604[165] = 0;
   out_4662442160671292604[166] = 0;
   out_4662442160671292604[167] = 0;
   out_4662442160671292604[168] = 0;
   out_4662442160671292604[169] = 0;
   out_4662442160671292604[170] = 0;
   out_4662442160671292604[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4662442160671292604[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4662442160671292604[173] = 0;
   out_4662442160671292604[174] = 0;
   out_4662442160671292604[175] = 0;
   out_4662442160671292604[176] = 1;
   out_4662442160671292604[177] = 0;
   out_4662442160671292604[178] = 0;
   out_4662442160671292604[179] = 0;
   out_4662442160671292604[180] = 0;
   out_4662442160671292604[181] = 0;
   out_4662442160671292604[182] = 0;
   out_4662442160671292604[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4662442160671292604[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4662442160671292604[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4662442160671292604[186] = 0;
   out_4662442160671292604[187] = 0;
   out_4662442160671292604[188] = 0;
   out_4662442160671292604[189] = 0;
   out_4662442160671292604[190] = 0;
   out_4662442160671292604[191] = 0;
   out_4662442160671292604[192] = 0;
   out_4662442160671292604[193] = 0;
   out_4662442160671292604[194] = 0;
   out_4662442160671292604[195] = 0;
   out_4662442160671292604[196] = 0;
   out_4662442160671292604[197] = 0;
   out_4662442160671292604[198] = 1;
   out_4662442160671292604[199] = 0;
   out_4662442160671292604[200] = 0;
   out_4662442160671292604[201] = 0;
   out_4662442160671292604[202] = 0;
   out_4662442160671292604[203] = 0;
   out_4662442160671292604[204] = 0;
   out_4662442160671292604[205] = 0;
   out_4662442160671292604[206] = 0;
   out_4662442160671292604[207] = 0;
   out_4662442160671292604[208] = 0;
   out_4662442160671292604[209] = 0;
   out_4662442160671292604[210] = 0;
   out_4662442160671292604[211] = 0;
   out_4662442160671292604[212] = 0;
   out_4662442160671292604[213] = 0;
   out_4662442160671292604[214] = 0;
   out_4662442160671292604[215] = 0;
   out_4662442160671292604[216] = 0;
   out_4662442160671292604[217] = 0;
   out_4662442160671292604[218] = 0;
   out_4662442160671292604[219] = 0;
   out_4662442160671292604[220] = 1;
   out_4662442160671292604[221] = 0;
   out_4662442160671292604[222] = 0;
   out_4662442160671292604[223] = 0;
   out_4662442160671292604[224] = 0;
   out_4662442160671292604[225] = 0;
   out_4662442160671292604[226] = 0;
   out_4662442160671292604[227] = 0;
   out_4662442160671292604[228] = 0;
   out_4662442160671292604[229] = 0;
   out_4662442160671292604[230] = 0;
   out_4662442160671292604[231] = 0;
   out_4662442160671292604[232] = 0;
   out_4662442160671292604[233] = 0;
   out_4662442160671292604[234] = 0;
   out_4662442160671292604[235] = 0;
   out_4662442160671292604[236] = 0;
   out_4662442160671292604[237] = 0;
   out_4662442160671292604[238] = 0;
   out_4662442160671292604[239] = 0;
   out_4662442160671292604[240] = 0;
   out_4662442160671292604[241] = 0;
   out_4662442160671292604[242] = 1;
   out_4662442160671292604[243] = 0;
   out_4662442160671292604[244] = 0;
   out_4662442160671292604[245] = 0;
   out_4662442160671292604[246] = 0;
   out_4662442160671292604[247] = 0;
   out_4662442160671292604[248] = 0;
   out_4662442160671292604[249] = 0;
   out_4662442160671292604[250] = 0;
   out_4662442160671292604[251] = 0;
   out_4662442160671292604[252] = 0;
   out_4662442160671292604[253] = 0;
   out_4662442160671292604[254] = 0;
   out_4662442160671292604[255] = 0;
   out_4662442160671292604[256] = 0;
   out_4662442160671292604[257] = 0;
   out_4662442160671292604[258] = 0;
   out_4662442160671292604[259] = 0;
   out_4662442160671292604[260] = 0;
   out_4662442160671292604[261] = 0;
   out_4662442160671292604[262] = 0;
   out_4662442160671292604[263] = 0;
   out_4662442160671292604[264] = 1;
   out_4662442160671292604[265] = 0;
   out_4662442160671292604[266] = 0;
   out_4662442160671292604[267] = 0;
   out_4662442160671292604[268] = 0;
   out_4662442160671292604[269] = 0;
   out_4662442160671292604[270] = 0;
   out_4662442160671292604[271] = 0;
   out_4662442160671292604[272] = 0;
   out_4662442160671292604[273] = 0;
   out_4662442160671292604[274] = 0;
   out_4662442160671292604[275] = 0;
   out_4662442160671292604[276] = 0;
   out_4662442160671292604[277] = 0;
   out_4662442160671292604[278] = 0;
   out_4662442160671292604[279] = 0;
   out_4662442160671292604[280] = 0;
   out_4662442160671292604[281] = 0;
   out_4662442160671292604[282] = 0;
   out_4662442160671292604[283] = 0;
   out_4662442160671292604[284] = 0;
   out_4662442160671292604[285] = 0;
   out_4662442160671292604[286] = 1;
   out_4662442160671292604[287] = 0;
   out_4662442160671292604[288] = 0;
   out_4662442160671292604[289] = 0;
   out_4662442160671292604[290] = 0;
   out_4662442160671292604[291] = 0;
   out_4662442160671292604[292] = 0;
   out_4662442160671292604[293] = 0;
   out_4662442160671292604[294] = 0;
   out_4662442160671292604[295] = 0;
   out_4662442160671292604[296] = 0;
   out_4662442160671292604[297] = 0;
   out_4662442160671292604[298] = 0;
   out_4662442160671292604[299] = 0;
   out_4662442160671292604[300] = 0;
   out_4662442160671292604[301] = 0;
   out_4662442160671292604[302] = 0;
   out_4662442160671292604[303] = 0;
   out_4662442160671292604[304] = 0;
   out_4662442160671292604[305] = 0;
   out_4662442160671292604[306] = 0;
   out_4662442160671292604[307] = 0;
   out_4662442160671292604[308] = 1;
   out_4662442160671292604[309] = 0;
   out_4662442160671292604[310] = 0;
   out_4662442160671292604[311] = 0;
   out_4662442160671292604[312] = 0;
   out_4662442160671292604[313] = 0;
   out_4662442160671292604[314] = 0;
   out_4662442160671292604[315] = 0;
   out_4662442160671292604[316] = 0;
   out_4662442160671292604[317] = 0;
   out_4662442160671292604[318] = 0;
   out_4662442160671292604[319] = 0;
   out_4662442160671292604[320] = 0;
   out_4662442160671292604[321] = 0;
   out_4662442160671292604[322] = 0;
   out_4662442160671292604[323] = 0;
   out_4662442160671292604[324] = 0;
   out_4662442160671292604[325] = 0;
   out_4662442160671292604[326] = 0;
   out_4662442160671292604[327] = 0;
   out_4662442160671292604[328] = 0;
   out_4662442160671292604[329] = 0;
   out_4662442160671292604[330] = 1;
   out_4662442160671292604[331] = 0;
   out_4662442160671292604[332] = 0;
   out_4662442160671292604[333] = 0;
   out_4662442160671292604[334] = 0;
   out_4662442160671292604[335] = 0;
   out_4662442160671292604[336] = 0;
   out_4662442160671292604[337] = 0;
   out_4662442160671292604[338] = 0;
   out_4662442160671292604[339] = 0;
   out_4662442160671292604[340] = 0;
   out_4662442160671292604[341] = 0;
   out_4662442160671292604[342] = 0;
   out_4662442160671292604[343] = 0;
   out_4662442160671292604[344] = 0;
   out_4662442160671292604[345] = 0;
   out_4662442160671292604[346] = 0;
   out_4662442160671292604[347] = 0;
   out_4662442160671292604[348] = 0;
   out_4662442160671292604[349] = 0;
   out_4662442160671292604[350] = 0;
   out_4662442160671292604[351] = 0;
   out_4662442160671292604[352] = 1;
   out_4662442160671292604[353] = 0;
   out_4662442160671292604[354] = 0;
   out_4662442160671292604[355] = 0;
   out_4662442160671292604[356] = 0;
   out_4662442160671292604[357] = 0;
   out_4662442160671292604[358] = 0;
   out_4662442160671292604[359] = 0;
   out_4662442160671292604[360] = 0;
   out_4662442160671292604[361] = 0;
   out_4662442160671292604[362] = 0;
   out_4662442160671292604[363] = 0;
   out_4662442160671292604[364] = 0;
   out_4662442160671292604[365] = 0;
   out_4662442160671292604[366] = 0;
   out_4662442160671292604[367] = 0;
   out_4662442160671292604[368] = 0;
   out_4662442160671292604[369] = 0;
   out_4662442160671292604[370] = 0;
   out_4662442160671292604[371] = 0;
   out_4662442160671292604[372] = 0;
   out_4662442160671292604[373] = 0;
   out_4662442160671292604[374] = 1;
   out_4662442160671292604[375] = 0;
   out_4662442160671292604[376] = 0;
   out_4662442160671292604[377] = 0;
   out_4662442160671292604[378] = 0;
   out_4662442160671292604[379] = 0;
   out_4662442160671292604[380] = 0;
   out_4662442160671292604[381] = 0;
   out_4662442160671292604[382] = 0;
   out_4662442160671292604[383] = 0;
   out_4662442160671292604[384] = 0;
   out_4662442160671292604[385] = 0;
   out_4662442160671292604[386] = 0;
   out_4662442160671292604[387] = 0;
   out_4662442160671292604[388] = 0;
   out_4662442160671292604[389] = 0;
   out_4662442160671292604[390] = 0;
   out_4662442160671292604[391] = 0;
   out_4662442160671292604[392] = 0;
   out_4662442160671292604[393] = 0;
   out_4662442160671292604[394] = 0;
   out_4662442160671292604[395] = 0;
   out_4662442160671292604[396] = 1;
   out_4662442160671292604[397] = 0;
   out_4662442160671292604[398] = 0;
   out_4662442160671292604[399] = 0;
   out_4662442160671292604[400] = 0;
   out_4662442160671292604[401] = 0;
   out_4662442160671292604[402] = 0;
   out_4662442160671292604[403] = 0;
   out_4662442160671292604[404] = 0;
   out_4662442160671292604[405] = 0;
   out_4662442160671292604[406] = 0;
   out_4662442160671292604[407] = 0;
   out_4662442160671292604[408] = 0;
   out_4662442160671292604[409] = 0;
   out_4662442160671292604[410] = 0;
   out_4662442160671292604[411] = 0;
   out_4662442160671292604[412] = 0;
   out_4662442160671292604[413] = 0;
   out_4662442160671292604[414] = 0;
   out_4662442160671292604[415] = 0;
   out_4662442160671292604[416] = 0;
   out_4662442160671292604[417] = 0;
   out_4662442160671292604[418] = 1;
   out_4662442160671292604[419] = 0;
   out_4662442160671292604[420] = 0;
   out_4662442160671292604[421] = 0;
   out_4662442160671292604[422] = 0;
   out_4662442160671292604[423] = 0;
   out_4662442160671292604[424] = 0;
   out_4662442160671292604[425] = 0;
   out_4662442160671292604[426] = 0;
   out_4662442160671292604[427] = 0;
   out_4662442160671292604[428] = 0;
   out_4662442160671292604[429] = 0;
   out_4662442160671292604[430] = 0;
   out_4662442160671292604[431] = 0;
   out_4662442160671292604[432] = 0;
   out_4662442160671292604[433] = 0;
   out_4662442160671292604[434] = 0;
   out_4662442160671292604[435] = 0;
   out_4662442160671292604[436] = 0;
   out_4662442160671292604[437] = 0;
   out_4662442160671292604[438] = 0;
   out_4662442160671292604[439] = 0;
   out_4662442160671292604[440] = 1;
}
void h_4(double *state, double *unused, double *out_7870695401363690378) {
   out_7870695401363690378[0] = state[10] + state[13];
   out_7870695401363690378[1] = state[11] + state[14];
   out_7870695401363690378[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4792338244417275633) {
   out_4792338244417275633[0] = 0;
   out_4792338244417275633[1] = 0;
   out_4792338244417275633[2] = 0;
   out_4792338244417275633[3] = 0;
   out_4792338244417275633[4] = 0;
   out_4792338244417275633[5] = 0;
   out_4792338244417275633[6] = 0;
   out_4792338244417275633[7] = 0;
   out_4792338244417275633[8] = 0;
   out_4792338244417275633[9] = 0;
   out_4792338244417275633[10] = 1;
   out_4792338244417275633[11] = 0;
   out_4792338244417275633[12] = 0;
   out_4792338244417275633[13] = 1;
   out_4792338244417275633[14] = 0;
   out_4792338244417275633[15] = 0;
   out_4792338244417275633[16] = 0;
   out_4792338244417275633[17] = 0;
   out_4792338244417275633[18] = 0;
   out_4792338244417275633[19] = 0;
   out_4792338244417275633[20] = 0;
   out_4792338244417275633[21] = 0;
   out_4792338244417275633[22] = 0;
   out_4792338244417275633[23] = 0;
   out_4792338244417275633[24] = 0;
   out_4792338244417275633[25] = 0;
   out_4792338244417275633[26] = 0;
   out_4792338244417275633[27] = 0;
   out_4792338244417275633[28] = 0;
   out_4792338244417275633[29] = 0;
   out_4792338244417275633[30] = 0;
   out_4792338244417275633[31] = 0;
   out_4792338244417275633[32] = 0;
   out_4792338244417275633[33] = 1;
   out_4792338244417275633[34] = 0;
   out_4792338244417275633[35] = 0;
   out_4792338244417275633[36] = 1;
   out_4792338244417275633[37] = 0;
   out_4792338244417275633[38] = 0;
   out_4792338244417275633[39] = 0;
   out_4792338244417275633[40] = 0;
   out_4792338244417275633[41] = 0;
   out_4792338244417275633[42] = 0;
   out_4792338244417275633[43] = 0;
   out_4792338244417275633[44] = 0;
   out_4792338244417275633[45] = 0;
   out_4792338244417275633[46] = 0;
   out_4792338244417275633[47] = 0;
   out_4792338244417275633[48] = 0;
   out_4792338244417275633[49] = 0;
   out_4792338244417275633[50] = 0;
   out_4792338244417275633[51] = 0;
   out_4792338244417275633[52] = 0;
   out_4792338244417275633[53] = 0;
   out_4792338244417275633[54] = 0;
   out_4792338244417275633[55] = 0;
   out_4792338244417275633[56] = 1;
   out_4792338244417275633[57] = 0;
   out_4792338244417275633[58] = 0;
   out_4792338244417275633[59] = 1;
   out_4792338244417275633[60] = 0;
   out_4792338244417275633[61] = 0;
   out_4792338244417275633[62] = 0;
   out_4792338244417275633[63] = 0;
   out_4792338244417275633[64] = 0;
   out_4792338244417275633[65] = 0;
}
void h_9(double *state, double *unused, double *out_8777781742605020016) {
   out_8777781742605020016[0] = state[10];
   out_8777781742605020016[1] = state[11];
   out_8777781742605020016[2] = state[12];
}
void H_9(double *state, double *unused, double *out_5033527891046866278) {
   out_5033527891046866278[0] = 0;
   out_5033527891046866278[1] = 0;
   out_5033527891046866278[2] = 0;
   out_5033527891046866278[3] = 0;
   out_5033527891046866278[4] = 0;
   out_5033527891046866278[5] = 0;
   out_5033527891046866278[6] = 0;
   out_5033527891046866278[7] = 0;
   out_5033527891046866278[8] = 0;
   out_5033527891046866278[9] = 0;
   out_5033527891046866278[10] = 1;
   out_5033527891046866278[11] = 0;
   out_5033527891046866278[12] = 0;
   out_5033527891046866278[13] = 0;
   out_5033527891046866278[14] = 0;
   out_5033527891046866278[15] = 0;
   out_5033527891046866278[16] = 0;
   out_5033527891046866278[17] = 0;
   out_5033527891046866278[18] = 0;
   out_5033527891046866278[19] = 0;
   out_5033527891046866278[20] = 0;
   out_5033527891046866278[21] = 0;
   out_5033527891046866278[22] = 0;
   out_5033527891046866278[23] = 0;
   out_5033527891046866278[24] = 0;
   out_5033527891046866278[25] = 0;
   out_5033527891046866278[26] = 0;
   out_5033527891046866278[27] = 0;
   out_5033527891046866278[28] = 0;
   out_5033527891046866278[29] = 0;
   out_5033527891046866278[30] = 0;
   out_5033527891046866278[31] = 0;
   out_5033527891046866278[32] = 0;
   out_5033527891046866278[33] = 1;
   out_5033527891046866278[34] = 0;
   out_5033527891046866278[35] = 0;
   out_5033527891046866278[36] = 0;
   out_5033527891046866278[37] = 0;
   out_5033527891046866278[38] = 0;
   out_5033527891046866278[39] = 0;
   out_5033527891046866278[40] = 0;
   out_5033527891046866278[41] = 0;
   out_5033527891046866278[42] = 0;
   out_5033527891046866278[43] = 0;
   out_5033527891046866278[44] = 0;
   out_5033527891046866278[45] = 0;
   out_5033527891046866278[46] = 0;
   out_5033527891046866278[47] = 0;
   out_5033527891046866278[48] = 0;
   out_5033527891046866278[49] = 0;
   out_5033527891046866278[50] = 0;
   out_5033527891046866278[51] = 0;
   out_5033527891046866278[52] = 0;
   out_5033527891046866278[53] = 0;
   out_5033527891046866278[54] = 0;
   out_5033527891046866278[55] = 0;
   out_5033527891046866278[56] = 1;
   out_5033527891046866278[57] = 0;
   out_5033527891046866278[58] = 0;
   out_5033527891046866278[59] = 0;
   out_5033527891046866278[60] = 0;
   out_5033527891046866278[61] = 0;
   out_5033527891046866278[62] = 0;
   out_5033527891046866278[63] = 0;
   out_5033527891046866278[64] = 0;
   out_5033527891046866278[65] = 0;
}
void h_10(double *state, double *unused, double *out_4373838033093977729) {
   out_4373838033093977729[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_4373838033093977729[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_4373838033093977729[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8635137508413484634) {
   out_8635137508413484634[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8635137508413484634[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8635137508413484634[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8635137508413484634[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8635137508413484634[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8635137508413484634[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8635137508413484634[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8635137508413484634[7] = 0;
   out_8635137508413484634[8] = 0;
   out_8635137508413484634[9] = 0;
   out_8635137508413484634[10] = 0;
   out_8635137508413484634[11] = 0;
   out_8635137508413484634[12] = 0;
   out_8635137508413484634[13] = 0;
   out_8635137508413484634[14] = 0;
   out_8635137508413484634[15] = 0;
   out_8635137508413484634[16] = 1;
   out_8635137508413484634[17] = 0;
   out_8635137508413484634[18] = 0;
   out_8635137508413484634[19] = 1;
   out_8635137508413484634[20] = 0;
   out_8635137508413484634[21] = 0;
   out_8635137508413484634[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8635137508413484634[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8635137508413484634[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8635137508413484634[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8635137508413484634[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8635137508413484634[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8635137508413484634[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8635137508413484634[29] = 0;
   out_8635137508413484634[30] = 0;
   out_8635137508413484634[31] = 0;
   out_8635137508413484634[32] = 0;
   out_8635137508413484634[33] = 0;
   out_8635137508413484634[34] = 0;
   out_8635137508413484634[35] = 0;
   out_8635137508413484634[36] = 0;
   out_8635137508413484634[37] = 0;
   out_8635137508413484634[38] = 0;
   out_8635137508413484634[39] = 1;
   out_8635137508413484634[40] = 0;
   out_8635137508413484634[41] = 0;
   out_8635137508413484634[42] = 1;
   out_8635137508413484634[43] = 0;
   out_8635137508413484634[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8635137508413484634[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8635137508413484634[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8635137508413484634[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8635137508413484634[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8635137508413484634[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8635137508413484634[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8635137508413484634[51] = 0;
   out_8635137508413484634[52] = 0;
   out_8635137508413484634[53] = 0;
   out_8635137508413484634[54] = 0;
   out_8635137508413484634[55] = 0;
   out_8635137508413484634[56] = 0;
   out_8635137508413484634[57] = 0;
   out_8635137508413484634[58] = 0;
   out_8635137508413484634[59] = 0;
   out_8635137508413484634[60] = 0;
   out_8635137508413484634[61] = 0;
   out_8635137508413484634[62] = 1;
   out_8635137508413484634[63] = 0;
   out_8635137508413484634[64] = 0;
   out_8635137508413484634[65] = 1;
}
void h_12(double *state, double *unused, double *out_2464697288469995839) {
   out_2464697288469995839[0] = state[0];
   out_2464697288469995839[1] = state[1];
   out_2464697288469995839[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8634949421260314188) {
   out_8634949421260314188[0] = 1;
   out_8634949421260314188[1] = 0;
   out_8634949421260314188[2] = 0;
   out_8634949421260314188[3] = 0;
   out_8634949421260314188[4] = 0;
   out_8634949421260314188[5] = 0;
   out_8634949421260314188[6] = 0;
   out_8634949421260314188[7] = 0;
   out_8634949421260314188[8] = 0;
   out_8634949421260314188[9] = 0;
   out_8634949421260314188[10] = 0;
   out_8634949421260314188[11] = 0;
   out_8634949421260314188[12] = 0;
   out_8634949421260314188[13] = 0;
   out_8634949421260314188[14] = 0;
   out_8634949421260314188[15] = 0;
   out_8634949421260314188[16] = 0;
   out_8634949421260314188[17] = 0;
   out_8634949421260314188[18] = 0;
   out_8634949421260314188[19] = 0;
   out_8634949421260314188[20] = 0;
   out_8634949421260314188[21] = 0;
   out_8634949421260314188[22] = 0;
   out_8634949421260314188[23] = 1;
   out_8634949421260314188[24] = 0;
   out_8634949421260314188[25] = 0;
   out_8634949421260314188[26] = 0;
   out_8634949421260314188[27] = 0;
   out_8634949421260314188[28] = 0;
   out_8634949421260314188[29] = 0;
   out_8634949421260314188[30] = 0;
   out_8634949421260314188[31] = 0;
   out_8634949421260314188[32] = 0;
   out_8634949421260314188[33] = 0;
   out_8634949421260314188[34] = 0;
   out_8634949421260314188[35] = 0;
   out_8634949421260314188[36] = 0;
   out_8634949421260314188[37] = 0;
   out_8634949421260314188[38] = 0;
   out_8634949421260314188[39] = 0;
   out_8634949421260314188[40] = 0;
   out_8634949421260314188[41] = 0;
   out_8634949421260314188[42] = 0;
   out_8634949421260314188[43] = 0;
   out_8634949421260314188[44] = 0;
   out_8634949421260314188[45] = 0;
   out_8634949421260314188[46] = 1;
   out_8634949421260314188[47] = 0;
   out_8634949421260314188[48] = 0;
   out_8634949421260314188[49] = 0;
   out_8634949421260314188[50] = 0;
   out_8634949421260314188[51] = 0;
   out_8634949421260314188[52] = 0;
   out_8634949421260314188[53] = 0;
   out_8634949421260314188[54] = 0;
   out_8634949421260314188[55] = 0;
   out_8634949421260314188[56] = 0;
   out_8634949421260314188[57] = 0;
   out_8634949421260314188[58] = 0;
   out_8634949421260314188[59] = 0;
   out_8634949421260314188[60] = 0;
   out_8634949421260314188[61] = 0;
   out_8634949421260314188[62] = 0;
   out_8634949421260314188[63] = 0;
   out_8634949421260314188[64] = 0;
   out_8634949421260314188[65] = 0;
}
void h_35(double *state, double *unused, double *out_991013079297920428) {
   out_991013079297920428[0] = state[7];
   out_991013079297920428[1] = state[8];
   out_991013079297920428[2] = state[9];
}
void H_35(double *state, double *unused, double *out_5889386388935300479) {
   out_5889386388935300479[0] = 0;
   out_5889386388935300479[1] = 0;
   out_5889386388935300479[2] = 0;
   out_5889386388935300479[3] = 0;
   out_5889386388935300479[4] = 0;
   out_5889386388935300479[5] = 0;
   out_5889386388935300479[6] = 0;
   out_5889386388935300479[7] = 1;
   out_5889386388935300479[8] = 0;
   out_5889386388935300479[9] = 0;
   out_5889386388935300479[10] = 0;
   out_5889386388935300479[11] = 0;
   out_5889386388935300479[12] = 0;
   out_5889386388935300479[13] = 0;
   out_5889386388935300479[14] = 0;
   out_5889386388935300479[15] = 0;
   out_5889386388935300479[16] = 0;
   out_5889386388935300479[17] = 0;
   out_5889386388935300479[18] = 0;
   out_5889386388935300479[19] = 0;
   out_5889386388935300479[20] = 0;
   out_5889386388935300479[21] = 0;
   out_5889386388935300479[22] = 0;
   out_5889386388935300479[23] = 0;
   out_5889386388935300479[24] = 0;
   out_5889386388935300479[25] = 0;
   out_5889386388935300479[26] = 0;
   out_5889386388935300479[27] = 0;
   out_5889386388935300479[28] = 0;
   out_5889386388935300479[29] = 0;
   out_5889386388935300479[30] = 1;
   out_5889386388935300479[31] = 0;
   out_5889386388935300479[32] = 0;
   out_5889386388935300479[33] = 0;
   out_5889386388935300479[34] = 0;
   out_5889386388935300479[35] = 0;
   out_5889386388935300479[36] = 0;
   out_5889386388935300479[37] = 0;
   out_5889386388935300479[38] = 0;
   out_5889386388935300479[39] = 0;
   out_5889386388935300479[40] = 0;
   out_5889386388935300479[41] = 0;
   out_5889386388935300479[42] = 0;
   out_5889386388935300479[43] = 0;
   out_5889386388935300479[44] = 0;
   out_5889386388935300479[45] = 0;
   out_5889386388935300479[46] = 0;
   out_5889386388935300479[47] = 0;
   out_5889386388935300479[48] = 0;
   out_5889386388935300479[49] = 0;
   out_5889386388935300479[50] = 0;
   out_5889386388935300479[51] = 0;
   out_5889386388935300479[52] = 0;
   out_5889386388935300479[53] = 1;
   out_5889386388935300479[54] = 0;
   out_5889386388935300479[55] = 0;
   out_5889386388935300479[56] = 0;
   out_5889386388935300479[57] = 0;
   out_5889386388935300479[58] = 0;
   out_5889386388935300479[59] = 0;
   out_5889386388935300479[60] = 0;
   out_5889386388935300479[61] = 0;
   out_5889386388935300479[62] = 0;
   out_5889386388935300479[63] = 0;
   out_5889386388935300479[64] = 0;
   out_5889386388935300479[65] = 0;
}
void h_32(double *state, double *unused, double *out_1645124735898739364) {
   out_1645124735898739364[0] = state[3];
   out_1645124735898739364[1] = state[4];
   out_1645124735898739364[2] = state[5];
   out_1645124735898739364[3] = state[6];
}
void H_32(double *state, double *unused, double *out_4486439399712056049) {
   out_4486439399712056049[0] = 0;
   out_4486439399712056049[1] = 0;
   out_4486439399712056049[2] = 0;
   out_4486439399712056049[3] = 1;
   out_4486439399712056049[4] = 0;
   out_4486439399712056049[5] = 0;
   out_4486439399712056049[6] = 0;
   out_4486439399712056049[7] = 0;
   out_4486439399712056049[8] = 0;
   out_4486439399712056049[9] = 0;
   out_4486439399712056049[10] = 0;
   out_4486439399712056049[11] = 0;
   out_4486439399712056049[12] = 0;
   out_4486439399712056049[13] = 0;
   out_4486439399712056049[14] = 0;
   out_4486439399712056049[15] = 0;
   out_4486439399712056049[16] = 0;
   out_4486439399712056049[17] = 0;
   out_4486439399712056049[18] = 0;
   out_4486439399712056049[19] = 0;
   out_4486439399712056049[20] = 0;
   out_4486439399712056049[21] = 0;
   out_4486439399712056049[22] = 0;
   out_4486439399712056049[23] = 0;
   out_4486439399712056049[24] = 0;
   out_4486439399712056049[25] = 0;
   out_4486439399712056049[26] = 1;
   out_4486439399712056049[27] = 0;
   out_4486439399712056049[28] = 0;
   out_4486439399712056049[29] = 0;
   out_4486439399712056049[30] = 0;
   out_4486439399712056049[31] = 0;
   out_4486439399712056049[32] = 0;
   out_4486439399712056049[33] = 0;
   out_4486439399712056049[34] = 0;
   out_4486439399712056049[35] = 0;
   out_4486439399712056049[36] = 0;
   out_4486439399712056049[37] = 0;
   out_4486439399712056049[38] = 0;
   out_4486439399712056049[39] = 0;
   out_4486439399712056049[40] = 0;
   out_4486439399712056049[41] = 0;
   out_4486439399712056049[42] = 0;
   out_4486439399712056049[43] = 0;
   out_4486439399712056049[44] = 0;
   out_4486439399712056049[45] = 0;
   out_4486439399712056049[46] = 0;
   out_4486439399712056049[47] = 0;
   out_4486439399712056049[48] = 0;
   out_4486439399712056049[49] = 1;
   out_4486439399712056049[50] = 0;
   out_4486439399712056049[51] = 0;
   out_4486439399712056049[52] = 0;
   out_4486439399712056049[53] = 0;
   out_4486439399712056049[54] = 0;
   out_4486439399712056049[55] = 0;
   out_4486439399712056049[56] = 0;
   out_4486439399712056049[57] = 0;
   out_4486439399712056049[58] = 0;
   out_4486439399712056049[59] = 0;
   out_4486439399712056049[60] = 0;
   out_4486439399712056049[61] = 0;
   out_4486439399712056049[62] = 0;
   out_4486439399712056049[63] = 0;
   out_4486439399712056049[64] = 0;
   out_4486439399712056049[65] = 0;
   out_4486439399712056049[66] = 0;
   out_4486439399712056049[67] = 0;
   out_4486439399712056049[68] = 0;
   out_4486439399712056049[69] = 0;
   out_4486439399712056049[70] = 0;
   out_4486439399712056049[71] = 0;
   out_4486439399712056049[72] = 1;
   out_4486439399712056049[73] = 0;
   out_4486439399712056049[74] = 0;
   out_4486439399712056049[75] = 0;
   out_4486439399712056049[76] = 0;
   out_4486439399712056049[77] = 0;
   out_4486439399712056049[78] = 0;
   out_4486439399712056049[79] = 0;
   out_4486439399712056049[80] = 0;
   out_4486439399712056049[81] = 0;
   out_4486439399712056049[82] = 0;
   out_4486439399712056049[83] = 0;
   out_4486439399712056049[84] = 0;
   out_4486439399712056049[85] = 0;
   out_4486439399712056049[86] = 0;
   out_4486439399712056049[87] = 0;
}
void h_13(double *state, double *unused, double *out_2926276888320798032) {
   out_2926276888320798032[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2926276888320798032[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2926276888320798032[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_517852867070353434) {
   out_517852867070353434[0] = 0;
   out_517852867070353434[1] = 0;
   out_517852867070353434[2] = 0;
   out_517852867070353434[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_517852867070353434[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_517852867070353434[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_517852867070353434[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_517852867070353434[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_517852867070353434[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_517852867070353434[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_517852867070353434[10] = 0;
   out_517852867070353434[11] = 0;
   out_517852867070353434[12] = 0;
   out_517852867070353434[13] = 0;
   out_517852867070353434[14] = 0;
   out_517852867070353434[15] = 0;
   out_517852867070353434[16] = 0;
   out_517852867070353434[17] = 0;
   out_517852867070353434[18] = 0;
   out_517852867070353434[19] = 0;
   out_517852867070353434[20] = 0;
   out_517852867070353434[21] = 0;
   out_517852867070353434[22] = 0;
   out_517852867070353434[23] = 0;
   out_517852867070353434[24] = 0;
   out_517852867070353434[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_517852867070353434[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_517852867070353434[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_517852867070353434[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_517852867070353434[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_517852867070353434[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_517852867070353434[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_517852867070353434[32] = 0;
   out_517852867070353434[33] = 0;
   out_517852867070353434[34] = 0;
   out_517852867070353434[35] = 0;
   out_517852867070353434[36] = 0;
   out_517852867070353434[37] = 0;
   out_517852867070353434[38] = 0;
   out_517852867070353434[39] = 0;
   out_517852867070353434[40] = 0;
   out_517852867070353434[41] = 0;
   out_517852867070353434[42] = 0;
   out_517852867070353434[43] = 0;
   out_517852867070353434[44] = 0;
   out_517852867070353434[45] = 0;
   out_517852867070353434[46] = 0;
   out_517852867070353434[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_517852867070353434[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_517852867070353434[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_517852867070353434[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_517852867070353434[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_517852867070353434[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_517852867070353434[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_517852867070353434[54] = 0;
   out_517852867070353434[55] = 0;
   out_517852867070353434[56] = 0;
   out_517852867070353434[57] = 0;
   out_517852867070353434[58] = 0;
   out_517852867070353434[59] = 0;
   out_517852867070353434[60] = 0;
   out_517852867070353434[61] = 0;
   out_517852867070353434[62] = 0;
   out_517852867070353434[63] = 0;
   out_517852867070353434[64] = 0;
   out_517852867070353434[65] = 0;
}
void h_14(double *state, double *unused, double *out_8777781742605020016) {
   out_8777781742605020016[0] = state[10];
   out_8777781742605020016[1] = state[11];
   out_8777781742605020016[2] = state[12];
}
void H_14(double *state, double *unused, double *out_5033527891046866278) {
   out_5033527891046866278[0] = 0;
   out_5033527891046866278[1] = 0;
   out_5033527891046866278[2] = 0;
   out_5033527891046866278[3] = 0;
   out_5033527891046866278[4] = 0;
   out_5033527891046866278[5] = 0;
   out_5033527891046866278[6] = 0;
   out_5033527891046866278[7] = 0;
   out_5033527891046866278[8] = 0;
   out_5033527891046866278[9] = 0;
   out_5033527891046866278[10] = 1;
   out_5033527891046866278[11] = 0;
   out_5033527891046866278[12] = 0;
   out_5033527891046866278[13] = 0;
   out_5033527891046866278[14] = 0;
   out_5033527891046866278[15] = 0;
   out_5033527891046866278[16] = 0;
   out_5033527891046866278[17] = 0;
   out_5033527891046866278[18] = 0;
   out_5033527891046866278[19] = 0;
   out_5033527891046866278[20] = 0;
   out_5033527891046866278[21] = 0;
   out_5033527891046866278[22] = 0;
   out_5033527891046866278[23] = 0;
   out_5033527891046866278[24] = 0;
   out_5033527891046866278[25] = 0;
   out_5033527891046866278[26] = 0;
   out_5033527891046866278[27] = 0;
   out_5033527891046866278[28] = 0;
   out_5033527891046866278[29] = 0;
   out_5033527891046866278[30] = 0;
   out_5033527891046866278[31] = 0;
   out_5033527891046866278[32] = 0;
   out_5033527891046866278[33] = 1;
   out_5033527891046866278[34] = 0;
   out_5033527891046866278[35] = 0;
   out_5033527891046866278[36] = 0;
   out_5033527891046866278[37] = 0;
   out_5033527891046866278[38] = 0;
   out_5033527891046866278[39] = 0;
   out_5033527891046866278[40] = 0;
   out_5033527891046866278[41] = 0;
   out_5033527891046866278[42] = 0;
   out_5033527891046866278[43] = 0;
   out_5033527891046866278[44] = 0;
   out_5033527891046866278[45] = 0;
   out_5033527891046866278[46] = 0;
   out_5033527891046866278[47] = 0;
   out_5033527891046866278[48] = 0;
   out_5033527891046866278[49] = 0;
   out_5033527891046866278[50] = 0;
   out_5033527891046866278[51] = 0;
   out_5033527891046866278[52] = 0;
   out_5033527891046866278[53] = 0;
   out_5033527891046866278[54] = 0;
   out_5033527891046866278[55] = 0;
   out_5033527891046866278[56] = 1;
   out_5033527891046866278[57] = 0;
   out_5033527891046866278[58] = 0;
   out_5033527891046866278[59] = 0;
   out_5033527891046866278[60] = 0;
   out_5033527891046866278[61] = 0;
   out_5033527891046866278[62] = 0;
   out_5033527891046866278[63] = 0;
   out_5033527891046866278[64] = 0;
   out_5033527891046866278[65] = 0;
}
void h_33(double *state, double *unused, double *out_1599134906378397443) {
   out_1599134906378397443[0] = state[16];
   out_1599134906378397443[1] = state[17];
   out_1599134906378397443[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7137186767280811003) {
   out_7137186767280811003[0] = 0;
   out_7137186767280811003[1] = 0;
   out_7137186767280811003[2] = 0;
   out_7137186767280811003[3] = 0;
   out_7137186767280811003[4] = 0;
   out_7137186767280811003[5] = 0;
   out_7137186767280811003[6] = 0;
   out_7137186767280811003[7] = 0;
   out_7137186767280811003[8] = 0;
   out_7137186767280811003[9] = 0;
   out_7137186767280811003[10] = 0;
   out_7137186767280811003[11] = 0;
   out_7137186767280811003[12] = 0;
   out_7137186767280811003[13] = 0;
   out_7137186767280811003[14] = 0;
   out_7137186767280811003[15] = 0;
   out_7137186767280811003[16] = 1;
   out_7137186767280811003[17] = 0;
   out_7137186767280811003[18] = 0;
   out_7137186767280811003[19] = 0;
   out_7137186767280811003[20] = 0;
   out_7137186767280811003[21] = 0;
   out_7137186767280811003[22] = 0;
   out_7137186767280811003[23] = 0;
   out_7137186767280811003[24] = 0;
   out_7137186767280811003[25] = 0;
   out_7137186767280811003[26] = 0;
   out_7137186767280811003[27] = 0;
   out_7137186767280811003[28] = 0;
   out_7137186767280811003[29] = 0;
   out_7137186767280811003[30] = 0;
   out_7137186767280811003[31] = 0;
   out_7137186767280811003[32] = 0;
   out_7137186767280811003[33] = 0;
   out_7137186767280811003[34] = 0;
   out_7137186767280811003[35] = 0;
   out_7137186767280811003[36] = 0;
   out_7137186767280811003[37] = 0;
   out_7137186767280811003[38] = 0;
   out_7137186767280811003[39] = 1;
   out_7137186767280811003[40] = 0;
   out_7137186767280811003[41] = 0;
   out_7137186767280811003[42] = 0;
   out_7137186767280811003[43] = 0;
   out_7137186767280811003[44] = 0;
   out_7137186767280811003[45] = 0;
   out_7137186767280811003[46] = 0;
   out_7137186767280811003[47] = 0;
   out_7137186767280811003[48] = 0;
   out_7137186767280811003[49] = 0;
   out_7137186767280811003[50] = 0;
   out_7137186767280811003[51] = 0;
   out_7137186767280811003[52] = 0;
   out_7137186767280811003[53] = 0;
   out_7137186767280811003[54] = 0;
   out_7137186767280811003[55] = 0;
   out_7137186767280811003[56] = 0;
   out_7137186767280811003[57] = 0;
   out_7137186767280811003[58] = 0;
   out_7137186767280811003[59] = 0;
   out_7137186767280811003[60] = 0;
   out_7137186767280811003[61] = 0;
   out_7137186767280811003[62] = 1;
   out_7137186767280811003[63] = 0;
   out_7137186767280811003[64] = 0;
   out_7137186767280811003[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3774328600697724702) {
  H(in_vec, out_3774328600697724702);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7836871875743155711) {
  err_fun(nom_x, delta_x, out_7836871875743155711);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6630162193384917047) {
  inv_err_fun(nom_x, true_x, out_6630162193384917047);
}
void live_H_mod_fun(double *state, double *out_8048759451165961396) {
  H_mod_fun(state, out_8048759451165961396);
}
void live_f_fun(double *state, double dt, double *out_7921013289385952844) {
  f_fun(state,  dt, out_7921013289385952844);
}
void live_F_fun(double *state, double dt, double *out_4662442160671292604) {
  F_fun(state,  dt, out_4662442160671292604);
}
void live_h_4(double *state, double *unused, double *out_7870695401363690378) {
  h_4(state, unused, out_7870695401363690378);
}
void live_H_4(double *state, double *unused, double *out_4792338244417275633) {
  H_4(state, unused, out_4792338244417275633);
}
void live_h_9(double *state, double *unused, double *out_8777781742605020016) {
  h_9(state, unused, out_8777781742605020016);
}
void live_H_9(double *state, double *unused, double *out_5033527891046866278) {
  H_9(state, unused, out_5033527891046866278);
}
void live_h_10(double *state, double *unused, double *out_4373838033093977729) {
  h_10(state, unused, out_4373838033093977729);
}
void live_H_10(double *state, double *unused, double *out_8635137508413484634) {
  H_10(state, unused, out_8635137508413484634);
}
void live_h_12(double *state, double *unused, double *out_2464697288469995839) {
  h_12(state, unused, out_2464697288469995839);
}
void live_H_12(double *state, double *unused, double *out_8634949421260314188) {
  H_12(state, unused, out_8634949421260314188);
}
void live_h_35(double *state, double *unused, double *out_991013079297920428) {
  h_35(state, unused, out_991013079297920428);
}
void live_H_35(double *state, double *unused, double *out_5889386388935300479) {
  H_35(state, unused, out_5889386388935300479);
}
void live_h_32(double *state, double *unused, double *out_1645124735898739364) {
  h_32(state, unused, out_1645124735898739364);
}
void live_H_32(double *state, double *unused, double *out_4486439399712056049) {
  H_32(state, unused, out_4486439399712056049);
}
void live_h_13(double *state, double *unused, double *out_2926276888320798032) {
  h_13(state, unused, out_2926276888320798032);
}
void live_H_13(double *state, double *unused, double *out_517852867070353434) {
  H_13(state, unused, out_517852867070353434);
}
void live_h_14(double *state, double *unused, double *out_8777781742605020016) {
  h_14(state, unused, out_8777781742605020016);
}
void live_H_14(double *state, double *unused, double *out_5033527891046866278) {
  H_14(state, unused, out_5033527891046866278);
}
void live_h_33(double *state, double *unused, double *out_1599134906378397443) {
  h_33(state, unused, out_1599134906378397443);
}
void live_H_33(double *state, double *unused, double *out_7137186767280811003) {
  H_33(state, unused, out_7137186767280811003);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
